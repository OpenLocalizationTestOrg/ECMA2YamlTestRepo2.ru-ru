### YamlMime:ManagedReference
items:
- uid: System.Data.OracleClient.OracleBFile
  id: OracleBFile
  children:
  - System.Data.OracleClient.OracleBFile.CanRead
  - System.Data.OracleClient.OracleBFile.CanSeek
  - System.Data.OracleClient.OracleBFile.CanWrite
  - System.Data.OracleClient.OracleBFile.Clone
  - System.Data.OracleClient.OracleBFile.Connection
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  - System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  - System.Data.OracleClient.OracleBFile.DirectoryName
  - System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  - System.Data.OracleClient.OracleBFile.FileExists
  - System.Data.OracleClient.OracleBFile.FileName
  - System.Data.OracleClient.OracleBFile.Flush
  - System.Data.OracleClient.OracleBFile.IsNull
  - System.Data.OracleClient.OracleBFile.Length
  - System.Data.OracleClient.OracleBFile.Null
  - System.Data.OracleClient.OracleBFile.Position
  - System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  - System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  - System.Data.OracleClient.OracleBFile.Value
  - System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  langs:
  - csharp
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
  type: Class
  summary: "Представляет управляемый объект OracleBFile, предназначенных для работы с Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> тип данных. Этот класс не наследуется."
  remarks: "Oracle `BFILE` имеет тип данных Oracle `LOB` тип данных, который содержит ссылку на двоичные данные с максимальным размером 4 гигабайта. Oracle `BFILE` отличается от других Oracle `LOB` типы данных, в том, что его данные хранятся в физическом файле в операционной системе, а не на сервере. Обратите внимание, что `BFILE` тип данных обеспечивает доступ к данным только для чтения. Таким образом, методы записи наследуется от <xref:System.IO.Stream>класса не поддерживаются.</xref:System.IO.Stream>       Другие характеристики `BFILE` тип данных, отличающие его от `LOB` типа данных:-содержит неструктурированные данные.      -Поддерживает фрагментации на стороне сервера.      -Использует ссылочную семантику копирования. Например, если выполнить операцию копирования на `BFILE`только `BFILE` копируется локатора (который является ссылкой на файл). Данные в файле не копируются.       `BFILE` Тип данных должен использоваться для ссылки на `LOB`, которые имеют большой размер и, следовательно, нецелесообразно хранить в базе данных. Накладные затраты клиента, сервера и обмена данными с помощью `BFILE` тип данных по сравнению с `LOB` тип данных. Более эффективно для доступа к `BFILE` Если вам нужно получить небольшой объем данных. Более эффективно, находящихся в базе данных доступ `LOB`s, если необходимо получить весь объект.       Каждый объект не NULL OracleBFile связан с двумя сущностями, которые определяют расположение базового физического файла:-объект Oracle DIRECTORY, который является псевдонимом базы данных для каталога в файловой системе и - имя файла базового физического файла, который находится в каталоге, связанном с объектом DIRECTORY.       После `BFILE` будет создан, можно извлечь его локатор в форме объекта OracleBFile с помощью <xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>или <xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A>методы.</xref:System.Data.OracleClient.OracleCommand.ExecuteScalar%2A> </xref:System.Data.OracleClient.OracleCommand.ExecuteReader%2A>       Чтобы получить объект OracleBFile, вызовите <xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>метод.</xref:System.Data.OracleClient.OracleDataReader.GetOracleBFile%2A>       Физического файла, с которой связан объект OracleBFile не должны существовать до попытки получить доступ. Приложение можно привязать OracleBFile на несуществующий файл, создать физический файл в ожидаемом расположении и вызова <xref:System.Data.OracleClient.OracleBFile.Read%2A>.</xref:System.Data.OracleClient.OracleBFile.Read%2A>       Любая попытка доступа к закрытых OracleBFile с помощью <xref:System.Data.OracleClient.OracleBFile.Read%2A>или <xref:System.Data.OracleClient.OracleBFile.Seek%2A>методы автоматически повторно открывает поток OracleBFile.</xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>       В следующем примере C# показано, как можно создать `BFILE` в Oracle таблицы, а затем извлечь его в виде объекта OracleBFile. В примере показано использование <xref:System.Data.OracleClient.OracleDataReader>объекта и OracleBFile<xref:System.Data.OracleClient.OracleBFile.Seek%2A> и <xref:System.Data.OracleClient.OracleBFile.Read%2A>методы.</xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleDataReader>       [!code-cs[DataWorks OracleClient.BFile#1](~/add/codesnippet/csharp/t-system.data.oracleclie_3_1.cs) ] Дополнительные сведения о создании и использовании Oracle `BFILE`, см. в соответствующем разделе в документации Oracle.      Настроек [!NOTE] настроек `BeginWrite`, `EndWrite`, и `WriteByte` методы, которые наследуются от `System.IO.Stream` класса, не поддерживаются, так как `BFILE` тип данных доступен только для чтения."
  syntax:
    content: 'public sealed class OracleBFile : System.IO.Stream, ICloneable, System.Data.SqlTypes.INullable'
  inheritance:
  - System.IO.Stream
  implements:
  - System.Data.SqlTypes.INullable
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanRead
  id: CanRead
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает значение, указывающее, является ли <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> возможность чтения потока."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> будет закрыт или удален; в противном случае <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  id: CanSeek
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Получает значение, указывающее, является ли прямого и обратного поиска операции могут быть выполнены."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> будет закрыт или удален; в противном случае <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> for <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  id: CanWrite
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает значение, указывающее, поддерживает ли объект запись."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> поскольку Oracle <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> тип данных доступен только для чтения."
  overload: System.Data.OracleClient.OracleBFile.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Clone
  id: Clone
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Создает копию этого <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> объекта, связанного с тем же файлом, что и исходный."
  remarks: "Свойства нового <xref:System.Data.OracleClient.OracleBFile>объекта изначально имеют те же значения, что и исходный объект.</xref:System.Data.OracleClient.OracleBFile> Однако по завершении клонирования, каждый <xref:System.Data.OracleClient.OracleBFile>объекта не зависит от другого.</xref:System.Data.OracleClient.OracleBFile> Например, изменение значения <xref:System.Data.OracleClient.OracleBFile.Position%2A>свойство на исходном <xref:System.Data.OracleClient.OracleBFile>не изменяет значение <xref:System.Data.OracleClient.OracleBFile.Position%2A>на копию.</xref:System.Data.OracleClient.OracleBFile.Position%2A> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Position%2A>"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Новый <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> объекта, связанного с тем же файлом, что и исходный <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> объекта."
  overload: System.Data.OracleClient.OracleBFile.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Connection
  id: Connection
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает <xref href=&quot;System.Data.OracleClient.OracleConnection&quot;> </xref> используется этим экземпляром <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref>."
  syntax:
    content: public System.Data.OracleClient.OracleConnection Connection { get; }
    return:
      type: System.Data.OracleClient.OracleConnection
      description: "Соединение с источником данных. По умолчанию используется значение null."
  overload: System.Data.OracleClient.OracleBFile.Connection*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  id: CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Копирует все содержимое <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> начало назначения <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
  remarks: "Базовые типы данных источника <xref:System.Data.OracleClient.OracleBFile>и назначение <xref:System.Data.OracleClient.OracleLob>должны быть совместимы.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Например, невозможно скопировать двоичные данные в назначение <xref:System.Data.OracleClient.OracleLob>с символьными данными.</xref:System.Data.OracleClient.OracleLob>       Необходимо иметь доступ на запись к назначению <xref:System.Data.OracleClient.OracleLob>привести к неправильному выполнению операции CopyTo.</xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Назначение<xref href=&quot;System.Data.OracleClient.OracleLob&quot;></xref>"
    return:
      type: System.Int64
      description: "Скопированное число байт."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Назначение <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> имеет ссылку на объект null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Целевой является значение null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - или - подключение, с которым этот <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> связан закрыт."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> Объект закрыт или удален."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  id: CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Копирует все содержимое <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> в назначение <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> с указанным смещением."
  remarks: "Базовые типы данных источника <xref:System.Data.OracleClient.OracleBFile>и назначение <xref:System.Data.OracleClient.OracleLob>должны быть совместимы.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Например, невозможно скопировать двоичные данные в назначение <xref:System.Data.OracleClient.OracleLob>с символьными данными.</xref:System.Data.OracleClient.OracleLob>       Необходимо иметь доступ на запись к назначению <xref:System.Data.OracleClient.OracleLob>для <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>операции будет выполняться правильно.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (System.Data.OracleClient.OracleLob destination, long destinationOffset);
    parameters:
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Назначение <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Смещение, в который выполняется копирование."
    return:
      type: System.Int64
      description: "Скопированное число байт."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Назначение <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> имеет ссылку на объект null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Целевой является значение null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - или - подключение, с которым этот <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> связан закрыт."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> Объект закрыт или удален."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  id: CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Копирование из данного <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> в назначение <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref> с заданным объемом данных, смещение исходного и конечного смещения."
  remarks: "Базовые типы данных источника <xref:System.Data.OracleClient.OracleBFile>и назначение <xref:System.Data.OracleClient.OracleLob>должны быть совместимы.</xref:System.Data.OracleClient.OracleLob> </xref:System.Data.OracleClient.OracleBFile> Например, невозможно скопировать двоичные данные в назначение <xref:System.Data.OracleClient.OracleLob>с символьными данными.</xref:System.Data.OracleClient.OracleLob>       Необходимо иметь доступ на запись к назначению <xref:System.Data.OracleClient.OracleLob>для <xref:System.Data.OracleClient.OracleBFile.CopyTo%2A>операции будет выполняться правильно.</xref:System.Data.OracleClient.OracleBFile.CopyTo%2A> </xref:System.Data.OracleClient.OracleLob>"
  syntax:
    content: public long CopyTo (long sourceOffset, System.Data.OracleClient.OracleLob destination, long destinationOffset, long amount);
    parameters:
    - id: sourceOffset
      type: System.Int64
      description: "Смещение, из которого выполняется копирование."
    - id: destination
      type: System.Data.OracleClient.OracleLob
      description: "Назначение <xref href=&quot;System.Data.OracleClient.OracleLob&quot;> </xref>."
    - id: destinationOffset
      type: System.Int64
      description: "Смещение, в который выполняется копирование."
    - id: amount
      type: System.Int64
      description: "Количество данных, в байтах, который необходимо скопировать."
    return:
      type: System.Int64
      description: "Скопированное число байт."
  overload: System.Data.OracleClient.OracleBFile.CopyTo*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение параметра количества меньше нуля или больше 4 гигабайт."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Назначение <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref> имеет ссылку на объект null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Целевой является значение null <xref uid=&quot;langword_csharp_OracleLob&quot; name=&quot;OracleLob&quot; href=&quot;&quot;> </xref>.       - или - подключение, с которым этот <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> связан закрыт."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> Объект закрыт или удален."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  id: DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает имя объекта КАТАЛОГА, с которой <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> связан объект."
  remarks: "Каждый НЕПУСТОЙ <xref:System.Data.OracleClient.OracleBFile>объект связан с двумя сущностями, определяющими местоположение базового физического файла:-объект Oracle DIRECTORY, который является псевдонимом базы данных для каталога в файловой системе и - имя файла базового физического файла, который находится в каталоге, связанном с объектом DIRECTORY.</xref:System.Data.OracleClient.OracleBFile>       Свойство имя_каталога возвращает имя объекта КАТАЛОГА из базы данных Oracle.       Дополнительные сведения о создании и использовании Oracle `BFILE`, см. в соответствующем разделе в документации Oracle."
  syntax:
    content: public string DirectoryName { get; }
    return:
      type: System.String
      description: "Имя объекта КАТАЛОГА."
  overload: System.Data.OracleClient.OracleBFile.DirectoryName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Предпринята попытка вызова <xref uid=&quot;langword_csharp_DirectoryName&quot; name=&quot;DirectoryName&quot; href=&quot;&quot;> </xref> для закрытого или удален <xref uid=&quot;langword_csharp_OracleBFile&quot; name=&quot;OracleBFile&quot; href=&quot;&quot;> </xref> объекта."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Для добавления."
  overload: System.Data.OracleClient.OracleBFile.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileExists
  id: FileExists
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает значение, указывающее, является ли файл, содержащий <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> данные существуют в операционной системе."
  syntax:
    content: public bool FileExists { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файл, содержащий <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> данных существует; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OracleClient.OracleBFile.FileExists*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> Объект закрыт или удален."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Подключение, с которым <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> связан закрыт."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.FileName
  id: FileName
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает имя <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> без пути."
  remarks: "Для <xref:System.Data.OracleClient.OracleBFile.Null>, возвращается пустая строка.</xref:System.Data.OracleClient.OracleBFile.Null>"
  syntax:
    content: public string FileName { get; }
    return:
      type: System.String
      description: "Имя BFILE."
  overload: System.Data.OracleClient.OracleBFile.FileName*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> Объект закрыт или удален."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Flush
  id: Flush
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "В настоящее время не поддерживается."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.OracleClient.OracleBFile.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.IsNull
  id: IsNull
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> — <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;> </xref> потока."
  syntax:
    content: public bool IsNull { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;></xref> is a <xref href=&quot;System.Data.OracleClient.OracleBFile.Null&quot;></xref> stream; otherwise <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Data.OracleClient.OracleBFile.IsNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Length
  id: Length
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает значение, которое возвращает длину в байтах файла, с которой <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> связан объект."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Длинное значение, представляющее длину файла в байтах."
  overload: System.Data.OracleClient.OracleBFile.Length*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Методы были вызваны после закрытия или удаления потока."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Null
  id: "Null"
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
  type: Field
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Предоставляет пустой <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> объекта, который не привязан к физическому файлу."
  remarks: "Значение NULL можно использовать при необходимости выполнить операцию сравнения для <xref:System.Data.OracleClient.OracleBFile>для определения допустимости значений NULL.</xref:System.Data.OracleClient.OracleBFile>       Любая попытка выполнить операцию чтения для объекта Null выполняется успешно, но не возвращать данные. Любая попытка выполнить операцию записи в объект Null приводит к возникновению исключения. При выборе `BFILE` столбец, содержащий значение null возвращает Null."
  syntax:
    content: public static readonly System.Data.OracleClient.OracleBFile Null;
    return:
      type: System.Data.OracleClient.OracleBFile
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Position
  id: Position
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Получает текущую позицию чтения в <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> потока."
  remarks: "Поиск в любом месте за пределами потока не поддерживается.       `Position` Свойства не хранить список число байтов из потока, который были использованы, пропущена, или оба."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "Текущее положение в <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> потока."
  overload: System.Data.OracleClient.OracleBFile.Position*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Попытка установить позицию с отрицательным значением или больше, чем длина потока."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Методы были вызваны после закрытия или удаления потока."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Считывает последовательность байтов из текущего <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> чтения потока и перемещает позицию внутри потока на число байтов."
  remarks: "Метод чтения считывать более `count` байтов из текущего потока и сохраняет их в `buffer` начиная `offset`. Текущее положение в потоке увеличивается на число считанных байтов; Однако при возникновении исключения текущее положение в потоке не изменяется. Чтение возвращает число считанных байтов. Возвращаемое значение равно нулю, только в том случае, если текущее положение находится в конце потока. Чтения будет блокироваться, пока не можете прочитать хотя бы один байт данных, в случае, если данные недоступны. Чтение возвращает 0 только в том случае, если достигнут конец файла. Чтение может вернуть меньше байтов, чем было запрошено, даже если не достигнут конец потока.       Любая попытка доступа к закрытому <xref:System.Data.OracleClient.OracleBFile>с помощью чтения или <xref:System.Data.OracleClient.OracleBFile.Seek%2A>повторно открывает методы <xref:System.Data.OracleClient.OracleBFile>поток включается автоматически.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile>       В следующем примере C# предполагается этой схемы в таблице Oracle: ```   (col1 number, col2 BFILE)   ``` в примере показано использование чтения и <xref:System.Data.OracleClient.OracleBFile.Seek%2A>методы для доступа к <xref:System.Data.OracleClient.OracleBFile>объекта.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Массив байтов. При возвращении данного метода буфер содержит указанный массив байтов со значениями от `offset` и (`offset` + `count`) заменены байтами, считанными из текущего источника."
    - id: offset
      type: System.Int32
      description: "Отсчитываемое от нуля смещение в `buffer` с которого начинается сохранение данных, считанных из текущего потока."
    - id: count
      type: System.Int32
      description: "Максимальное число байтов, считываемых из текущего потока."
    return:
      type: System.Int32
      description: "Общее число байтов, считанных в буфер. Это может быть меньше запрошенного числа байтов, если что столько байтов в настоящее время недоступны, или нуль, если достигнут конец файла."
  overload: System.Data.OracleClient.OracleBFile.Read*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Сумма <code> offset </code> и <code> count </code> больше, чем длина буфера."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>или <code>count</code> является отрицательным значением."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Подключение, с которым <xref uid=&quot;langword_csharp_BFILE&quot; name=&quot;BFILE&quot; href=&quot;&quot;> </xref> связан закрыт."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Произошла ошибка ввода-вывода."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Методы были вызваны после закрытия или удаления потока."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Задает позицию в текущем <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> потока."
  remarks: "Если `offset` является отрицательным, новая позиция должна предшествовать позиции, заданной параметром `origin` на число байтов, указанное в `offset`. Если `offset` равен нулю, новая позиция должна быть задана с помощью `origin`. Если `offset` положительное, новое положение должно следовать за позиции, указанной параметром `origin` на число байтов, указанное в `offset`.       Поиск в любом месте за пределами потока не поддерживается.       Любая попытка доступа к закрытому <xref:System.Data.OracleClient.OracleBFile>с помощью <xref:System.Data.OracleClient.OracleBFile.Read%2A>или повторно открывает методы поиска <xref:System.Data.OracleClient.OracleBFile>поток включается автоматически.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A> </xref:System.Data.OracleClient.OracleBFile>       В следующем примере C# предполагается этой схемы в таблице Oracle: ```   (col1 number, col2 BFILE)   ``` в примере демонстрируется использование <xref:System.Data.OracleClient.OracleBFile.Read%2A>и методы для доступа к <xref:System.Data.OracleClient.OracleBFile>объекта.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {               OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Смещение в байтах относительно начала координат. Если `offset` является отрицательным, новая позиция будет предшествовать позиции, заданной параметром `origin` на число байтов, указанное в `offset`. Если `offset` равен нулю, новая позиция будет задана с помощью `origin`. Если `offset` является положительным, новая позиция будет следовать позиции, указанной параметром `origin` на число байтов, указанное в `offset`."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Значение типа <xref uid=&quot;langword_csharp_System.IO.SeekOrigin&quot; name=&quot;System.IO.SeekOrigin&quot; href=&quot;&quot;> </xref> , указывающее опорную точку, используемую для получения новой позиции."
    return:
      type: System.Int64
      description: "Новая позиция в текущем потоке."
  overload: System.Data.OracleClient.OracleBFile.Seek*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Попытка установить позицию с отрицательным значением или больше, чем длина потока."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Методы были вызваны после закрытия или удаления потока."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  id: SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Привязывает <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> объекта в другой файл в операционной системе."
  remarks: "Операция SetFileName должна быть в пределах транзакции, для успешного выполнения. Просто вызов SetFileName для `BFILE` связывает <xref:System.Data.OracleClient.OracleBFile>объекта с другим файлом, но не обновлять таблицу Oracle.</xref:System.Data.OracleClient.OracleBFile> Чтобы обновить таблицу Oracle после вызова SetFileName, необходимо вызвать `Update` метод <xref:System.Data.OracleClient.OracleDataAdapter>и затем зафиксировать транзакцию.</xref:System.Data.OracleClient.OracleDataAdapter>       После получения <xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>или <xref:System.Data.OracleClient.OracleBFile.FileName%2A>Свойства, они сохраняются в кэше <xref:System.Data.OracleClient.OracleBFile>объекта и не влияет на любой клонировать <xref:System.Data.OracleClient.OracleBFile>вызовы объектов SetFileName или внесенные `BFILE` в базе данных.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> Другими словами, они не могут представлять фактические значения `BFILE` объект на сервере.       Кроме того, получения любого свойства (<xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A> или <xref:System.Data.OracleClient.OracleBFile.FileName%2A>) приводит оба значения свойств, которые извлекаются с сервера и кэшируются в <xref:System.Data.OracleClient.OracleBFile>объекта.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.FileName%2A> </xref:System.Data.OracleClient.OracleBFile.DirectoryName%2A>       В следующем примере C# предполагается этой схемы в таблице Oracle: ```   (col1 number, col2 BFILE)   ``` в примере демонстрируется использование SetFileName <xref:System.Data.OracleClient.OracleBFile.Read%2A>и <xref:System.Data.OracleClient.OracleBFile.Seek%2A>методы для доступа к <xref:System.Data.OracleClient.OracleBFile>объекта.</xref:System.Data.OracleClient.OracleBFile> </xref:System.Data.OracleClient.OracleBFile.Seek%2A> </xref:System.Data.OracleClient.OracleBFile.Read%2A>      ```   byte[] buffer = new byte[100];   OracleDataReader dataReader = command.ExecuteReader();   using (dataReader) {       if (dataReader.Read()) {           OracleBFile BFile = dataReader.GetOracleBFile(1);           using (BFile) {               BFile.Seek(0, SeekOrigin.Begin);               BFile.Read(buffer, 0, 100);               command.Transaction = connection.BeginTransaction();               BFile.SetFileName(&quot;TESTDIR&quot;, &quot;File1.jpg&quot;);               BFile.Read(buffer, 0, 100);           }       }   }   ```"
  syntax:
    content: public void SetFileName (string directory, string file);
    parameters:
    - id: directory
      type: System.String
      description: "Псевдоним объекта каталога, содержащий физического файла."
    - id: file
      type: System.String
      description: "Имя файла в операционной системе."
  overload: System.Data.OracleClient.OracleBFile.SetFileName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Операция должна быть в пределах транзакции."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "В настоящее время не поддерживается."
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "В настоящее время не поддерживается."
  overload: System.Data.OracleClient.OracleBFile.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Исключение, которое выдается, когда вызываемый метод не поддерживается, или при попытке чтения, поиска или записи в поток, который не поддерживает данную функцию."
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Value
  id: Value
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
  type: Property
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "Возвращает <xref:System.Array>типа <xref:System.Byte>, содержащий <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> данные.</xref:System.Byte> </xref:System.Array>"
  remarks: "Свойство Value считывает весь `BFILE` за один раз.      Настроек [!NOTE] настроек преимуществом использования `BFILE`s является возможность извлечения больших фрагментов данных на клиенте. Тем не менее при использовании значения, получение всех данных для столбца BFILE как одного непрерывного фрагмента, который может существенно увеличить нагрузку приложения."
  syntax:
    content: public object Value { get; }
    return:
      type: System.Object
      description: "<xref:System.Array>Типа <xref:System.Byte>, содержащий <xref href=&quot;System.Data.OracleClient.OracleBFile&quot;> </xref> данные.</xref:System.Byte> </xref:System.Array>"
  overload: System.Data.OracleClient.OracleBFile.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data.OracleClient
  namespace: System.Data.OracleClient
  summary: "В настоящее время не поддерживается."
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "В настоящее время не поддерживается."
    - id: offset
      type: System.Int32
      description: "В настоящее время не поддерживается."
    - id: count
      type: System.Int32
      description: "В настоящее время не поддерживается."
  overload: System.Data.OracleClient.OracleBFile.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Исключение, которое выдается, когда вызываемый метод не поддерживается, или при попытке чтения, поиска или записи в поток, который не поддерживает данную функцию."
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Data.OracleClient.OracleBFile.CanRead
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
  fullName: System.Data.OracleClient.OracleBFile.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OracleClient.OracleBFile.CanSeek
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
  fullName: System.Data.OracleClient.OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
  fullName: System.Data.OracleClient.OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone()
  nameWithType: OracleBFile.Clone()
  fullName: System.Data.OracleClient.OracleBFile.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OracleClient.OracleBFile.Connection
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
  fullName: System.Data.OracleClient.OracleBFile.Connection
- uid: System.Data.OracleClient.OracleConnection
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleConnection
  nameWithType: OracleConnection
  fullName: System.Data.OracleClient.OracleConnection
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob)
  nameWithType: OracleBFile.CopyTo(OracleLob)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.OracleClient.OracleLob
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleLob
  nameWithType: OracleLob
  fullName: System.Data.OracleClient.OracleLob
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Data.OracleClient.OracleLob,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(OracleLob,Int64)
  nameWithType: OracleBFile.CopyTo(OracleLob,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(OracleLob,Int64)
- uid: System.Data.OracleClient.OracleBFile.CopyTo(System.Int64,System.Data.OracleClient.OracleLob,System.Int64,System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo(Int64,OracleLob,Int64,Int64)
  nameWithType: OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
  fullName: System.Data.OracleClient.OracleBFile.CopyTo(Int64,OracleLob,Int64,Int64)
- uid: System.Data.OracleClient.OracleBFile.DirectoryName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
  fullName: System.Data.OracleClient.OracleBFile.DirectoryName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OracleClient.OracleBFile.Dispose(System.Boolean)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OracleBFile.Dispose(Boolean)
  fullName: System.Data.OracleClient.OracleBFile.Dispose(Boolean)
- uid: System.Data.OracleClient.OracleBFile.FileExists
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
  fullName: System.Data.OracleClient.OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
  fullName: System.Data.OracleClient.OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush()
  nameWithType: OracleBFile.Flush()
  fullName: System.Data.OracleClient.OracleBFile.Flush()
- uid: System.Data.OracleClient.OracleBFile.IsNull
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
  fullName: System.Data.OracleClient.OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
  fullName: System.Data.OracleClient.OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Null
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: "Null"
  nameWithType: OracleBFile.Null
  fullName: System.Data.OracleClient.OracleBFile.Null
- uid: System.Data.OracleClient.OracleBFile
  parent: System.Data.OracleClient
  isExternal: false
  name: OracleBFile
  nameWithType: OracleBFile
  fullName: System.Data.OracleClient.OracleBFile
- uid: System.Data.OracleClient.OracleBFile.Position
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
  fullName: System.Data.OracleClient.OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Read(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Read(Byte[],Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OracleClient.OracleBFile.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: OracleBFile.Seek(Int64,SeekOrigin)
  fullName: System.Data.OracleClient.OracleBFile.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.OracleClient.OracleBFile.SetFileName(System.String,System.String)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName(String,String)
  nameWithType: OracleBFile.SetFileName(String,String)
  fullName: System.Data.OracleClient.OracleBFile.SetFileName(String,String)
- uid: System.Data.OracleClient.OracleBFile.SetLength(System.Int64)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength(Int64)
  nameWithType: OracleBFile.SetLength(Int64)
  fullName: System.Data.OracleClient.OracleBFile.SetLength(Int64)
- uid: System.Data.OracleClient.OracleBFile.Value
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
  fullName: System.Data.OracleClient.OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: OracleBFile.Write(Byte[],Int32,Int32)
  fullName: System.Data.OracleClient.OracleBFile.Write(Byte[],Int32,Int32)
- uid: System.Data.OracleClient.OracleBFile.CanRead*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanRead
  nameWithType: OracleBFile.CanRead
- uid: System.Data.OracleClient.OracleBFile.CanSeek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanSeek
  nameWithType: OracleBFile.CanSeek
- uid: System.Data.OracleClient.OracleBFile.CanWrite*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CanWrite
  nameWithType: OracleBFile.CanWrite
- uid: System.Data.OracleClient.OracleBFile.Clone*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Clone
  nameWithType: OracleBFile.Clone
- uid: System.Data.OracleClient.OracleBFile.Connection*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Connection
  nameWithType: OracleBFile.Connection
- uid: System.Data.OracleClient.OracleBFile.CopyTo*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: CopyTo
  nameWithType: OracleBFile.CopyTo
- uid: System.Data.OracleClient.OracleBFile.DirectoryName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: DirectoryName
  nameWithType: OracleBFile.DirectoryName
- uid: System.Data.OracleClient.OracleBFile.Dispose*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Dispose
  nameWithType: OracleBFile.Dispose
- uid: System.Data.OracleClient.OracleBFile.FileExists*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileExists
  nameWithType: OracleBFile.FileExists
- uid: System.Data.OracleClient.OracleBFile.FileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: FileName
  nameWithType: OracleBFile.FileName
- uid: System.Data.OracleClient.OracleBFile.Flush*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Flush
  nameWithType: OracleBFile.Flush
- uid: System.Data.OracleClient.OracleBFile.IsNull*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: IsNull
  nameWithType: OracleBFile.IsNull
- uid: System.Data.OracleClient.OracleBFile.Length*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Length
  nameWithType: OracleBFile.Length
- uid: System.Data.OracleClient.OracleBFile.Position*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Position
  nameWithType: OracleBFile.Position
- uid: System.Data.OracleClient.OracleBFile.Read*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Read
  nameWithType: OracleBFile.Read
- uid: System.Data.OracleClient.OracleBFile.Seek*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Seek
  nameWithType: OracleBFile.Seek
- uid: System.Data.OracleClient.OracleBFile.SetFileName*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetFileName
  nameWithType: OracleBFile.SetFileName
- uid: System.Data.OracleClient.OracleBFile.SetLength*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: SetLength
  nameWithType: OracleBFile.SetLength
- uid: System.Data.OracleClient.OracleBFile.Value*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Value
  nameWithType: OracleBFile.Value
- uid: System.Data.OracleClient.OracleBFile.Write*
  parent: System.Data.OracleClient.OracleBFile
  isExternal: false
  name: Write
  nameWithType: OracleBFile.Write
