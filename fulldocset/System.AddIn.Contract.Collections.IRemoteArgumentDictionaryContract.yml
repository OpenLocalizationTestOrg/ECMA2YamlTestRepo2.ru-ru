### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  id: IRemoteArgumentDictionaryContract
  children:
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Add(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Clear
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.ContainsKey(System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetEnumeratorContract
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetItem(System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetKeys
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetValues
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Remove(System.AddIn.Contract.RemoteArgument)
  - System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.SetItem(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)
  langs:
  - csharp
  name: IRemoteArgumentDictionaryContract
  nameWithType: IRemoteArgumentDictionaryContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  type: Interface
  summary: "Представляет коллекцию <xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> объектов, которые хранятся в виде пар ключ значение."
  remarks: "Каждый элемент в IRemoteArgumentDictionaryContract является пара ключ значение, которое хранится в <xref:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry>объекта.</xref:System.AddIn.Contract.Collections.RemoteArgumentDictionaryEntry> Каждая пара ключ значение должна иметь уникальный ключ.       Интерфейс IRemoteArgumentDictionaryContract позволяет автономной ключи и значения перечисления, но не подразумевает любого определенного порядка сортировки."
  syntax:
    content: 'public interface IRemoteArgumentDictionaryContract : System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract'
  implements:
  - System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Add(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)
  id: Add(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: Add(RemoteArgument,RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.Add(RemoteArgument,RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Add(RemoteArgument,RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Добавляет элемент с указанным ключом и значением в <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref>."
  syntax:
    content: public void Add (System.AddIn.Contract.RemoteArgument key, System.AddIn.Contract.RemoteArgument value);
    parameters:
    - id: key
      type: System.AddIn.Contract.RemoteArgument
      description: "<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> Для использования в качестве ключа добавляемого элемента для добавления."
    - id: value
      type: System.AddIn.Contract.RemoteArgument
      description: "<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> Для использования в качестве значения элемента для добавления."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Элемент с таким ключом уже существует в <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref>."
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Clear
  id: Clear
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: Clear()
  nameWithType: IRemoteArgumentDictionaryContract.Clear()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Clear()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Удаляет все элементы из <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref>."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.ContainsKey(System.AddIn.Contract.RemoteArgument)
  id: ContainsKey(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: ContainsKey(RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.ContainsKey(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.ContainsKey(RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Указывает, является ли <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref> содержит элемент с указанным ключом."
  syntax:
    content: public bool ContainsKey (System.AddIn.Contract.RemoteArgument key);
    parameters:
    - id: key
      type: System.AddIn.Contract.RemoteArgument
      description: "Ключ для поиска в <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref> содержит элемент с указанным ключом; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetEnumeratorContract
  id: GetEnumeratorContract
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: GetEnumeratorContract()
  nameWithType: IRemoteArgumentDictionaryContract.GetEnumeratorContract()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetEnumeratorContract()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Возвращает <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract&quot;> </xref> может использоваться для итерации по элементам в <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref>."
  remarks: "Перечислители могут использоваться для чтения данных в коллекции, но не может использоваться для изменения коллекции."
  syntax:
    content: public System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract GetEnumeratorContract ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract
      description: "<xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract&quot;> </xref> Может использоваться для итерации по элементам в <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref>."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetEnumeratorContract*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetItem(System.AddIn.Contract.RemoteArgument)
  id: GetItem(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: GetItem(RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.GetItem(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetItem(RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Возвращает значение элемента с указанным ключом."
  syntax:
    content: public System.AddIn.Contract.RemoteArgument GetItem (System.AddIn.Contract.RemoteArgument key);
    parameters:
    - id: key
      type: System.AddIn.Contract.RemoteArgument
      description: "Ключ возвращаемое значение."
    return:
      type: System.AddIn.Contract.RemoteArgument
      description: "<xref href=&quot;System.AddIn.Contract.RemoteArgument&quot;> </xref> С указанным ключом."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetKeys
  id: GetKeys
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: GetKeys()
  nameWithType: IRemoteArgumentDictionaryContract.GetKeys()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetKeys()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Возвращает <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract&quot;> </xref> , содержащий ключи из <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref> объекта."
  syntax:
    content: public System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract GetKeys ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract
      description: "<xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract&quot;> </xref> , Содержащий ключи из <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref> объекта."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetKeys*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetValues
  id: GetValues
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: GetValues()
  nameWithType: IRemoteArgumentDictionaryContract.GetValues()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetValues()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Возвращает <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract&quot;> </xref> , содержащий значения из <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref> объекта."
  syntax:
    content: public System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract GetValues ();
    parameters: []
    return:
      type: System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract
      description: "<xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract&quot;> </xref> , Содержащий значения из <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref> объекта."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Remove(System.AddIn.Contract.RemoteArgument)
  id: Remove(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: Remove(RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.Remove(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Remove(RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Удаляет элемент с указанным ключом из <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref>."
  syntax:
    content: public bool Remove (System.AddIn.Contract.RemoteArgument key);
    parameters:
    - id: key
      type: System.AddIn.Contract.RemoteArgument
      description: "Ключ удаляемого элемента."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент успешно найден и удален; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Этот метод возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если <code> key </code> не найден в <xref href=&quot;System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract&quot;> </xref>."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.SetItem(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)
  id: SetItem(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  langs:
  - csharp
  name: SetItem(RemoteArgument,RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.SetItem(RemoteArgument,RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.SetItem(RemoteArgument,RemoteArgument)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract.Collections
  summary: "Заменяет значение элемента."
  syntax:
    content: public void SetItem (System.AddIn.Contract.RemoteArgument key, System.AddIn.Contract.RemoteArgument value);
    parameters:
    - id: key
      type: System.AddIn.Contract.RemoteArgument
      description: "Ключ значения, которое необходимо заменить."
    - id: value
      type: System.AddIn.Contract.RemoteArgument
      description: "Новое значение указанного элемента."
  overload: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.SetItem*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Add(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: Add(RemoteArgument,RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.Add(RemoteArgument,RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Add(RemoteArgument,RemoteArgument)
- uid: System.AddIn.Contract.RemoteArgument
  parent: System.AddIn.Contract
  isExternal: false
  name: RemoteArgument
  nameWithType: RemoteArgument
  fullName: System.AddIn.Contract.RemoteArgument
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Clear
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: Clear()
  nameWithType: IRemoteArgumentDictionaryContract.Clear()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Clear()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.ContainsKey(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: ContainsKey(RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.ContainsKey(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.ContainsKey(RemoteArgument)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetEnumeratorContract
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: GetEnumeratorContract()
  nameWithType: IRemoteArgumentDictionaryContract.GetEnumeratorContract()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetEnumeratorContract()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IRemoteArgumentDictionaryEnumeratorContract
  nameWithType: IRemoteArgumentDictionaryEnumeratorContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryEnumeratorContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetItem(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: GetItem(RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.GetItem(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetItem(RemoteArgument)
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetKeys
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: GetKeys()
  nameWithType: IRemoteArgumentDictionaryContract.GetKeys()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetKeys()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract
  parent: System.AddIn.Contract.Collections
  isExternal: false
  name: IRemoteArgumentCollectionContract
  nameWithType: IRemoteArgumentCollectionContract
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentCollectionContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetValues
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: GetValues()
  nameWithType: IRemoteArgumentDictionaryContract.GetValues()
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetValues()
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Remove(System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: Remove(RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.Remove(RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Remove(RemoteArgument)
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.SetItem(System.AddIn.Contract.RemoteArgument,System.AddIn.Contract.RemoteArgument)
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: SetItem(RemoteArgument,RemoteArgument)
  nameWithType: IRemoteArgumentDictionaryContract.SetItem(RemoteArgument,RemoteArgument)
  fullName: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.SetItem(RemoteArgument,RemoteArgument)
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Add*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: Add
  nameWithType: IRemoteArgumentDictionaryContract.Add
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Clear*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: Clear
  nameWithType: IRemoteArgumentDictionaryContract.Clear
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.ContainsKey*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: ContainsKey
  nameWithType: IRemoteArgumentDictionaryContract.ContainsKey
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetEnumeratorContract*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: GetEnumeratorContract
  nameWithType: IRemoteArgumentDictionaryContract.GetEnumeratorContract
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetItem*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: GetItem
  nameWithType: IRemoteArgumentDictionaryContract.GetItem
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetKeys*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: GetKeys
  nameWithType: IRemoteArgumentDictionaryContract.GetKeys
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.GetValues*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: GetValues
  nameWithType: IRemoteArgumentDictionaryContract.GetValues
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.Remove*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: Remove
  nameWithType: IRemoteArgumentDictionaryContract.Remove
- uid: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract.SetItem*
  parent: System.AddIn.Contract.Collections.IRemoteArgumentDictionaryContract
  isExternal: false
  name: SetItem
  nameWithType: IRemoteArgumentDictionaryContract.SetItem
