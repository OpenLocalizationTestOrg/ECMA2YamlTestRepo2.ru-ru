### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.SerializationBinder
  id: SerializationBinder
  children:
  - System.Runtime.Serialization.SerializationBinder.#ctor
  - System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  - System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  langs:
  - csharp
  name: SerializationBinder
  nameWithType: SerializationBinder
  fullName: System.Runtime.Serialization.SerializationBinder
  type: Class
  summary: "Позволяет пользователям управлять загрузкой классов и выбирать класс для загрузки."
  remarks: "При сериализации модуль форматирования передает сведения, необходимые для создания экземпляра объекта правильных типа и версии. Эти сведения обычно содержат полное имя типа и имя сборки объекта. Имя сборки содержит имя, версию и строгим именем (в разделе [сборок со строгими именами](~/add/includes/ajax-current-ext-md.md)) хэш-код сборки. По умолчанию десериализация использует эти сведения для создания экземпляра идентичного объекта (с исключением любой загрузки сборки, ограниченной политикой безопасности). Некоторым пользователям необходимо отслеживать загружаемый класс, либо потому, что класс перемещен из одной сборки или другую версию класса требуется для сервера и клиента.       Помощью SerializationBinder также может использоваться для обеспечения безопасности. При попытке десериализации некоторых данных из ненадежного источника может быть несколько уязвимостей системы безопасности. Связыватель дает возможность проверить, какие типы загружаются в домене приложения. После этого можно либо поддерживать список запрещенных типов или список разрешенных типов и ограничить типы загружаются и экземпляра. Кроме того вы должны учитывать какие сведения является помещение сети, может потребоваться для обеспечения безопасности (используйте транспорт или сообщение безопасности) при отправке имена типов или другие данные по сети.      Настроек [!WARNING] настроек использовать помощью SerializationBinder, только если вы уверены в полностью сериализуется какие сведения. Вредоносных типов может привести к непредвиденному поведению.       Это абстрактный базовый класс. Все связыватели расширяют этот класс."
  example:
  - >-
    [!code-vb[SerializationBinder Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_11_1.vb)]
     [!code-cpp[SerializationBinder Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_11_1.cpp)]
     [!code-cs[SerializationBinder Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_11_1.cs)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class SerializationBinder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Runtime.Serialization.SerializationBinder&quot;> </xref> класса."
  syntax:
    content: protected SerializationBinder ();
    parameters: []
  overload: System.Runtime.Serialization.SerializationBinder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  id: BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "При переопределении в производном классе управляет привязкой сериализованного объекта к типу."
  syntax:
    content: public virtual void BindToName (Type serializedType, out string assemblyName, out string typeName);
    parameters:
    - id: serializedType
      type: System.Type
      description: "Тип объекта модуля форматирования создает новый экземпляр."
    - id: assemblyName
      type: System.String
      description: "Указывает <xref:System.Reflection.Assembly>имя сериализованного объекта.</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "Указывает <xref:System.Type>имя сериализованного объекта.</xref:System.Type>"
  overload: System.Runtime.Serialization.SerializationBinder.BindToName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  id: BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  langs:
  - csharp
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "При переопределении в производном классе управляет привязкой сериализованного объекта к типу."
  remarks: ''
  example:
  - SerializationBinder Example#1
  syntax:
    content: public abstract Type BindToType (string assemblyName, string typeName);
    parameters:
    - id: assemblyName
      type: System.String
      description: "Указывает <xref:System.Reflection.Assembly>имя сериализованного объекта.</xref:System.Reflection.Assembly>"
    - id: typeName
      type: System.String
      description: "Указывает <xref:System.Type>имя сериализованного объекта.</xref:System.Type>"
    return:
      type: System.Type
      description: "Тип объекта модуля форматирования создает новый экземпляр."
  overload: System.Runtime.Serialization.SerializationBinder.BindToType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Serialization.SerializationBinder.#ctor
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder()
  nameWithType: SerializationBinder.SerializationBinder()
  fullName: System.Runtime.Serialization.SerializationBinder.SerializationBinder()
- uid: System.Runtime.Serialization.SerializationBinder.BindToName(System.Type,System.String@,System.String@)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName(Type,String,String)
  nameWithType: SerializationBinder.BindToName(Type,String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToName(Type,String,String)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.SerializationBinder.BindToType(System.String,System.String)
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType(String,String)
  nameWithType: SerializationBinder.BindToType(String,String)
  fullName: System.Runtime.Serialization.SerializationBinder.BindToType(String,String)
- uid: System.Runtime.Serialization.SerializationBinder.#ctor*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: SerializationBinder
  nameWithType: SerializationBinder.SerializationBinder
- uid: System.Runtime.Serialization.SerializationBinder.BindToName*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToName
  nameWithType: SerializationBinder.BindToName
- uid: System.Runtime.Serialization.SerializationBinder.BindToType*
  parent: System.Runtime.Serialization.SerializationBinder
  isExternal: false
  name: BindToType
  nameWithType: SerializationBinder.BindToType
