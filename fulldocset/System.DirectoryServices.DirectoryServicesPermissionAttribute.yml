### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute
  id: DirectoryServicesPermissionAttribute
  children:
  - System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission
  - System.DirectoryServices.DirectoryServicesPermissionAttribute.Path
  - System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess
  langs:
  - csharp
  name: DirectoryServicesPermissionAttribute
  nameWithType: DirectoryServicesPermissionAttribute
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute
  type: Class
  summary: "Позволяет декларативные <xref href=&quot;System.DirectoryServices&quot;> </xref> проверки разрешений."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method | System.AttributeTargets.Event, AllowMultiple=true, Inherited=false)]

      public class DirectoryServicesPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  langs:
  - csharp
  name: DirectoryServicesPermissionAttribute(SecurityAction)
  nameWithType: DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр класса DirectoryServicesPermissionAttribute."
  syntax:
    content: public DirectoryServicesPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Один из <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> значения."
  overload: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: DirectoryServicesPermissionAttribute.CreatePermission()
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Создает разрешения на основе спецификаций атрибута."
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "<xref href=&quot;System.Security.IPermission&quot;> </xref> , Представляющий созданное разрешение."
  overload: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path
  id: Path
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  langs:
  - csharp
  name: Path
  nameWithType: DirectoryServicesPermissionAttribute.Path
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает путь к узлу доменных служб Active Directory, к которому применяются разрешения."
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "Путь к узлу доменных служб Active Directory. Значение по умолчанию — «*»."
  overload: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение свойства является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess
  id: PermissionAccess
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  langs:
  - csharp
  name: PermissionAccess
  nameWithType: DirectoryServicesPermissionAttribute.PermissionAccess
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает уровни доступа, которые используются при создании разрешений."
  syntax:
    content: public System.DirectoryServices.DirectoryServicesPermissionAccess PermissionAccess { get; set; }
    return:
      type: System.DirectoryServices.DirectoryServicesPermissionAccess
      description: "Один из <xref href=&quot;System.DirectoryServices.DirectoryServicesPermissionAccess&quot;> </xref> значения. Значение по умолчанию — Browse."
  overload: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  isExternal: false
  name: DirectoryServicesPermissionAttribute(SecurityAction)
  nameWithType: DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: DirectoryServicesPermissionAttribute.CreatePermission()
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  isExternal: false
  name: Path
  nameWithType: DirectoryServicesPermissionAttribute.Path
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  isExternal: false
  name: PermissionAccess
  nameWithType: DirectoryServicesPermissionAttribute.PermissionAccess
  fullName: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess
- uid: System.DirectoryServices.DirectoryServicesPermissionAccess
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryServicesPermissionAccess
  nameWithType: DirectoryServicesPermissionAccess
  fullName: System.DirectoryServices.DirectoryServicesPermissionAccess
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.#ctor*
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  isExternal: false
  name: DirectoryServicesPermissionAttribute
  nameWithType: DirectoryServicesPermissionAttribute.DirectoryServicesPermissionAttribute
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.CreatePermission*
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: DirectoryServicesPermissionAttribute.CreatePermission
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.Path*
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  isExternal: false
  name: Path
  nameWithType: DirectoryServicesPermissionAttribute.Path
- uid: System.DirectoryServices.DirectoryServicesPermissionAttribute.PermissionAccess*
  parent: System.DirectoryServices.DirectoryServicesPermissionAttribute
  isExternal: false
  name: PermissionAccess
  nameWithType: DirectoryServicesPermissionAttribute.PermissionAccess
