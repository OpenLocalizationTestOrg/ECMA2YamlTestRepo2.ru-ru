### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.SiteIdentityPermission
  id: SiteIdentityPermission
  children:
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  - System.Security.Permissions.SiteIdentityPermission.Copy
  - System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.SiteIdentityPermission.Site
  - System.Security.Permissions.SiteIdentityPermission.ToXml
  - System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission
  fullName: System.Security.Permissions.SiteIdentityPermission
  type: Class
  summary: "Определяет разрешение удостоверения для веб-сайта, с которого происходит код. Этот класс не наследуется."
  remarks: "Using this class, it is possible to ensure that callers are from a specific Web site. Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence.  \n  \n> [!IMPORTANT]\n>  Starting with the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], identity permissions are not used.  \n>   \n>  In the .NET Framework versions 1.0 and 1.1, demands on the identity permissions are effective, even when the calling assembly is fully trusted. That is, although the calling assembly has full trust, a demand for an identity permission fails if the assembly does not meet the demanded criteria. Starting with the .NET Framework version 2.0, demands for identity permissions are ineffective if the calling assembly has full trust. This assures consistency for all permissions, eliminating the treatment of identity permissions as a special case.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!NOTE]\n>  In the .NET Framework versions 1.0 and 1.1, identity permissions cannot have an <xref:System.Security.Permissions.PermissionState> permission state value. Starting with the .NET Framework version 2.0, identity permissions can have any permission state value. This means that in 2.0 and later versions, identity permissions have the same behavior as permissions that implement the <xref:System.Security.Permissions.IUnrestrictedPermission> interface."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class SiteIdentityPermission : System.Security.CodeAccessPermission
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> класса с заданным <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  remarks: "Полностью ограниченный состояние <xref:System.Security.Permissions.SiteIdentityPermission>соответствует узлы отсутствуют.</xref:System.Security.Permissions.SiteIdentityPermission> Этот конструктор включен для согласованности с конструкцией других разрешений, но не используется на практике.      Настроек [!NOTE] настроек в .NET Framework версий 1.0 и 1.1, не могут иметь разрешения идентификации <xref:System.Security.Permissions.PermissionState>значение состояния разрешения.</xref:System.Security.Permissions.PermissionState> Начиная с .NET Framework версии 2.0 разрешениям идентификации может быть любое значение состояния разрешения. Это означает, что в версиях 2.0 и более поздних, разрешения идентификации отличается от разрешения, которые реализуют <xref:System.Security.Permissions.IUnrestrictedPermission>интерфейса.</xref:System.Security.Permissions.IUnrestrictedPermission> То есть требование идентификации всегда завершается успешно, независимо от того, идентификатор сборки, если сборки было предоставлено полное доверие.       В .NET Framework версий 1.0 и 1.1 требования разрешениям идентификации остаются в силе, даже в том случае, если вызывающая сборка является полностью доверенным. То есть несмотря на то, что вызывающая сборка имеет полное доверие, требование разрешения идентификации завершается сбоем, если сборку не соответствует требуемому критерию. Начиная с .NET Framework версии 2.0, являются неэффективными, если вызывающая сборка имеет полное доверие к разрешениям идентификации. Тем самым обеспечивается согласованность всех разрешений, что исключает интерпретации разрешений идентификации как особый случай."
  syntax:
    content: public SiteIdentityPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Один из <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> значения."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> state </code> Параметр не является допустимым значением для <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Permissions.SiteIdentityPermission&quot;> </xref> класс для представления удостоверения указанного сайта."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match."
  syntax:
    content: public SiteIdentityPermission (string site);
    parameters:
    - id: site
      type: System.String
      description: "Выражение имя или шаблон сайта."
  overload: System.Security.Permissions.SiteIdentityPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> site </code> Параметр не является допустимой строкой или не соответствует допустимому подстановочному имени сайта."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  id: Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает и возвращает идентичную копию текущего разрешения."
  remarks: "Копия разрешения предоставляет такой же доступ к ресурсам или тот же идентификатор сайта, что само разрешение."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Копия текущего разрешения."
  overload: System.Security.Permissions.SiteIdentityPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Восстанавливает разрешение с указанным состоянием из кодировки XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement esd);
    parameters:
    - id: esd
      type: System.Security.SecurityElement
      description: "Кодировка XML, используемая для восстановления разрешения."
  overload: System.Security.Permissions.SiteIdentityPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>esd</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> esd </code> Параметр не является допустимым элементом разрешения.       - или - <code> esd </code> номер версии параметра не является допустимым."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает и возвращает разрешение, представляющее собой пересечение текущего и указанного разрешений."
  remarks: "Пересечение двух разрешений является разрешением, которое описывает сайты, которые в обоих разрешениях. Только запрос, передающий оба исходных разрешения, передает их пересечение. Например, пересечение, предоставляющего доступ к www.fourthcoffee.com и одно разрешение, представляющее доступ к *. fourthcoffee.com является разрешение, представляющее доступ к www.fourthcoffee.com.       Пересечение двух разрешений идентификации идентичные узла является то же разрешение. Пересечение двух различных (без подстановочных знаков) выражений является пустое разрешение. Пересечение выражение с подстановочными знаками и соответствующего веб-узла является сайтом. Пересечение двух выражений подстановочный знак, которые соответствуют является больше времени, более конкретное из двух выражений."
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение, пересекающееся с текущим разрешением. Он должен быть того же типа, что и текущее разрешение."
    return:
      type: System.Security.IPermission
      description: "Новое разрешение, представляющее собой пересечение текущего и указанного разрешений. Это новое разрешение равно <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если пересечение является пустым."
  overload: System.Security.Permissions.SiteIdentityPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Определяет, является ли текущее разрешение подмножеством указанного разрешения."
  remarks: "Текущее разрешение является подмножеством указанного разрешения, если текущее разрешение задает сайт, который полностью содержащихся в заданном разрешении.       Следующая таблица показывает значения IsSubsetOf для диапазона значений текущего разрешения и указанного разрешений.      | Текущее разрешение | Указанное разрешение | IsSubsetOf |   |------------------------|--------------------------|----------------|   | www.fourthcoffee.com | www.fourthcoffee.com | `true`|   | www.fourthcoffee.com | www.tailspintoys.com | `false`|   | www.fourthcoffee.com | *. fourthcoffee.com| `true`|   | www.fourthcoffee.com | *.com| `true`|   | *. fourthcoffee.com| www.fourthcoffee.com | `false`|   | *. fourthcoffee.com| *. fourthcoffee.com| `true`|   | *. fourthcoffee.com| *.com| `true`|   | Anything except `None`|*|`true`|   | `None`| Что-либо |`true`|"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение, для которого требуется проверить отношение подмножества. Это разрешение должно быть того же типа, что и текущее разрешение."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если текущее разрешение является подмножеством указанного разрешения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  id: Site
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Возвращает или задает текущий узел."
  remarks: "Site identity is only defined for code from URLs with the protocols of HTTP, HTTPS, and FTP. A site is the string between the \"//\" after the protocol of a URL and the following \"/\", if present, for example, www.fourthcoffee.com in the URL http://www.fourthcoffee.com/process/grind.htm/. This excludes port numbers. If a given URL is http://www.fourthcoffee.com:8000/, the site is www.fourthcoffee.com, not www.fourthcoffee.com:8000.  \n  \n Sites can be matched exactly, or by a wildcard (\"*\") prefix at the dot delimiter. For example, the site name string \\*.fourthcoffee.com matches fourthcoffee.com as well as www.fourthcoffee.com. Without a wildcard, the site name must be a precise match. The site name string \\* will match any site, but will not match code that has no site evidence."
  syntax:
    content: public string Site { get; set; }
    return:
      type: System.String
      description: "Текущий сайт."
  overload: System.Security.Permissions.SiteIdentityPermission.Site*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Не удается получить удостоверение узла, поскольку удостоверение неоднозначно."
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  id: ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает кодировку XML для разрешения и его текущего состояния."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Кодировка XML разрешения, включающая сведения о состоянии."
  overload: System.Security.Permissions.SiteIdentityPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Permissions
  summary: "Создает разрешение, представляющее собой объединение текущего и указанного разрешений."
  remarks: "The result of a call to Union is a permission that represents all the sites represented by both the current permission and the specified permission. Any demand that passes either permission passes their union. For example, the union of a permission that represents access to www.fourthcoffee.com and one that represents access to *.fourthcoffee.com is a permission that represents access to \\*.fourthcoffee.com.  \n  \n The union of a permission and `null` is the permission that is not `null`. The union of a permission and a subset of that permission is the permission that contains the subset. Any other combination results in an <xref:System.ArgumentException> being thrown. For example, the union of the site identity www.fourthcoffee.com and the site identity www.tailspintoys.com results in an exception because neither is a subset of the other."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "Разрешение для объединения с текущим разрешением. Он должен быть того же типа, что и текущее разрешение."
    return:
      type: System.Security.IPermission
      description: "Новое разрешение, представляющее собой объединение текущего и указанного разрешений."
  overload: System.Security.Permissions.SiteIdentityPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> target </code> Не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и не совпадает с типом текущего разрешения.       - или - разрешения не равны, и одно не является подмножеством другого."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(PermissionState)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(PermissionState)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor(System.String)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission(String)
  nameWithType: SiteIdentityPermission.SiteIdentityPermission(String)
  fullName: System.Security.Permissions.SiteIdentityPermission.SiteIdentityPermission(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.SiteIdentityPermission.Copy
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy()
  nameWithType: SiteIdentityPermission.Copy()
  fullName: System.Security.Permissions.SiteIdentityPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml(System.Security.SecurityElement)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: SiteIdentityPermission.FromXml(SecurityElement)
  fullName: System.Security.Permissions.SiteIdentityPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: SiteIdentityPermission.Intersect(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Intersect(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: SiteIdentityPermission.IsSubsetOf(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.SiteIdentityPermission.Site
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
  fullName: System.Security.Permissions.SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml()
  nameWithType: SiteIdentityPermission.ToXml()
  fullName: System.Security.Permissions.SiteIdentityPermission.ToXml()
- uid: System.Security.Permissions.SiteIdentityPermission.Union(System.Security.IPermission)
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: SiteIdentityPermission.Union(IPermission)
  fullName: System.Security.Permissions.SiteIdentityPermission.Union(IPermission)
- uid: System.Security.Permissions.SiteIdentityPermission.#ctor*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: SiteIdentityPermission
  nameWithType: SiteIdentityPermission.SiteIdentityPermission
- uid: System.Security.Permissions.SiteIdentityPermission.Copy*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Copy
  nameWithType: SiteIdentityPermission.Copy
- uid: System.Security.Permissions.SiteIdentityPermission.FromXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: FromXml
  nameWithType: SiteIdentityPermission.FromXml
- uid: System.Security.Permissions.SiteIdentityPermission.Intersect*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Intersect
  nameWithType: SiteIdentityPermission.Intersect
- uid: System.Security.Permissions.SiteIdentityPermission.IsSubsetOf*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: SiteIdentityPermission.IsSubsetOf
- uid: System.Security.Permissions.SiteIdentityPermission.Site*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Site
  nameWithType: SiteIdentityPermission.Site
- uid: System.Security.Permissions.SiteIdentityPermission.ToXml*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: ToXml
  nameWithType: SiteIdentityPermission.ToXml
- uid: System.Security.Permissions.SiteIdentityPermission.Union*
  parent: System.Security.Permissions.SiteIdentityPermission
  isExternal: false
  name: Union
  nameWithType: SiteIdentityPermission.Union
