### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.KeysConverter
  id: KeysConverter
  children:
  - System.Windows.Forms.KeysConverter.#ctor
  - System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  - System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: KeysConverter
  nameWithType: KeysConverter
  fullName: System.Windows.Forms.KeysConverter
  type: Class
  summary: "Предоставляет <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> для преобразования <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> объектов в другие представления и обратно."
  remarks: "Чаще всего используется KeysConverter преобразователь типов для преобразования <xref:System.Windows.Forms.Keys>экземпляры из соответствующих локализованных <xref:System.String>представления.</xref:System.String> </xref:System.Windows.Forms.Keys>"
  example:
  - "The following code example demonstrates how to use the KeysConverter class to convert a <xref:System.Windows.Forms.Keys> to a <xref:System.String>. This example assumes that you have a <xref:System.Windows.Forms.TextBox> named `TextBox1` on a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SystemWindowsFormsKeys#1](~/add/codesnippet/csharp/KeysConverterCS/Form1.cs#1)]\n [!code-vb[SystemWindowsFormsKeys#1](~/add/codesnippet/visualbasic/KeysConverterVB/Form1.vb#1)]"
  syntax:
    content: 'public class KeysConverter : System.ComponentModel.TypeConverter, System.Collections.IComparer'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements:
  - System.Collections.IComparer
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: KeysConverter()
  nameWithType: KeysConverter.KeysConverter()
  fullName: System.Windows.Forms.KeysConverter.KeysConverter()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Windows.Forms.KeysConverter&quot;> </xref> класса."
  remarks: "Это происходит по умолчанию, предоставляемые компилятором конструктор для <xref:System.Windows.Forms.KeysConverter>класса.</xref:System.Windows.Forms.KeysConverter>       Обычно не создается непосредственно экземпляр <xref:System.Windows.Forms.KeysConverter>.</xref:System.Windows.Forms.KeysConverter> Вместо этого необходимо вызовите <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>метод <xref:System.ComponentModel.TypeDescriptor>класса.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Дополнительные сведения см. в примерах из <xref:System.ComponentModel.TypeConverter>базового класса.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: public KeysConverter ();
    parameters: []
  overload: System.Windows.Forms.KeysConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, может ли этот преобразователь выполнить преобразование объекта в указанный тип источника в собственный тип преобразователя, используя заданный контекст."
  remarks: "Метод CanConvertFrom специально предназначен для возврата `true` Если `sourceType` параметр имеет тип <xref:System.String>или <xref:System.Enum>массив; в противном случае он откладывает оценку для базовой реализации этого метода.</xref:System.Enum> </xref:System.String>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата, который может использоваться для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Этот параметр или свойства этого параметра может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: sourceType
      type: System.Type
      description: "<xref:System.Type>Преобразовываемый.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если преобразование может быть выполнено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeysConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, может ли этот преобразователь выполнить преобразование объекта в указанный тип источника в собственный тип преобразователя, используя заданный контекст."
  remarks: "Метод CanConvertTo является специальным для возврата `true` Если `destinationType` параметр имеет тип <xref:System.Enum>массив; в противном случае он откладывает оценку для базовой реализации этого метода.</xref:System.Enum>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата, который может использоваться для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Этот параметр или свойства этого параметра может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>Для преобразования.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если преобразование может быть выполнено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeysConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  id: Compare(System.Object,System.Object)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: Compare(Object,Object)
  nameWithType: KeysConverter.Compare(Object,Object)
  fullName: System.Windows.Forms.KeysConverter.Compare(Object,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Сравнивает два ключевых значения для эквивалентности."
  remarks: "Этот метод использует <xref:System.String.Compare%2A?displayProperty=fullName>для сравнения двух объектов.</xref:System.String.Compare%2A?displayProperty=fullName>"
  syntax:
    content: public int Compare (object a, object b);
    parameters:
    - id: a
      type: System.Object
      description: "<xref:System.Object>, Представляющий первый ключ для сравнения.</xref:System.Object>"
    - id: b
      type: System.Object
      description: "<xref:System.Object>, Представляющий второй сравниваемый ключ.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Целое число, показывающее связь между двумя параметрами.       <table><thead><tr><th> Тип значения       </th><th> Условие       </th></tr></thead><tbody><tr><td> Отрицательное целое число.       </td><td><code>a</code>is less than <code>b</code>.       </td></tr><tr><td> ноль       </td><td><code>a</code>equals <code>b</code>.       </td></tr><tr><td> Положительное целое число.       </td><td><code>a</code>больше, чем <code> b </code>.       </td></tr></tbody></table>"
  overload: System.Windows.Forms.KeysConverter.Compare*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Forms.KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Преобразует указанный объект в собственный тип преобразователя."
  remarks: "Метод ConvertFrom специально предназначен для преобразования объектов типа <xref:System.String>или <xref:System.Enum>массива.</xref:System.Enum> </xref:System.String> В этом случае он возвращает объект типа <xref:System.Windows.Forms.Keys>.</xref:System.Windows.Forms.Keys> В противном случае он откладывает оценку для базовой реализации этого метода."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref uid=&quot;langword_csharp_ITypeDescriptorContext&quot; name=&quot;ITypeDescriptorContext&quot; href=&quot;&quot;> </xref> , Предоставляющий контекст формата, который может использоваться для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Этот параметр или свойства этого параметра может быть null."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref uid=&quot;langword_csharp_CultureInfo&quot; name=&quot;CultureInfo&quot; href=&quot;&quot;> </xref> для получения информации о языковом стандарте."
    - id: value
      type: System.Object
      description: "Преобразуемый объект."
    return:
      type: System.Object
      description: "Объект, представляющий преобразованный <code> value </code>."
  overload: System.Windows.Forms.KeysConverter.ConvertFrom*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Предоставлена недопустимая комбинация ключа.       - или - указано недопустимое имя ключа."
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Forms.KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Преобразует указанный объект в указанный тип."
  remarks: "Метод ConvertTo специально предназначен для преобразования объектов типа <xref:System.Windows.Forms.Keys>или <xref:System.Int32>.</xref:System.Int32> </xref:System.Windows.Forms.Keys> В этом случае он возвращает объект типа <xref:System.String>.</xref:System.String> В противном случае он откладывает оценку для базовой реализации этого метода."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата, который может использоваться для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Этот параметр или свойства этого параметра может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>для предоставления информации о языковом стандарте.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>Для преобразования объекта.</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий преобразованный <code> value </code>.</xref:System.Object>"
  overload: System.Windows.Forms.KeysConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает коллекцию стандартных значений для типа данных, который предназначен этот преобразователь типов при предоставлении с контекстом формата."
  remarks: "Коллекция, возвращаемая содержит значения ключей, которые могут быть преобразованы."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата, который может использоваться для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Этот параметр или свойства этого параметра может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Объект <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>, содержащий стандартный набор допустимых значений, которые могут быть пустыми, если тип данных не поддерживает стандартный набор значений.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.Windows.Forms.KeysConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Определяет, если список стандартных значений, возвращаемый из <xref uid=&quot;langword_csharp_GetStandardValues&quot; name=&quot;GetStandardValues&quot; href=&quot;&quot;> </xref> содержит список с помощью указанного <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref>."
  remarks: "`context` Параметр не используется в стандартную реализацию этого метода.       Если список является исчерпывающим, то другие значения оказываются недопустимы, как например в <xref:System.Enum>тип данных.</xref:System.Enum> Если список не является исчерпывающим, то есть другие допустимые значения, кроме списка стандартных значений <xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A>предоставляет.</xref:System.Windows.Forms.KeysConverter.GetStandardValues%2A>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Контекст модуля форматирования. Этот объект можно использовать для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, поэтому всегда следует выполнять проверку. Кроме того, свойства объекта контекста могут также возвращать <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если коллекция, возвращаемая методом <xref:System.Windows.Forms.KeysConverter.GetStandardValues*>является исчерпывающим списком возможных значений; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если возможны другие значения.</xref:System.Windows.Forms.KeysConverter.GetStandardValues*> Реализация по умолчанию для этого метода всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, поддерживает ли этот объект стандартный набор значений, которые можно выбрать из списка."
  remarks: "`context` Параметр не используется в стандартную реализацию этого метода."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата, который может использоваться для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Этот параметр или свойства этого параметра может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.KeysConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Windows.Forms.KeysConverter.#ctor
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: KeysConverter()
  nameWithType: KeysConverter.KeysConverter()
  fullName: System.Windows.Forms.KeysConverter.KeysConverter()
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.KeysConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Forms.KeysConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Forms.KeysConverter.Compare(System.Object,System.Object)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: Compare(Object,Object)
  nameWithType: KeysConverter.Compare(Object,Object)
  fullName: System.Windows.Forms.KeysConverter.Compare(Object,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.KeysConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Forms.KeysConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Forms.KeysConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Forms.KeysConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Forms.KeysConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Windows.Forms.KeysConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Windows.Forms.KeysConverter.#ctor*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: KeysConverter
  nameWithType: KeysConverter.KeysConverter
- uid: System.Windows.Forms.KeysConverter.CanConvertFrom*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: KeysConverter.CanConvertFrom
- uid: System.Windows.Forms.KeysConverter.CanConvertTo*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: KeysConverter.CanConvertTo
- uid: System.Windows.Forms.KeysConverter.Compare*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: Compare
  nameWithType: KeysConverter.Compare
- uid: System.Windows.Forms.KeysConverter.ConvertFrom*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: KeysConverter.ConvertFrom
- uid: System.Windows.Forms.KeysConverter.ConvertTo*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: ConvertTo
  nameWithType: KeysConverter.ConvertTo
- uid: System.Windows.Forms.KeysConverter.GetStandardValues*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: KeysConverter.GetStandardValues
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesExclusive*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: KeysConverter.GetStandardValuesExclusive
- uid: System.Windows.Forms.KeysConverter.GetStandardValuesSupported*
  parent: System.Windows.Forms.KeysConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: KeysConverter.GetStandardValuesSupported
