### YamlMime:ManagedReference
items:
- uid: System.IO.Packaging.Package
  id: Package
  children:
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  - System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  - System.IO.Packaging.Package.Close
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  - System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  - System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  - System.IO.Packaging.Package.DeletePart(System.Uri)
  - System.IO.Packaging.Package.DeletePartCore(System.Uri)
  - System.IO.Packaging.Package.DeleteRelationship(System.String)
  - System.IO.Packaging.Package.Dispose(System.Boolean)
  - System.IO.Packaging.Package.FileOpenAccess
  - System.IO.Packaging.Package.Flush
  - System.IO.Packaging.Package.FlushCore
  - System.IO.Packaging.Package.GetPart(System.Uri)
  - System.IO.Packaging.Package.GetPartCore(System.Uri)
  - System.IO.Packaging.Package.GetParts
  - System.IO.Packaging.Package.GetPartsCore
  - System.IO.Packaging.Package.GetRelationship(System.String)
  - System.IO.Packaging.Package.GetRelationships
  - System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream)
  - System.IO.Packaging.Package.Open(System.String)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  - System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  - System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  - System.IO.Packaging.Package.PackageProperties
  - System.IO.Packaging.Package.PartExists(System.Uri)
  - System.IO.Packaging.Package.RelationshipExists(System.String)
  - System.IO.Packaging.Package.System#IDisposable#Dispose
  langs:
  - csharp
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
  type: Class
  summary: "Представляет контейнер, который может хранить несколько объектов данных."
  remarks: "Пакет — это абстрактный класс, который может использоваться для организации объектов в одной сущности определенного физического формата для переноса и эффективного доступа.       ZIP-файл является основным форматом физический пакет.  В других реализациях пакета могут использоваться другие физические форматы, такие как XML-документа, базы данных или веб-службы.       Как в файловой системе в виде иерархической структуры папок и файлов указываются элементы, содержащиеся в пакете.       Несмотря на то, что сам пакет — это абстрактный класс, <xref:System.IO.Packaging.ZipPackage>производного класса используется по умолчанию, <xref:System.IO.Packaging.Package.Open%2A>метод.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.ZipPackage>       Объект <xref:System.IO.Packaging.PackagePart>(«часть») является абстрактным классом, представляющим объект, который хранится в пакете.</xref:System.IO.Packaging.PackagePart>       Объект <xref:System.IO.Packaging.PackageRelationship>(«связи») определяет связь между исходным пакета или <xref:System.IO.Packaging.PackagePart>и целевого объекта.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackageRelationship>  Объект <xref:System.IO.Packaging.PackageRelationship>может принимать одно из двух типов, каждый из которых может принимать одно из двух форм:-связь уровня пакета (созданные <xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName>метод) относится к любой пакет: - часть в пакете.</xref:System.IO.Packaging.Package.CreateRelationship%2A?displayProperty=fullName> </xref:System.IO.Packaging.PackageRelationship>          — Целевой ресурс вне пакета.      -A уровня части связи (созданные <xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>метод) относится источник <xref:System.IO.Packaging.PackagePart>либо: — другой часть в пакете.</xref:System.IO.Packaging.PackagePart> </xref:System.IO.Packaging.PackagePart.CreateRelationship%2A?displayProperty=fullName>          — Целевой ресурс вне пакета.       Связь источника пакета или источника <xref:System.IO.Packaging.PackagePart>считается «владелец» связи.</xref:System.IO.Packaging.PackagePart>  При удалении исходного объекта также удаляются все связи, владельцем исходного объекта.  Процесс создания или удаления связи физически не изменяет исходных или целевых объектов, которые каким-либо образом.       Объект <xref:System.IO.Packaging.PackageDigitalSignature>(«цифровая подпись») представляет собой сочетание частей и связей, представляющий цифровой подписи, входящий в состав пакета.</xref:System.IO.Packaging.PackageDigitalSignature>  Цифровая подпись идентифицирует источник пакета и проверяет, что подписанные части и связи, содержащиеся в пакете не были изменены.       Пакеты также поддерживают цифровыми правами (DRM) допускающий элементов содержимого пакета с шифрованием с конкретных прав доступа для авторизованных пользователей.       В зависимости от архитектуры пакета, <xref:System.Windows.Xps.Packaging.XpsDocument>— это тип пакета, предназначенных для хранения документов на основании открытия [XML Paper Specification (XPS)](http://go.microsoft.com/fwlink/?LinkID=65761).</xref:System.Windows.Xps.Packaging.XpsDocument>       [!INCLUDE[TLA#tla_avalonwinfx](~/add/includes/tlasharptla-avalonwinfx-md.md)]использует пакеты для хранения содержимого, ресурсы и связи для страниц и документов с помощью стандартного ZIP-файла по умолчанию. Как и с любой ZIP-файл можно использовать приложение <xref:System.IO.Packaging>классов для хранения и защиты любого типа или количества файлов данных в одном контейнере эффективного доступа.</xref:System.IO.Packaging>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows the basic steps for creating a Package.  In this example, a package is created to contain a document together with a graphic image that is displayed as part of the document.  (This is similar to the case in which an HTML file has an \\<IMG> tag that references an external image file.)  Two <xref:System.IO.Packaging.PackageRelationship> elements are also included in the package.  The first, a \"package-level\" relationship, defines the document part as the package's root element.  A second, \"part-level\" relationship defines the association between the document part (the \"source\" of the part-level relationship) and its use of the image part (the \"target\" of the part-level relationship).  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: 'public abstract class Package : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  id: '#ctor(System.IO.FileAccess)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> класс, который использует данный <xref href=&quot;System.IO.FileAccess&quot;> </xref>."
  remarks: "Пакет является защищенным конструктором <xref:System.IO.Packaging.Package>абстрактного базового класса.</xref:System.IO.Packaging.Package> При вызове в производном классе пакета конструктор инициализирует новый экземпляр производного класса."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "Разрешения файловой операции ввода-ВЫВОДА для пакета."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение для <code> openFileAccess </code> является недопустимым."
  platform:
  - net462
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  id: '#ctor(System.IO.FileAccess,System.Boolean)'
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IO.Packaging.Package&quot;> </xref> класс, который использует данный <xref href=&quot;System.IO.FileAccess&quot;> </xref> и потоковой передачи параметра."
  remarks: "Пакет является защищенным конструктором <xref:System.IO.Packaging.Package>абстрактного базового абстрактного базового класса.</xref:System.IO.Packaging.Package> При вызове в производном классе пакета конструктор инициализирует новый экземпляр производного класса."
  syntax:
    content: protected Package (System.IO.FileAccess openFileAccess, bool streaming);
    parameters:
    - id: openFileAccess
      type: System.IO.FileAccess
      description: "Разрешения файловой операции ввода-ВЫВОДА для пакета."
    - id: streaming
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы открыть пакет для потоковой передачи; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение для <code> openFileAccess </code> является недопустимым."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Close
  id: Close
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Сохраняет и закрывает пакет, а также все базовые потоки частей."
  remarks: "Для <xref:System.IO.Packaging.Package>класса закрыть и <xref:System.IO.Packaging.Package.Dispose%2A>выполнить ту же операцию, нет необходимости вызывать <xref:System.IO.Packaging.Package.Dispose%2A>при вызове метода Close, или наоборот.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package>       Закройте шаблон и <xref:System.IO.Packaging.Package.Dispose%2A>внутреннего вызова <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A> </xref:System.IO.Packaging.Package.Dispose%2A>      Настроек [!NOTE] настроек `using` инструкции (отличается от `using` директивы пространства имен) — рекомендуемый способ закрытия и <xref:System.IO.Packaging.Package.Dispose%2A>пакета.</xref:System.IO.Packaging.Package.Dispose%2A>  [Пример записи пакета](http://go.microsoft.com/fwlink/?LinkID=160055) и [пример чтения пакета](http://go.microsoft.com/fwlink/?LinkID=160034) показывают, как закрыть и удалить пакет с помощью `using` инструкции."
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.IO.Packaging.Package.Close*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  id: CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Создает новую несжатую часть с заданным URI и тип содержимого."
  remarks: "CreatePart инициализирует пустой <xref:System.IO.Stream>для новой части.</xref:System.IO.Stream>  <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>Метод может использоваться для получения ссылки на экземпляр потока, связанного с части.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       Часть, <xref:System.IO.Packaging.PackagePart.CompressionOption%2A> <xref:System.IO.Packaging.CompressionOption?displayProperty=fullName>.</xref:System.IO.Packaging.CompressionOption?displayProperty=fullName> </xref:System.IO.Packaging.PackagePart.CompressionOption%2A>       Дополнительные сведения о части пакета, см. раздел 1.1 в спецификации Open Packaging Conventions (OPC), доступные для загрузки на [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Новой части."
    - id: contentType
      type: System.String
      description: "Тип содержимого потока данных."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Новая созданная часть."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Элемент с указанным <code> partUri </code> уже присутствует в пакете."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для чтения (невозможно добавить новый элемент)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Создает новый элемент с заданным URI, типа содержимого и режима сжатия."
  remarks: "По умолчанию <xref:System.IO.Packaging.ZipPackage>производного класса CreatePart метод поддерживает только два `compressionOption` значения, <xref:System.IO.Packaging.CompressionOption>или <xref:System.IO.Packaging.CompressionOption>сжатия.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Другие <xref:System.IO.Packaging.CompressionOption>значения <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, или <xref:System.IO.Packaging.CompressionOption>использовать <xref:System.IO.Packaging.CompressionOption>сжатия.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       CreatePart создает пустой <xref:System.IO.Stream>для новой части.</xref:System.IO.Stream>  <xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>Метод может использоваться для получения ссылки на экземпляр потока, связанного с части.</xref:System.IO.Packaging.PackagePart.GetStream%2A?displayProperty=fullName>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.PackagePart> and then store data into the part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepart)]\n [!code-cs[PackageWrite#PackageWriteCreatePart](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepart)]"
  syntax:
    content: public System.IO.Packaging.PackagePart CreatePart (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] Новой части."
    - id: contentType
      type: System.String
      description: "Тип содержимого потока данных."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "Параметр сжатия для потока данных, <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> или <xref href=&quot;System.IO.Packaging.CompressionOption&quot;> </xref> сжатия."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Новая созданная часть."
  overload: System.IO.Packaging.Package.CreatePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>or <code>contentType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Элемент с указанным <code> partUri </code> уже присутствует в пакете."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> compressionOption </code> Недопустимое значение."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для чтения (невозможно добавить новый элемент)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  id: CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "При переопределении в производном классе создает новую часть в пакете."
  remarks: "Производный метод CreatePartCore вызывается <xref:System.IO.Packaging.Package.CreatePart%2A>метод для создания части на основе формата физической реализации в производном классе.</xref:System.IO.Packaging.Package.CreatePart%2A>       По умолчанию <xref:System.IO.Packaging.ZipPackage>производный класс реализацию абстрактного <xref:System.IO.Packaging.Package>класс предоставляется и используется.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  В ходе операции по умолчанию <xref:System.IO.Packaging.Package.CreatePart%2A>автоматически вызывает CreatePartCore из <xref:System.IO.Packaging.ZipPackage>класса, чтобы создать новый элемент в ZIP-файле.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.CreatePart%2A>       По умолчанию <xref:System.IO.Packaging.ZipPackage>производного класса CreatePartCore метод поддерживает только два `compressionOption` значения, <xref:System.IO.Packaging.CompressionOption>или <xref:System.IO.Packaging.CompressionOption>сжатия.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.ZipPackage>  Другие <xref:System.IO.Packaging.CompressionOption>значения <xref:System.IO.Packaging.CompressionOption>, <xref:System.IO.Packaging.CompressionOption>, или <xref:System.IO.Packaging.CompressionOption>использовать <xref:System.IO.Packaging.CompressionOption>сжатия.</xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption> </xref:System.IO.Packaging.CompressionOption>       Дополнительные сведения о модели пакета и частей пакета см. раздел 1 спецификации Open Packaging Conventions (OPC) можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart CreatePartCore (Uri partUri, string contentType, System.IO.Packaging.CompressionOption compressionOption);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Для создаваемой части."
    - id: contentType
      type: System.String
      description: "Тип содержимого потока данных."
    - id: compressionOption
      type: System.IO.Packaging.CompressionOption
      description: "Параметр сжатия для потока данных."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Созданная часть."
  overload: System.IO.Packaging.Package.CreatePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Создает связь уровня пакета часть с заданным URI, вызываемым и тип связи."
  remarks: "Связь уровня пакета определяет ассоциацию между пакета и соответствующей целевой частью или ресурсом.  Связь уровня пакета может принимать одно из двух форм.      -Между <xref:System.IO.Packaging.Package>к целевой части в пакете.</xref:System.IO.Packaging.Package>      -Между <xref:System.IO.Packaging.Package>при обращении к ресурсу за пределами пакета.</xref:System.IO.Packaging.Package>       В отношении пакета пакет считается «владелец» связи.  При удалении пакета также удаляются все связи, владельцем пакета.       CreateRelationship не изменяет физически целевой части или ресурса каким-либо образом.       Целевым объектом связи не может быть другая связь.       Если `targetMode` указывается как <xref:System.IO.Packaging.TargetMode>, `targetUri` должен быть относительным URI, сформированный в соответствии с [RFC 3986](http://tools.ietf.org/html/rfc3986) спецификации общий синтаксис универсальный код ресурса (URI).</xref:System.IO.Packaging.TargetMode>  Внутренний относительный URI может быть либо абсолютный путь, начинающийся с символа косой черты («/») символ такие как «/ page1.xaml» или «/ images/picture4.jpg», или относительный путь, например, «.. / imagespicture1.jpg», разрешающее относительно корня пакета («/») как базовый URI.       Если `targetMode` указывается как <xref:System.IO.Packaging.TargetMode>, `targetUri` может быть либо абсолютный или относительный URI, сформированный в соответствии с [RFC 3986](http://tools.ietf.org/html/rfc3986) спецификации общий синтаксис универсальный код ресурса (URI).</xref:System.IO.Packaging.TargetMode>  «http://www.microsoft.com/page2.xml» является примером абсолютный URI, который ссылается на внешний целевой ресурс «page2.xml».  «images/picture1.jpg» является примером относительный URI, который также ссылается на внешний целевой ресурс «1.jpg» но который разрешается относительно URI самого пакета.       `relationshipType`должно быть [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] , формируется в соответствии с [RFC 3986](http://tools.ietf.org/html/rfc3986) спецификации общий синтаксис универсальный код ресурса (URI).  В следующей таблице показаны уровня пакета `relationshipType` идентификаторы URI, определенных в спецификации Open Packaging Conventions (OPC).      | Связи на уровне пакета | Тип связи URI |   |---------------------------------|---------------------------|   | Основные свойства | http://schemas.openxmlformats.org/package/2006/relationships/meta данных или основные свойства |   | Цифровая подпись | http://schemas.openxmlformats.org/package/2006/relationships/digit al подпись или подпись |   | Сертификат подписи | http://schemas.openxmlformats.org/package/2006/relationships/digit al подписи и сертификатов |   | Цифровая подпись источника | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ источника подписи |   | Эскиза | http://schemas.openxmlformats.org/package/2006/relationships/meta данных или эскиз |       Дополнительные сведения об упаковке и отношения пакета см. раздел 1.3 спецификации Open Packaging Conventions (OPC), доступные для загрузки на [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use CreateRelationship to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Целевой части."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Указывает, является ли целевой части <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> или <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> в пакет."
    - id: relationshipType
      type: System.String
      description: "URI, который однозначно определяет роль связи."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Связь уровня пакета с указанной части."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение для <code> targetMode </code> является недопустимым."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для чтения."
  platform:
  - net462
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  id: CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Создает связь уровня пакета часть с заданным URI, вызываемым, тип связи и [!INCLUDE[TLA#tla_id](~/add/includes/tlasharptla-id-md.md)]."
  remarks: "Связь уровня пакета определяет ассоциацию между пакета и соответствующей целевой частью или ресурсом.  Связь уровня пакета может принимать одно из двух форм.      -Между <xref:System.IO.Packaging.Package>к целевой части в пакете.</xref:System.IO.Packaging.Package>      -Между <xref:System.IO.Packaging.Package>при обращении к ресурсу за пределами пакета.</xref:System.IO.Packaging.Package>       В отношении пакета пакет считается «владелец» связи.  При удалении пакета также удаляются все связи, владельцем пакета.       CreateRelationship не изменяет физически целевой части или ресурса каким-либо образом.       Целевым объектом связи не может быть другая связь.       `id`должен быть допустимым идентификатором XML.  `id` Тип xsd:ID и должны соответствовать соглашениям об именах, предписанные в XML Schema Part 2: Datatypes спецификации (см. [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/)).       Если `id` указывается как `null` автоматически создается уникальный идентификатор.  `id` Заданные пустая строка недопустима.       Если `targetMode` указывается как <xref:System.IO.Packaging.TargetMode>, `targetUri` должен быть относительным URI, сформированный в соответствии с [RFC 3986](http://tools.ietf.org/html/rfc3986) спецификации общий синтаксис универсальный код ресурса (URI).</xref:System.IO.Packaging.TargetMode>  Внутренний относительный URI может быть либо абсолютный путь, начинающийся с символа косой черты («/») символ такие как «/ page1.xaml» или «/ images/picture4.jpg», или относительный путь, например, «.. / imagespicture1.jpg», разрешающее относительно корня пакета («/») как базовый URI.       Если `targetMode` указывается как <xref:System.IO.Packaging.TargetMode>, `targetUri` может быть либо абсолютный или относительный URI, сформированный в соответствии с [RFC 3986](http://tools.ietf.org/html/rfc3986) спецификации общий синтаксис универсальный код ресурса (URI).</xref:System.IO.Packaging.TargetMode>  «http://www.microsoft.com/page2.xml» является примером абсолютный URI, который ссылается на внешний целевой ресурс «page2.xml».  «images/picture1.jpg» является примером относительный URI, который также ссылается на внешний целевой ресурс «1.jpg» но который разрешается относительно URI самого пакета.       `relationshipType`должен быть URI, сформированный в соответствии с [RFC 3986](http://tools.ietf.org/html/rfc3986) спецификации общий синтаксис универсальный код ресурса (URI).  В следующей таблице показаны уровня пакета `relationshipType` идентификаторы URI, определенных в спецификации Open Packaging Conventions (OPC).      | Связи на уровне пакета | Тип связи URI |   |---------------------------------|---------------------------|   | Основные свойства | http://schemas.openxmlformats.org/package/2006/relationships/meta данных или основные свойства |   | Цифровая подпись | http://schemas.openxmlformats.org/package/2006/relationships/digit al подпись или подпись |   | Сертификат подписи | http://schemas.openxmlformats.org/package/2006/relationships/digit al подписи и сертификатов |   | Цифровая подпись источника | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ источника подписи |   | Эскиза | http://schemas.openxmlformats.org/package/2006/relationships/meta данных или эскиз |       Дополнительные сведения об упаковке и отношения пакета см. раздел 1.3 спецификации Open Packaging Conventions (OPC), доступные для загрузки на [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example illustrates how to use <xref:System.IO.Packaging.Package.CreateRelationship%2A> to create a <xref:System.IO.Packaging.PackageRelationship> between a <xref:System.IO.Packaging.Package> and a root document part.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackagerelationship)]\n [!code-cs[packagewrite#PackageWriteCreatePackageRelationship](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackagerelationship)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationship CreateRelationship (Uri targetUri, System.IO.Packaging.TargetMode targetMode, string relationshipType, string id);
    parameters:
    - id: targetUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Целевой части."
    - id: targetMode
      type: System.IO.Packaging.TargetMode
      description: "Указывает, является ли целевой части <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> или <xref href=&quot;System.IO.Packaging.TargetMode&quot;> </xref> в пакет."
    - id: relationshipType
      type: System.String
      description: "URI, который однозначно определяет роль связи."
    - id: id
      type: System.String
      description: "Уникальный идентификатор XML."
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Связь уровня пакета с указанной части."
  overload: System.IO.Packaging.Package.CreateRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetUri</code>or <code>relationshipType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>targetUri</code> part is a <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;></xref>, or <code>targetMode</code> is <xref href=&quot;System.IO.Packaging.TargetMode&quot;></xref> and <code>targetUri</code> is an absolute URI."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение для <code> targetMode </code> является недопустимым."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для чтения."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>не является допустимым идентификатором XML; или часть с указанным <code>id</code> уже имеется в пакете."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  id: DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Удаляет элемент с заданным URI из пакета."
  remarks: "`partUri`должен быть относительным URI, который состоит из абсолютного пути, начинается с косой черты («/») символов.  Абсолютный путь относительно корневой папки пакета и имеет формат согласно [RFC 3986](http://tools.ietf.org/html/rfc3986) спецификации общий синтаксис универсальный код ресурса (URI).  «/ page1.xaml» и «/ images/picture4.jpg» приведены примеры допустимых частей идентификаторы URI.       Исключение не вызывается, если элемент с указанным `partUri` не находится в пакете.  (Можно использовать <xref:System.IO.Packaging.Package.PartExists%2A>метод, чтобы определить, является ли элемент с указанным `partUri` в пакете.)</xref:System.IO.Packaging.Package.PartExists%2A>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeletePart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)] Части для удаления."
  overload: System.IO.Packaging.Package.DeletePart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA2#tla_uri](~/add/includes/tla2sharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для чтения."
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  id: DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "При переопределении в производном классе удаляет часть с заданным URI."
  remarks: "По умолчанию <xref:System.IO.Packaging.ZipPackage>производный класс реализацию абстрактного <xref:System.IO.Packaging.Package>класс предоставляется и используется.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  В ходе операции по умолчанию <xref:System.IO.Packaging.Package.DeletePart%2A>автоматически вызывает DeletePartCore из <xref:System.IO.Packaging.ZipPackage>класса для выполнения операции фактического удаления зависимости от физического формата реализован в производном классе.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.DeletePart%2A>       Дополнительные сведения о модели пакета и частей пакета см. раздел 1 спецификации Open Packaging Conventions (OPC) можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract void DeletePartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.IO.Packaging.PackagePart.Uri*>Из <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> для удаления.</xref:System.IO.Packaging.PackagePart.Uri*>"
  overload: System.IO.Packaging.Package.DeletePartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  id: DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Удаляет связь уровня пакета."
  remarks: "Связь уровня пакета определяет ассоциацию между пакета и соответствующей целевой частью или ресурсом.  Связь уровня пакета может принимать одно из двух форм.      -Между <xref:System.IO.Packaging.Package>к целевой части в пакете.</xref:System.IO.Packaging.Package>      -Между <xref:System.IO.Packaging.Package>при обращении к ресурсу за пределами пакета.</xref:System.IO.Packaging.Package>       В отношении пакета пакет считается «владелец» связи.  При удалении пакета также удаляются все связи, владельцем пакета.       Исключение не вызывается, если связь с указанным `id` не находится в пакете.       DeleteRelationship физически не изменяет целевой части каким-либо образом.       Дополнительные сведения о связях пакета см. раздел 1.3 спецификации Open Packaging Conventions (OPC), доступные для загрузки на [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public void DeleteRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>Из <xref href=&quot;System.IO.Packaging.PackageRelationship&quot;> </xref> для удаления.</xref:System.IO.Packaging.PackageRelationship.Id*>"
  overload: System.IO.Packaging.Package.DeleteRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для чтения."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>не является допустимым идентификатором XML."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Очищает и сохраняет содержимое всех частей и связей, закрывает пакет и освобождает все ресурсы."
  remarks: "Чтобы убедиться, что все изменения сохраняются правильно, Dispose также завершает, очищает и закрытие всех частей и связей, которые содержатся в пакете.       Для <xref:System.IO.Packaging.Package>класса Dispose и <xref:System.IO.Packaging.Package.Close%2A>выполнения одной операции — нет необходимости вызывать метод Dispose при вызове метода <xref:System.IO.Packaging.Package.Close%2A>, или наоборот.</xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package.Close%2A> </xref:System.IO.Packaging.Package>       <xref:System.IO.Packaging.Package.Close%2A>и Dispose внутреннего вызова <xref:System.IO.Packaging.Package.Flush%2A>.</xref:System.IO.Packaging.Package.Flush%2A></xref:System.IO.Packaging.Package.Close%2A>       Производные классы, выделить ресурсы и управлять ими без памяти следует переопределить этот метод для освобождения ресурсов, когда вызывается метод Dispose. Производный класс переопределяет должен также вызывать <xref:System.IO.Packaging.Package.Flush%2A>и метод Dispose базового класса, чтобы убедиться в том, что очистка базового класса всегда выполняется.</xref:System.IO.Packaging.Package.Flush%2A>      Настроек [!NOTE] настроек `using` инструкции (отличается от `using` директивы пространства имен) — рекомендуемый способ <xref:System.IO.Packaging.Package.Close%2A>и удаления пакета.</xref:System.IO.Packaging.Package.Close%2A> [Пример записи пакета](http://go.microsoft.com/fwlink/?LinkID=160055) показано, как закрыть и удалить пакет с помощью `using` инструкции."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.IO.Packaging.Package.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.FileOpenAccess
  id: FileOpenAccess
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Получает доступ к файлам, параметр пакета."
  remarks: "Свойство FileOpenAccess имеет значение по умолчанию отсутствует.  Режима доступа к файлу указан в <xref:System.IO.Packaging.Package.%23ctor%2A>вызовите конструктор при создании нового пакета или в <xref:System.IO.Packaging.Package.Open%2A>вызова при открытии существующего пакета.</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.Packaging.Package.%23ctor%2A>"
  syntax:
    content: public System.IO.FileAccess FileOpenAccess { get; }
    return:
      type: System.IO.FileAccess
      description: 'One of the <xref href=&quot;System.IO.FileAccess&quot;></xref> values: <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, or <xref href=&quot;System.IO.FileAccess&quot;></xref>.'
  overload: System.IO.Packaging.Package.FileOpenAccess*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Flush
  id: Flush
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Сохраняет содержимое всех частей и связей, которые содержатся в пакете."
  remarks: "Очистить автоматически вызывает производного класса <xref:System.IO.Packaging.Package.FlushCore%2A>реализация для выполнения фактического конкретного формата операцию очистки.</xref:System.IO.Packaging.Package.FlushCore%2A>  Производный класс <xref:System.IO.Packaging.Package.FlushCore%2A>метод отвечает за фактически сохранение содержимого частей и связей в определенной физической реализации производного класса.</xref:System.IO.Packaging.Package.FlushCore%2A>       По умолчанию <xref:System.IO.Packaging.ZipPackage>производный реализацию абстрактного <xref:System.IO.Packaging.Package>предоставляется и используется как базовый класс.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage> В ходе операции по умолчанию Flush внутренним образом вызывает <xref:System.IO.Packaging.Package.FlushCore%2A>для сохранения частей и отношений в пакете файла ZIP.</xref:System.IO.Packaging.Package.FlushCore%2A>       Сброс вызывается автоматически <xref:System.IO.Packaging.Package.Close%2A>и <xref:System.IO.Packaging.Package.Dispose%2A>методы.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>  Когда <xref:System.IO.Packaging.Package.Close%2A>или <xref:System.IO.Packaging.Package.Dispose%2A>вызове нет необходимости вызывать очистить отдельно.</xref:System.IO.Packaging.Package.Dispose%2A> </xref:System.IO.Packaging.Package.Close%2A>"
  syntax:
    content: public void Flush ();
    parameters: []
  overload: System.IO.Packaging.Package.Flush*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для чтения и не может быть изменено."
  platform:
  - net462
- uid: System.IO.Packaging.Package.FlushCore
  id: FlushCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "При переопределении в производном классе сохраняет содержимое всех частей и связей в хранилище производного класса."
  remarks: "FlushCore вызывается <xref:System.IO.Packaging.Package.Flush%2A>метод для выполнения текущей операции записи на диск, на основе формата физической реализации в производном классе.</xref:System.IO.Packaging.Package.Flush%2A>"
  syntax:
    content: protected abstract void FlushCore ();
    parameters: []
  overload: System.IO.Packaging.Package.FlushCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  id: GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Возвращает часть с заданным URI."
  remarks: "<xref:System.InvalidOperationException>Создается, если элемент с указанным `partUri` не существует.</xref:System.InvalidOperationException>       <xref:System.IO.Packaging.Package.PartExists%2A>Метод может использоваться, чтобы определить, является ли `partUri` ссылается на существующий части.</xref:System.IO.Packaging.Package.PartExists%2A>       По умолчанию <xref:System.IO.Packaging.ZipPackage>производный реализацию абстрактного <xref:System.IO.Packaging.Package>предоставляется и используется как базовый класс.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  В ходе операции по умолчанию автоматически вызывает GetPart <xref:System.IO.Packaging.Package.GetPartCore%2A>из <xref:System.IO.Packaging.ZipPackage>класса, чтобы вернуть запрашиваемой части из ZIP-файла.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to locate, retrieve, and read parts that are contained in a package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackagePart GetPart (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Части для возврата."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Элемент с указанным <code> partUri </code>."
  overload: System.IO.Packaging.Package.GetPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Элемент с указанным <code> partUri </code> не находится в пакете."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для записи."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  id: GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "При переопределении в производном классе, возвращает часть, адресованную заданным URI."
  remarks: "По умолчанию <xref:System.IO.Packaging.ZipPackage>производный реализацию абстрактного <xref:System.IO.Packaging.Package>класс предоставляется и используется.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  В ходе операции по умолчанию <xref:System.IO.Packaging.Package.GetPart%2A>автоматически вызывает GetPartCore из <xref:System.IO.Packaging.ZipPackage>класса для извлечения элемента из ZIP-файла.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPart%2A>       Дополнительные сведения о модели пакета и частей пакета см. раздел 1 спецификации Open Packaging Conventions (OPC) можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart GetPartCore (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "[!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)] Части для получения."
    return:
      type: System.IO.Packaging.PackagePart
      description: "Запрошенная часть; или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, если элемент с указанным <code> partUri </code> не находится в пакете."
  overload: System.IO.Packaging.Package.GetPartCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetParts
  id: GetParts
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Возвращает коллекцию всех частей в пакете."
  remarks: "GetParts возвращает коллекцию всех частей, содержащиеся в пакете, включая <xref:System.IO.Packaging.PackageRelationship>частей.</xref:System.IO.Packaging.PackageRelationship>       Никогда не будут возвращать GetParts `null`; тем не менее, возвращаемая коллекция будет содержать нуль элементов, если в пакете нет частей.       По умолчанию <xref:System.IO.Packaging.ZipPackage>производный реализацию абстрактного <xref:System.IO.Packaging.Package>предоставляется и используется как базовый класс.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  В ходе операции по умолчанию вызывает GetParts <xref:System.IO.Packaging.Package.GetPartsCore%2A>метод <xref:System.IO.Packaging.ZipPackage>класса, чтобы вернуть частей из ZIP-файла.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartsCore%2A>       Дополнительные сведения о пакетах и частей пакета см. раздел 1.1 спецификации Open Packaging Conventions (OPC), доступные для загрузки на [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to use the GetParts method to obtain a collection of the parts that are contained in a <xref:System.IO.Packaging.Package>.  For the complete program source code, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public System.IO.Packaging.PackagePartCollection GetParts ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePartCollection
      description: "Коллекция всех <xref href=&quot;System.IO.Packaging.PackagePart&quot;> </xref> элементов, содержащихся в пакете."
  overload: System.IO.Packaging.Package.GetParts*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для записи."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetPartsCore
  id: GetPartsCore
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "При переопределении в производном классе возвращает массив всех частей в пакете."
  remarks: "Реализация GetPartsCore производном классе вызывается <xref:System.IO.Packaging.Package.GetParts%2A>метод для доступа и возвращать массив части на основании физический формат, реализован в производном классе.</xref:System.IO.Packaging.Package.GetParts%2A>       По умолчанию <xref:System.IO.Packaging.ZipPackage>производный реализацию абстрактного <xref:System.IO.Packaging.Package>класс предоставляется и используется.</xref:System.IO.Packaging.Package> </xref:System.IO.Packaging.ZipPackage>  В ходе операции по умолчанию <xref:System.IO.Packaging.Package.GetParts%2A>автоматически вызывает <xref:System.IO.Packaging.Package.GetPartCore%2A>из <xref:System.IO.Packaging.ZipPackage>класса для извлечения частей из ZIP-файла.</xref:System.IO.Packaging.ZipPackage> </xref:System.IO.Packaging.Package.GetPartCore%2A> </xref:System.IO.Packaging.Package.GetParts%2A>       Дополнительные сведения о модели пакета и частей пакета см. раздел 1 спецификации Open Packaging Conventions (OPC) можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: protected abstract System.IO.Packaging.PackagePart[] GetPartsCore ();
    parameters: []
    return:
      type: System.IO.Packaging.PackagePart[]
      description: "Массив всех частей, содержащиеся в пакете."
  overload: System.IO.Packaging.Package.GetPartsCore*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  id: GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Возвращает связь уровня пакета с заданным идентификатором."
  remarks: "`id`должен быть допустимым идентификатором XML.  `id` Тип xsd:ID и должны соответствовать соглашениям об именах, предписанные в XML Schema Part 2: Datatypes спецификации (см. [http://www.w3.org/TR/xmlschema-2/#ID](http://www.w3.org/TR/xmlschema-2/#ID)).       Дополнительные сведения об упаковке и отношения пакета см. раздел 1.3 спецификации Open Packaging Conventions (OPC), доступные для загрузки на [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationship GetRelationship (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>Связи для возврата.</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.IO.Packaging.PackageRelationship
      description: "Связь уровня пакета с указанным <code> id </code>."
  overload: System.IO.Packaging.Package.GetRelationship*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>не является допустимым идентификатором XML."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Связь с указанным <code> id </code> не находится в пакете."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для записи."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationships
  id: GetRelationships
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Возвращает коллекцию всех связей уровня пакета."
  remarks: "Никогда не будут возвращать GetRelationships `null`; Однако Возвращенная коллекция может содержать нуль элементов, если пакет не содержит ни одной связи уровня пакета.       Связь уровня пакета определяет ассоциацию между пакета и соответствующей целевой частью или ресурсом.  Связь уровня пакета может принимать одно из двух форм.      -Между <xref:System.IO.Packaging.Package>к целевой части в пакете.</xref:System.IO.Packaging.Package>      -Между <xref:System.IO.Packaging.Package>при обращении к ресурсу за пределами пакета.</xref:System.IO.Packaging.Package>       В отношении пакета пакет считается «владелец» связи.  При удалении пакета также удаляются все связи, владельцем пакета.  Процесс создания или удаления связи не изменяет физически целевой части или ресурса каким-либо образом.       Дополнительные сведения об упаковке и отношения пакета см. раздел 1.3 спецификации Open Packaging Conventions (OPC), доступные для загрузки на [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationships ();
    parameters: []
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "Коллекция всех связей уровня пакета, содержащихся в пакете."
  overload: System.IO.Packaging.Package.GetRelationships*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для записи."
  platform:
  - net462
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  id: GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Возвращает коллекцию всех связей уровня пакета, которые соответствуют данной <xref:System.IO.Packaging.PackageRelationship.RelationshipType*>.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
  remarks: "<xref:System.IO.Packaging.Package.GetRelationships%2A>никогда не будут возвращать `null`; Однако Возвращенная коллекция может содержать нуль элементов, если нет связей уровня пакета, которые совпадают с указанными `relationshipType`.</xref:System.IO.Packaging.Package.GetRelationships%2A>       В следующей таблице показаны уровня пакета `relationshipType` идентификаторы URI, определенных в спецификации Open Packaging Conventions (OPC).      | Связи на уровне пакета | Тип связи URI |   |---------------------------------|---------------------------|   | Основные свойства | http://schemas.openxmlformats.org/package/2006/relationships/meta данных или основные свойства |   | Цифровая подпись | http://schemas.openxmlformats.org/package/2006/relationships/digit al подпись или подпись |   | Сертификат подписи | http://schemas.openxmlformats.org/package/2006/relationships/digit al подписи и сертификатов |   | Цифровая подпись источника | http://schemas.openxmlformats.org/package/2006/relationships/digit al-/ источника подписи |   | Эскиза | http://schemas.openxmlformats.org/package/2006/relationships/meta данных или эскиз |       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to retrieve the relationships that have been defined for the package.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public System.IO.Packaging.PackageRelationshipCollection GetRelationshipsByType (string relationshipType);
    parameters:
    - id: relationshipType
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.RelationshipType*>Для сопоставления и возвращают коллекции.</xref:System.IO.Packaging.PackageRelationship.RelationshipType*>"
    return:
      type: System.IO.Packaging.PackageRelationshipCollection
      description: "Коллекция связей уровня пакета, соответствующих указанному <code> relationshipType </code>."
  overload: System.IO.Packaging.Package.GetRelationshipsByType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relationshipType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relationshipType</code>является пустой строкой."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для записи."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  id: Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Открывает пакет в заданном потоке ввода-ВЫВОДА."
  remarks: "<xref:System.IO.Packaging.ZipPackage>является типом пакета по умолчанию, используемый метод Open.</xref:System.IO.Packaging.ZipPackage>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Поток ввода-ВЫВОДА, в котором следует открыть пакет."
    return:
      type: System.IO.Packaging.Package
      description: "Открытый пакет."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Чтобы открыть пакет требуется чтение или чтение и запись разрешения и указанного <code> stream </code> доступно только для записи; или пакет, чтобы открыть требует записи или чтения и записи разрешения и указанного <code> stream </code> доступно только для чтения."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String)
  id: Open(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Открывает пакет на данный путь и имя файла."
  remarks: "<xref:System.IO.Packaging.ZipPackage>является типом пакета по умолчанию, используемый метод Open.</xref:System.IO.Packaging.ZipPackage>       Это <xref:System.IO.Packaging.Package.Open%2A>метод открывает пакет с атрибутами по умолчанию <xref:System.IO.FileMode>, <xref:System.IO.FileAccess>, и <xref:System.IO.FileShare>(для указания различных атрибутов используйте один из других перегрузок метода Open).</xref:System.IO.FileShare> </xref:System.IO.FileAccess> </xref:System.IO.FileMode> </xref:System.IO.Packaging.Package.Open%2A>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path);
    parameters:
    - id: path
      type: System.String
      description: "Путь и имя пакета."
    return:
      type: System.IO.Packaging.Package
      description: "Открытый пакет."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  id: Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Открывает пакет с данного потока и файл режима ввода-ВЫВОДА."
  remarks: "<xref:System.IO.Packaging.ZipPackage>является типом пакета по умолчанию, используемый метод Open.</xref:System.IO.Packaging.ZipPackage>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Поток ввода-ВЫВОДА, в котором следует открыть пакет."
    - id: packageMode
      type: System.IO.FileMode
      description: "Файловый режим, в котором следует открыть пакет."
    return:
      type: System.IO.Packaging.Package
      description: "Открытый пакет."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>packageMode</code>Недопустимое значение."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Чтобы открыть пакет требуется чтение или чтение и запись разрешения и указанного <code> stream </code> доступно только для записи; или пакет, чтобы открыть требует записи или чтения и записи разрешения и указанного <code> stream </code> доступно только для чтения."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  id: Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Открывает пакет на заданном пути с помощью режима данный файл."
  remarks: "<xref:System.IO.Packaging.ZipPackage>является типом пакета по умолчанию, используемый метод Open.</xref:System.IO.Packaging.ZipPackage>       Этот метод Open открывает пакет с атрибутами по умолчанию <xref:System.IO.FileAccess>и <xref:System.IO.FileShare>(для указания различных атрибутов используйте один из других перегрузок метода Open).</xref:System.IO.FileShare> </xref:System.IO.FileAccess>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode);
    parameters:
    - id: path
      type: System.String
      description: "Путь и имя пакета."
    - id: packageMode
      type: System.IO.FileMode
      description: "Файловый режим, в котором следует открыть пакет."
    return:
      type: System.IO.Packaging.Package
      description: "Открытый пакет."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение для <code> packageMode </code> является недопустимым."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Открывает пакет с заданного потока ввода-ВЫВОДА, файл режима и режима доступа к файлу."
  remarks: "<xref:System.IO.Packaging.ZipPackage>является типом пакета по умолчанию, используемый метод Open.</xref:System.IO.Packaging.ZipPackage>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public static System.IO.Packaging.Package Open (System.IO.Stream stream, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Поток ввода-ВЫВОДА, в котором следует открыть пакет."
    - id: packageMode
      type: System.IO.FileMode
      description: "Файловый режим, в котором следует открыть пакет."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Доступ к файлам, в котором следует открыть пакет."
    return:
      type: System.IO.Packaging.Package
      description: "Открытый пакет."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Чтобы открыть пакет требуется чтение или чтение и запись разрешения и указанного <code> stream </code> доступно только для записи; или пакет, чтобы открыть требует записи или чтения и записи разрешения и указанного <code> stream </code> доступно только для чтения."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Открывает пакет на заданном пути с указанными значениями файлового режима и режима доступа к файлу."
  remarks: "<xref:System.IO.Packaging.ZipPackage>является типом пакета по умолчанию, используемый метод Open.</xref:System.IO.Packaging.ZipPackage>       Этот метод Open откроет пакет, значение по умолчанию <xref:System.IO.FileShare>атрибут (для указания использования другой атрибут <xref:System.IO.Packaging.Package.Open%2A>перегрузку).</xref:System.IO.Packaging.Package.Open%2A> </xref:System.IO.FileShare>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to open and read a <xref:System.IO.Packaging.Package> that contains <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Reading a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160034).  \n  \n [!code-vb[PackageRead#PackageReadUsing](~/add/codesnippet/visualbasic/packageread/packageread.vb#packagereadusing)]\n [!code-cs[PackageRead#PackageReadUsing](~/add/codesnippet/csharp/PackageRead/PackageRead.cs#packagereadusing)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess);
    parameters:
    - id: path
      type: System.String
      description: "Путь и имя пакета."
    - id: packageMode
      type: System.IO.FileMode
      description: "Файловый режим, в котором следует открыть пакет."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Доступ к файлам, в котором следует открыть пакет."
    return:
      type: System.IO.Packaging.Package
      description: "Открытый пакет."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Value for <code>packageMode</code> or <code>packageAccess</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  id: Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Открывает пакет на заданном пути с указанными значениями файлового режима, доступ к файлам и настройку совместного использования файлов."
  remarks: "<xref:System.IO.Packaging.ZipPackage>является типом пакета по умолчанию, используемый метод Open.</xref:System.IO.Packaging.ZipPackage>       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  example:
  - "The following example shows how to create a new <xref:System.IO.Packaging.Package> that incorporates <xref:System.IO.Packaging.PackageRelationship> and <xref:System.IO.Packaging.PackagePart> elements together with stored data.  For the complete sample, see [Writing a Package Sample](http://go.microsoft.com/fwlink/?LinkID=160055).  \n  \n [!code-vb[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/visualbasic/packagewrite/packagewrite.vb#packagewritecreatepackage)]\n [!code-cs[PackageWrite#PackageWriteCreatePackage](~/add/codesnippet/csharp/PackageWrite/PackageWrite.cs#packagewritecreatepackage)]"
  syntax:
    content: public static System.IO.Packaging.Package Open (string path, System.IO.FileMode packageMode, System.IO.FileAccess packageAccess, System.IO.FileShare packageShare);
    parameters:
    - id: path
      type: System.String
      description: "Путь и имя пакета."
    - id: packageMode
      type: System.IO.FileMode
      description: "Файловый режим, в котором следует открыть пакет."
    - id: packageAccess
      type: System.IO.FileAccess
      description: "Доступ к файлам, в котором следует открыть пакет."
    - id: packageShare
      type: System.IO.FileShare
      description: "Режим общего доступа, в котором следует открыть пакет."
    return:
      type: System.IO.Packaging.Package
      description: "Открытый пакет."
  overload: System.IO.Packaging.Package.Open*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The value for <code>packageMode</code>, <code>packageAccess</code>, or <code>packageShare</code> is not valid."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PackageProperties
  id: PackageProperties
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Получает основные свойства пакета."
  remarks: "Дополнительные сведения о свойствах пакета основных компонентов см. раздел 3.1 в спецификации Open Packaging Conventions (OPC), доступные для загрузки на [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public System.IO.Packaging.PackageProperties PackageProperties { get; }
    return:
      type: System.IO.Packaging.PackageProperties
      description: "Основные свойства пакета."
  overload: System.IO.Packaging.Package.PackageProperties*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  id: PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Указывает, является ли элемент с заданным URI в пакете."
  remarks: "`partUri` Должен начинаться с косой черты «/» и представлять абсолютный путь от корня пакета.       Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public virtual bool PartExists (Uri partUri);
    parameters:
    - id: partUri
      type: System.Uri
      description: "<xref:System.Uri>Части для проверки for.</xref:System.Uri>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент с указанным <code> partUri </code> в пакете; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.PartExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>partUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>partUri</code>is not a valid <xref href=&quot;System.IO.Packaging.PackagePart&quot;></xref> [!INCLUDE[TLA#tla_uri](~/add/includes/tlasharptla-uri-md.md)]."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для записи (не удается прочитать данные)."
  platform:
  - net462
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  id: RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Указывает, содержится ли в пакете связь уровня пакета с заданным Идентификатором."
  remarks: "Дополнительные сведения см. в спецификации Open Packaging Conventions (OPC), можно загрузить по адресу [http://go.microsoft.com/fwlink/?LinkID=71255](http://go.microsoft.com/fwlink/?LinkID=71255)."
  syntax:
    content: public bool RelationshipExists (string id);
    parameters:
    - id: id
      type: System.String
      description: "<xref:System.IO.Packaging.PackageRelationship.Id*>Для проверки for. связи</xref:System.IO.Packaging.PackageRelationship.Id*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если связь уровня пакета с указанным <code> id </code> в пакете; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Packaging.Package.RelationshipExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>id</code>не является допустимым идентификатором XML."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Пакет не открыт (<>*настроек или <> </> *настроек вызова)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Пакет доступен только для записи."
  platform:
  - net462
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.IO.Packaging.Package
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.IO.Packaging
  summary: "Этот член поддерживает [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] инфраструктуру и не предназначен для использования в приложениях.  Использовать строго типизированный <xref:System.IO.Packaging.Package.Dispose*>метод вместо.</xref:System.IO.Packaging.Package.Dispose*>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.IO.Packaging.Package.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess)
  nameWithType: Package.Package(FileAccess)
  fullName: System.IO.Packaging.Package.Package(FileAccess)
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.IO.Packaging.Package.#ctor(System.IO.FileAccess,System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package(FileAccess,Boolean)
  nameWithType: Package.Package(FileAccess,Boolean)
  fullName: System.IO.Packaging.Package.Package(FileAccess,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Packaging.Package.Close
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close()
  nameWithType: Package.Close()
  fullName: System.IO.Packaging.Package.Close()
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String)
  nameWithType: Package.CreatePart(Uri,String)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String)
- uid: System.IO.Packaging.PackagePart
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Packaging.Package.CreatePart(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart(Uri,String,CompressionOption)
  nameWithType: Package.CreatePart(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePart(Uri,String,CompressionOption)
- uid: System.IO.Packaging.CompressionOption
  parent: System.IO.Packaging
  isExternal: false
  name: CompressionOption
  nameWithType: CompressionOption
  fullName: System.IO.Packaging.CompressionOption
- uid: System.IO.Packaging.Package.CreatePartCore(System.Uri,System.String,System.IO.Packaging.CompressionOption)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore(Uri,String,CompressionOption)
  nameWithType: Package.CreatePartCore(Uri,String,CompressionOption)
  fullName: System.IO.Packaging.Package.CreatePartCore(Uri,String,CompressionOption)
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String)
- uid: System.IO.Packaging.PackageRelationship
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationship
  nameWithType: PackageRelationship
  fullName: System.IO.Packaging.PackageRelationship
- uid: System.IO.Packaging.TargetMode
  parent: System.IO.Packaging
  isExternal: false
  name: TargetMode
  nameWithType: TargetMode
  fullName: System.IO.Packaging.TargetMode
- uid: System.IO.Packaging.Package.CreateRelationship(System.Uri,System.IO.Packaging.TargetMode,System.String,System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship(Uri,TargetMode,String,String)
  nameWithType: Package.CreateRelationship(Uri,TargetMode,String,String)
  fullName: System.IO.Packaging.Package.CreateRelationship(Uri,TargetMode,String,String)
- uid: System.IO.Packaging.Package.DeletePart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart(Uri)
  nameWithType: Package.DeletePart(Uri)
  fullName: System.IO.Packaging.Package.DeletePart(Uri)
- uid: System.IO.Packaging.Package.DeletePartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore(Uri)
  nameWithType: Package.DeletePartCore(Uri)
  fullName: System.IO.Packaging.Package.DeletePartCore(Uri)
- uid: System.IO.Packaging.Package.DeleteRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship(String)
  nameWithType: Package.DeleteRelationship(String)
  fullName: System.IO.Packaging.Package.DeleteRelationship(String)
- uid: System.IO.Packaging.Package.Dispose(System.Boolean)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Package.Dispose(Boolean)
  fullName: System.IO.Packaging.Package.Dispose(Boolean)
- uid: System.IO.Packaging.Package.FileOpenAccess
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
  fullName: System.IO.Packaging.Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush()
  nameWithType: Package.Flush()
  fullName: System.IO.Packaging.Package.Flush()
- uid: System.IO.Packaging.Package.FlushCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore()
  nameWithType: Package.FlushCore()
  fullName: System.IO.Packaging.Package.FlushCore()
- uid: System.IO.Packaging.Package.GetPart(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart(Uri)
  nameWithType: Package.GetPart(Uri)
  fullName: System.IO.Packaging.Package.GetPart(Uri)
- uid: System.IO.Packaging.Package.GetPartCore(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore(Uri)
  nameWithType: Package.GetPartCore(Uri)
  fullName: System.IO.Packaging.Package.GetPartCore(Uri)
- uid: System.IO.Packaging.Package.GetParts
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts()
  nameWithType: Package.GetParts()
  fullName: System.IO.Packaging.Package.GetParts()
- uid: System.IO.Packaging.PackagePartCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePartCollection
  nameWithType: PackagePartCollection
  fullName: System.IO.Packaging.PackagePartCollection
- uid: System.IO.Packaging.Package.GetPartsCore
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore()
  nameWithType: Package.GetPartsCore()
  fullName: System.IO.Packaging.Package.GetPartsCore()
- uid: System.IO.Packaging.PackagePart[]
  parent: System.IO.Packaging
  isExternal: false
  name: PackagePart
  nameWithType: PackagePart
  fullName: System.IO.Packaging.PackagePart[]
  spec.csharp:
  - uid: System.IO.Packaging.PackagePart
    name: PackagePart
    nameWithType: PackagePart
    fullName: PackagePart[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.Packaging.Package.GetRelationship(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship(String)
  nameWithType: Package.GetRelationship(String)
  fullName: System.IO.Packaging.Package.GetRelationship(String)
- uid: System.IO.Packaging.Package.GetRelationships
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships()
  nameWithType: Package.GetRelationships()
  fullName: System.IO.Packaging.Package.GetRelationships()
- uid: System.IO.Packaging.PackageRelationshipCollection
  parent: System.IO.Packaging
  isExternal: false
  name: PackageRelationshipCollection
  nameWithType: PackageRelationshipCollection
  fullName: System.IO.Packaging.PackageRelationshipCollection
- uid: System.IO.Packaging.Package.GetRelationshipsByType(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType(String)
  nameWithType: Package.GetRelationshipsByType(String)
  fullName: System.IO.Packaging.Package.GetRelationshipsByType(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream)
  nameWithType: Package.Open(Stream)
  fullName: System.IO.Packaging.Package.Open(Stream)
- uid: System.IO.Packaging.Package
  parent: System.IO.Packaging
  isExternal: false
  name: Package
  nameWithType: Package
  fullName: System.IO.Packaging.Package
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO.Packaging.Package.Open(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String)
  nameWithType: Package.Open(String)
  fullName: System.IO.Packaging.Package.Open(String)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode)
  nameWithType: Package.Open(Stream,FileMode)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode)
- uid: System.IO.FileMode
  parent: System.IO
  isExternal: false
  name: FileMode
  nameWithType: FileMode
  fullName: System.IO.FileMode
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode)
  nameWithType: Package.Open(String,FileMode)
  fullName: System.IO.Packaging.Package.Open(String,FileMode)
- uid: System.IO.Packaging.Package.Open(System.IO.Stream,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(Stream,FileMode,FileAccess)
  nameWithType: Package.Open(Stream,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(Stream,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess)
  nameWithType: Package.Open(String,FileMode,FileAccess)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess)
- uid: System.IO.Packaging.Package.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open(String,FileMode,FileAccess,FileShare)
  nameWithType: Package.Open(String,FileMode,FileAccess,FileShare)
  fullName: System.IO.Packaging.Package.Open(String,FileMode,FileAccess,FileShare)
- uid: System.IO.FileShare
  parent: System.IO
  isExternal: false
  name: FileShare
  nameWithType: FileShare
  fullName: System.IO.FileShare
- uid: System.IO.Packaging.Package.PackageProperties
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
  fullName: System.IO.Packaging.Package.PackageProperties
- uid: System.IO.Packaging.PackageProperties
  parent: System.IO.Packaging
  isExternal: false
  name: PackageProperties
  nameWithType: PackageProperties
  fullName: System.IO.Packaging.PackageProperties
- uid: System.IO.Packaging.Package.PartExists(System.Uri)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists(Uri)
  nameWithType: Package.PartExists(Uri)
  fullName: System.IO.Packaging.Package.PartExists(Uri)
- uid: System.IO.Packaging.Package.RelationshipExists(System.String)
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists(String)
  nameWithType: Package.RelationshipExists(String)
  fullName: System.IO.Packaging.Package.RelationshipExists(String)
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: Package.System.IDisposable.Dispose()
  fullName: System.IO.Packaging.Package.System.IDisposable.Dispose()
- uid: System.IO.Packaging.Package.#ctor*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Package
  nameWithType: Package.Package
- uid: System.IO.Packaging.Package.Close*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Close
  nameWithType: Package.Close
- uid: System.IO.Packaging.Package.CreatePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePart
  nameWithType: Package.CreatePart
- uid: System.IO.Packaging.Package.CreatePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreatePartCore
  nameWithType: Package.CreatePartCore
- uid: System.IO.Packaging.Package.CreateRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: CreateRelationship
  nameWithType: Package.CreateRelationship
- uid: System.IO.Packaging.Package.DeletePart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePart
  nameWithType: Package.DeletePart
- uid: System.IO.Packaging.Package.DeletePartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeletePartCore
  nameWithType: Package.DeletePartCore
- uid: System.IO.Packaging.Package.DeleteRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: DeleteRelationship
  nameWithType: Package.DeleteRelationship
- uid: System.IO.Packaging.Package.Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Dispose
  nameWithType: Package.Dispose
- uid: System.IO.Packaging.Package.FileOpenAccess*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FileOpenAccess
  nameWithType: Package.FileOpenAccess
- uid: System.IO.Packaging.Package.Flush*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Flush
  nameWithType: Package.Flush
- uid: System.IO.Packaging.Package.FlushCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: FlushCore
  nameWithType: Package.FlushCore
- uid: System.IO.Packaging.Package.GetPart*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPart
  nameWithType: Package.GetPart
- uid: System.IO.Packaging.Package.GetPartCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartCore
  nameWithType: Package.GetPartCore
- uid: System.IO.Packaging.Package.GetParts*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetParts
  nameWithType: Package.GetParts
- uid: System.IO.Packaging.Package.GetPartsCore*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetPartsCore
  nameWithType: Package.GetPartsCore
- uid: System.IO.Packaging.Package.GetRelationship*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationship
  nameWithType: Package.GetRelationship
- uid: System.IO.Packaging.Package.GetRelationships*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationships
  nameWithType: Package.GetRelationships
- uid: System.IO.Packaging.Package.GetRelationshipsByType*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: GetRelationshipsByType
  nameWithType: Package.GetRelationshipsByType
- uid: System.IO.Packaging.Package.Open*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: Open
  nameWithType: Package.Open
- uid: System.IO.Packaging.Package.PackageProperties*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PackageProperties
  nameWithType: Package.PackageProperties
- uid: System.IO.Packaging.Package.PartExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: PartExists
  nameWithType: Package.PartExists
- uid: System.IO.Packaging.Package.RelationshipExists*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: RelationshipExists
  nameWithType: Package.RelationshipExists
- uid: System.IO.Packaging.Package.System#IDisposable#Dispose*
  parent: System.IO.Packaging.Package
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: Package.System.IDisposable.Dispose
