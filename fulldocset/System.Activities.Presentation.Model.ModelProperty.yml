### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.ModelProperty
  id: ModelProperty
  children:
  - System.Activities.Presentation.Model.ModelProperty.#ctor
  - System.Activities.Presentation.Model.ModelProperty.AttachedOwnerType
  - System.Activities.Presentation.Model.ModelProperty.Attributes
  - System.Activities.Presentation.Model.ModelProperty.ClearValue
  - System.Activities.Presentation.Model.ModelProperty.Collection
  - System.Activities.Presentation.Model.ModelProperty.ComputedValue
  - System.Activities.Presentation.Model.ModelProperty.Converter
  - System.Activities.Presentation.Model.ModelProperty.DefaultValue
  - System.Activities.Presentation.Model.ModelProperty.Dictionary
  - System.Activities.Presentation.Model.ModelProperty.Equals(System.Object)
  - System.Activities.Presentation.Model.ModelProperty.GetHashCode
  - System.Activities.Presentation.Model.ModelProperty.IsAttached
  - System.Activities.Presentation.Model.ModelProperty.IsBrowsable
  - System.Activities.Presentation.Model.ModelProperty.IsCollection
  - System.Activities.Presentation.Model.ModelProperty.IsDictionary
  - System.Activities.Presentation.Model.ModelProperty.IsReadOnly
  - System.Activities.Presentation.Model.ModelProperty.IsSet
  - System.Activities.Presentation.Model.ModelProperty.Name
  - System.Activities.Presentation.Model.ModelProperty.op_Equality(System.Activities.Presentation.Model.ModelProperty,System.Activities.Presentation.Model.ModelProperty)
  - System.Activities.Presentation.Model.ModelProperty.op_Inequality(System.Activities.Presentation.Model.ModelProperty,System.Activities.Presentation.Model.ModelProperty)
  - System.Activities.Presentation.Model.ModelProperty.Parent
  - System.Activities.Presentation.Model.ModelProperty.PropertyType
  - System.Activities.Presentation.Model.ModelProperty.SetValue(System.Object)
  - System.Activities.Presentation.Model.ModelProperty.Value
  langs:
  - csharp
  name: ModelProperty
  nameWithType: ModelProperty
  fullName: System.Activities.Presentation.Model.ModelProperty
  type: Class
  summary: "Представляет свойство ModelProperty <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>. Свойства модели связаны с экземпляром элемента, который позволяет им иметь простые Value get/set свойства вместо использования более сложного механизма GetValue/SetValue <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  remarks: "Значение ModelProperty могут поступать из локально заданное значение или он может быть унаследован от вышестоящих уровней иерархии элементов. Используйте <xref:System.Activities.Design.Model.ModelItem.Source%2A>свойство значения, возвращенного <xref:System.Activities.Presentation.Model.ModelProperty.Value%2A>для определения исходного значения свойства.</xref:System.Activities.Presentation.Model.ModelProperty.Value%2A> </xref:System.Activities.Design.Model.ModelItem.Source%2A>"
  syntax:
    content: public abstract class ModelProperty
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.#ctor
  id: '#ctor'
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: ModelProperty()
  nameWithType: ModelProperty.ModelProperty()
  fullName: System.Activities.Presentation.Model.ModelProperty.ModelProperty()
  type: Constructor
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Создает новый <xref href=&quot;System.Activities.Presentation.Model.ModelProperty&quot;> </xref>."
  syntax:
    content: protected ModelProperty ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.AttachedOwnerType
  id: AttachedOwnerType
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: AttachedOwnerType
  nameWithType: ModelProperty.AttachedOwnerType
  fullName: System.Activities.Presentation.Model.ModelProperty.AttachedOwnerType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает тип, который определяет это свойство, если <xref:System.Activities.Presentation.Model.ModelProperty.IsAttached*>возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; в противном случае возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Activities.Presentation.Model.ModelProperty.IsAttached*>"
  syntax:
    content: public abstract Type AttachedOwnerType { get; }
    return:
      type: System.Type
      description: "Returns a <xref:System.Type> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Type>"
  overload: System.Activities.Presentation.Model.ModelProperty.AttachedOwnerType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.Attributes
  id: Attributes
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: Attributes
  nameWithType: ModelProperty.Attributes
  fullName: System.Activities.Presentation.Model.ModelProperty.Attributes
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает атрибуты, объявленные в этом свойстве."
  syntax:
    content: public abstract System.ComponentModel.AttributeCollection Attributes { get; }
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Возвращает атрибуты как <xref href=&quot;System.ComponentModel.AttributeCollection&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.ClearValue
  id: ClearValue
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: ClearValue()
  nameWithType: ModelProperty.ClearValue()
  fullName: System.Activities.Presentation.Model.ModelProperty.ClearValue()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Очищает локальное значение для свойства."
  remarks: "Если локальное значение не задано для свойства, значение может быть унаследован от вышестоящего уровня иерархии свойств. Если вы хотите задать значение `null`, вызовите <xref:System.Activities.Presentation.Model.ModelProperty.SetValue%2A>вместо.</xref:System.Activities.Presentation.Model.ModelProperty.SetValue%2A>"
  syntax:
    content: public abstract void ClearValue ();
    parameters: []
  overload: System.Activities.Presentation.Model.ModelProperty.ClearValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.Collection
  id: Collection
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: Collection
  nameWithType: ModelProperty.Collection
  fullName: System.Activities.Presentation.Model.ModelProperty.Collection
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает <xref:System.Activities.Presentation.Model.ModelProperty.Value*>приведенное <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>.</xref:System.Activities.Presentation.Model.ModelProperty.Value*>"
  remarks: "Если значение свойства не является коллекцией, это свойство будет возвращать `null`."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItemCollection Collection { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItemCollection
      description: "Возвращает значение свойства как <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.Collection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.ComputedValue
  id: ComputedValue
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: ComputedValue
  nameWithType: ModelProperty.ComputedValue
  fullName: System.Activities.Presentation.Model.ModelProperty.ComputedValue
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает текущее вычисленное значение для этого свойства. Значение этого свойства совпадает со значением вызова <xref:System.Activities.Presentation.Model.ModelProperty.SetValue*>, но может использоваться в выражениях привязки данных.</xref:System.Activities.Presentation.Model.ModelProperty.SetValue*>"
  syntax:
    content: public abstract object ComputedValue { get; set; }
    return:
      type: System.Object
      description: "Возвращает вычисленное значение как <xref:System.Object>.</xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelProperty.ComputedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.Converter
  id: Converter
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: Converter
  nameWithType: ModelProperty.Converter
  fullName: System.Activities.Presentation.Model.ModelProperty.Converter
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает преобразователь типов для использования с этим свойством."
  remarks: "Основные преобразователи помещаются в оболочку, чтобы принимать <xref:System.Activities.Presentation.Model.ModelItem>объектов.</xref:System.Activities.Presentation.Model.ModelItem> При выполнении преобразования определенного значения, возвращаемый тип преобразователя типов не переносится. Преобразователи типов, возвращающие стандартные значения также возвращаемые значения как <xref:System.Activities.Presentation.Model.ModelItem>объектов.</xref:System.Activities.Presentation.Model.ModelItem>"
  syntax:
    content: public abstract System.ComponentModel.TypeConverter Converter { get; }
    return:
      type: System.ComponentModel.TypeConverter
      description: "Возвращает <xref href=&quot;System.ComponentModel.TypeConverter&quot;> </xref> для использования с этим свойством."
  overload: System.Activities.Presentation.Model.ModelProperty.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.DefaultValue
  id: DefaultValue
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: DefaultValue
  nameWithType: ModelProperty.DefaultValue
  fullName: System.Activities.Presentation.Model.ModelProperty.DefaultValue
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает значение по умолчанию для этого свойства. Если свойство не определено значение по умолчанию, будет возвращен <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract object DefaultValue { get; }
    return:
      type: System.Object
      description: "Возвращает <xref:System.Object>или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Activities.Presentation.Model.ModelProperty.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.Dictionary
  id: Dictionary
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: Dictionary
  nameWithType: ModelProperty.Dictionary
  fullName: System.Activities.Presentation.Model.ModelProperty.Dictionary
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает <xref:System.Activities.Presentation.Model.ModelProperty.Value*>приведенное <xref href=&quot;System.Activities.Presentation.Model.ModelItemDictionary&quot;> </xref>.</xref:System.Activities.Presentation.Model.ModelProperty.Value*> Если значение свойства не словарь, это свойство будет возвращать <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItemDictionary Dictionary { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItemDictionary
      description: "Returns a <xref href=&quot;System.Activities.Presentation.Model.ModelItemDictionary&quot;></xref> or <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.Dictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ModelProperty.Equals(Object)
  fullName: System.Activities.Presentation.Model.ModelProperty.Equals(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет равенство свойств. Свойства идентичны, если они имеют одинаковые имя и родитель."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Свойство для сравнения с этим свойством."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> obj </code> — <xref href=&quot;System.Activities.Presentation.Model.ModelProperty&quot;> </xref> , равно это свойство; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.GetHashCode
  id: GetHashCode
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ModelProperty.GetHashCode()
  fullName: System.Activities.Presentation.Model.ModelProperty.GetHashCode()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Служит хэш-функцией для <xref href=&quot;System.Activities.Presentation.Model.ModelProperty&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Возвращает хэш-код в виде <xref:System.Int32>.</xref:System.Int32>"
  overload: System.Activities.Presentation.Model.ModelProperty.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.IsAttached
  id: IsAttached
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: IsAttached
  nameWithType: ModelProperty.IsAttached
  fullName: System.Activities.Presentation.Model.ModelProperty.IsAttached
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет, представляет ли свойство присоединенное свойство из другого типа."
  syntax:
    content: public abstract bool IsAttached { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свойство представляет присоединенное свойство из другого типа. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.IsAttached*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.IsBrowsable
  id: IsBrowsable
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: IsBrowsable
  nameWithType: ModelProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.ModelProperty.IsBrowsable
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет, может ли свойство отображаться в окне свойств."
  syntax:
    content: public abstract bool IsBrowsable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свойство может отображаться в окне свойств. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.IsBrowsable*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.IsCollection
  id: IsCollection
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: IsCollection
  nameWithType: ModelProperty.IsCollection
  fullName: System.Activities.Presentation.Model.ModelProperty.IsCollection
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет, является ли значение, содержащееся в свойстве <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>."
  syntax:
    content: public abstract bool IsCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение, содержащееся в свойстве <xref href=&quot;System.Activities.Presentation.Model.ModelItemCollection&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.IsCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.IsDictionary
  id: IsDictionary
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: IsDictionary
  nameWithType: ModelProperty.IsDictionary
  fullName: System.Activities.Presentation.Model.ModelProperty.IsDictionary
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет, является ли значение, содержащееся в свойстве <xref href=&quot;System.Activities.Presentation.Model.ModelItemDictionary&quot;> </xref>."
  syntax:
    content: public abstract bool IsDictionary { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение, содержащееся в свойстве <xref:System.Activities.Design.Model.ModelItemDictionary>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Activities.Design.Model.ModelItemDictionary>"
  overload: System.Activities.Presentation.Model.ModelProperty.IsDictionary*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ModelProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelProperty.IsReadOnly
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет, является ли свойство только для чтения."
  syntax:
    content: public abstract bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свойство доступно только для чтения в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.IsSet
  id: IsSet
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: IsSet
  nameWithType: ModelProperty.IsSet
  fullName: System.Activities.Presentation.Model.ModelProperty.IsSet
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет, является ли значение свойства устанавливается локально."
  syntax:
    content: public abstract bool IsSet { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение свойства устанавливается локально. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.IsSet*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.Name
  id: Name
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: Name
  nameWithType: ModelProperty.Name
  fullName: System.Activities.Presentation.Model.ModelProperty.Name
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Получает имя данного свойства."
  syntax:
    content: public abstract string Name { get; }
    return:
      type: System.String
      description: "Имя данного свойства."
  overload: System.Activities.Presentation.Model.ModelProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.op_Equality(System.Activities.Presentation.Model.ModelProperty,System.Activities.Presentation.Model.ModelProperty)
  id: op_Equality(System.Activities.Presentation.Model.ModelProperty,System.Activities.Presentation.Model.ModelProperty)
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: op_Equality(ModelProperty,ModelProperty)
  nameWithType: ModelProperty.op_Equality(ModelProperty,ModelProperty)
  fullName: System.Activities.Presentation.Model.ModelProperty.op_Equality(ModelProperty,ModelProperty)
  type: Operator
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет, равны ли свойства. Свойства идентичны, если они имеют одинаковые имя и родитель."
  syntax:
    content: public static bool op_Equality (System.Activities.Presentation.Model.ModelProperty first, System.Activities.Presentation.Model.ModelProperty second);
    parameters:
    - id: first
      type: System.Activities.Presentation.Model.ModelProperty
      description: "Первое свойство."
    - id: second
      type: System.Activities.Presentation.Model.ModelProperty
      description: "Второе свойство."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если первое свойство равно второе свойство; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.op_Inequality(System.Activities.Presentation.Model.ModelProperty,System.Activities.Presentation.Model.ModelProperty)
  id: op_Inequality(System.Activities.Presentation.Model.ModelProperty,System.Activities.Presentation.Model.ModelProperty)
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: op_Inequality(ModelProperty,ModelProperty)
  nameWithType: ModelProperty.op_Inequality(ModelProperty,ModelProperty)
  fullName: System.Activities.Presentation.Model.ModelProperty.op_Inequality(ModelProperty,ModelProperty)
  type: Operator
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Определяет, равны ли свойства. Свойства идентичны, если они имеют одинаковые имя и родитель."
  syntax:
    content: public static bool op_Inequality (System.Activities.Presentation.Model.ModelProperty first, System.Activities.Presentation.Model.ModelProperty second);
    parameters:
    - id: first
      type: System.Activities.Presentation.Model.ModelProperty
      description: "Первое свойство."
    - id: second
      type: System.Activities.Presentation.Model.ModelProperty
      description: "Второе свойство."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если первое свойство равно второе свойство; в противном случае <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.Parent
  id: Parent
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: Parent
  nameWithType: ModelProperty.Parent
  fullName: System.Activities.Presentation.Model.ModelProperty.Parent
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает родителя данного свойства."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Parent { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Возвращает родителя данного свойства как <xref:System.Activities.Design.Model.ModelItem>.</xref:System.Activities.Design.Model.ModelItem>"
  overload: System.Activities.Presentation.Model.ModelProperty.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.PropertyType
  id: PropertyType
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: PropertyType
  nameWithType: ModelProperty.PropertyType
  fullName: System.Activities.Presentation.Model.ModelProperty.PropertyType
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает тип данных свойства."
  syntax:
    content: public abstract Type PropertyType { get; }
    return:
      type: System.Type
      description: "Возвращает <xref:System.Type>Свойства.</xref:System.Type>"
  overload: System.Activities.Presentation.Model.ModelProperty.PropertyType*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.SetValue(System.Object)
  id: SetValue(System.Object)
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: SetValue(Object)
  nameWithType: ModelProperty.SetValue(Object)
  fullName: System.Activities.Presentation.Model.ModelProperty.SetValue(Object)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Задает локальное значение для свойства."
  remarks: "Если `value` не <xref:System.Activities.Presentation.Model.ModelItem>, оно помещается в <xref:System.Activities.Design.Model.ModelItem>, которая возвращается вызывающему.</xref:System.Activities.Design.Model.ModelItem> </xref:System.Activities.Presentation.Model.ModelItem> Это могут быть установлены `value` для `null`в этом случае <xref:System.Activities.Presentation.Model.ModelProperty.Value%2A>будут `null`.</xref:System.Activities.Presentation.Model.ModelProperty.Value%2A> Это поведение отличается от вызова <xref:System.Activities.Presentation.Model.ModelProperty.ClearValue%2A>.</xref:System.Activities.Presentation.Model.ModelProperty.ClearValue%2A>      Настроек [!NOTE] настроек с помощью этого метода, значение не будет установлен на базового свойства до завершения контекста редактирования. Чтобы немедленно обновить базового свойства, используйте <xref:System.Activities.Presentation.ArgumentAccessor.Setter%2A>.</xref:System.Activities.Presentation.ArgumentAccessor.Setter%2A>"
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem SetValue (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Чтобы задать новое значение."
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Returns <code>value</code> as a <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;></xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.ModelProperty.Value
  id: Value
  parent: System.Activities.Presentation.Model.ModelProperty
  langs:
  - csharp
  name: Value
  nameWithType: ModelProperty.Value
  fullName: System.Activities.Presentation.Model.ModelProperty.Value
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Возвращает значение, установленное в это свойство."
  remarks: "Свойство может вернуть значение, унаследованное вверх в иерархии элементов, в котором случае это свойство будет возвращать значение которого <xref:System.Activities.Presentation.Model.ModelItem.Source%2A>не `this`.</xref:System.Activities.Presentation.Model.ModelItem.Source%2A> Если значение не никогда не задано для свойства, вернет значение `null`."
  syntax:
    content: public abstract System.Activities.Presentation.Model.ModelItem Value { get; }
    return:
      type: System.Activities.Presentation.Model.ModelItem
      description: "Возвращает значение свойства как <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref>, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.ModelProperty.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Presentation.Model.ModelProperty.#ctor
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: ModelProperty()
  nameWithType: ModelProperty.ModelProperty()
  fullName: System.Activities.Presentation.Model.ModelProperty.ModelProperty()
- uid: System.Activities.Presentation.Model.ModelProperty.AttachedOwnerType
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: AttachedOwnerType
  nameWithType: ModelProperty.AttachedOwnerType
  fullName: System.Activities.Presentation.Model.ModelProperty.AttachedOwnerType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Activities.Presentation.Model.ModelProperty.Attributes
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Attributes
  nameWithType: ModelProperty.Attributes
  fullName: System.Activities.Presentation.Model.ModelProperty.Attributes
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.Activities.Presentation.Model.ModelProperty.ClearValue
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: ClearValue()
  nameWithType: ModelProperty.ClearValue()
  fullName: System.Activities.Presentation.Model.ModelProperty.ClearValue()
- uid: System.Activities.Presentation.Model.ModelProperty.Collection
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Collection
  nameWithType: ModelProperty.Collection
  fullName: System.Activities.Presentation.Model.ModelProperty.Collection
- uid: System.Activities.Presentation.Model.ModelItemCollection
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItemCollection
  nameWithType: ModelItemCollection
  fullName: System.Activities.Presentation.Model.ModelItemCollection
- uid: System.Activities.Presentation.Model.ModelProperty.ComputedValue
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: ComputedValue
  nameWithType: ModelProperty.ComputedValue
  fullName: System.Activities.Presentation.Model.ModelProperty.ComputedValue
- uid: System.Activities.Presentation.Model.ModelProperty.Converter
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Converter
  nameWithType: ModelProperty.Converter
  fullName: System.Activities.Presentation.Model.ModelProperty.Converter
- uid: System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.Activities.Presentation.Model.ModelProperty.DefaultValue
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: DefaultValue
  nameWithType: ModelProperty.DefaultValue
  fullName: System.Activities.Presentation.Model.ModelProperty.DefaultValue
- uid: System.Activities.Presentation.Model.ModelProperty.Dictionary
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Dictionary
  nameWithType: ModelProperty.Dictionary
  fullName: System.Activities.Presentation.Model.ModelProperty.Dictionary
- uid: System.Activities.Presentation.Model.ModelItemDictionary
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItemDictionary
  nameWithType: ModelItemDictionary
  fullName: System.Activities.Presentation.Model.ModelItemDictionary
- uid: System.Activities.Presentation.Model.ModelProperty.Equals(System.Object)
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Equals(Object)
  nameWithType: ModelProperty.Equals(Object)
  fullName: System.Activities.Presentation.Model.ModelProperty.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.ModelProperty.GetHashCode
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: GetHashCode()
  nameWithType: ModelProperty.GetHashCode()
  fullName: System.Activities.Presentation.Model.ModelProperty.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Activities.Presentation.Model.ModelProperty.IsAttached
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsAttached
  nameWithType: ModelProperty.IsAttached
  fullName: System.Activities.Presentation.Model.ModelProperty.IsAttached
- uid: System.Activities.Presentation.Model.ModelProperty.IsBrowsable
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: ModelProperty.IsBrowsable
  fullName: System.Activities.Presentation.Model.ModelProperty.IsBrowsable
- uid: System.Activities.Presentation.Model.ModelProperty.IsCollection
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsCollection
  nameWithType: ModelProperty.IsCollection
  fullName: System.Activities.Presentation.Model.ModelProperty.IsCollection
- uid: System.Activities.Presentation.Model.ModelProperty.IsDictionary
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsDictionary
  nameWithType: ModelProperty.IsDictionary
  fullName: System.Activities.Presentation.Model.ModelProperty.IsDictionary
- uid: System.Activities.Presentation.Model.ModelProperty.IsReadOnly
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelProperty.IsReadOnly
  fullName: System.Activities.Presentation.Model.ModelProperty.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelProperty.IsSet
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsSet
  nameWithType: ModelProperty.IsSet
  fullName: System.Activities.Presentation.Model.ModelProperty.IsSet
- uid: System.Activities.Presentation.Model.ModelProperty.Name
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Name
  nameWithType: ModelProperty.Name
  fullName: System.Activities.Presentation.Model.ModelProperty.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Presentation.Model.ModelProperty.op_Equality(System.Activities.Presentation.Model.ModelProperty,System.Activities.Presentation.Model.ModelProperty)
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: op_Equality(ModelProperty,ModelProperty)
  nameWithType: ModelProperty.op_Equality(ModelProperty,ModelProperty)
  fullName: System.Activities.Presentation.Model.ModelProperty.op_Equality(ModelProperty,ModelProperty)
- uid: System.Activities.Presentation.Model.ModelProperty
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelProperty
  nameWithType: ModelProperty
  fullName: System.Activities.Presentation.Model.ModelProperty
- uid: System.Activities.Presentation.Model.ModelProperty.op_Inequality(System.Activities.Presentation.Model.ModelProperty,System.Activities.Presentation.Model.ModelProperty)
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: op_Inequality(ModelProperty,ModelProperty)
  nameWithType: ModelProperty.op_Inequality(ModelProperty,ModelProperty)
  fullName: System.Activities.Presentation.Model.ModelProperty.op_Inequality(ModelProperty,ModelProperty)
- uid: System.Activities.Presentation.Model.ModelProperty.Parent
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Parent
  nameWithType: ModelProperty.Parent
  fullName: System.Activities.Presentation.Model.ModelProperty.Parent
- uid: System.Activities.Presentation.Model.ModelItem
  parent: System.Activities.Presentation.Model
  isExternal: false
  name: ModelItem
  nameWithType: ModelItem
  fullName: System.Activities.Presentation.Model.ModelItem
- uid: System.Activities.Presentation.Model.ModelProperty.PropertyType
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: PropertyType
  nameWithType: ModelProperty.PropertyType
  fullName: System.Activities.Presentation.Model.ModelProperty.PropertyType
- uid: System.Activities.Presentation.Model.ModelProperty.SetValue(System.Object)
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: SetValue(Object)
  nameWithType: ModelProperty.SetValue(Object)
  fullName: System.Activities.Presentation.Model.ModelProperty.SetValue(Object)
- uid: System.Activities.Presentation.Model.ModelProperty.Value
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Value
  nameWithType: ModelProperty.Value
  fullName: System.Activities.Presentation.Model.ModelProperty.Value
- uid: System.Activities.Presentation.Model.ModelProperty.#ctor*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: ModelProperty
  nameWithType: ModelProperty.ModelProperty
- uid: System.Activities.Presentation.Model.ModelProperty.AttachedOwnerType*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: AttachedOwnerType
  nameWithType: ModelProperty.AttachedOwnerType
- uid: System.Activities.Presentation.Model.ModelProperty.Attributes*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Attributes
  nameWithType: ModelProperty.Attributes
- uid: System.Activities.Presentation.Model.ModelProperty.ClearValue*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: ClearValue
  nameWithType: ModelProperty.ClearValue
- uid: System.Activities.Presentation.Model.ModelProperty.Collection*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Collection
  nameWithType: ModelProperty.Collection
- uid: System.Activities.Presentation.Model.ModelProperty.ComputedValue*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: ComputedValue
  nameWithType: ModelProperty.ComputedValue
- uid: System.Activities.Presentation.Model.ModelProperty.Converter*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Converter
  nameWithType: ModelProperty.Converter
- uid: System.Activities.Presentation.Model.ModelProperty.DefaultValue*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: DefaultValue
  nameWithType: ModelProperty.DefaultValue
- uid: System.Activities.Presentation.Model.ModelProperty.Dictionary*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Dictionary
  nameWithType: ModelProperty.Dictionary
- uid: System.Activities.Presentation.Model.ModelProperty.Equals*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Equals
  nameWithType: ModelProperty.Equals
- uid: System.Activities.Presentation.Model.ModelProperty.GetHashCode*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: GetHashCode
  nameWithType: ModelProperty.GetHashCode
- uid: System.Activities.Presentation.Model.ModelProperty.IsAttached*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsAttached
  nameWithType: ModelProperty.IsAttached
- uid: System.Activities.Presentation.Model.ModelProperty.IsBrowsable*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsBrowsable
  nameWithType: ModelProperty.IsBrowsable
- uid: System.Activities.Presentation.Model.ModelProperty.IsCollection*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsCollection
  nameWithType: ModelProperty.IsCollection
- uid: System.Activities.Presentation.Model.ModelProperty.IsDictionary*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsDictionary
  nameWithType: ModelProperty.IsDictionary
- uid: System.Activities.Presentation.Model.ModelProperty.IsReadOnly*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsReadOnly
  nameWithType: ModelProperty.IsReadOnly
- uid: System.Activities.Presentation.Model.ModelProperty.IsSet*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: IsSet
  nameWithType: ModelProperty.IsSet
- uid: System.Activities.Presentation.Model.ModelProperty.Name*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Name
  nameWithType: ModelProperty.Name
- uid: System.Activities.Presentation.Model.ModelProperty.op_Equality*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: op_Equality
  nameWithType: ModelProperty.op_Equality
- uid: System.Activities.Presentation.Model.ModelProperty.op_Inequality*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: op_Inequality
  nameWithType: ModelProperty.op_Inequality
- uid: System.Activities.Presentation.Model.ModelProperty.Parent*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Parent
  nameWithType: ModelProperty.Parent
- uid: System.Activities.Presentation.Model.ModelProperty.PropertyType*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: PropertyType
  nameWithType: ModelProperty.PropertyType
- uid: System.Activities.Presentation.Model.ModelProperty.SetValue*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: SetValue
  nameWithType: ModelProperty.SetValue
- uid: System.Activities.Presentation.Model.ModelProperty.Value*
  parent: System.Activities.Presentation.Model.ModelProperty
  isExternal: false
  name: Value
  nameWithType: ModelProperty.Value
