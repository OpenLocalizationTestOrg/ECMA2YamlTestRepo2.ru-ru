### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.ProcessModelSection
  id: ProcessModelSection
  children:
  - System.Web.Configuration.ProcessModelSection.#ctor
  - System.Web.Configuration.ProcessModelSection.AutoConfig
  - System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  - System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  - System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  - System.Web.Configuration.ProcessModelSection.CpuMask
  - System.Web.Configuration.ProcessModelSection.ElementProperty
  - System.Web.Configuration.ProcessModelSection.Enable
  - System.Web.Configuration.ProcessModelSection.IdleTimeout
  - System.Web.Configuration.ProcessModelSection.LogLevel
  - System.Web.Configuration.ProcessModelSection.MaxAppDomains
  - System.Web.Configuration.ProcessModelSection.MaxIOThreads
  - System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  - System.Web.Configuration.ProcessModelSection.MemoryLimit
  - System.Web.Configuration.ProcessModelSection.MinIOThreads
  - System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  - System.Web.Configuration.ProcessModelSection.Password
  - System.Web.Configuration.ProcessModelSection.PingFrequency
  - System.Web.Configuration.ProcessModelSection.PingTimeout
  - System.Web.Configuration.ProcessModelSection.Properties
  - System.Web.Configuration.ProcessModelSection.RequestLimit
  - System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  - System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  - System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  - System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  - System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  - System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  - System.Web.Configuration.ProcessModelSection.Timeout
  - System.Web.Configuration.ProcessModelSection.UserName
  - System.Web.Configuration.ProcessModelSection.WebGarden
  langs:
  - csharp
  name: ProcessModelSection
  nameWithType: ProcessModelSection
  fullName: System.Web.Configuration.ProcessModelSection
  type: Class
  summary: "Настройка модели процессов ASP.NET на веб-сервер Internet Information Services (IIS) сервере. Этот класс не наследуется."
  remarks: "Класс ProcessModelSection предоставляет способ получить программный доступ и изменение `processModel` раздел файла конфигурации.       Класс ProcessModelSection управляет различными аспектами рабочего процесса ASP.NET, включая его время жизни, количество экземпляров, созданного во время, его идентификатор безопасности и пул для запросов на обслуживание потоков размер среды CLR.       Когда ASP.NET выполняется в IIS 6 в собственном режиме, ASP.NET использует модель процесса IIS 6 и игнорирует большинство настроек в этом разделе. Используйте пользовательский интерфейс (UI) администрирования IIS для настройки этих свойств. ASP.NET по-прежнему использует следующие свойства, которые можно настроить с помощью файла конфигурации: <xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>, <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>, <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>и <xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A>.</xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MinWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A> </xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A> </xref:System.Web.Configuration.ProcessModelSection.RequestQueueLimit%2A>       `processModel` Раздел не могут быть зашифрованы с помощью функции защищенной конфигурации или средства, так как он используется расширение ASP.NET ISAPI."
  example:
  - "This example demonstrates how to specify values declaratively for several attributes of the `processModel` section, which can also be accessed as members of the ProcessModelSection class.  \n  \n The following configuration file example shows how to specify values declaratively for the `processModel` section.  \n  \n```  \n<processModel   \n  enable=\"True\" timeout=\"Infinite\"   \n  idleTimeout=\"Infinite\"   \n  shutdownTimeout=\"00:00:05\" requestLimit=\"Infinite\"  \n  requestQueueLimit=\"5000\" restartQueueLimit=\"10\"   \n  memoryLimit=\"60\" webGarden=\"False\" cpuMask=\"0xffffffff\"   \n  userName=\"machine\" password=\"AutoGenerate\" logLevel=\"Errors\"  \n  clientConnectedCheck=\"00:00:05\"   \n  comAuthenticationLevel=\"Connect\" comImpersonationLevel=\"Impersonate\"  \n  responseDeadlockInterval=\"00:03:00\"   \n  responseRestartDeadlockInterval=\"00:03:00\" autoConfig=\"True\"  \n  maxWorkerThreads=\"20\" maxIoThreads=\"20\" minWorkerThreads=\"1\"  \n  minIoThreads=\"1\" serverErrorMessageFile=\"\" pingFrequency=\"Infinite\"  \n  pingTimeout=\"Infinite\" asyncOption=\"20\" maxAppDomains=\"2000\"   \n/>  \n```  \n  \n The following code example demonstrates how to use the ProcessModelSection class.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#1](~/add/codesnippet/csharp/t-system.web.configurati_87_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_87_1.vb)]"
  syntax:
    content: 'public sealed class ProcessModelSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ProcessModelSection()
  nameWithType: ProcessModelSection.ProcessModelSection()
  fullName: System.Web.Configuration.ProcessModelSection.ProcessModelSection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Configuration.ProcessModelSection&quot;> </xref> класса с использованием параметров по умолчанию."
  remarks: "Конструктор ProcessModelSection не предназначен для использования непосредственно из программного кода. Он вызывается системой конфигурации ASP.NET. Получение экземпляра <xref:System.Web.Configuration.ProcessModelSection>, используя <xref:System.Configuration.Configuration.GetSection%2A>метод.</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.ProcessModelSection>"
  syntax:
    content: public ProcessModelSection ();
    parameters: []
  overload: System.Web.Configuration.ProcessModelSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig
  id: AutoConfig
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
  fullName: System.Web.Configuration.ProcessModelSection.AutoConfig
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее, является ли автоматически настройки производительности ASP.NET для приложений ASP.NET."
  remarks: "Если AutoConfig имеет значение `false`, явные значения в файле Web.config используются для определения конфигурации производительности для приложения ASP.NET. Если AutoConfig имеет значение `true`, автоматически настраиваются параметры производительности для приложения ASP.NET.       Явно присвоено значение автонастройки `true` в файле Machine.config. Значение кода по умолчанию равно `false`.  Если это значение автонастройки удаляется из файла Machine.config, явных параметров используются вместо параметров автоматической настройки."
  syntax:
    content: public bool AutoConfig { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если для приложений ASP.NET, автоматически настраиваются параметры производительности в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.AutoConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  id: ClientConnectedCheck
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
  fullName: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее, сколько времени запрос останется в очереди."
  remarks: "Это свойство указывает продолжительность нахождения запроса в очереди до выполнения ASP.NET выполняет проверку подключения клиента.      Настроек [!NOTE] настроек Если запрос по-прежнему в очередь по истечении интервала, клиенту, подключившемуся проверьте, может выполняться до его передачи запроса рабочему процессу ASP.NET для обработки."
  example:
  - "The following code example shows how to access and modify the ClientConnectedCheck property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#18](~/add/codesnippet/csharp/p-system.web.configurati_355_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#18](~/add/codesnippet/visualbasic/p-system.web.configurati_355_1.vb)]"
  syntax:
    content: public TimeSpan ClientConnectedCheck { get; set; }
    return:
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>значение, указывающее, время постановки в очередь.</xref:System.TimeSpan> Значение по умолчанию — 5 секунд."
  overload: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  id: ComAuthenticationLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее уровень проверки подлинности для безопасности DCOM."
  remarks: "Если значение этого свойства равно <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel>, DCOM определяет уровень проверки подлинности с помощью обычных безопасности-алгоритма.</xref:System.Web.Configuration.ProcessModelComAuthenticationLevel> Значение по умолчанию, назначенный этому свойству, как указано в файле Machine.config — <xref:System.Web.Configuration.ProcessModelComAuthenticationLevel>.</xref:System.Web.Configuration.ProcessModelComAuthenticationLevel> В этом случае DCOM выполняет проверку подлинности учетных данных клиента только в том случае, когда клиент устанавливает связь с сервером."
  example:
  - "The following code example shows how to access the ComAuthenticationLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#21](~/add/codesnippet/csharp/p-system.web.configurati_143_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#21](~/add/codesnippet/visualbasic/p-system.web.configurati_143_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelComAuthenticationLevel ComAuthenticationLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelComAuthenticationLevel
      description: "Один из <xref href=&quot;System.Web.Configuration.ProcessModelComAuthenticationLevel&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.Web.Configuration.ProcessModelComAuthenticationLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  id: ComImpersonationLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее уровень проверки подлинности для обеспечения безопасности."
  remarks: "Если значение этого свойства равно <xref:System.Web.Configuration.ProcessModelComImpersonationLevel>, DCOM определяет уровень олицетворения с помощью обычного безопасности-алгоритма.</xref:System.Web.Configuration.ProcessModelComImpersonationLevel> Значение по умолчанию, назначенный этому свойству, как указано в файле Machine.config — <xref:System.Web.Configuration.ProcessModelComImpersonationLevel>.</xref:System.Web.Configuration.ProcessModelComImpersonationLevel> В этом случае серверный процесс может олицетворять контекст безопасности клиента, действуя от имени клиента."
  example:
  - "The following code example shows how to access the ComImpersonationLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#22](~/add/codesnippet/csharp/p-system.web.configurati_249_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#22](~/add/codesnippet/visualbasic/p-system.web.configurati_249_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelComImpersonationLevel ComImpersonationLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelComImpersonationLevel
      description: "Один из <xref href=&quot;System.Web.Configuration.ProcessModelComImpersonationLevel&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.Web.Configuration.ProcessModelComImpersonationLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.CpuMask
  id: CpuMask
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
  fullName: System.Web.Configuration.ProcessModelSection.CpuMask
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее, какие процессоры многопроцессорного сервера, которые имеют право выполнять процессы ASP.NET."
  remarks: "Значение CpuMask определяет битовый шаблон, задающий процессоры, подходящие для выполнения потоков ASP.NET. Если <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>свойству `true`, CpuMask ограничивает число рабочих процессов числу доступных процессоров.</xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A> Максимальное число рабочих процессов равно числу процессоров. По умолчанию доступны все процессоры и ASP.NET запускает один процесс для каждого ЦП. Если <xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>свойству `false`, атрибут CpuMask игнорируется, и выполняется только один рабочий процесс.</xref:System.Web.Configuration.ProcessModelSection.WebGarden%2A>"
  example:
  - "The following code example shows how to access the CpuMask property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#25](~/add/codesnippet/csharp/p-system.web.configurati_174_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#25](~/add/codesnippet/visualbasic/p-system.web.configurati_174_1.vb)]"
  syntax:
    content: public int CpuMask { get; set; }
    return:
      type: System.Int32
      description: "Число, представляющее битовый шаблон для применения. Значение по умолчанию — 0xFFFFFFFF."
  overload: System.Web.Configuration.ProcessModelSection.CpuMask*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty
  id: ElementProperty
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
  fullName: System.Web.Configuration.ProcessModelSection.ElementProperty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationElementProperty ElementProperty { get; }
    return:
      type: System.Configuration.ConfigurationElementProperty
      description: "Для добавления."
  overload: System.Web.Configuration.ProcessModelSection.ElementProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Enable
  id: Enable
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Enable
  nameWithType: ProcessModelSection.Enable
  fullName: System.Web.Configuration.ProcessModelSection.Enable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее, включена ли модель процесса."
  remarks: "Свойства включения определяет, размещен ли внешние рабочего процесса ASP.NET. Если включить `true`, ASP.NET, размещенных в внешний рабочий процесс; в противном случае, оно выполняется непосредственно в Inetinfo.exe.      Настроек [!NOTE] настроек под управлением ASP.NET в Inetinfo.exe не рекомендуется, поскольку это приложение выполняется в контексте безопасности локальной системы. Когда ASP.NET выполняется в собственном режиме службы Internet Information Services (IIS) 6, этот параметр игнорируется, поэтому обычно нет необходимости устанавливать его `false`."
  example:
  - "The following code example shows how to access the Enable property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#2](~/add/codesnippet/csharp/p-system.web.configurati_95_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_95_1.vb)]"
  syntax:
    content: public bool Enable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включена модель процесса; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.Enable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout
  id: IdleTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
  fullName: System.Web.Configuration.ProcessModelSection.IdleTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее период ожидания, после которого ASP.NET автоматически завершает рабочий процесс."
  remarks: 'Рабочий процесс перезапускается (отклоненных), при достижении IdleTimeout значение свойства. По умолчанию только два условия приводят к возвращению процесса: процесс превышает допустимый предел памяти или превышает допустимое количество запросов, которые могут быть поставлены в очередь. Можно добавить другие условия к условиям по умолчанию. Например можно использовать свойство IdleTimeout для ограничения времени, рабочий процесс находится в состоянии простоя.'
  example:
  - "The following code example shows how to access the IdleTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#16](~/add/codesnippet/csharp/p-system.web.configurati_88_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#16](~/add/codesnippet/visualbasic/p-system.web.configurati_88_1.vb)]"
  syntax:
    content: public TimeSpan IdleTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>значение, указывающее, время простоя.</xref:System.TimeSpan> Значение по умолчанию равно Infinite, что соответствует <xref:System.TimeSpan>.</xref:System.TimeSpan>"
  overload: System.Web.Configuration.ProcessModelSection.IdleTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.LogLevel
  id: LogLevel
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
  fullName: System.Web.Configuration.ProcessModelSection.LogLevel
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее типы событий, регистрируемых в журнале событий."
  remarks: "С помощью этого свойства правильно, можно фильтровать системой в журнале ошибок. После того как вы о том, как сбои или узких мест в приложении, можно разработать стратегию, которая сужает диапазон ошибок, которые вас интересуют."
  example:
  - "The following code example shows how to access the LogLevel property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#23](~/add/codesnippet/csharp/p-system.web.configurati_246_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#23](~/add/codesnippet/visualbasic/p-system.web.configurati_246_1.vb)]"
  syntax:
    content: public System.Web.Configuration.ProcessModelLogLevel LogLevel { get; set; }
    return:
      type: System.Web.Configuration.ProcessModelLogLevel
      description: "Один из <xref href=&quot;System.Web.Configuration.ProcessModelLogLevel&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.Web.Configuration.ProcessModelLogLevel&quot;> </xref>."
  overload: System.Web.Configuration.ProcessModelSection.LogLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  id: MaxAppDomains
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
  fullName: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает максимальное число доменов приложений в одном процессе."
  remarks: "В случае превышения порогового значения MaxAppDomains домен приложения, используется наименее завершается, если необходимо запустить новый домен приложения."
  example:
  - "The following code example shows how to access the MaxAppDomains property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#27](~/add/codesnippet/csharp/p-system.web.configurati_284_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#27](~/add/codesnippet/visualbasic/p-system.web.configurati_284_1.vb)]"
  syntax:
    content: public int MaxAppDomains { get; set; }
    return:
      type: System.Int32
      description: "Максимально допустимое количество доменов приложений в одном процессе."
  overload: System.Web.Configuration.ProcessModelSection.MaxAppDomains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  id: MaxIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее максимальное число потоков ввода-вывода для Процессора в пуле потоков среды CLR."
  remarks: "Значение MaxIOThreads должно быть больше или равно <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>в `httpRuntime` раздел конфигурации.</xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>       Может иметь некоторые контролировать использование ЦП, задав число рабочих потоков и потоков ввода-вывода с помощью <xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>Свойства и свойства MaxIOThreads соответственно.</xref:System.Web.Configuration.ProcessModelSection.MaxWorkerThreads%2A>       Различие между этими двумя типами потоков — что последний привязаны к объектам ввода-вывода, например поток или канал, и первый из них является традиционным неограниченным потоком. Для Internet Information Services (IIS) 6.0 и более поздних версий, ASP.NET обрабатывает запросы на рабочих потоках. Это происходит потому интеграции ASP.NET в IIS.       Эти потоки получаются из пула потоков CLR всего процесса, принадлежащих приложению.      Настроек [!NOTE] настроек обычно значения по умолчанию для допустимых потоков, достаточно для поддержания высокого уровня использования Процессора. Если по некоторым причинам приложение выполняется медленно, возможно для внешних ресурсов, может попытаться увеличить число потоков, значение меньше 100."
  example:
  - "The following code example shows how to access the MaxIOThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#5](~/add/codesnippet/csharp/p-system.web.configurati_295_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#5](~/add/codesnippet/visualbasic/p-system.web.configurati_295_1.vb)]"
  syntax:
    content: public int MaxIOThreads { get; set; }
    return:
      type: System.Int32
      description: "Максимальное число потоков. Значение по умолчанию — 20."
  overload: System.Web.Configuration.ProcessModelSection.MaxIOThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  id: MaxWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее максимальное количество рабочих потоков для Процессора в пуле потоков среды CLR."
  remarks: "Значение MaxWorkerThreads должно быть больше или равно <xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>в `httpRuntime` раздел конфигурации.</xref:System.Web.Configuration.HttpRuntimeSection.MinFreeThreads%2A>       Может иметь некоторый контроль над использованием ЦП, задав число рабочих потоков и потоков ввода-вывода, используя свойство MaxWorkerThreads и <xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>Свойства, соответственно.</xref:System.Web.Configuration.ProcessModelSection.MaxIOThreads%2A>       Различие между этими двумя типами потоков — что последний привязаны к объектам ввода-вывода, например поток или канал, и первый из них является традиционным неограниченным потоком. Для Internet Information Services (IIS) версии 6.0 и более поздней версии, ASP.NET обрабатывает запросы на рабочих потоках. Это происходит потому интеграции ASP.NET в IIS.       Эти потоки получаются из пула потоков CLR всего процесса, принадлежащих приложению.      Настроек [!NOTE] настроек обычно значения по умолчанию для допустимых потоков, достаточно для поддержания высокого уровня использования Процессора. Если по некоторым причинам приложение выполняется медленно, возможно для внешних ресурсов, может попытаться увеличить число потоков, значение меньше 100."
  example:
  - "The following code example shows how to access the MaxWorkerThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#7](~/add/codesnippet/csharp/p-system.web.configurati_48_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#7](~/add/codesnippet/visualbasic/p-system.web.configurati_48_1.vb)]"
  syntax:
    content: public int MaxWorkerThreads { get; set; }
    return:
      type: System.Int32
      description: "Максимальное число потоков. Значение по умолчанию — 20."
  overload: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit
  id: MemoryLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
  fullName: System.Web.Configuration.ProcessModelSection.MemoryLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее максимально допустимый объем памяти."
  remarks: "Объем памяти выражается в процентах от общего объема памяти системы. Это объем памяти, может использовать рабочий процесс до запуска ASP.NET (возвращения) его."
  example:
  - "The following code example shows how to access the MemoryLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#3](~/add/codesnippet/csharp/p-system.web.configurati_265_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_265_1.vb)]"
  syntax:
    content: public int MemoryLimit { get; set; }
    return:
      type: System.Int32
      description: "Процент общего объема памяти системы. Значение по умолчанию — 60 процентов."
  overload: System.Web.Configuration.ProcessModelSection.MemoryLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads
  id: MinIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinIOThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает минимальное количество потоков ввода-вывода для Процессора в пуле потоков среды CLR."
  remarks: ''
  example:
  - "The following code example shows how to access the MinIOThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#4](~/add/codesnippet/csharp/p-system.web.configurati_296_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_296_1.vb)]"
  syntax:
    content: public int MinIOThreads { get; set; }
    return:
      type: System.Int32
      description: "Минимальное количество потоков ввода-вывода для Процессора в пуле потоков среды CLR."
  overload: System.Web.Configuration.ProcessModelSection.MinIOThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  id: MinWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает минимальное количество рабочих потоков на ЦП в пуле потоков среды CLR."
  remarks: ''
  example:
  - "The following code example shows how to access the MinWorkerThreads property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#6](~/add/codesnippet/csharp/p-system.web.configurati_183_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#6](~/add/codesnippet/visualbasic/p-system.web.configurati_183_1.vb)]"
  syntax:
    content: public int MinWorkerThreads { get; set; }
    return:
      type: System.Int32
      description: "Минимальное количество рабочих потоков на ЦП в пуле потоков среды CLR"
  overload: System.Web.Configuration.ProcessModelSection.MinWorkerThreads*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Password
  id: Password
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Password
  nameWithType: ProcessModelSection.Password
  fullName: System.Web.Configuration.ProcessModelSection.Password
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее пароль, используемый для удостоверения Windows."
  remarks: "Свойство пароля должно использоваться с <xref:System.Web.Configuration.ProcessModelSection.UserName%2A>свойство.</xref:System.Web.Configuration.ProcessModelSection.UserName%2A>       Если параметр присутствует, значения этих свойств вызвать рабочий процесс выполняется с указанными учетными данными Windows."
  example:
  - "The following code example shows how to access the Password property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#20](~/add/codesnippet/csharp/p-system.web.configurati_258_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#20](~/add/codesnippet/visualbasic/p-system.web.configurati_258_1.vb)]"
  syntax:
    content: public string Password { get; set; }
    return:
      type: System.String
      description: "Пароль для использования. Значение по умолчанию — AutoGenerate."
  overload: System.Web.Configuration.ProcessModelSection.Password*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency
  id: PingFrequency
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
  fullName: System.Web.Configuration.ProcessModelSection.PingFrequency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее интервал времени, в течение которого расширение ISAPI опрашивает рабочий процесс, чтобы определить, выполняется ли он."
  remarks: "Рабочий процесс перезапускается (отклоненных), если она не работает после атрибуте pingFrequency истек."
  example:
  - "The following code example shows how to access the PingFrequency property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#13](~/add/codesnippet/csharp/p-system.web.configurati_14_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#13](~/add/codesnippet/visualbasic/p-system.web.configurati_14_1.vb)]"
  syntax:
    content: public TimeSpan PingFrequency { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>Определение интервала времени.</xref:System.TimeSpan> Значение по умолчанию — 30 секунд."
  overload: System.Web.Configuration.ProcessModelSection.PingFrequency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout
  id: PingTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
  fullName: System.Web.Configuration.ProcessModelSection.PingTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее интервал времени, после которого не отвечающий рабочий процесс перезапускается."
  remarks: "Расширения ISAPI опрос рабочего процесса в <xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A>интервала.</xref:System.Web.Configuration.ProcessModelSection.PingFrequency%2A> Если рабочий процесс не отвечает в течение интервала PingTimeout, процесс будет перезапущен."
  example:
  - "The following code example shows how to access the PingTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#14](~/add/codesnippet/csharp/p-system.web.configurati_399_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#14](~/add/codesnippet/visualbasic/p-system.web.configurati_399_1.vb)]"
  syntax:
    content: public TimeSpan PingTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>Определение интервала времени.</xref:System.TimeSpan> Значение по умолчанию — 5 секунд."
  overload: System.Web.Configuration.ProcessModelSection.PingTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Properties
  id: Properties
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Properties
  nameWithType: ProcessModelSection.Properties
  fullName: System.Web.Configuration.ProcessModelSection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Для добавления."
  overload: System.Web.Configuration.ProcessModelSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit
  id: RequestLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее количество запросов, допустимых до перезапуска рабочего процесса."
  remarks: "Если Превышено число запросов ASP.NET автоматически запускает новый рабочий процесс вместо текущего."
  example:
  - "The following code example shows how to use the RequestLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#8](~/add/codesnippet/csharp/p-system.web.configurati_185_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#8](~/add/codesnippet/visualbasic/p-system.web.configurati_185_1.vb)]"
  syntax:
    content: public int RequestLimit { get; set; }
    return:
      type: System.Int32
      description: "Количество допустимых запросов. Значение по умолчанию равно Infinite."
  overload: System.Web.Configuration.ProcessModelSection.RequestLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  id: RequestQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее количество допустимых в очереди запросов."
  remarks: "Если превышено количество допустимых в очереди запросов, ASP.NET начинает возвращать «503 — Сервер занят» ошибок для новых запросов. При достижении этого предела система работает в нештатных ситуаций. Это может быть признаком сбоя или, возможно, высокая нагрузка. Перезапуск (возвращение) рабочего процесса может быть единственный способ предотвратить возникновение дальнейших проблем."
  example:
  - "The following code example shows how to use the RequestQueueLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/csharp/p-system.web.configurati_126_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_126_1.vb)]"
  syntax:
    content: public int RequestQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "Количество запросов, допустимых в очереди. Значение по умолчанию — 5000."
  overload: System.Web.Configuration.ProcessModelSection.RequestQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  id: ResponseDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее временной интервал для ответа рабочего процесса."
  remarks: "При наличии запросов в очереди, и если не получен ответ в период времени, определяемый ResponseDeadlockInterval перезапуска процесса."
  example:
  - "The following code example shows how to use the ResponseDeadlockInterval property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#17](~/add/codesnippet/csharp/p-system.web.configurati_402_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#17](~/add/codesnippet/visualbasic/p-system.web.configurati_402_1.vb)]"
  syntax:
    content: public TimeSpan ResponseDeadlockInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>Определение интервала.</xref:System.TimeSpan> Значение по умолчанию равно 3 минутам."
  overload: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  id: ResponseRestartDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Больше не используется."
  remarks: "Это свойство больше не используется ASP.NET и предоставляется только для обратной совместимости. Он не приведет к ошибке конфигурации, если он уже существует в файле конфигурации. Все операции перезапуска в случае условие взаимоблокировки теперь управляется <xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>свойство.</xref:System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval%2A>"
  example:
  - "The following code example shows how to access the ResponseRestartDeadlockInterval property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#11](~/add/codesnippet/csharp/p-system.web.configurati_58_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#11](~/add/codesnippet/visualbasic/p-system.web.configurati_58_1.vb)]"
  syntax:
    content: public TimeSpan ResponseRestartDeadlockInterval { get; set; }
    return:
      type: System.TimeSpan
      description: "Неприменимо."
  overload: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  id: RestartQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее максимальное количество запросов в очереди ISAPI при ожидании нового рабочего процесса для начала обработки запросов."
  remarks: "При превышении этого ограничения, пока рабочий процесс будет готов запрос клиента получит сообщение об ошибке 503."
  example:
  - "The following code example shows how to access the RestartQueueLimit property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#9](~/add/codesnippet/csharp/p-system.web.configurati_255_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#9](~/add/codesnippet/visualbasic/p-system.web.configurati_255_1.vb)]"
  syntax:
    content: public int RestartQueueLimit { get; set; }
    return:
      type: System.Int32
      description: "Количество запросов в очереди. Значение по умолчанию — 10."
  overload: System.Web.Configuration.ProcessModelSection.RestartQueueLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  id: ServerErrorMessageFile
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
  fullName: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее файл, содержимое которого должно использоваться при возникновении неустранимой ошибки."
  remarks: "Файл, содержимое которого используется вместо сообщения по умолчанию сервер недоступен.       Расположение файла может быть относительный или абсолютный путь на диске."
  example:
  - "The following code example shows how to use the ServerErrorMessageFile property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#28](~/add/codesnippet/csharp/p-system.web.configurati_154_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#28](~/add/codesnippet/visualbasic/p-system.web.configurati_154_1.vb)]"
  syntax:
    content: public string ServerErrorMessageFile { get; set; }
    return:
      type: System.String
      description: "Путь к файлу, используемый при возникновении неустранимой ошибки."
  overload: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  id: ShutdownTimeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
  fullName: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее время, отведенное на рабочий процесс завершить работу."
  remarks: "Это свойство указывает количество минут, допустимое для самостоятельного выключения рабочего процесса. По истечении времени ожидания ASP.NET принудительно завершает работу рабочий процесс."
  example:
  - "The following code example shows how to use the ShutdownTimeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#15](~/add/codesnippet/csharp/p-system.web.configurati_202_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#15](~/add/codesnippet/visualbasic/p-system.web.configurati_202_1.vb)]"
  syntax:
    content: public TimeSpan ShutdownTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>Определение интервала.</xref:System.TimeSpan> Значение по умолчанию — 5 секунд."
  overload: System.Web.Configuration.ProcessModelSection.ShutdownTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.Timeout
  id: Timeout
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
  fullName: System.Web.Configuration.ProcessModelSection.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее количество минут до запуска нового рабочего процесса ASP.NET."
  remarks: "ASP.NET запускает новый рабочий процесс вместо текущего."
  example:
  - "The following code example shows how to use the Timeout property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/csharp/p-system.web.configurati_144_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#10](~/add/codesnippet/visualbasic/p-system.web.configurati_144_1.vb)]"
  syntax:
    content: public TimeSpan Timeout { get; set; }
    return:
      type: System.TimeSpan
      description: "<xref:System.TimeSpan>Определение интервала.</xref:System.TimeSpan> Значение по умолчанию равно Infinite."
  overload: System.Web.Configuration.ProcessModelSection.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.UserName
  id: UserName
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: UserName
  nameWithType: ProcessModelSection.UserName
  fullName: System.Web.Configuration.ProcessModelSection.UserName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, указывающее имя пользователя для удостоверения Windows."
  remarks: "Если он имеется, имя пользователя определяет удостоверение Windows, отличается от процесса, по умолчанию. Этот идентификатор используется для запуска рабочего процесса ASP.NET.       По умолчанию имя пользователя равно специальное значение Machine и процесс выполняется под учетной записью с именем ASPNET, которая создается автоматически при установке ASP.NET.       <xref:System.Web.Configuration.ProcessModelSection.Password%2A>Свойства должен использоваться с Свойство UserName.</xref:System.Web.Configuration.ProcessModelSection.Password%2A>       Если параметр присутствует, значения этих свойств вызвать рабочий процесс выполняется с указанными учетными данными Windows.      Настроек [!NOTE] настроек Если имя пользователя является свойство систему, с помощью пароля AutoGenerate, он определяет сущности, которая запускает процесс учетную запись администратора и разрешающую всему коду пользователя ASP.NET, выполняемых в рамках процесса обладать правами администратора. Таким образом Обратите особое внимание в данном случае для предоставления разрешений."
  example:
  - "The following code example shows how to access the UserName property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#19](~/add/codesnippet/csharp/p-system.web.configurati_166_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#19](~/add/codesnippet/visualbasic/p-system.web.configurati_166_1.vb)]"
  syntax:
    content: public string UserName { get; set; }
    return:
      type: System.String
      description: "Имя пользователя. Значение по умолчанию — машины."
  overload: System.Web.Configuration.ProcessModelSection.UserName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.ProcessModelSection.WebGarden
  id: WebGarden
  parent: System.Web.Configuration.ProcessModelSection
  langs:
  - csharp
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
  fullName: System.Web.Configuration.ProcessModelSection.WebGarden
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Возвращает или задает значение, позволяющее доступным процессорам выполнять рабочие процессы."
  remarks: "Свойство WebGarden должен использоваться с <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>свойство.</xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>       Если WebGarden является свойство `false`, <xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>атрибут учитывается и выполняется только один рабочий процесс.</xref:System.Web.Configuration.ProcessModelSection.CpuMask%2A>      Настроек [!NOTE] настроек многопроцессорный веб-сервер называется веб-сада."
  example:
  - "The following code example shows how to access the WebGarden property.  \n  \n [!code-cs[System.Web.Configuration.ProcessModelSection#24](~/add/codesnippet/csharp/p-system.web.configurati_94_1.cs)]\n [!code-vb[System.Web.Configuration.ProcessModelSection#24](~/add/codesnippet/visualbasic/p-system.web.configurati_94_1.vb)]"
  syntax:
    content: public bool WebGarden { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, если <> </> *настроек используется для сопоставления рабочих процессов в число доступных процессоров; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <>*> is ignored."
  overload: System.Web.Configuration.ProcessModelSection.WebGarden*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Web.Configuration.ProcessModelSection.#ctor
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ProcessModelSection()
  nameWithType: ProcessModelSection.ProcessModelSection()
  fullName: System.Web.Configuration.ProcessModelSection.ProcessModelSection()
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
  fullName: System.Web.Configuration.ProcessModelSection.AutoConfig
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
  fullName: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelComAuthenticationLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelComAuthenticationLevel
  nameWithType: ProcessModelComAuthenticationLevel
  fullName: System.Web.Configuration.ProcessModelComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelComImpersonationLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelComImpersonationLevel
  nameWithType: ProcessModelComImpersonationLevel
  fullName: System.Web.Configuration.ProcessModelComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelSection.CpuMask
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
  fullName: System.Web.Configuration.ProcessModelSection.CpuMask
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
  fullName: System.Web.Configuration.ProcessModelSection.ElementProperty
- uid: System.Configuration.ConfigurationElementProperty
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElementProperty
  nameWithType: ConfigurationElementProperty
  fullName: System.Configuration.ConfigurationElementProperty
- uid: System.Web.Configuration.ProcessModelSection.Enable
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Enable
  nameWithType: ProcessModelSection.Enable
  fullName: System.Web.Configuration.ProcessModelSection.Enable
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
  fullName: System.Web.Configuration.ProcessModelSection.IdleTimeout
- uid: System.Web.Configuration.ProcessModelSection.LogLevel
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
  fullName: System.Web.Configuration.ProcessModelSection.LogLevel
- uid: System.Web.Configuration.ProcessModelLogLevel
  parent: System.Web.Configuration
  isExternal: false
  name: ProcessModelLogLevel
  nameWithType: ProcessModelLogLevel
  fullName: System.Web.Configuration.ProcessModelLogLevel
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
  fullName: System.Web.Configuration.ProcessModelSection.MaxAppDomains
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
  fullName: System.Web.Configuration.ProcessModelSection.MemoryLimit
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
  fullName: System.Web.Configuration.ProcessModelSection.MinWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.Password
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Password
  nameWithType: ProcessModelSection.Password
  fullName: System.Web.Configuration.ProcessModelSection.Password
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
  fullName: System.Web.Configuration.ProcessModelSection.PingFrequency
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
  fullName: System.Web.Configuration.ProcessModelSection.PingTimeout
- uid: System.Web.Configuration.ProcessModelSection.Properties
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Properties
  nameWithType: ProcessModelSection.Properties
  fullName: System.Web.Configuration.ProcessModelSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestLimit
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RequestQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
  fullName: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
  fullName: System.Web.Configuration.ProcessModelSection.RestartQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
  fullName: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
  fullName: System.Web.Configuration.ProcessModelSection.ShutdownTimeout
- uid: System.Web.Configuration.ProcessModelSection.Timeout
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
  fullName: System.Web.Configuration.ProcessModelSection.Timeout
- uid: System.Web.Configuration.ProcessModelSection.UserName
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: UserName
  nameWithType: ProcessModelSection.UserName
  fullName: System.Web.Configuration.ProcessModelSection.UserName
- uid: System.Web.Configuration.ProcessModelSection.WebGarden
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
  fullName: System.Web.Configuration.ProcessModelSection.WebGarden
- uid: System.Web.Configuration.ProcessModelSection.#ctor*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ProcessModelSection
  nameWithType: ProcessModelSection.ProcessModelSection
- uid: System.Web.Configuration.ProcessModelSection.AutoConfig*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: AutoConfig
  nameWithType: ProcessModelSection.AutoConfig
- uid: System.Web.Configuration.ProcessModelSection.ClientConnectedCheck*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ClientConnectedCheck
  nameWithType: ProcessModelSection.ClientConnectedCheck
- uid: System.Web.Configuration.ProcessModelSection.ComAuthenticationLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComAuthenticationLevel
  nameWithType: ProcessModelSection.ComAuthenticationLevel
- uid: System.Web.Configuration.ProcessModelSection.ComImpersonationLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ComImpersonationLevel
  nameWithType: ProcessModelSection.ComImpersonationLevel
- uid: System.Web.Configuration.ProcessModelSection.CpuMask*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: CpuMask
  nameWithType: ProcessModelSection.CpuMask
- uid: System.Web.Configuration.ProcessModelSection.ElementProperty*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ElementProperty
  nameWithType: ProcessModelSection.ElementProperty
- uid: System.Web.Configuration.ProcessModelSection.Enable*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Enable
  nameWithType: ProcessModelSection.Enable
- uid: System.Web.Configuration.ProcessModelSection.IdleTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: IdleTimeout
  nameWithType: ProcessModelSection.IdleTimeout
- uid: System.Web.Configuration.ProcessModelSection.LogLevel*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: LogLevel
  nameWithType: ProcessModelSection.LogLevel
- uid: System.Web.Configuration.ProcessModelSection.MaxAppDomains*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxAppDomains
  nameWithType: ProcessModelSection.MaxAppDomains
- uid: System.Web.Configuration.ProcessModelSection.MaxIOThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxIOThreads
  nameWithType: ProcessModelSection.MaxIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MaxWorkerThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MaxWorkerThreads
  nameWithType: ProcessModelSection.MaxWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.MemoryLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MemoryLimit
  nameWithType: ProcessModelSection.MemoryLimit
- uid: System.Web.Configuration.ProcessModelSection.MinIOThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinIOThreads
  nameWithType: ProcessModelSection.MinIOThreads
- uid: System.Web.Configuration.ProcessModelSection.MinWorkerThreads*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: MinWorkerThreads
  nameWithType: ProcessModelSection.MinWorkerThreads
- uid: System.Web.Configuration.ProcessModelSection.Password*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Password
  nameWithType: ProcessModelSection.Password
- uid: System.Web.Configuration.ProcessModelSection.PingFrequency*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingFrequency
  nameWithType: ProcessModelSection.PingFrequency
- uid: System.Web.Configuration.ProcessModelSection.PingTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: PingTimeout
  nameWithType: ProcessModelSection.PingTimeout
- uid: System.Web.Configuration.ProcessModelSection.Properties*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Properties
  nameWithType: ProcessModelSection.Properties
- uid: System.Web.Configuration.ProcessModelSection.RequestLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestLimit
  nameWithType: ProcessModelSection.RequestLimit
- uid: System.Web.Configuration.ProcessModelSection.RequestQueueLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RequestQueueLimit
  nameWithType: ProcessModelSection.RequestQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ResponseDeadlockInterval*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseDeadlockInterval
  nameWithType: ProcessModelSection.ResponseDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.ResponseRestartDeadlockInterval*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ResponseRestartDeadlockInterval
  nameWithType: ProcessModelSection.ResponseRestartDeadlockInterval
- uid: System.Web.Configuration.ProcessModelSection.RestartQueueLimit*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: RestartQueueLimit
  nameWithType: ProcessModelSection.RestartQueueLimit
- uid: System.Web.Configuration.ProcessModelSection.ServerErrorMessageFile*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ServerErrorMessageFile
  nameWithType: ProcessModelSection.ServerErrorMessageFile
- uid: System.Web.Configuration.ProcessModelSection.ShutdownTimeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: ShutdownTimeout
  nameWithType: ProcessModelSection.ShutdownTimeout
- uid: System.Web.Configuration.ProcessModelSection.Timeout*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: Timeout
  nameWithType: ProcessModelSection.Timeout
- uid: System.Web.Configuration.ProcessModelSection.UserName*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: UserName
  nameWithType: ProcessModelSection.UserName
- uid: System.Web.Configuration.ProcessModelSection.WebGarden*
  parent: System.Web.Configuration.ProcessModelSection
  isExternal: false
  name: WebGarden
  nameWithType: ProcessModelSection.WebGarden
