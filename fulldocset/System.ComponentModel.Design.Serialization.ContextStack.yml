### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ContextStack
  id: ContextStack
  children:
  - System.ComponentModel.Design.Serialization.ContextStack.#ctor
  - System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  - System.ComponentModel.Design.Serialization.ContextStack.Current
  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  - System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  - System.ComponentModel.Design.Serialization.ContextStack.Pop
  - System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  langs:
  - csharp
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
  type: Class
  summary: "Содержит объект стека, который может использоваться для обеспечения доступности данных вложенным сериализаторам сериализатором."
  remarks: "Некоторым сериализаторам требуется информация о контексте объекта, чтобы правильно сохранить их состояние. Класс ContextStack позволяет сериализатору задавать данные о контексте объекта, сериализуемого в стек, где другой сериализатор может обращаться к ней. Значение <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>предоставляется свойство <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>для совместного использования преобразователями данных.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>       Стек контекстов полезно, так как при сериализации документа проекта глубокий уровень вложенности и объекты каждого уровня вложенности может потребоваться сведения о контексте, чтобы правильно сохранить состояние объекта. Объект контекста может быть помещен стек до вызова вложенного сериализатора. Каждый набор в стек объектов следует удалить сериализатором, задать для него после возвращения вызова вложенного сериализатора.       Как правило объекты в стеке содержат сведения о контексте, который подвергается сериализации текущего объекта. Родительский сериализатор добавляет сведения о контексте стек следующего объекта для сериализации, вызывает соответствующий сериализатор и, если сериализатор выполнение в объекте, удаляет контекстные данные из стека. Это зависит от реализации каждого сериализатора, чтобы определить объекты, помещаемые в стек.       Например, объект со свойством с именем `Enabled` имеет тип данных <xref:System.Boolean>.</xref:System.Boolean> Если сериализатор записывает это значение в поток данных, может потребоваться включение контекста или типа записываемого свойства. Сериализатор не имеет этих сведений, однако связи с этим он записывает <xref:System.Boolean>значение.</xref:System.Boolean> Для предоставления этих данных в сериализатор, можно передать Родительский сериализатор <xref:System.ComponentModel.PropertyDescriptor>, указывающего на `Enabled` свойство в стеке контекста.</xref:System.ComponentModel.PropertyDescriptor>"
  example:
  - "The following code example demonstrates using a ContextStack to push and then remove 10 values.  \n  \n [!code-cpp[ContextStackExample#1](~/add/codesnippet/cpp/t-system.componentmodel._11_1.cpp)]\n [!code-vb[ContextStackExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._11_1.vb)]\n [!code-cs[ContextStackExample#1](~/add/codesnippet/csharp/t-system.componentmodel._11_1.cs)]"
  syntax:
    content: public sealed class ContextStack
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: ContextStack()
  nameWithType: ContextStack.ContextStack()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following code example demonstrates creating a <xref:System.ComponentModel.Design.Serialization.ContextStack> instance.  \n  \n [!code-cpp[ContextStackExample#2](~/add/codesnippet/cpp/m-system.componentmodel._1_1.cpp)]\n [!code-vb[ContextStackExample#2](~/add/codesnippet/visualbasic/m-system.componentmodel._1_1.vb)]\n [!code-cs[ContextStackExample#2](~/add/codesnippet/csharp/m-system.componentmodel._1_1.cs)]"
  syntax:
    content: public ContextStack ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ContextStack.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  id: Append(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Append(Object)
  nameWithType: ContextStack.Append(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Добавляет объект в конец стека, но не отправляет его на вершину стека."
  remarks: "Этот метод позволяет сериализатор для взаимодействия с другими сериализаторами, добавив объекты контекстные данные, которые могут не удаляться в порядке. Нет возможности для удаления объекта, который был добавлен в конец стека без удаления всех других объектов."
  syntax:
    content: public void Append (object context);
    parameters:
    - id: context
      type: System.Object
      description: "Объект контекста для добавления в стек."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Append*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current
  id: Current
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Current
  nameWithType: ContextStack.Current
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает текущий объект в стеке."
  remarks: "Текущий объект является объектом, в верхней части стека, либо этого объекта, последний добавленный в стеке."
  syntax:
    content: public object Current { get; }
    return:
      type: System.Object
      description: "Текущий объект в стеке или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если объекты не были выполнены."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Current*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ContextStack.Item(Int32)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает объект в стеке на указанном уровне."
  syntax:
    content: public object this[int level] { get; }
    parameters:
    - id: level
      type: System.Int32
      description: "Уровень объекта, чтобы получить в стеке. Уровень 0 находится в верхней части стека, уровень 1 является следующим вниз, и т. д. Этот уровень должен быть меньше 0. Если уровень больше, чем количество уровней в стеке, он возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Объект стека на указанном уровне или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , если объект не существует на этом уровне."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>level</code>меньше 0."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  id: Item(System.Type)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Item(Type)
  nameWithType: ContextStack.Item(Type)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Возвращает первый объект стека, который наследует или реализует заданный тип."
  remarks: "Проверка осуществляется на каждом уровне стека, при поиске объекта, который реализует или наследует `type`. Если соответствие найдено, он возвращается."
  syntax:
    content: public object this[Type type] { get; }
    parameters:
    - id: type
      type: System.Type
      description: "Тип извлекаемого из стека контекстов."
    return:
      type: System.Object
      description: "Первый объект стека, который наследует или реализует заданный тип или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если тип реализует ни один из объектов в стеке."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop
  id: Pop
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Pop()
  nameWithType: ContextStack.Pop()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Удаляет текущий объект из стека, возвращая его значение."
  remarks: ''
  example:
  - "The following code example demonstrates removing a value from a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \n  \n [!code-cpp[ContextStackExample#4](~/add/codesnippet/cpp/m-system.componentmodel._2_1.cpp)]\n [!code-vb[ContextStackExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._2_1.vb)]\n [!code-cs[ContextStackExample#4](~/add/codesnippet/csharp/m-system.componentmodel._2_1.cs)]"
  syntax:
    content: public object Pop ();
    parameters: []
    return:
      type: System.Object
      description: "Объект, удаленный из стека; <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если нет объектов в стеке."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Pop*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  id: Push(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  langs:
  - csharp
  name: Push(Object)
  nameWithType: ContextStack.Push(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Помещает в стек или помещает указанный объект в стек."
  remarks: ''
  example:
  - "The following code example demonstrates pushing values to a <xref:System.ComponentModel.Design.Serialization.ContextStack>.  \n  \n [!code-cpp[ContextStackExample#3](~/add/codesnippet/cpp/m-system.componentmodel._20_1.cpp)]\n [!code-vb[ContextStackExample#3](~/add/codesnippet/visualbasic/m-system.componentmodel._20_1.vb)]\n [!code-cs[ContextStackExample#3](~/add/codesnippet/csharp/m-system.componentmodel._20_1.cs)]"
  syntax:
    content: public void Push (object context);
    parameters:
    - id: context
      type: System.Object
      description: "Объект контекста, чтобы поместить в стек."
  overload: System.ComponentModel.Design.Serialization.ContextStack.Push*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: ContextStack()
  nameWithType: ContextStack.ContextStack()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.ContextStack()
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Append(Object)
  nameWithType: ContextStack.Append(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Append(Object)
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Current
  nameWithType: ContextStack.Current
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Current
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Int32)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item(Int32)
  nameWithType: ContextStack.Item(Int32)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item(System.Type)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item(Type)
  nameWithType: ContextStack.Item(Type)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Item(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Pop()
  nameWithType: ContextStack.Pop()
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Pop()
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push(System.Object)
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Push(Object)
  nameWithType: ContextStack.Push(Object)
  fullName: System.ComponentModel.Design.Serialization.ContextStack.Push(Object)
- uid: System.ComponentModel.Design.Serialization.ContextStack.#ctor*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack.ContextStack
- uid: System.ComponentModel.Design.Serialization.ContextStack.Append*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Append
  nameWithType: ContextStack.Append
- uid: System.ComponentModel.Design.Serialization.ContextStack.Current*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Current
  nameWithType: ContextStack.Current
- uid: System.ComponentModel.Design.Serialization.ContextStack.Item*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Item
  nameWithType: ContextStack.Item
- uid: System.ComponentModel.Design.Serialization.ContextStack.Pop*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Pop
  nameWithType: ContextStack.Pop
- uid: System.ComponentModel.Design.Serialization.ContextStack.Push*
  parent: System.ComponentModel.Design.Serialization.ContextStack
  isExternal: false
  name: Push
  nameWithType: ContextStack.Push
