### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngAlgorithm
  id: CngAlgorithm
  children:
  - System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  - System.Security.Cryptography.CngAlgorithm.Algorithm
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  - System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  - System.Security.Cryptography.CngAlgorithm.ECDsaP256
  - System.Security.Cryptography.CngAlgorithm.ECDsaP384
  - System.Security.Cryptography.CngAlgorithm.ECDsaP521
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  - System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.GetHashCode
  - System.Security.Cryptography.CngAlgorithm.MD5
  - System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  - System.Security.Cryptography.CngAlgorithm.Rsa
  - System.Security.Cryptography.CngAlgorithm.Sha1
  - System.Security.Cryptography.CngAlgorithm.Sha256
  - System.Security.Cryptography.CngAlgorithm.Sha384
  - System.Security.Cryptography.CngAlgorithm.Sha512
  - System.Security.Cryptography.CngAlgorithm.ToString
  langs:
  - csharp
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
  type: Class
  summary: "Инкапсулирует имя алгоритма шифрования."
  remarks: "Класс CngAlgorithm является служебным классом. Он состоит из статических свойств, методов сравнения и private, внутренние поддерживаемые строку имени алгоритма.       Статические свойства возвращают объекты CngAlgorithm. Внутренняя строка каждого объекта инициализируется имя алгоритма, которое соответствует имени статического свойства.       Этот класс также можно использовать для создания объектов для типов алгоритмов, не представленных статическими свойствами.       Некоторые классы криптографии следующего поколения (CNG) (такие как <xref:System.Security.Cryptography.CngKey>) принимает объекты CngAlgorithm через `algorithm` параметр.</xref:System.Security.Cryptography.CngKey> После класса CngAlgorithm объекта, он получает внедренное имя алгоритма путем вызова объекта <xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A>свойство.</xref:System.Security.Cryptography.CngAlgorithm.Algorithm%2A>       Таким образом CngAlgorithm служит перечисление известных алгоритмов. Он позволяет задать хорошо известного алгоритма путем использования строго типизированного значения вместо строки."
  syntax:
    content: 'public sealed class CngAlgorithm : IEquatable<System.Security.Cryptography.CngAlgorithm>'
  inheritance:
  - System.Object
  implements:
  - System.IEquatable<System.Security.Cryptography.CngAlgorithm>
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: CngAlgorithm(String)
  nameWithType: CngAlgorithm.CngAlgorithm(String)
  fullName: System.Security.Cryptography.CngAlgorithm.CngAlgorithm(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> класса."
  remarks: "Экземпляры <xref:System.Security.Cryptography.CngAlgorithm>класс Ведение внутреннее имя алгоритма, который задается параметром `algorithm` параметр.</xref:System.Security.Cryptography.CngAlgorithm>       Основная цель этого конструктора является предоставляют метод для создания <xref:System.Security.Cryptography.CngAlgorithm>объектов для типов алгоритмов, которые не представлены статические свойства <xref:System.Security.Cryptography.CngAlgorithm>класса.</xref:System.Security.Cryptography.CngAlgorithm> </xref:System.Security.Cryptography.CngAlgorithm> Такая емкость класса обеспечивает будущее [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] выпусков и пакетов обновления, а также сторонними разработчиками, чтобы добавить новые алгоритмы, к которым можно получить так же, как алгоритмы, которые в настоящее время доступны."
  syntax:
    content: public CngAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: "Имя алгоритма для инициализации."
  overload: System.Security.Cryptography.CngAlgorithm.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>algorithm</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> algorithm </code> Длина параметра равно 0 (нулю)."
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  id: Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: System.Security.Cryptography.CngAlgorithm.Algorithm
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает алгоритм имя, для которого текущий <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> указывает на объект."
  syntax:
    content: public string Algorithm { get; }
    return:
      type: System.String
      description: "Внедренное имя алгоритма."
  overload: System.Security.Cryptography.CngAlgorithm.Algorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  id: ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект, задающий алгоритм обмена ключами алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH), в котором используется кривая p-256."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм ECDH, в котором используется кривая p-256."
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  id: ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект, задающий алгоритм обмена ключами алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH), в котором используется кривая p-384."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм ECDH, в котором используется кривая p-384."
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  id: ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект, задающий алгоритм обмена ключами алгоритма Диффи-Хеллмана на эллиптических кривых (ECDH), в котором используется кривая p-521."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDiffieHellmanP521 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм ECDH, в котором используется кривая p-521."
  overload: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  id: ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> , указывающий на основе эллиптических кривых цифровой подписи алгоритма (ECDSA), в котором используется кривая p-256."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм ECDSA, в котором используется кривая p-256."
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  id: ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> , указывающий на основе эллиптических кривых цифровой подписи алгоритма (ECDSA), в котором используется кривая p-384."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм ECDSA, в котором используется кривая p-384."
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  id: ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает новый <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> , указывающий на основе эллиптических кривых цифровой подписи алгоритма (ECDSA), в котором используется кривая p-521."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm ECDsaP521 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм ECDSA, в котором используется кривая p-521."
  overload: System.Security.Cryptography.CngAlgorithm.ECDsaP521*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CngAlgorithm.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Сравнивает заданный объект текущему <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объекта."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект, сравниваемый с текущим <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объекта."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> obj </code> параметр <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> , задающим тот же алгоритм, что и текущий объект; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithm.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  id: Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Equals(CngAlgorithm)
  nameWithType: CngAlgorithm.Equals(CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(CngAlgorithm)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Сравнивает заданный <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект с текущим <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объекта."
  syntax:
    content: public bool Equals (System.Security.Cryptography.CngAlgorithm other);
    parameters:
    - id: other
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, сравниваемый с текущим <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объекта."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> other </code> параметр указывает тот же алгоритм, что и текущий объект; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithm.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  id: GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CngAlgorithm.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithm.GetHashCode()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Создает хэш-значение для имени алгоритма, которое внедрено в текущем <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объекта."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-значение внедренного имени алгоритма."
  overload: System.Security.Cryptography.CngAlgorithm.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  id: MD5
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: System.Security.Cryptography.CngAlgorithm.MD5
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает новый <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект, задающий хэш-алгоритм хэша 5 (MD5)."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm MD5 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм MD5."
  overload: System.Security.Cryptography.CngAlgorithm.MD5*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: op_Equality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Определяет неравенство двух <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объектов укажите то же имя алгоритма."
  syntax:
    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий имя алгоритма."
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: "Второй объект, сравниваемый объект, который определяется параметром `left` параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два объекта задают то же имя алгоритма; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithm.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  id: op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: op_Inequality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  type: Operator
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Определяет неравенство двух <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объекта задают разные алгоритмы."
  syntax:
    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithm left, System.Security.Cryptography.CngAlgorithm right);
    parameters:
    - id: left
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий имя алгоритма."
    - id: right
      type: System.Security.Cryptography.CngAlgorithm
      description: "Второй объект, сравниваемый объект, который определяется параметром `left` параметр."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если два объекта задают то же имя алгоритма; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Cryptography.CngAlgorithm.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  id: Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: System.Security.Cryptography.CngAlgorithm.Rsa
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает новый <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект, задающий хэш-алгоритм RSA."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Rsa { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм RSA."
  overload: System.Security.Cryptography.CngAlgorithm.Rsa*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  id: Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: System.Security.Cryptography.CngAlgorithm.Sha1
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает новый <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект, задающий алгоритм Secure Hash Algorithm 1 (SHA-1)."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha1 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм SHA-1."
  overload: System.Security.Cryptography.CngAlgorithm.Sha1*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  id: Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: System.Security.Cryptography.CngAlgorithm.Sha256
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает новый <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект, задающий алгоритм Secure Hash алгоритм 256 (SHA-256)."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha256 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм SHA-256."
  overload: System.Security.Cryptography.CngAlgorithm.Sha256*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  id: Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: System.Security.Cryptography.CngAlgorithm.Sha384
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает новый <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> объект, задающий алгоритм Secure Hash алгоритм 384 (SHA-384)."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha384 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм SHA-384."
  overload: System.Security.Cryptography.CngAlgorithm.Sha384*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  id: Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: System.Security.Cryptography.CngAlgorithm.Sha512
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает новый <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> , указывающий на алгоритм Secure Hash алгоритм 512 (SHA-512)."
  syntax:
    content: public static System.Security.Cryptography.CngAlgorithm Sha512 { get; }
    return:
      type: System.Security.Cryptography.CngAlgorithm
      description: "Объект, задающий алгоритм SHA-512."
  overload: System.Security.Cryptography.CngAlgorithm.Sha512*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  id: ToString
  parent: System.Security.Cryptography.CngAlgorithm
  langs:
  - csharp
  name: ToString()
  nameWithType: CngAlgorithm.ToString()
  fullName: System.Security.Cryptography.CngAlgorithm.ToString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает имя алгоритма, который текущего <xref href=&quot;System.Security.Cryptography.CngAlgorithm&quot;> </xref> указывает на объект."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Внедренное имя алгоритма."
  overload: System.Security.Cryptography.CngAlgorithm.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CngAlgorithm.#ctor(System.String)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: CngAlgorithm(String)
  nameWithType: CngAlgorithm.CngAlgorithm(String)
  fullName: System.Security.Cryptography.CngAlgorithm.CngAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
  fullName: System.Security.Cryptography.CngAlgorithm.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256
- uid: System.Security.Cryptography.CngAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm
  fullName: System.Security.Cryptography.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
  fullName: System.Security.Cryptography.CngAlgorithm.ECDsaP521
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Object)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals(Object)
  nameWithType: CngAlgorithm.Equals(Object)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.CngAlgorithm.Equals(System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals(CngAlgorithm)
  nameWithType: CngAlgorithm.Equals(CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.Equals(CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: GetHashCode()
  nameWithType: CngAlgorithm.GetHashCode()
  fullName: System.Security.Cryptography.CngAlgorithm.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CngAlgorithm.MD5
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: MD5
  nameWithType: CngAlgorithm.MD5
  fullName: System.Security.Cryptography.CngAlgorithm.MD5
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Equality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Equality(CngAlgorithm,CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality(System.Security.Cryptography.CngAlgorithm,System.Security.Cryptography.CngAlgorithm)
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Inequality(CngAlgorithm,CngAlgorithm)
  nameWithType: CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
  fullName: System.Security.Cryptography.CngAlgorithm.op_Inequality(CngAlgorithm,CngAlgorithm)
- uid: System.Security.Cryptography.CngAlgorithm.Rsa
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
  fullName: System.Security.Cryptography.CngAlgorithm.Rsa
- uid: System.Security.Cryptography.CngAlgorithm.Sha1
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
  fullName: System.Security.Cryptography.CngAlgorithm.Sha1
- uid: System.Security.Cryptography.CngAlgorithm.Sha256
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
  fullName: System.Security.Cryptography.CngAlgorithm.Sha256
- uid: System.Security.Cryptography.CngAlgorithm.Sha384
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
  fullName: System.Security.Cryptography.CngAlgorithm.Sha384
- uid: System.Security.Cryptography.CngAlgorithm.Sha512
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
  fullName: System.Security.Cryptography.CngAlgorithm.Sha512
- uid: System.Security.Cryptography.CngAlgorithm.ToString
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ToString()
  nameWithType: CngAlgorithm.ToString()
  fullName: System.Security.Cryptography.CngAlgorithm.ToString()
- uid: System.Security.Cryptography.CngAlgorithm.#ctor*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: CngAlgorithm
  nameWithType: CngAlgorithm.CngAlgorithm
- uid: System.Security.Cryptography.CngAlgorithm.Algorithm*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Algorithm
  nameWithType: CngAlgorithm.Algorithm
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP256
  nameWithType: CngAlgorithm.ECDiffieHellmanP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP384
  nameWithType: CngAlgorithm.ECDiffieHellmanP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDiffieHellmanP521*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDiffieHellmanP521
  nameWithType: CngAlgorithm.ECDiffieHellmanP521
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP256
  nameWithType: CngAlgorithm.ECDsaP256
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP384
  nameWithType: CngAlgorithm.ECDsaP384
- uid: System.Security.Cryptography.CngAlgorithm.ECDsaP521*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ECDsaP521
  nameWithType: CngAlgorithm.ECDsaP521
- uid: System.Security.Cryptography.CngAlgorithm.Equals*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Equals
  nameWithType: CngAlgorithm.Equals
- uid: System.Security.Cryptography.CngAlgorithm.GetHashCode*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: GetHashCode
  nameWithType: CngAlgorithm.GetHashCode
- uid: System.Security.Cryptography.CngAlgorithm.MD5*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: MD5
  nameWithType: CngAlgorithm.MD5
- uid: System.Security.Cryptography.CngAlgorithm.op_Equality*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Equality
  nameWithType: CngAlgorithm.op_Equality
- uid: System.Security.Cryptography.CngAlgorithm.op_Inequality*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: op_Inequality
  nameWithType: CngAlgorithm.op_Inequality
- uid: System.Security.Cryptography.CngAlgorithm.Rsa*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Rsa
  nameWithType: CngAlgorithm.Rsa
- uid: System.Security.Cryptography.CngAlgorithm.Sha1*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha1
  nameWithType: CngAlgorithm.Sha1
- uid: System.Security.Cryptography.CngAlgorithm.Sha256*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha256
  nameWithType: CngAlgorithm.Sha256
- uid: System.Security.Cryptography.CngAlgorithm.Sha384*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha384
  nameWithType: CngAlgorithm.Sha384
- uid: System.Security.Cryptography.CngAlgorithm.Sha512*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: Sha512
  nameWithType: CngAlgorithm.Sha512
- uid: System.Security.Cryptography.CngAlgorithm.ToString*
  parent: System.Security.Cryptography.CngAlgorithm
  isExternal: false
  name: ToString
  nameWithType: CngAlgorithm.ToString
