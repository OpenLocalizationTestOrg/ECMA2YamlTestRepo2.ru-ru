### YamlMime:ManagedReference
items:
- uid: System.Configuration.Provider.ProviderCollection
  id: ProviderCollection
  children:
  - System.Configuration.Provider.ProviderCollection.#ctor
  - System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  - System.Configuration.Provider.ProviderCollection.Clear
  - System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  - System.Configuration.Provider.ProviderCollection.Count
  - System.Configuration.Provider.ProviderCollection.GetEnumerator
  - System.Configuration.Provider.ProviderCollection.IsSynchronized
  - System.Configuration.Provider.ProviderCollection.Item(System.String)
  - System.Configuration.Provider.ProviderCollection.Remove(System.String)
  - System.Configuration.Provider.ProviderCollection.SetReadOnly
  - System.Configuration.Provider.ProviderCollection.SyncRoot
  - System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: ProviderCollection
  nameWithType: ProviderCollection
  fullName: System.Configuration.Provider.ProviderCollection
  type: Class
  summary: "Представляет коллекцию объектов поставщиков, которые наследуют от <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;> </xref>."
  remarks: "Класс ProviderCollection использует базовая <xref:System.Collections.Hashtable>объект для хранения пар имя значение поставщика.</xref:System.Collections.Hashtable>"
  syntax:
    content: 'public class ProviderCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: ProviderCollection()
  nameWithType: ProviderCollection.ProviderCollection()
  fullName: System.Configuration.Provider.ProviderCollection.ProviderCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Configuration.Provider.ProviderCollection&quot;> </xref> класса."
  remarks: "Инициализирует конструктор ProviderCollection основной <xref:System.Collections.Hashtable>объект, используемый для хранения элементов коллекции.</xref:System.Collections.Hashtable>"
  syntax:
    content: public ProviderCollection ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  id: Add(System.Configuration.Provider.ProviderBase)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Add(ProviderBase)
  nameWithType: ProviderCollection.Add(ProviderBase)
  fullName: System.Configuration.Provider.ProviderCollection.Add(ProviderBase)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Добавляет поставщика в коллекцию."
  remarks: "Метод сначала проверяет все исключения (как указано в разделе «исключения»), а затем вызывает <xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName>метод.</xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName> Оно передает объект, упоминаемый в `provider` параметр а также <xref:System.Configuration.Provider.ProviderBase.Name%2A>Свойства поставщика для использования в качестве ключа в <xref:System.Collections.Hashtable>объекта.</xref:System.Collections.Hashtable> </xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public virtual void Add (System.Configuration.Provider.ProviderBase provider);
    parameters:
    - id: provider
      type: System.Configuration.Provider.ProviderBase
      description: "Поставщик для добавления."
  overload: System.Configuration.Provider.ProviderCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Коллекция доступна только для чтения."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Configuration.Provider.ProviderBase.Name*> of <code>provider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The length of the <xref:System.Configuration.Provider.ProviderBase.Name*> of <code>provider</code> is less than 1."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Clear
  id: Clear
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ProviderCollection.Clear()
  fullName: System.Configuration.Provider.ProviderCollection.Clear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Удаляет все элементы из коллекции."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Коллекция имеет значение только для чтения."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  id: CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: CopyTo(ProviderBase[],Int32)
  nameWithType: ProviderCollection.CopyTo(ProviderBase[],Int32)
  fullName: System.Configuration.Provider.ProviderCollection.CopyTo(ProviderBase[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Копирует содержимое коллекции в заданный массив, начиная с указанного индекса."
  remarks: "Массив, в который копируются элементы должны начинаться с нуля."
  syntax:
    content: public void CopyTo (System.Configuration.Provider.ProviderBase[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.Provider.ProviderBase[]
      description: "Копирует элементы коллекции в массив."
    - id: index
      type: System.Int32
      description: "Индекс элемента коллекции, с которого начинается копирование."
  overload: System.Configuration.Provider.ProviderCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Count
  id: Count
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Count
  nameWithType: ProviderCollection.Count
  fullName: System.Configuration.Provider.ProviderCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Возвращает количество поставщиков в коллекции."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Количество поставщиков в коллекции."
  overload: System.Configuration.Provider.ProviderCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ProviderCollection.GetEnumerator()
  fullName: System.Configuration.Provider.ProviderCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Возвращает объект, реализующий интерфейс <xref:System.Collections.IEnumerator>интерфейс для прохода по коллекции.</xref:System.Collections.IEnumerator>"
  remarks: "<xref:System.Configuration.Provider.ProviderCollection>Класс хранит в его коллекцию <xref:System.Collections.Hashtable>объекта.</xref:System.Collections.Hashtable> </xref:System.Configuration.Provider.ProviderCollection> Вызовы метода GetEnumerator <xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName>метод.</xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Объект, реализующий интерфейс <xref:System.Collections.IEnumerator>для прохода по коллекции.</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.Provider.ProviderCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
  fullName: System.Configuration.Provider.ProviderCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным)."
  remarks: "Это свойство включается для удовлетворения <xref:System.Collections.ICollection>интерфейса.</xref:System.Collections.ICollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>во всех случаях."
  overload: System.Configuration.Provider.ProviderCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProviderCollection.Item(String)
  fullName: System.Configuration.Provider.ProviderCollection.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Получает поставщик с указанным именем."
  syntax:
    content: public System.Configuration.Provider.ProviderBase this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "Ключ, по которому идентифицируется поставщика."
    return:
      type: System.Configuration.Provider.ProviderBase
      description: "Поставщик с указанным именем."
  overload: System.Configuration.Provider.ProviderCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ProviderCollection.Remove(String)
  fullName: System.Configuration.Provider.ProviderCollection.Remove(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Удаляет поставщик из коллекции."
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя поставщика, должны быть удалены."
  overload: System.Configuration.Provider.ProviderCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Коллекции ему было присвоено только для чтения."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ProviderCollection.SetReadOnly()
  fullName: System.Configuration.Provider.ProviderCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Задает тип коллекции только для чтения."
  remarks: "<xref:System.Configuration.Provider.ProviderCollection>Класс является чтение и запись по умолчанию.</xref:System.Configuration.Provider.ProviderCollection> Метод SetReadOnly делает коллекции только для чтения. После коллекция имеет значение только для чтения, в какой-либо метод вызывает (такие как <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>и <xref:System.Configuration.Provider.ProviderCollection.Add%2A>приведет к возникновению исключения.</xref:System.Configuration.Provider.ProviderCollection.Add%2A> </xref:System.Configuration.Provider.ProviderCollection.Remove%2A>       Обратите внимание, что большинство функций на основе поставщика установит их <xref:System.Configuration.Provider.ProviderCollection>объект только для чтения после создания экземпляры всех настроенных поставщиков.</xref:System.Configuration.Provider.ProviderCollection>"
  syntax:
    content: public void SetReadOnly ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
  fullName: System.Configuration.Provider.ProviderCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Возвращает текущий объект."
  remarks: "Это свойство включается для удовлетворения <xref:System.Collections.ICollection>интерфейса.</xref:System.Collections.ICollection>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Текущий объект."
  overload: System.Configuration.Provider.ProviderCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Копирует элементы <xref href=&quot;System.Configuration.Provider.ProviderCollection&quot;> </xref> в массив, начиная с определенного индекса массива."
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только в том случае, когда экземпляр ICollection.CopyTo со строгим типом приводится <xref:System.Collections.ICollection>интерфейса.</xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Копирует элементы коллекции в массив."
    - id: index
      type: System.Int32
      description: "Индекс в массиве, с которого начинается копирование экземпляров поставщика из коллекции."
  overload: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderCollection.#ctor
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: ProviderCollection()
  nameWithType: ProviderCollection.ProviderCollection()
  fullName: System.Configuration.Provider.ProviderCollection.ProviderCollection()
- uid: System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Add(ProviderBase)
  nameWithType: ProviderCollection.Add(ProviderBase)
  fullName: System.Configuration.Provider.ProviderCollection.Add(ProviderBase)
- uid: System.Configuration.Provider.ProviderBase
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.Provider.ProviderCollection.Clear
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Clear()
  nameWithType: ProviderCollection.Clear()
  fullName: System.Configuration.Provider.ProviderCollection.Clear()
- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: CopyTo(ProviderBase[],Int32)
  nameWithType: ProviderCollection.CopyTo(ProviderBase[],Int32)
  fullName: System.Configuration.Provider.ProviderCollection.CopyTo(ProviderBase[],Int32)
- uid: System.Configuration.Provider.ProviderBase[]
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase[]
  spec.csharp:
  - uid: System.Configuration.Provider.ProviderBase
    name: ProviderBase
    nameWithType: ProviderBase
    fullName: ProviderBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.Provider.ProviderCollection.Count
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Count
  nameWithType: ProviderCollection.Count
  fullName: System.Configuration.Provider.ProviderCollection.Count
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ProviderCollection.GetEnumerator()
  fullName: System.Configuration.Provider.ProviderCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
  fullName: System.Configuration.Provider.ProviderCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Provider.ProviderCollection.Item(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Item(String)
  nameWithType: ProviderCollection.Item(String)
  fullName: System.Configuration.Provider.ProviderCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ProviderCollection.Remove(String)
  fullName: System.Configuration.Provider.ProviderCollection.Remove(String)
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ProviderCollection.SetReadOnly()
  fullName: System.Configuration.Provider.ProviderCollection.SetReadOnly()
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
  fullName: System.Configuration.Provider.ProviderCollection.SyncRoot
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.Provider.ProviderCollection.#ctor*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: ProviderCollection
  nameWithType: ProviderCollection.ProviderCollection
- uid: System.Configuration.Provider.ProviderCollection.Add*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Add
  nameWithType: ProviderCollection.Add
- uid: System.Configuration.Provider.ProviderCollection.Clear*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Clear
  nameWithType: ProviderCollection.Clear
- uid: System.Configuration.Provider.ProviderCollection.CopyTo*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProviderCollection.CopyTo
- uid: System.Configuration.Provider.ProviderCollection.Count*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Count
  nameWithType: ProviderCollection.Count
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ProviderCollection.GetEnumerator
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
- uid: System.Configuration.Provider.ProviderCollection.Item*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Item
  nameWithType: ProviderCollection.Item
- uid: System.Configuration.Provider.ProviderCollection.Remove*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Remove
  nameWithType: ProviderCollection.Remove
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ProviderCollection.SetReadOnly
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo
