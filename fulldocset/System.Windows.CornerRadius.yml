### YamlMime:ManagedReference
items:
- uid: System.Windows.CornerRadius
  id: CornerRadius
  children:
  - System.Windows.CornerRadius.#ctor(System.Double)
  - System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  - System.Windows.CornerRadius.BottomLeft
  - System.Windows.CornerRadius.BottomRight
  - System.Windows.CornerRadius.Equals(System.Object)
  - System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  - System.Windows.CornerRadius.GetHashCode
  - System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  - System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  - System.Windows.CornerRadius.TopLeft
  - System.Windows.CornerRadius.TopRight
  - System.Windows.CornerRadius.ToString
  langs:
  - csharp
  name: CornerRadius
  nameWithType: CornerRadius
  fullName: System.Windows.CornerRadius
  type: Struct
  summary: "Представляет Радиусы углов прямоугольника."
  remarks: "Этот класс имеет четыре свойства <xref:System.Windows.CornerRadius.TopLeft%2A>, <xref:System.Windows.CornerRadius.TopRight%2A>, <xref:System.Windows.CornerRadius.BottomLeft%2A>, и <xref:System.Windows.CornerRadius.BottomRight%2A>, соответствующий отдельных углов прямоугольника.</xref:System.Windows.CornerRadius.BottomRight%2A> </xref:System.Windows.CornerRadius.BottomLeft%2A> </xref:System.Windows.CornerRadius.TopRight%2A> </xref:System.Windows.CornerRadius.TopLeft%2A>  Каждый является <xref:System.Double>структуры, можно задать независимо от других.</xref:System.Double>       Радиусы не может быть отрицательным.      <a name=&quot;xamlAttributeUsage_Duration&quot;></a>## Использование атрибута XAML ```   <object property=&quot;TopLeft,TopRight,BottomRight,BottomLeft &quot;/>   - or -   <object property=&quot;AllCorners&quot;/>   ``` <a name=&quot;xamlValues_Thickness&quot;> </a> ## значений XAML *TopLeft* <xref:System.Double> значение, которое задает радиус верхнего левом углу.</xref:System.Double>                 *Справа сверху* <xref:System.Double> значение, указывающее в правом верхнем углу.</xref:System.Double>           *BottomRight* <xref:System.Double> значение, указывающее нижнем правом углу.</xref:System.Double>           *Слева снизу* <xref:System.Double> значение, указывающее нижний левый угол.</xref:System.Double>           *AllCorners* если только один <xref:System.Double>значение указано, что мера применяется ко всем *TopLeft*, *TopRight*, *BottomRight*, и *слева снизу* углов CornerRadius.</xref:System.Double>      Настроек [!NOTE] настроек значения не нужно указывать десятичной запятой явным образом в том случае, если задан в виде строки. Строка «1», указанная в [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] имеет значение 1,0 в коде."
  example:
  - "The following example shows how to set the value of the <xref:System.Windows.Controls.Border.CornerRadius%2A> property by using [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] and code.  \n  \n [!code-cs[ThicknessStruct#1](~/add/codesnippet/csharp/ThicknessSamp/ThicknessSamp.cs#1)]\n [!code-xml[ThicknessStruct#1](~/add/codesnippet/xaml/ThicknessXAML/default.xaml#1)]\n [!code-vb[ThicknessStruct#1](~/add/codesnippet/visualbasic/ThicknessSampVB/ThicknessSampVB.vb#1)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.CornerRadiusConverter))]

      public struct CornerRadius : IEquatable<System.Windows.CornerRadius>
  inheritance:
  - System.ValueType
  implements:
  - System.IEquatable<System.Windows.CornerRadius>
  platform:
  - net462
- uid: System.Windows.CornerRadius.#ctor(System.Double)
  id: '#ctor(System.Double)'
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: CornerRadius(Double)
  nameWithType: CornerRadius.CornerRadius(Double)
  fullName: System.Windows.CornerRadius.CornerRadius(Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> класса со значением указанного универсального radius для всех или прямоугольника."
  syntax:
    content: public CornerRadius (double uniformRadius);
    parameters:
    - id: uniformRadius
      type: System.Double
      description: "Значение радиуса, применяется к каждой угла прямоугольника."
  overload: System.Windows.CornerRadius.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  id: '#ctor(System.Double,System.Double,System.Double,System.Double)'
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: CornerRadius(Double,Double,Double,Double)
  nameWithType: CornerRadius.CornerRadius(Double,Double,Double,Double)
  fullName: System.Windows.CornerRadius.CornerRadius(Double,Double,Double,Double)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> класса с указанными значениями для каждого угла прямоугольника."
  syntax:
    content: public CornerRadius (double topLeft, double topRight, double bottomRight, double bottomLeft);
    parameters:
    - id: topLeft
      type: System.Double
      description: "Радиус верхнего левого угла."
    - id: topRight
      type: System.Double
      description: "Радиус верхнего правого угла."
    - id: bottomRight
      type: System.Double
      description: "Радиус нижнего правого угла."
    - id: bottomLeft
      type: System.Double
      description: "Радиус нижнего левого угла."
  overload: System.Windows.CornerRadius.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.BottomLeft
  id: BottomLeft
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: BottomLeft
  nameWithType: CornerRadius.BottomLeft
  fullName: System.Windows.CornerRadius.BottomLeft
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает радиус нижнего левого угла."
  remarks: "Радиус нижнего левого угла можно задать независимо от других углов прямоугольника."
  syntax:
    content: public double BottomLeft { get; set; }
    return:
      type: System.Double
      description: "Радиус нижнего левого угла. Значение по умолчанию — 0."
  overload: System.Windows.CornerRadius.BottomLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.BottomRight
  id: BottomRight
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: BottomRight
  nameWithType: CornerRadius.BottomRight
  fullName: System.Windows.CornerRadius.BottomRight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает радиус нижнего правого угла."
  remarks: "Радиус нижнего правого угла можно задать независимо от других углов прямоугольника."
  example:
  - "<xref:System.Windows.CornerRadius.TopRight%2A>  \n  \n <xref:System.Windows.CornerRadius.BottomLeft%2A>  \n  \n <xref:System.Windows.CornerRadius.TopLeft%2A>"
  syntax:
    content: public double BottomRight { get; set; }
    return:
      type: System.Double
      description: "Радиус нижнего правого угла. Значение по умолчанию — 0."
  overload: System.Windows.CornerRadius.BottomRight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CornerRadius.Equals(Object)
  fullName: System.Windows.CornerRadius.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Определяет ли указанный <xref:System.Object>— <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> и содержит ли те же значения угла radius, как это <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref:System.Object>Для сравнения.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> obj </code> — <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> и содержит те же значения угла radius, как это <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.CornerRadius.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  id: Equals(System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: Equals(CornerRadius)
  nameWithType: CornerRadius.Equals(CornerRadius)
  fullName: System.Windows.CornerRadius.Equals(CornerRadius)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Сравнивает два <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> структуры на равенство."
  syntax:
    content: public bool Equals (System.Windows.CornerRadius cornerRadius);
    parameters:
    - id: cornerRadius
      type: System.Windows.CornerRadius
      description: "<xref href=&quot;System.Windows.CornerRadius&quot;> </xref> Для сравнения с <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> cornerRadius </code> содержит те же значения угла radius, как это <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.CornerRadius.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.GetHashCode
  id: GetHashCode
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CornerRadius.GetHashCode()
  fullName: System.Windows.CornerRadius.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает хэш-код для данного <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для данного <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> структуры."
  overload: System.Windows.CornerRadius.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  id: op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: op_Equality(CornerRadius,CornerRadius)
  nameWithType: CornerRadius.op_Equality(CornerRadius,CornerRadius)
  fullName: System.Windows.CornerRadius.op_Equality(CornerRadius,CornerRadius)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Сравнивает два <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> структуры на равенство."
  syntax:
    content: public static bool op_Equality (System.Windows.CornerRadius cr1, System.Windows.CornerRadius cr2);
    parameters:
    - id: cr1
      type: System.Windows.CornerRadius
      description: "Первый <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> для сравнения."
    - id: cr2
      type: System.Windows.CornerRadius
      description: "Второй <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>cr1</code> and <code>cr2</code> have equal values for all corners (same values for <>*>, <>*>, <>*>, <>*>); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если <code> cr1 </code> и <code> cr2 </code> имеют различные значения для одного или нескольких углов."
  overload: System.Windows.CornerRadius.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  id: op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: op_Inequality(CornerRadius,CornerRadius)
  nameWithType: CornerRadius.op_Inequality(CornerRadius,CornerRadius)
  fullName: System.Windows.CornerRadius.op_Inequality(CornerRadius,CornerRadius)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Сравнивает два <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> структуры, чтобы определить их неравенство."
  syntax:
    content: public static bool op_Inequality (System.Windows.CornerRadius cr1, System.Windows.CornerRadius cr2);
    parameters:
    - id: cr1
      type: System.Windows.CornerRadius
      description: "Первый <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> для сравнения."
    - id: cr2
      type: System.Windows.CornerRadius
      description: "Второй <xref href=&quot;System.Windows.CornerRadius&quot;> </xref> для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> cr1 </code> и <code> cr2 </code> имеют различные значения для одного или нескольких углов (различные значения для <> </> *настроек, <> </> *настроек, <> </> *настроек, <> </> *настроек); <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> if <code>cr1</code> and <code>cr2</code> have identical corners."
  overload: System.Windows.CornerRadius.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.TopLeft
  id: TopLeft
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: TopLeft
  nameWithType: CornerRadius.TopLeft
  fullName: System.Windows.CornerRadius.TopLeft
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает радиус верхнего левого угла."
  remarks: "Радиус верхнего левого угла можно задать независимо от других углов прямоугольника."
  syntax:
    content: public double TopLeft { get; set; }
    return:
      type: System.Double
      description: "Радиус верхнего левого угла. Значение по умолчанию — 0."
  overload: System.Windows.CornerRadius.TopLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.TopRight
  id: TopRight
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: TopRight
  nameWithType: CornerRadius.TopRight
  fullName: System.Windows.CornerRadius.TopRight
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает или задает радиус верхнего правого угла."
  remarks: "Радиус верхнего правого угла можно задать независимо от других углов прямоугольника."
  syntax:
    content: public double TopRight { get; set; }
    return:
      type: System.Double
      description: "Радиус верхнего правого угла. Значение по умолчанию — 0."
  overload: System.Windows.CornerRadius.TopRight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.CornerRadius.ToString
  id: ToString
  parent: System.Windows.CornerRadius
  langs:
  - csharp
  name: ToString()
  nameWithType: CornerRadius.ToString()
  fullName: System.Windows.CornerRadius.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Возвращает строковое представление <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строковое представление <xref href=&quot;System.Windows.CornerRadius&quot;> </xref>."
  overload: System.Windows.CornerRadius.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.CornerRadius.#ctor(System.Double)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: CornerRadius(Double)
  nameWithType: CornerRadius.CornerRadius(Double)
  fullName: System.Windows.CornerRadius.CornerRadius(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.CornerRadius.#ctor(System.Double,System.Double,System.Double,System.Double)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: CornerRadius(Double,Double,Double,Double)
  nameWithType: CornerRadius.CornerRadius(Double,Double,Double,Double)
  fullName: System.Windows.CornerRadius.CornerRadius(Double,Double,Double,Double)
- uid: System.Windows.CornerRadius.BottomLeft
  parent: System.Windows.CornerRadius
  isExternal: false
  name: BottomLeft
  nameWithType: CornerRadius.BottomLeft
  fullName: System.Windows.CornerRadius.BottomLeft
- uid: System.Windows.CornerRadius.BottomRight
  parent: System.Windows.CornerRadius
  isExternal: false
  name: BottomRight
  nameWithType: CornerRadius.BottomRight
  fullName: System.Windows.CornerRadius.BottomRight
- uid: System.Windows.CornerRadius.Equals(System.Object)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: Equals(Object)
  nameWithType: CornerRadius.Equals(Object)
  fullName: System.Windows.CornerRadius.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.CornerRadius.Equals(System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: Equals(CornerRadius)
  nameWithType: CornerRadius.Equals(CornerRadius)
  fullName: System.Windows.CornerRadius.Equals(CornerRadius)
- uid: System.Windows.CornerRadius
  parent: System.Windows
  isExternal: false
  name: CornerRadius
  nameWithType: CornerRadius
  fullName: System.Windows.CornerRadius
- uid: System.Windows.CornerRadius.GetHashCode
  parent: System.Windows.CornerRadius
  isExternal: false
  name: GetHashCode()
  nameWithType: CornerRadius.GetHashCode()
  fullName: System.Windows.CornerRadius.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.CornerRadius.op_Equality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: op_Equality(CornerRadius,CornerRadius)
  nameWithType: CornerRadius.op_Equality(CornerRadius,CornerRadius)
  fullName: System.Windows.CornerRadius.op_Equality(CornerRadius,CornerRadius)
- uid: System.Windows.CornerRadius.op_Inequality(System.Windows.CornerRadius,System.Windows.CornerRadius)
  parent: System.Windows.CornerRadius
  isExternal: false
  name: op_Inequality(CornerRadius,CornerRadius)
  nameWithType: CornerRadius.op_Inequality(CornerRadius,CornerRadius)
  fullName: System.Windows.CornerRadius.op_Inequality(CornerRadius,CornerRadius)
- uid: System.Windows.CornerRadius.TopLeft
  parent: System.Windows.CornerRadius
  isExternal: false
  name: TopLeft
  nameWithType: CornerRadius.TopLeft
  fullName: System.Windows.CornerRadius.TopLeft
- uid: System.Windows.CornerRadius.TopRight
  parent: System.Windows.CornerRadius
  isExternal: false
  name: TopRight
  nameWithType: CornerRadius.TopRight
  fullName: System.Windows.CornerRadius.TopRight
- uid: System.Windows.CornerRadius.ToString
  parent: System.Windows.CornerRadius
  isExternal: false
  name: ToString()
  nameWithType: CornerRadius.ToString()
  fullName: System.Windows.CornerRadius.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.CornerRadius.#ctor*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: CornerRadius
  nameWithType: CornerRadius.CornerRadius
- uid: System.Windows.CornerRadius.BottomLeft*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: BottomLeft
  nameWithType: CornerRadius.BottomLeft
- uid: System.Windows.CornerRadius.BottomRight*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: BottomRight
  nameWithType: CornerRadius.BottomRight
- uid: System.Windows.CornerRadius.Equals*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: Equals
  nameWithType: CornerRadius.Equals
- uid: System.Windows.CornerRadius.GetHashCode*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: GetHashCode
  nameWithType: CornerRadius.GetHashCode
- uid: System.Windows.CornerRadius.op_Equality*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: op_Equality
  nameWithType: CornerRadius.op_Equality
- uid: System.Windows.CornerRadius.op_Inequality*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: op_Inequality
  nameWithType: CornerRadius.op_Inequality
- uid: System.Windows.CornerRadius.TopLeft*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: TopLeft
  nameWithType: CornerRadius.TopLeft
- uid: System.Windows.CornerRadius.TopRight*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: TopRight
  nameWithType: CornerRadius.TopRight
- uid: System.Windows.CornerRadius.ToString*
  parent: System.Windows.CornerRadius
  isExternal: false
  name: ToString
  nameWithType: CornerRadius.ToString
