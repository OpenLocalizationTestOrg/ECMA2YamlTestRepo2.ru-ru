### YamlMime:ManagedReference
items:
- uid: System.Net.ICertificatePolicy
  id: ICertificatePolicy
  children:
  - System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)
  langs:
  - csharp
  name: ICertificatePolicy
  nameWithType: ICertificatePolicy
  fullName: System.Net.ICertificatePolicy
  type: Interface
  summary: "Проверяет сертификат сервера."
  remarks: "Этот интерфейс ICertificatePolicy интерфейс используется для предоставления пользовательского сертификата проверки подлинности для приложения. Политика по умолчанию является предоставление допустимых сертификатов, а также допустимые сертификаты с истекшим сроком. Чтобы изменить эту политику, реализуйте интерфейс ICertificatePolicy интерфейс с другой политикой, а затем присвоить эту политику объекту <xref:System.Net.ServicePointManager.CertificatePolicy%2A?displayProperty=fullName>.</xref:System.Net.ServicePointManager.CertificatePolicy%2A?displayProperty=fullName>       Интерфейс ICertificatePolicy использует интерфейс поставщика поддержки безопасности (SSPI). Дополнительные сведения см. в документации SSPI в библиотеке MSDN."
  example:
  - "The following example creates a certificate policy that returns `false` for any certificate problem and prints a message that indicates the problem on the console. The CertificateProblem enum defines SSPI constants for certificate problems, and the private GetProblemMessage method creates a printable message about the problem.  \n  \n [!code-cpp[Classic ICertificatePolicy Example#1](~/add/codesnippet/cpp/t-system.net.icertificat_1.cpp)]\n [!code-cs[Classic ICertificatePolicy Example#1](~/add/codesnippet/csharp/t-system.net.icertificat_1.cs)]\n [!code-vb[Classic ICertificatePolicy Example#1](~/add/codesnippet/visualbasic/t-system.net.icertificat_1.vb)]"
  syntax:
    content: public interface ICertificatePolicy
  implements: []
  platform:
  - net462
- uid: System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)
  id: CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)
  parent: System.Net.ICertificatePolicy
  langs:
  - csharp
  name: CheckValidationResult(ServicePoint,X509Certificate,WebRequest,Int32)
  nameWithType: ICertificatePolicy.CheckValidationResult(ServicePoint,X509Certificate,WebRequest,Int32)
  fullName: System.Net.ICertificatePolicy.CheckValidationResult(ServicePoint,X509Certificate,WebRequest,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Проверяет сертификат сервера."
  remarks: "Метод CheckValidationResult реализует политику проверки сертификата приложения. Этот метод может определить `srvPoint`, `certificate`, `request`, и `certificateProblem` параметры, чтобы определить, является ли сертификат должен быть принят.       `certificateProblem` Параметр является кодом состояния интерфейса поставщика поддержки безопасности (SSPI). Дополнительные сведения см. в документации SSPI в библиотеке MSDN."
  syntax:
    content: public bool CheckValidationResult (System.Net.ServicePoint srvPoint, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Net.WebRequest request, int certificateProblem);
    parameters:
    - id: srvPoint
      type: System.Net.ServicePoint
      description: "<xref href=&quot;System.Net.ServicePoint&quot;> </xref> , Будет использоваться сертификат."
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Сертификат для проверки."
    - id: request
      type: System.Net.WebRequest
      description: "Запрос, который получен сертификат."
    - id: certificateProblem
      type: System.Int32
      description: "Проблема, возникшая при использовании сертификата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если сертификат должен быть принят; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.ICertificatePolicy.CheckValidationResult*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.ICertificatePolicy.CheckValidationResult(System.Net.ServicePoint,System.Security.Cryptography.X509Certificates.X509Certificate,System.Net.WebRequest,System.Int32)
  parent: System.Net.ICertificatePolicy
  isExternal: false
  name: CheckValidationResult(ServicePoint,X509Certificate,WebRequest,Int32)
  nameWithType: ICertificatePolicy.CheckValidationResult(ServicePoint,X509Certificate,WebRequest,Int32)
  fullName: System.Net.ICertificatePolicy.CheckValidationResult(ServicePoint,X509Certificate,WebRequest,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.ICertificatePolicy.CheckValidationResult*
  parent: System.Net.ICertificatePolicy
  isExternal: false
  name: CheckValidationResult
  nameWithType: ICertificatePolicy.CheckValidationResult
