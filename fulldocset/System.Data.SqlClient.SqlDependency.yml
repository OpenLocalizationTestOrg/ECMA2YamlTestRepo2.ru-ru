### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDependency
  id: SqlDependency
  children:
  - System.Data.SqlClient.SqlDependency.#ctor
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  - System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDependency.HasChanges
  - System.Data.SqlClient.SqlDependency.Id
  - System.Data.SqlClient.SqlDependency.OnChange
  - System.Data.SqlClient.SqlDependency.Start(System.String)
  - System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String)
  - System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  langs:
  - csharp
  name: SqlDependency
  nameWithType: SqlDependency
  fullName: System.Data.SqlClient.SqlDependency
  type: Class
  summary: "Объект SqlDependency представляет запрос уведомления зависимость между приложением и экземпляром SQL Server. Приложение может создать объект SqlDependency и зарегистрируйтесь, чтобы получать уведомления по <xref href=&quot;System.Data.SqlClient.OnChangeEventHandler&quot;> </xref> обработчик событий."
  remarks: "SqlDependency идеально подходит для кэширования сценариев, где приложениям ASP.NET или службы среднего уровня необходимо хранить определенные данные, кэшированные в памяти. SqlDependency позволяет получать уведомления при изменении данных в базе данных, таким образом, можно обновить кэш.       Чтобы задать зависимость, его необходимо связать объект SqlDependency к одному или нескольким <xref:System.Data.SqlClient.SqlCommand>объектов.</xref:System.Data.SqlClient.SqlCommand> Чтобы получать уведомления, необходимо подписаться на <xref:System.Data.SqlClient.SqlDependency.OnChange>событий.</xref:System.Data.SqlClient.SqlDependency.OnChange> Дополнительные сведения о требованиях к созданию запросов на уведомления см. в разделе «Создание для уведомления о запросе» в электронной документации по SQL Server.      Настроек [!NOTE] настроек SqlDependency была разработана для использования в приложениях ASP.NET или службы среднего уровня при наличии небольшого числа серверов, которые имеют активные зависимости от базы данных. Он не предназначен для использования в клиентских приложениях, где сотен или тысяч клиентских компьютеров будет иметь SqlDependency объекты для одной базы данных сервера. Если вы разрабатываете приложение которых требуется надежный доли секунды уведомления об изменении данных, просмотрите разделы **планирование эффективной стратегии уведомлений о запросах** и **альтернативы уведомления о запросах** в [планирование уведомлений](http://go.microsoft.com/fwlink/?LinkId=211984) раздел электронной документации по SQL Server.       Дополнительные сведения см. в разделе [уведомления о запросах в SQL Server](~/add/includes/ajax-current-ext-md.md) и «Создание решений уведомления» в электронной документации по SQL Server.      Настроек [!NOTE] настроек <xref:System.Data.SqlClient.SqlDependency.OnChange>события могут быть созданы в другом потоке, из потока, который инициировал выполнение команды.</xref:System.Data.SqlClient.SqlDependency.OnChange>       Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. Следующая таблица предоставляет ссылки на документацию Service Broker и уведомлениям о запросах в электронной документации по SQL Server.       **Электронная документация по SQL Server**      -   [Создание запроса для уведомления](http://msdn.microsoft.com/library/ms181122.aspx)      -   [рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [вопросы безопасности для службы уведомления о](http://msdn.microsoft.com/library/ms172604.aspx)      -   [разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)      -   [вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [справочный центр разработчика компонента Broker Service](http://msdn.microsoft.com/library/ms166100.aspx)      -   [руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public sealed class SqlDependency
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Создает новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> класс с параметрами по умолчанию."
  remarks: "Конструктор инициализирует <xref:System.Data.SqlClient.SqlDependency>с использованием имени службы компонента Service Broker по умолчанию и тайм-аута.</xref:System.Data.SqlClient.SqlDependency> На некотором этапе после построения необходимо использовать <xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>метод, чтобы сопоставить одну или несколько команд к этому <xref:System.Data.SqlClient.SqlDependency>объекта.</xref:System.Data.SqlClient.SqlDependency> </xref:System.Data.SqlClient.SqlDependency.AddCommandDependency%2A>       Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. Следующая таблица предоставляет ссылки на документацию Service Broker и уведомлениям о запросах в электронной документации по SQL Server.       **Электронная документация по SQL Server**      -   [Создание запроса для уведомления](http://msdn.microsoft.com/library/ms181122.aspx)      -   [рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [вопросы безопасности для службы уведомления о](http://msdn.microsoft.com/library/ms172604.aspx)      -   [разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)      -   [вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [справочный центр разработчика компонента Broker Service](http://msdn.microsoft.com/library/ms166100.aspx)      -   [руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency ();
    parameters: []
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Создает новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> класса и связывает его с <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> параметра."
  remarks: "На внутреннем уровне этот конструктор создает экземпляр <xref:System.Data.Sql.SqlNotificationRequest>класса и привязывает его к <xref:System.Data.SqlClient.SqlCommand>объекта.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.Sql.SqlNotificationRequest>       Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. Следующая таблица предоставляет ссылки на документацию Service Broker и уведомлениям о запросах в электронной документации по SQL Server.       **Электронная документация по SQL Server**      -   [Создание запроса для уведомления](http://msdn.microsoft.com/library/ms181122.aspx)      -   [рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [вопросы безопасности для службы уведомления о](http://msdn.microsoft.com/library/ms172604.aspx)      -   [разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)      -   [вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [справочный центр разработчика компонента Broker Service](http://msdn.microsoft.com/library/ms166100.aspx)      -   [руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> Объект, связанный с этим <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> объекта. Настройка конструктора <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> объекта и привяжите его к команде."
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code> Параметр имеет значение NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> Объектом уже <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> объект, присвоенный его <xref:System.Data.SqlClient.SqlCommand.Notification*>свойство и что <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> не связано с зависимостью.</xref:System.Data.SqlClient.SqlCommand.Notification*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  id: '#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)'
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Создает новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> класса, связывает его с <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> параметра и задает параметры уведомления значение времени ожидания."
  remarks: "Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. Следующая таблица предоставляет ссылки на документацию Service Broker и уведомлениям о запросах в электронной документации по SQL Server.       **Электронная документация по SQL Server**      -   [Создание запроса для уведомления](http://msdn.microsoft.com/library/ms181122.aspx)      -   [рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [вопросы безопасности для службы уведомления о](http://msdn.microsoft.com/library/ms172604.aspx)      -   [разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)      -   [вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [справочный центр разработчика компонента Broker Service](http://msdn.microsoft.com/library/ms166100.aspx)      -   [руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public SqlDependency (System.Data.SqlClient.SqlCommand command, string options, int timeout);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> Объект, связанный с этим <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> объекта. Конструктор устанавливает <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> объекта и привяжите его к команде."
    - id: options
      type: System.String
      description: "Параметры запроса уведомлений для использования этой зависимости.  `null`Чтобы использовать службу по умолчанию."
    - id: timeout
      type: System.Int32
      description: "Время ожидания для этого уведомления в секундах. Значение по умолчанию — 0, указывающее, что время ожидания сервера следует использовать."
  overload: System.Data.SqlClient.SqlDependency.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code> Параметр имеет значение NULL."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение времени ожидания меньше нуля."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> Объектом уже <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> объект, присвоенный его <> </> *настроек свойств, которые <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> не связан с этой зависимости.       Была предпринята попытка создать * *SqlDependency** экземпляра из внутри SQLCLR."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  id: AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Связывает <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> объект с данным <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> экземпляра."
  remarks: "Уведомления о запросах поддерживаются только для инструкций SELECT, удовлетворяющих списку конкретных требований. Следующая таблица предоставляет ссылки на документацию Service Broker и уведомлениям о запросах в электронной документации по SQL Server.       **Электронная документация по SQL Server**      -   [Создание запроса для уведомления](http://msdn.microsoft.com/library/ms181122.aspx)      -   [рекомендации по безопасности для компонента Service Broker](http://msdn.microsoft.com/library/ms166059.aspx)      -   [безопасность и защита (компонент Service Broker)](http://msdn.microsoft.com/library/bb522911.aspx)      -   [вопросы безопасности для службы уведомления о](http://msdn.microsoft.com/library/ms172604.aspx)      -   [разрешения уведомления о запросе](http://msdn.microsoft.com/library/ms188311.aspx)      -   [вопросы международного использования компонента Service Broker](http://msdn.microsoft.com/library/ms166028.aspx)      -   [вопросы проектирования решений (компонент Service Broker)](http://msdn.microsoft.com/library/bb522899.aspx)      -   [справочный центр разработчика компонента Broker Service](http://msdn.microsoft.com/library/ms166100.aspx)      -   [руководство разработчика (компонент Service Broker)](http://msdn.microsoft.com/library/bb522908.aspx)"
  syntax:
    content: public void AddCommandDependency (System.Data.SqlClient.SqlCommand command);
    parameters:
    - id: command
      type: System.Data.SqlClient.SqlCommand
      description: "Объект <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> объекта, содержащего инструкцию, которая является допустимым для уведомлений."
  overload: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> command </code> Параметр имеет значение null."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> Объектом уже <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> объект, присвоенный его <xref:System.Data.SqlClient.SqlCommand.Notification*>свойство и что <xref href=&quot;System.Data.Sql.SqlNotificationRequest&quot;> </xref> не связано с зависимостью.</xref:System.Data.SqlClient.SqlCommand.Notification*>"
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  id: HasChanges
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение, указывающее, изменилось ли одно из результирующих наборов, связанных с зависимостью."
  remarks: "Если вы не используете <xref:System.Data.SqlClient.SqlDependency.OnChange>событий, можно проверить свойство HasChanges для определения, изменялась ли результаты запроса.</xref:System.Data.SqlClient.SqlDependency.OnChange>       Свойство HasChanges не подразумевает изменений в данных. Другие обстоятельства, например времени ожидания истек, и не удалось задать запрос уведомления, также формироваться событие изменения."
  syntax:
    content: public bool HasChanges { get; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, является ли один результата устанавливает был изменен."
  overload: System.Data.SqlClient.SqlDependency.HasChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Id
  id: Id
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает значение, однозначно определяющее этот экземпляр <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> класса."
  remarks: "Свойство Id используется для уникальной идентификации заданного <xref:System.Data.SqlClient.SqlDependency>экземпляра.</xref:System.Data.SqlClient.SqlDependency>"
  syntax:
    content: public string Id { get; }
    return:
      type: System.String
      description: "Строковое представление идентификатора GUID, который создается для каждого экземпляра <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> класса."
  overload: System.Data.SqlClient.SqlDependency.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.OnChange
  id: OnChange
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Происходит при получении уведомления для всех команд, связанных с этим <xref href=&quot;System.Data.SqlClient.SqlDependency&quot;> </xref> объекта."
  remarks: "OnChange происходит при изменении результатов для данной команды. Если вы не используете OnChange, можно проверить <xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>Свойства, чтобы определить, изменились ли результаты запроса.</xref:System.Data.SqlClient.SqlDependency.HasChanges%2A>       Событие OnChange не подразумевает изменений в данных. Другие обстоятельства, например времени ожидания истек, и не удалось задать запрос уведомления, также создают OnChange."
  syntax:
    content: public event System.Data.SqlClient.OnChangeEventHandler OnChange;
    return:
      type: System.Data.SqlClient.OnChangeEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  id: Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Запускает прослушиватель для получения уведомлений об изменении зависимости от экземпляра SQL Server, указанной в строке подключения."
  remarks: "Этот метод запускает прослушиватель для <xref:System.AppDomain>для получения уведомлений об зависимости от экземпляра [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] заданные `connectionString` параметр.</xref:System.AppDomain> Этот метод может вызываться несколько раз с разными строками подключения для нескольких серверов.       Дополнительные замечания см <xref:System.Data.SqlClient.SqlDependency.Start%2A>.</xref:System.Data.SqlClient.SqlDependency.Start%2A>"
  syntax:
    content: public static bool Start (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Строка подключения для экземпляра [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] для получения уведомлений об изменениях."
    return:
      type: System.Boolean
      description: '**значение true,** если прослушиватель инициализирован успешно. **false** Если совместимый прослушиватель уже существует.'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code> Параметр имеет значение NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> connectionString </code> Параметра совпадает со значением предыдущего вызова этого метода, но параметры различны.       Метод вызван в среде CLR."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> разрешения разграничения доступа кода."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Следующий вызов метода выполнен с эквивалентный <code> connectionString </code> параметр с другим пользователем или пользователь не является используемым по умолчанию в той же схеме.       Кроме того, любой базовый **SqlClient** исключения."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  id: Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Запускает прослушиватель для получения уведомлений об изменении зависимости от экземпляра SQL Server, указанной в строке подключения с помощью указанной очереди сервис-брокера SQL Server."
  remarks: "Этот метод запускает прослушиватель для <xref:System.AppDomain>для получения уведомлений об зависимости от экземпляра SQL Server, заданные `connectionString` параметр.</xref:System.AppDomain> Этот метод может вызываться несколько раз с разными строками подключения для нескольких серверов.       Если имя очереди не указано, <xref:System.Data.SqlClient.SqlDependency>создается временная очередь и служба на сервере, который используется для всего процесса, даже если процесс включает в себя более одного <xref:System.AppDomain>.</xref:System.AppDomain> </xref:System.Data.SqlClient.SqlDependency> Очередь и служба автоматически удаляются при завершении работы приложения.       Дополнительные замечания см <xref:System.Data.SqlClient.SqlDependency.Start%2A>.</xref:System.Data.SqlClient.SqlDependency.Start%2A>"
  syntax:
    content: public static bool Start (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "Строка подключения для экземпляра SQL Server, из которого следует получать уведомления об изменениях."
    - id: queue
      type: System.String
      description: "Существующую очередь сервис-брокера SQL Server для использования. Если <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, используется по умолчанию."
    return:
      type: System.Boolean
      description: '**значение true,** если прослушиватель инициализирован успешно. **false** Если совместимый прослушиватель уже существует.'
  overload: System.Data.SqlClient.SqlDependency.Start*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code> Параметр имеет значение NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code> connectionString </code> Параметра совпадает со значением предыдущего вызова этого метода, но параметры различны.       Метод вызван в среде CLR."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> разрешения разграничения доступа кода."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Следующий вызов метода выполнен с эквивалентный <code> connectionString </code> параметра, но другой пользователь или пользователь не является используемым по умолчанию в той же схеме.       Кроме того, любой базовый **SqlClient** исключения."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  id: Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Останавливает прослушиватель для подключения, указанные в предыдущей <xref:System.Data.SqlClient.SqlDependency.Start*>вызовите.</xref:System.Data.SqlClient.SqlDependency.Start*>"
  remarks: "<xref:System.Data.SqlClient.SqlDependency.Stop%2A>Метод должен вызываться для каждого <xref:System.Data.SqlClient.SqlDependency.Start%2A>вызова.</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A> Данный прослушиватель только завершает работу полностью при получении одинаковое число <xref:System.Data.SqlClient.SqlDependency.Stop%2A>запросов в качестве <xref:System.Data.SqlClient.SqlDependency.Start%2A>запросы.</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A>"
  syntax:
    content: public static bool Stop (string connectionString);
    parameters:
    - id: connectionString
      type: System.String
      description: "Строка подключения для экземпляра SQL Server, который использовался в предыдущей <xref:System.Data.SqlClient.SqlDependency.Start*>вызовите.</xref:System.Data.SqlClient.SqlDependency.Start*>"
    return:
      type: System.Boolean
      description: '**значение true,** если прослушиватель уже полностью остановлен; **false** Если <xref href=&quot;System.AppDomain&quot;> </xref> была отменена прослушивателя, но существует по крайней мере друг с другом — <xref href=&quot;System.AppDomain&quot;> </xref> с помощью одного прослушивателя.'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code> Параметр имеет значение NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод был вызван из внутри SQLCLR."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> разрешения разграничения доступа кода."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "Базовая **SqlClient** возникло исключение."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  id: Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  langs:
  - csharp
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Останавливает прослушиватель для подключения, указанные в предыдущей <xref:System.Data.SqlClient.SqlDependency.Start*>вызовите.</xref:System.Data.SqlClient.SqlDependency.Start*>"
  remarks: "<xref:System.Data.SqlClient.SqlDependency.Stop%2A>Метод должен вызываться для каждого <xref:System.Data.SqlClient.SqlDependency.Start%2A>вызова.</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A> Данный прослушиватель только завершает работу полностью при получении одинаковое число <xref:System.Data.SqlClient.SqlDependency.Stop%2A>запросов в качестве <xref:System.Data.SqlClient.SqlDependency.Start%2A>запросы.</xref:System.Data.SqlClient.SqlDependency.Start%2A> </xref:System.Data.SqlClient.SqlDependency.Stop%2A>"
  syntax:
    content: public static bool Stop (string connectionString, string queue);
    parameters:
    - id: connectionString
      type: System.String
      description: "Строка подключения для экземпляра SQL Server, который использовался в предыдущей <xref:System.Data.SqlClient.SqlDependency.Start*>вызовите.</xref:System.Data.SqlClient.SqlDependency.Start*>"
    - id: queue
      type: System.String
      description: "Очереди SQL Server Service Broker, который использовался в предыдущей <xref:System.Data.SqlClient.SqlDependency.Start*>вызовите.</xref:System.Data.SqlClient.SqlDependency.Start*>"
    return:
      type: System.Boolean
      description: '**значение true,** если прослушиватель уже полностью остановлен; **false** Если <xref href=&quot;System.AppDomain&quot;> </xref> была отменена прослушивателя, но имеется по крайней мере один другой <xref href=&quot;System.AppDomain&quot;> </xref> с помощью одного прослушивателя.'
  overload: System.Data.SqlClient.SqlDependency.Stop*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> connectionString </code> Параметр имеет значение NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод был вызван из внутри SQLCLR."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых <xref href=&quot;System.Data.SqlClient.SqlClientPermission&quot;> </xref> разрешения разграничения доступа кода."
  - type: System.Data.SqlClient.SqlException
    commentId: T:System.Data.SqlClient.SqlException
    description: "И базовый **SqlClient** возникло исключение."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Data.SqlClient.SqlException
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlException
  nameWithType: SqlException
  fullName: System.Data.SqlClient.SqlException
- uid: System.Data.SqlClient.SqlDependency.#ctor
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency()
  nameWithType: SqlDependency.SqlDependency()
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency()
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand)
  nameWithType: SqlDependency.SqlDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDependency.#ctor(System.Data.SqlClient.SqlCommand,System.String,System.Int32)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency(SqlCommand,String,Int32)
  nameWithType: SqlDependency.SqlDependency(SqlCommand,String,Int32)
  fullName: System.Data.SqlClient.SqlDependency.SqlDependency(SqlCommand,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency(SqlCommand)
  nameWithType: SqlDependency.AddCommandDependency(SqlCommand)
  fullName: System.Data.SqlClient.SqlDependency.AddCommandDependency(SqlCommand)
- uid: System.Data.SqlClient.SqlDependency.HasChanges
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
  fullName: System.Data.SqlClient.SqlDependency.HasChanges
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlClient.SqlDependency.Id
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
  fullName: System.Data.SqlClient.SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.OnChange
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: OnChange
  nameWithType: SqlDependency.OnChange
  fullName: System.Data.SqlClient.SqlDependency.OnChange
- uid: System.Data.SqlClient.OnChangeEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: OnChangeEventHandler
  nameWithType: OnChangeEventHandler
  fullName: System.Data.SqlClient.OnChangeEventHandler
- uid: System.Data.SqlClient.SqlDependency.Start(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String)
  nameWithType: SqlDependency.Start(String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String)
- uid: System.Data.SqlClient.SqlDependency.Start(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start(String,String)
  nameWithType: SqlDependency.Start(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Start(String,String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String)
  nameWithType: SqlDependency.Stop(String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String)
- uid: System.Data.SqlClient.SqlDependency.Stop(System.String,System.String)
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop(String,String)
  nameWithType: SqlDependency.Stop(String,String)
  fullName: System.Data.SqlClient.SqlDependency.Stop(String,String)
- uid: System.Data.SqlClient.SqlDependency.#ctor*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: SqlDependency
  nameWithType: SqlDependency.SqlDependency
- uid: System.Data.SqlClient.SqlDependency.AddCommandDependency*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: AddCommandDependency
  nameWithType: SqlDependency.AddCommandDependency
- uid: System.Data.SqlClient.SqlDependency.HasChanges*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: HasChanges
  nameWithType: SqlDependency.HasChanges
- uid: System.Data.SqlClient.SqlDependency.Id*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Id
  nameWithType: SqlDependency.Id
- uid: System.Data.SqlClient.SqlDependency.Start*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Start
  nameWithType: SqlDependency.Start
- uid: System.Data.SqlClient.SqlDependency.Stop*
  parent: System.Data.SqlClient.SqlDependency
  isExternal: false
  name: Stop
  nameWithType: SqlDependency.Stop
