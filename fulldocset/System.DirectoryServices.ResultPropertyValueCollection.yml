### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ResultPropertyValueCollection
  id: ResultPropertyValueCollection
  children:
  - System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  - System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  - System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  langs:
  - csharp
  name: ResultPropertyValueCollection
  nameWithType: ResultPropertyValueCollection
  fullName: System.DirectoryServices.ResultPropertyValueCollection
  type: Class
  summary: "Содержит значения <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> свойство."
  remarks: "<xref:System.DirectoryServices.SearchResult>экземпляры аналогичны <xref:System.DirectoryServices.DirectoryEntry>экземпляров.</xref:System.DirectoryServices.DirectoryEntry></xref:System.DirectoryServices.SearchResult> Существенным отличием является то, <xref:System.DirectoryServices.DirectoryEntry>извлекает соответствующие сведения о его из иерархии доменных служб Active Directory при каждом доступе к новым объектом, в то время как данные для <xref:System.DirectoryServices.SearchResult>уже находится в <xref:System.DirectoryServices.SearchResultCollection>, <xref:System.DirectoryServices.DirectorySearcher>запрос возвращает.</xref:System.DirectoryServices.DirectorySearcher> </xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResult> </xref:System.DirectoryServices.DirectoryEntry> При попытке получить <xref:System.DirectoryServices.SearchResult>свойство, для получения запроса не указано, свойство будет недоступен.</xref:System.DirectoryServices.SearchResult>"
  syntax:
    content: 'public class ResultPropertyValueCollection : System.Collections.ReadOnlyCollectionBase'
  inheritance:
  - System.Object
  - System.Collections.ReadOnlyCollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.ReadOnlyCollectionBase.Count
  - System.Collections.ReadOnlyCollectionBase.GetEnumerator
  - System.Collections.ReadOnlyCollectionBase.InnerList
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.ReadOnlyCollectionBase.System#Collections#ICollection#SyncRoot
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: ResultPropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Метод Contains определяет, является ли указанное значение свойства в этой коллекции."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Задаваемое значение свойства."
    return:
      type: System.Boolean
      description: "Возвращает значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если указанное свойство принадлежит данной коллекции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ResultPropertyValueCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "CopyTo-метод копирует значения свойств из данной коллекции в массив, начиная с определенного индекса массива."
  syntax:
    content: public void CopyTo (object[] values, int index);
    parameters:
    - id: values
      type: System.Object[]
      description: "Массив объектов типа <xref:System.Object>, принимающий значения свойств этой коллекции.</xref:System.Object>"
    - id: index
      type: System.Int32
      description: "Индекс (с нуля) массива, с которого начинается копирование значений свойства."
  overload: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: ResultPropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Метод IndexOf возвращает индекс указанного значения свойства в этой коллекции."
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Задаваемое значение свойства."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс значения указанного свойства. Если объект не найден, возвращается значение-1."
  overload: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ResultPropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Свойство Item возвращает значение свойства, расположенный по указанному индексу."
  remarks: "В C# это свойство является индексатором <xref:System.DirectoryServices.ResultPropertyValueCollection>класса.</xref:System.DirectoryServices.ResultPropertyValueCollection>       В JScript можно использовать по умолчанию индексированные свойства, определенные типом, но нельзя явно определять свои собственные. Однако указание атрибута expando применительно к классу автоматически предоставляет значение по умолчанию индексированное свойство с типом объекта и индекса <xref:System.String>.</xref:System.String>"
  syntax:
    content: public object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс извлекаемого значения свойства."
    return:
      type: System.Object
      description: "Значение свойства, расположенный по указанному индексу."
  overload: System.DirectoryServices.ResultPropertyValueCollection.Item*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.ReadOnlyCollectionBase
  isExternal: false
  name: System.Collections.ReadOnlyCollectionBase
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: ResultPropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: ResultPropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.CopyTo(Object[],Int32)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(System.Object)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: ResultPropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.IndexOf(Object)
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item(System.Int32)
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ResultPropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.ResultPropertyValueCollection.Item(Int32)
- uid: System.DirectoryServices.ResultPropertyValueCollection.Contains*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Contains
  nameWithType: ResultPropertyValueCollection.Contains
- uid: System.DirectoryServices.ResultPropertyValueCollection.CopyTo*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: ResultPropertyValueCollection.CopyTo
- uid: System.DirectoryServices.ResultPropertyValueCollection.IndexOf*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: IndexOf
  nameWithType: ResultPropertyValueCollection.IndexOf
- uid: System.DirectoryServices.ResultPropertyValueCollection.Item*
  parent: System.DirectoryServices.ResultPropertyValueCollection
  isExternal: false
  name: Item
  nameWithType: ResultPropertyValueCollection.Item
