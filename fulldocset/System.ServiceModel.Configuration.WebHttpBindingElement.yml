### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.WebHttpBindingElement
  id: WebHttpBindingElement
  children:
  - System.ServiceModel.Configuration.WebHttpBindingElement.#ctor
  - System.ServiceModel.Configuration.WebHttpBindingElement.#ctor(System.String)
  - System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies
  - System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType
  - System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal
  - System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper
  - System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled
  - System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode
  - System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize
  - System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize
  - System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize
  - System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.WebHttpBindingElement.Properties
  - System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress
  - System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas
  - System.ServiceModel.Configuration.WebHttpBindingElement.Security
  - System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode
  - System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy
  - System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding
  langs:
  - csharp
  name: WebHttpBindingElement
  nameWithType: WebHttpBindingElement
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement
  type: Class
  summary: "Элемент привязки, используемые для настройки конечных точек для [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] веб-служб, которые отвечают на запросы HTTP вместо сообщений SOAP."
  remarks: "[!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] Модель веб-программирования позволяет разработчикам предоставлять [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] веб-службы с помощью HTTP-запросов, использующих «plain old XML» стиля (POX) вместо обмена сообщениями на основе SOAP. Чтобы клиенты могли взаимодействовать со службой, используя HTTP-запросы конечную точку службы должны быть настроены <xref:System.ServiceModel.WebHttpBinding>с <xref:System.ServiceModel.Description.WebHttpBehavior>присоединенного к нему.</xref:System.ServiceModel.Description.WebHttpBehavior> </xref:System.ServiceModel.WebHttpBinding> Веб-модели также требуется, чтобы отдельные операции были снабжены атрибутом <xref:System.ServiceModel.Web.WebGetAttribute>или <xref:System.ServiceModel.Web.WebInvokeAttribute>для их привязки к уникальному сочетанию метода HTTP, например POST (по умолчанию) или GET и суффикса пути URI, по умолчанию — имя операции.</xref:System.ServiceModel.Web.WebInvokeAttribute> </xref:System.ServiceModel.Web.WebGetAttribute>       Поддержка в [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] механизма синдикации и ASP. Интеграция с AJAX построены на основе модели веб-программирования. [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]модели, в разделе [модель программирования WCF Web HTTP](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class WebHttpBindingElement : System.ServiceModel.Configuration.StandardBindingElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.StandardBindingElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.Name
  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: WebHttpBindingElement()
  nameWithType: WebHttpBindingElement.WebHttpBindingElement()
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.WebHttpBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Configuration.WebHttpBindingElement&quot;> </xref> класса."
  remarks: "Имя данного элемента конфигурации имеет значение `null` по умолчанию с помощью этого конструктора."
  syntax:
    content: public WebHttpBindingElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: WebHttpBindingElement(String)
  nameWithType: WebHttpBindingElement.WebHttpBindingElement(String)
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.WebHttpBindingElement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Configuration.WebHttpBindingElement&quot;> </xref> класса и задает имя элемента."
  remarks: "Значение по умолчанию `name` — `null` в <xref:System.ServiceModel.Configuration.WebHttpBindingElement.%23ctor>.</xref:System.ServiceModel.Configuration.WebHttpBindingElement.%23ctor>"
  syntax:
    content: public WebHttpBindingElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя, используемое для данного элемента конфигурации привязки."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies
  id: AllowCookies
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: AllowCookies
  nameWithType: WebHttpBindingElement.AllowCookies
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает значение, указывающее, является ли клиент принимает файлы cookie и распространяет их на будущие запросы."
  remarks: "Это свойство предоставляется для удобства работы с файлами cookie в заголовках HTTP. Если файлы cookie принимаются клиентом, задав свойства `true`, файлов cookie, возвращаемые с сервера, автоматически копируются во все последующие клиентские запросы к этой службе."
  syntax:
    content: public bool AllowCookies { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файлы cookie разрешены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: WebHttpBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает <xref:System.Type>привязки, которую представляет данный элемент конфигурации.</xref:System.Type>"
  syntax:
    content: protected override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "Тип привязки."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WebHttpBindingElement.BypassProxyOnLocal
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает значение, указывающее, следует ли обходить прокси-сервер для локальных адресов."
  remarks: "Интернет-ресурс является локальным, если у него локальный адрес. Локальный адрес — это задача, которая находится на одном компьютере, в локальной сети или в интрасети и является, синтаксически идентифицируемый отсутствием точки (.) как идентификаторы URI «http://webserver/» и «http://localhost/».       Установка BypassProxyOnLocal свойство определяет ли конечные точки, настроенные с <xref:System.ServiceModel.Configuration.WebHttpBindingElement>использовать прокси-сервер при доступе к локальным ресурсам.</xref:System.ServiceModel.Configuration.WebHttpBindingElement>       Если BypassProxyOnLocal `true`, запросы к локальным Интернет-ресурсам не используют прокси-сервера. При BypassProxyOnLocal `false`, все интернет-запросы выполняются через прокси-сервер."
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для обхода прокси-сервер для локальных адресов. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper
  id: ContentTypeMapper
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: ContentTypeMapper
  nameWithType: WebHttpBindingElement.ContentTypeMapper
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает способ сопоставления тип содержимого входящего сообщения формату."
  syntax:
    content: public string ContentTypeMapper { get; set; }
    return:
      type: System.String
      description: "Строка, указывающая на Сопоставитель, который определяет формат для типа содержимого входящего сообщения."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled
  id: CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBindingElement.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает значение, указывающее, междоменные сценариев разрешением."
  syntax:
    content: public bool CrossDomainScriptAccessEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если разрешен других доменов сценариев; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WebHttpBindingElement.HostNameComparisonMode
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI."
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "<xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>Значение, указывающее, используется ли имя узла для доступа к службе при сопоставлении по URI.</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*> Значение по умолчанию — <xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;> </xref>, который в найденном соответствии."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Заданное значение не является допустимым <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>значение.</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*>"
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  id: InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: InitializeFrom(Binding)
  nameWithType: WebHttpBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom(Binding)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Инициализирует содержимое этого элемента конфигурации привязки из значений свойств указанной привязки."
  remarks: "Этот метод включает вызов базового <xref:System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom%28System.ServiceModel.Channels.Binding%29>, задает значения для открытия, закрытия, отправки и получения значения времени ожидания, заданным в указанном `binding`.</xref:System.ServiceModel.Configuration.StandardBindingElement.InitializeFrom%28System.ServiceModel.Channels.Binding%29>"
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>Используется для инициализации данного элемента конфигурации.</xref:System.ServiceModel.Channels.Binding>"
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WebHttpBindingElement.MaxBufferPoolSize
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает максимальный объем памяти в байтах, выделенной для диспетчера буферов, управляющему буферами, которые требуются конечным точкам, использующим эту привязку."
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>Пытается свести к минимуму затраты на использование буферов с помощью буферного пула.</xref:System.ServiceModel.Channels.BufferManager> Буферы требуются для обработки сообщений службой приходящих из канала. Если не достаточный объем памяти буферного пула для обработки потока сообщений <xref:System.ServiceModel.Channels.BufferManager>должен выделить дополнительную память из кучи CLR, что увеличивает нагрузку по сбору мусора.</xref:System.ServiceModel.Channels.BufferManager> Интенсивное выделение памяти из мусорной кучи CLR — это описание, что размер буферного пула слишком мал и производительность можно повысить выделения большего объема памяти путем увеличения предельного количества MaxBufferPoolSize."
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "Максимальный размер в байтах для пула буферов, используемых с конечной точкой, настроенной с этой привязкой. Значение по умолчанию — 65 536 байт."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize
  id: MaxBufferSize
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: MaxBufferSize
  nameWithType: WebHttpBindingElement.MaxBufferSize
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает максимальный объем памяти в байтах, выделяемый для диспетчера буферов сообщений, которые получают сообщения из канала."
  remarks: "<xref:System.ServiceModel.Channels.BufferManager>Позволяет минимизировать затраты на использование буферов с помощью буферного пула.</xref:System.ServiceModel.Channels.BufferManager> Буферы требуются для обработки сообщений службой приходящих из канала. Если не достаточный объем памяти буферного пула для обработки потока сообщений <xref:System.ServiceModel.Channels.BufferManager>должен выделить дополнительную память из кучи CLR, что увеличивает нагрузку по сбору мусора.</xref:System.ServiceModel.Channels.BufferManager> Интенсивное выделение памяти из мусорной кучи CLR, указывает на то, что размер буферного пула слишком мал и производительность можно повысить выделения большего объема памяти путем увеличения <xref:System.ServiceModel.Configuration.BasicHttpBindingElement.MaxBufferPoolSize%2A>предел.</xref:System.ServiceModel.Configuration.BasicHttpBindingElement.MaxBufferPoolSize%2A>"
  syntax:
    content: public int MaxBufferSize { get; set; }
    return:
      type: System.Int32
      description: "Максимальный объем памяти в байтах, доступный для использования диспетчером буфера сообщений. Значение по умолчанию-524 288 (0x80 000) байт."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Задано значение меньше или равно нулю."
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBindingElement.MaxReceivedMessageSize
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает максимальный размер в байтах для сообщений, обрабатываемых этой привязкой."
  remarks: "Размер сообщений, которые могут быть получены по сети с помощью службы <xref:System.ServiceModel.WebHttpBinding>ограничен объемом памяти, выделенной для каждого сообщения.</xref:System.ServiceModel.WebHttpBinding> Это ограничение размера сообщения предназначено позволяет снизить уязвимость для атак отказа в обслуживании (DoS)."
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "Максимальный размер в байтах для сообщений, обрабатываемых этой привязкой. Значение по умолчанию — 65 536 байт."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение меньше нуля."
  - type: System.ServiceModel.QuotaExceededException
    commentId: T:System.ServiceModel.QuotaExceededException
    description: "Сообщения превышает максимальный объем, выделенный."
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: OnApplyConfiguration(Binding)
  nameWithType: WebHttpBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration(Binding)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Инициализирует значения свойств указанной привязки на основе содержимого данного элемента конфигурации привязки."
  syntax:
    content: protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "<xref:System.ServiceModel.Channels.Binding>, Инициализированная на основе содержимого данного элемента конфигурации привязки.</xref:System.ServiceModel.Channels.Binding>"
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>binding</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Тип этого элемента привязки отличается от типа, заданного параметром <code> binding </code>."
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: Properties
  nameWithType: WebHttpBindingElement.Properties
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> экземпляр, содержащий коллекцию <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> объектов, которые могут быть атрибутами или <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> объекты данного элемента конфигурации."
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Объект <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> экземпляр, содержащий коллекцию <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> объектов, которые могут быть атрибутами или <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> объекты данного элемента конфигурации."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WebHttpBindingElement.ProxyAddress
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает URI-адрес прокси-сервера HTTP."
  remarks: "Если <xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A>имеет значение `true`, значение <xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>игнорируется.</xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A> </xref:System.ServiceModel.WebHttpBinding.UseDefaultWebProxy%2A>"
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "Объект <xref:System.Uri>, служит в качестве адреса прокси-сервера HTTP.</xref:System.Uri> Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WebHttpBindingElement.ReaderQuotas
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает элемент конфигурации, содержащий ограничения по сложности сообщений SOAP, которые могут обрабатываться конечными точками, настроенными с этой привязкой."
  remarks: "Ограничения по сложности позволяют защититься от атак отказа в обслуживании (DOS), сложность сообщения используется для перегрузки ресурсов процессора конечной точки. Свойства, представляющие эти ограничения, а также их значения по умолчанию (в байтах), следующим образом:- <xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth%2A>= 32 - <xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength%2A>8192 - <xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength%2A>16384 - <xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead%2A>= 4096 - <xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount%2A>= 16384</xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount%2A> </xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead%2A> =</xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength%2A> </xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength%2A> </xref:System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth%2A>"
  syntax:
    content: public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }
    return:
      type: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
      description: "<xref href=&quot;System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement&quot;> </xref> , Задает ограничения по сложности."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Задано значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значения квот <xref:System.Xml.XmlDictionaryReaderQuotas>доступны только для чтения.</xref:System.Xml.XmlDictionaryReaderQuotas>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Квоты должно быть положительным."
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.Security
  id: Security
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: Security
  nameWithType: WebHttpBindingElement.Security
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.Security
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает элемент конфигурации, содержащий параметры безопасности, используемые с данной привязкой."
  remarks: "Чтобы использовать нестандартный тип безопасности, используйте <xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>конструктор.</xref:System.ServiceModel.WebHttpBinding.%23ctor%28System.ServiceModel.WebHttpSecurityMode%29>"
  syntax:
    content: public System.ServiceModel.Configuration.WebHttpSecurityElement Security { get; }
    return:
      type: System.ServiceModel.Configuration.WebHttpSecurityElement
      description: "<xref href=&quot;System.ServiceModel.Configuration.WebHttpSecurityElement&quot;> </xref> , Используемый с данной привязкой. Значение по умолчанию — <xref href=&quot;System.ServiceModel.WebHttpSecurityMode&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode
  id: TransferMode
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: TransferMode
  nameWithType: WebHttpBindingElement.TransferMode
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает значение, указывающее, использует ли служба, настроенной с помощью привязки, потоковый или буферизованный (или оба) режим передачи сообщений."
  syntax:
    content: public System.ServiceModel.TransferMode TransferMode { get; set; }
    return:
      type: System.ServiceModel.TransferMode
      description: "<xref:System.ServiceModel.TransferMode>Значение, указывающее, является ли служба настроена с помощью привязки, потоковый или буферизованный (или оба) режим передачи сообщений.</xref:System.ServiceModel.TransferMode> Значение по умолчанию — <xref:System.ServiceModel.TransferMode>.</xref:System.ServiceModel.TransferMode>"
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Заданное значение не является допустимым <xref:System.ServiceModel.TransferMode>значение.</xref:System.ServiceModel.TransferMode>"
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WebHttpBindingElement.UseDefaultWebProxy
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает значение, указывающее, должен ли использоваться автоматически настроенный прокси-сервер HTTP системы, если он доступен."
  remarks: "Это ошибка для этого необходимо `true` и <xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>для отличное от`null`.</xref:System.ServiceModel.WebHttpBinding.ProxyAddress%2A>"
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если должен использоваться автоматически настроенный прокси-сервер HTTP системы, если таковой имеется. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding
  id: WriteEncoding
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  langs:
  - csharp
  name: WriteEncoding
  nameWithType: WebHttpBindingElement.WriteEncoding
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding
  type: Property
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Configuration
  summary: "Возвращает или задает кодировку, используемый для текста сообщения."
  syntax:
    content: public System.Text.Encoding WriteEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "<xref:System.Text.Encoding>Указывает кодировку символов, который используется.</xref:System.Text.Encoding> Значение по умолчанию — <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Задано значение <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: false
  name: System.ServiceModel.Configuration.StandardBindingElement
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.QuotaExceededException
  isExternal: true
  name: System.ServiceModel.QuotaExceededException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.#ctor
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: WebHttpBindingElement()
  nameWithType: WebHttpBindingElement.WebHttpBindingElement()
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.WebHttpBindingElement()
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.#ctor(System.String)
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: WebHttpBindingElement(String)
  nameWithType: WebHttpBindingElement.WebHttpBindingElement(String)
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.WebHttpBindingElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBindingElement.AllowCookies
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: BindingElementType
  nameWithType: WebHttpBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBindingElement.BypassProxyOnLocal
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBindingElement.ContentTypeMapper
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBindingElement.CrossDomainScriptAccessEnabled
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBindingElement.HostNameComparisonMode
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: InitializeFrom(Binding)
  nameWithType: WebHttpBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom(Binding)
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBindingElement.MaxBufferPoolSize
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBindingElement.MaxBufferSize
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBindingElement.MaxReceivedMessageSize
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: OnApplyConfiguration(Binding)
  nameWithType: WebHttpBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration(Binding)
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.Properties
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: Properties
  nameWithType: WebHttpBindingElement.Properties
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBindingElement.ProxyAddress
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBindingElement.ReaderQuotas
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas
- uid: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: XmlDictionaryReaderQuotasElement
  nameWithType: XmlDictionaryReaderQuotasElement
  fullName: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.Security
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: Security
  nameWithType: WebHttpBindingElement.Security
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.Security
- uid: System.ServiceModel.Configuration.WebHttpSecurityElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: WebHttpSecurityElement
  nameWithType: WebHttpSecurityElement
  fullName: System.ServiceModel.Configuration.WebHttpSecurityElement
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBindingElement.TransferMode
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode
- uid: System.ServiceModel.TransferMode
  parent: System.ServiceModel
  isExternal: true
  name: TransferMode
  nameWithType: TransferMode
  fullName: System.ServiceModel.TransferMode
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBindingElement.UseDefaultWebProxy
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBindingElement.WriteEncoding
  fullName: System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.#ctor*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: WebHttpBindingElement
  nameWithType: WebHttpBindingElement.WebHttpBindingElement
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.AllowCookies*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: AllowCookies
  nameWithType: WebHttpBindingElement.AllowCookies
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.BindingElementType*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: BindingElementType
  nameWithType: WebHttpBindingElement.BindingElementType
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.BypassProxyOnLocal*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WebHttpBindingElement.BypassProxyOnLocal
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ContentTypeMapper*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: ContentTypeMapper
  nameWithType: WebHttpBindingElement.ContentTypeMapper
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.CrossDomainScriptAccessEnabled*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: CrossDomainScriptAccessEnabled
  nameWithType: WebHttpBindingElement.CrossDomainScriptAccessEnabled
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.HostNameComparisonMode*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WebHttpBindingElement.HostNameComparisonMode
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: InitializeFrom
  nameWithType: WebHttpBindingElement.InitializeFrom
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferPoolSize*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WebHttpBindingElement.MaxBufferPoolSize
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxBufferSize*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: MaxBufferSize
  nameWithType: WebHttpBindingElement.MaxBufferSize
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.MaxReceivedMessageSize*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WebHttpBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.OnApplyConfiguration*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: OnApplyConfiguration
  nameWithType: WebHttpBindingElement.OnApplyConfiguration
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.Properties*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: Properties
  nameWithType: WebHttpBindingElement.Properties
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ProxyAddress*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: ProxyAddress
  nameWithType: WebHttpBindingElement.ProxyAddress
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.ReaderQuotas*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: ReaderQuotas
  nameWithType: WebHttpBindingElement.ReaderQuotas
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.Security*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: Security
  nameWithType: WebHttpBindingElement.Security
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.TransferMode*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: TransferMode
  nameWithType: WebHttpBindingElement.TransferMode
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.UseDefaultWebProxy*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WebHttpBindingElement.UseDefaultWebProxy
- uid: System.ServiceModel.Configuration.WebHttpBindingElement.WriteEncoding*
  parent: System.ServiceModel.Configuration.WebHttpBindingElement
  isExternal: false
  name: WriteEncoding
  nameWithType: WebHttpBindingElement.WriteEncoding
