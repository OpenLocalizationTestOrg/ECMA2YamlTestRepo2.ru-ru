### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.IDataObject
  id: IDataObject
  children:
  - System.Windows.Forms.IDataObject.GetData(System.String)
  - System.Windows.Forms.IDataObject.GetData(System.Type)
  - System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  - System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  - System.Windows.Forms.IDataObject.GetFormats
  - System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  - System.Windows.Forms.IDataObject.SetData(System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  - System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  langs:
  - csharp
  name: IDataObject
  nameWithType: IDataObject
  fullName: System.Windows.Forms.IDataObject
  type: Interface
  summary: "Независимо от формата механизм передачи данных."
  remarks: "`IDataObject` Интерфейс используется методом <xref:System.Windows.Forms.Clipboard>класса и в операции перетаскивания и вставки.</xref:System.Windows.Forms.Clipboard>       При реализации в классе методы IDataObject позволяют пользователю хранить данные в различных форматах в экземпляре класса. Хранение данных в нескольких форматах повышает вероятность того, что целевое приложение, требования к формату, вы можете не знать, можно извлечь сохраненные данные. Чтобы сохранить данные в экземпляре IDataObject, вызовите <xref:System.Windows.Forms.IDataObject.SetData%2A>метод и указать формат данных в `format` параметр.</xref:System.Windows.Forms.IDataObject.SetData%2A> Задать `autoConvert` параметр `false` Если сохраненные данные для преобразования в другой формат при извлечении не нужно. Вызов <xref:System.Windows.Forms.IDataObject.SetData%2A>несколько раз в одном экземпляре IDataObject для хранения данных в нескольких форматах.</xref:System.Windows.Forms.IDataObject.SetData%2A>       Чтобы извлечь сохраненные данные из IDataObject путем вызова <xref:System.Windows.Forms.IDataObject.GetData%2A>метод и указывая, данные форматирования в `format` параметр.</xref:System.Windows.Forms.IDataObject.GetData%2A> Задать `autoConvert` параметр `false` для извлечения только данные, хранящиеся в указанном формате. Чтобы преобразовать хранящиеся данные в указанный формат, задайте `autoConvert` для `true`, или не используйте `autoConvert`.       Чтобы определить форматы данных, хранящихся в IDataObject, используйте следующие методы IDataObject.      -Вызова <xref:System.Windows.Forms.IDataObject.GetFormats%2A>метод для извлечения массива всех форматов, в котором данные недоступны.</xref:System.Windows.Forms.IDataObject.GetFormats%2A> Задать `autoConvert` параметр `false` Чтобы получить только те форматы, в которых хранятся данные. Чтобы получить все форматы, в которых данные недоступны, установите `autoConvert` для `true`, или этот параметр не используется.      -Вызова <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>метод, чтобы определить, доступен ли хранимых данных в определенном формате.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Если хранимые данные для преобразования в указанный формат не нужно, задайте `autoConvert` параметр `false`.       В разделе <xref:System.Windows.Forms.DataObject>класса для реализации этого интерфейса.</xref:System.Windows.Forms.DataObject> В разделе <xref:System.Windows.Forms.DataFormats>класс для стандартных <xref:System.Windows.Forms.Clipboard>форматы данных.</xref:System.Windows.Forms.Clipboard> </xref:System.Windows.Forms.DataFormats>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDataObject
  implements: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  id: GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает данные, связанные с заданным форматом."
  remarks: "Если этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формате. Если данные невозможно преобразовать в указанный формат, этот метод возвращает `null`.       Чтобы определить, связанные с данными или можно преобразовать в формат вызова <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A>список допустимых форматов для данных, хранимых в данном экземпляре.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      Настроек [!NOTE] настроек данных можно преобразовать в другой формат, если он был сохранен, указав, что преобразование разрешено, а требуемый формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject,` to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myDataObject`, which is associated with the `Text` format. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cpp[GetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_9_1.cpp)]\n [!code-cs[GetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_9_1.cs)]\n [!code-vb[GetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_9_1.vb)]"
  syntax:
    content: public object GetData (string format);
    parameters:
    - id: format
      type: System.String
      description: "Формат извлекаемых данных. В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    return:
      type: System.Object
      description: "Данные, связанные с указанным форматом или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  id: GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает данные, связанные с заданным форматом типа класса."
  remarks: "Если этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формате. Если данные невозможно преобразовать в указанный формат, этот метод возвращает `null`.       Чтобы определить, связанные с данными или можно преобразовать в формат вызова <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A>список допустимых форматов для данных, хранимых в данном экземпляре.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      Настроек [!NOTE] настроек данных можно преобразовать в другой формат, если он был сохранен, указав, что преобразование разрешено, а требуемый формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The method is used to retrieve the data stored in `myObject`, which is associated with a specific type, `myType`. The type of the retrieved data is displayed in a message box. The example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[GetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_4_1.cpp)]\n [!code-cs[GetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_4_1.cs)]\n [!code-vb[GetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_4_1.vb)]"
  syntax:
    content: public object GetData (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "Объект <xref:System.Type>представляющий формат извлекаемых данных.</xref:System.Type> В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    return:
      type: System.Object
      description: "Данные, связанные с указанным форматом или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  id: GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Извлекает данные, связанные с указанным форматом, используя значение типа Boolean, чтобы определить необходимость преобразования данных в формате."
  remarks: "Если `autoConvert` параметр `true` и этот метод не удается найти данные в указанном формате, он предпринимает попытку преобразования данных в формат. Если данные невозможно преобразовать в указанный формат, или если данные были сохранены с `autoConvert` равным `false`, этот метод возвращает `null`.       Если `autoConvert` параметр `false`, этот метод возвращает данные в указанном формате, или `null` для найденные данные в этом формате.       Чтобы определить, связанные с данным или можно преобразовать в формат, вызовите <xref:System.Windows.Forms.IDataObject.GetDataPresent%2A>перед вызовом метода GetData.</xref:System.Windows.Forms.IDataObject.GetDataPresent%2A> Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A>список допустимых форматов для данных, хранимых в данном экземпляре.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      Настроек [!NOTE] настроек данных можно преобразовать в другой формат, если он был сохранен, указав, что преобразование разрешено, а требуемый формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetData` method. The example retrieves the data stored in a `DataObject`, using the `autoConvert` parameter to specify whether or not to convert the data format. First, `myDataObject` is created with text data. Then the example tries twice to retrieve the data. In the first trial, it specifies its format as a string and sets the `autoConvert` parameter to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, the example retrieves the same data with the `autoConvert` parameter set to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_14_1.cs)]\n [!code-cpp[GetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_14_1.cpp)]\n [!code-vb[GetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_14_1.vb)]"
  syntax:
    content: public object GetData (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Формат извлекаемых данных. В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для преобразования данных в указанном формате. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Данные, связанные с указанным форматом или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  id: GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Определяет, связанные с данные, хранящиеся в данном экземпляре, или можно преобразовать в указанный формат."
  remarks: "Вызовите этот метод, чтобы определить, существует ли в этом <xref:System.Windows.Forms.DataObject>перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> формате Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A>для форматов, доступных в данном экземпляре.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      Настроек [!NOTE] настроек данных можно преобразовать в другой формат, если он был сохранен, указав, что преобразование разрешено, а требуемый формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object using a string and the `Text` format. Then it verifies that the data is present in the `Text` format and displays the results in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetDataPresent1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_12_1.vb)]\n [!code-cs[GetDataPresent1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_12_1.cs)]\n [!code-cpp[GetDataPresent1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_12_1.cpp)]"
  syntax:
    content: public bool GetDataPresent (string format);
    parameters:
    - id: format
      type: System.String
      description: "Формат, для которого требуется проверить. В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если данные, хранящиеся в связанные с данного экземпляра, или можно преобразовать в указанный формат; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  id: GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Определяет, связанные с данные, хранящиеся в данном экземпляре, или можно преобразовать в указанный формат."
  remarks: "Вызовите этот метод, чтобы определить, существует ли в этом <xref:System.Windows.Forms.DataObject>перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> формате Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A>для форматов, доступных в данном экземпляре.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>      Настроек [!NOTE] настроек данных можно преобразовать в другой формат, если он был сохранен, указав, что преобразование разрешено, а требуемый формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in `myDataObject`. If the test evaluates `true`, it displays the result in a message box and displays the data type in a text box. This example assumes that you have already created a <xref:System.Windows.Forms.Form> named `Form1` and a <xref:System.Windows.Forms.TextBox> named `textBox1`.  \n  \n [!code-cs[GetDataPresent2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_15_1.cs)]\n [!code-cpp[GetDataPresent2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_15_1.cpp)]\n [!code-vb[GetDataPresent2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_15_1.vb)]"
  syntax:
    content: public bool GetDataPresent (Type format);
    parameters:
    - id: format
      type: System.Type
      description: "Объект <xref:System.Type>представляющий формат, для которого требуется проверить.</xref:System.Type> В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если данные, хранящиеся в связанные с данного экземпляра, или можно преобразовать в указанный формат; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  id: GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Определяет, является ли связанный с указанным форматом, используя значение типа Boolean для определения необходимости преобразования данных в формат данных, хранящихся в данном экземпляре."
  remarks: "Вызовите этот метод, чтобы определить, существует ли в этом <xref:System.Windows.Forms.DataObject>перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>.</xref:System.Windows.Forms.IDataObject.GetData%2A> </xref:System.Windows.Forms.DataObject> формате Вызовите <xref:System.Windows.Forms.IDataObject.GetFormats%2A>для форматов, доступных в данном экземпляре.</xref:System.Windows.Forms.IDataObject.GetFormats%2A>       Этот метод возвращает `true` при: - `autoConvert` параметр `true` , и данные в формате, который может быть преобразован в соответствующий формат.      - `autoConvert` Параметр `false` , и данные в соответствующем формате.       Этот метод возвращает `false` при: - `autoConvert` параметр `true` и этот метод не удается найти данные в указанном формате и не может преобразовать их в указанный формат или сохранении данных `autoConvert` значение `false`.      - `autoConvert` Параметр `false`, и данные не существуют в данном экземпляре, в указанном формате.      Настроек [!NOTE] настроек данных можно преобразовать в другой формат, если он был сохранен, указав, что преобразование разрешено, а требуемый формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetDataPresent%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetDataPresent` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it queries the object for data associated with the `Text` format, with the `autoConvert` parameter set to `false`. This trial fails, and the result is displayed in a message box labeled \"Message #1.\" In the second trial, it sets the `autoConvert` parameter to `true`. This trial succeeds, and the result is displayed in a message box labeled \"Message #2.\" The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetDataPresent3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_17_1.cs)]\n [!code-cpp[GetDataPresent3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_17_1.cpp)]\n [!code-vb[GetDataPresent3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_17_1.vb)]"
  syntax:
    content: public bool GetDataPresent (string format, bool autoConvert);
    parameters:
    - id: format
      type: System.String
      description: "Формат, для которого требуется проверить. В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы определить, является ли данные, хранящиеся в данном экземпляре можно преобразовать в указанном формате. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для проверки, является ли данные в указанном формате."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если данные в, или можно преобразовать в указанный формат; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.IDataObject.GetDataPresent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats
  id: GetFormats
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает список всех форматов, связанные с данные, хранящиеся в данном экземпляре, или можно преобразовать в."
  remarks: "Этот метод вызывается для получения всех поддерживаемых форматов данных перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>метод.</xref:System.Windows.Forms.IDataObject.GetData%2A> В разделе <xref:System.Windows.Forms.DataFormats>класс для стандартных форматов.</xref:System.Windows.Forms.DataFormats>      Настроек [!NOTE] настроек данных можно преобразовать в другой формат, если он был сохранен, указав, что преобразование разрешено, а требуемый формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `Text` format. Then it retrieves all the data formats and data conversion formats in the data object, and displays the resulting list in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[GetFormats1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_3_1.cs)]\n [!code-cpp[GetFormats1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_3_1.cpp)]\n [!code-vb[GetFormats1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_3_1.vb)]"
  syntax:
    content: public string[] GetFormats ();
    parameters: []
    return:
      type: System.String[]
      description: "Массив имен, представляющий список всех форматов, поддерживаемых в данных, хранящихся в объекте."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  id: GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает список всех форматов, в которых данные хранятся в данном экземпляре, связанные с или могут быть преобразованы, используя значение типа Boolean для определения ли извлечь все форматы, данные могут быть преобразованы или только собственных данных форматов."
  remarks: "Этот метод вызывается для получения всех поддерживаемых форматов данных перед вызовом <xref:System.Windows.Forms.IDataObject.GetData%2A>метод.</xref:System.Windows.Forms.IDataObject.GetData%2A> В разделе <xref:System.Windows.Forms.DataFormats>класс для стандартных форматов.</xref:System.Windows.Forms.DataFormats>      Настроек [!NOTE] настроек данных можно преобразовать в другой формат, если он был сохранен, указав, что преобразование разрешено, а требуемый формат совместим с форматом данных. Например данные, хранящиеся в виде Юникода могут быть преобразованы в текст.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.GetFormats%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `GetFormats` method. First, it creates a data object (`myDataObject`) using a string and the `UnicodeText` format. Then it makes two queries to get the formats associated with the data. In the first query, it sets the `autoConvert` parameter to `false` : in this case, only the native format of the data is returned. In the second query, it sets the `autoConvert` parameter to `true`, so that it gets the list of formats, including the formats that the data can be converted to. In each case, the resulting list is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[GetFormats2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_13_1.vb)]\n [!code-cpp[GetFormats2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_13_1.cpp)]\n [!code-cs[GetFormats2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_13_1.cs)]"
  syntax:
    content: public string[] GetFormats (bool autoConvert);
    parameters:
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для извлечения всех форматов, данные, хранящиеся в данном экземпляре, связанные с или могут быть преобразованы. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для извлечения только собственные форматы данных."
    return:
      type: System.String[]
      description: "Массив имен, представляющий список всех форматов, поддерживаемых в данных, хранящихся в объекте."
  overload: System.Windows.Forms.IDataObject.GetFormats*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  id: SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Сохраняет указанные данные в этом экземпляре, используя класс данных для формата."
  remarks: "Формат является производным от класса данных.       При извлечении данных, сохраненных с помощью этого метода можно преобразовать в совместимый формат.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`). Then it checks whether the specified data is stored in the data object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData1#1](~/add/codesnippet/csharp/m-system.windows.forms.i_1_1.cs)]\n [!code-vb[SetData1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_1_1.vb)]\n [!code-cpp[SetData1#1](~/add/codesnippet/cpp/m-system.windows.forms.i_1_1.cpp)]"
  syntax:
    content: public void SetData (object data);
    parameters:
    - id: data
      type: System.Object
      description: "Для хранения данных."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  id: SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Сохраняет указанные данные и связанный с ними формат в этом экземпляре."
  remarks: "Если вы не знаете формат целевого приложения, данные можно сохранить в нескольких форматах, с помощью этого метода.       При извлечении данных, сохраненных с помощью этого метода можно преобразовать в совместимый формат.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a string in the object specifying the `UnicodeText` format. Then it retrieves that data stored in the object specifying the `Text` format, so that the data is converted to the `Text` format. The result is displayed in a message box. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cs[SetData2#1](~/add/codesnippet/csharp/m-system.windows.forms.i_0_1.cs)]\n [!code-cpp[SetData2#1](~/add/codesnippet/cpp/m-system.windows.forms.i_0_1.cpp)]\n [!code-vb[SetData2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_0_1.vb)]"
  syntax:
    content: public void SetData (string format, object data);
    parameters:
    - id: format
      type: System.String
      description: "Формат, связанный с данными. В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    - id: data
      type: System.Object
      description: "Для хранения данных."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  id: SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Сохраняет указанные данные и связанный тип класса в этом экземпляре."
  remarks: "Если вы не знаете формат целевого приложения, данные можно сохранить в нескольких форматах, с помощью этого метода.       При извлечении данных, сохраненных с помощью этого метода можно преобразовать в совместимый формат.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a component (`myComponent`) and stores it in a data object (`myDataObject`), using `myType` to specify the data format. Then it checks whether the data of the specified type is stored in the object, and displays the result in a message box. The example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-vb[SetData3#1](~/add/codesnippet/visualbasic/m-system.windows.forms.i_11_1.vb)]\n [!code-cpp[SetData3#1](~/add/codesnippet/cpp/m-system.windows.forms.i_11_1.cpp)]\n [!code-cs[SetData3#1](~/add/codesnippet/csharp/m-system.windows.forms.i_11_1.cs)]"
  syntax:
    content: public void SetData (Type format, object data);
    parameters:
    - id: format
      type: System.Type
      description: "Объект <xref:System.Type>представляющий формат, связанный с данными.</xref:System.Type> В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    - id: data
      type: System.Object
      description: "Для хранения данных."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  id: SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  langs:
  - csharp
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Сохраняет указанные данные и связанный с ними формат в этом экземпляре, используя значение типа Boolean для указания того, можно ли преобразовать данные в другой формат."
  remarks: "Если вы не знаете формат целевого приложения, данные можно сохранить в нескольких форматах, с помощью этого метода.       Для реализации этого метода см. в разделе <xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>.</xref:System.Windows.Forms.DataObject.SetData%2A?displayProperty=fullName>"
  example:
  - "This example uses the <xref:System.Windows.Forms.DataObject> class, which implements `IDataObject`, to demonstrate the use of the `SetData` method. First, it creates a data object (`myDataObject`) and stores a `UnicodeText` string in it, with the `autoConvert` parameter set to `false`. Then it retrieves the format(s) associated with the data stored in the object and displays the result in a message box. The only format associated with the data is the `UnicodeText` format. This example assumes that you have created a <xref:System.Windows.Forms.Form> named `Form1`.  \n  \n [!code-cpp[SetData4#1](~/add/codesnippet/cpp/14ad2ca0-1678-4ad5-a287-_1.cpp)]\n [!code-vb[SetData4#1](~/add/codesnippet/visualbasic/14ad2ca0-1678-4ad5-a287-_1.vb)]\n [!code-cs[SetData4#1](~/add/codesnippet/csharp/14ad2ca0-1678-4ad5-a287-_1.cs)]"
  syntax:
    content: public void SetData (string format, bool autoConvert, object data);
    parameters:
    - id: format
      type: System.String
      description: "Формат, связанный с данными. В разделе <xref href=&quot;System.Windows.Forms.DataFormats&quot;> </xref> для стандартных форматов."
    - id: autoConvert
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы данные для преобразования в другой формат; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: data
      type: System.Object
      description: "Для хранения данных."
  overload: System.Windows.Forms.IDataObject.SetData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Forms.IDataObject.GetData(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String)
  nameWithType: IDataObject.GetData(String)
  fullName: System.Windows.Forms.IDataObject.GetData(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.IDataObject.GetData(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(Type)
  nameWithType: IDataObject.GetData(Type)
  fullName: System.Windows.Forms.IDataObject.GetData(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Forms.IDataObject.GetData(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData(String,Boolean)
  nameWithType: IDataObject.GetData(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetData(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String)
  nameWithType: IDataObject.GetDataPresent(String)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.Type)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(Type)
  nameWithType: IDataObject.GetDataPresent(Type)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(Type)
- uid: System.Windows.Forms.IDataObject.GetDataPresent(System.String,System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent(String,Boolean)
  nameWithType: IDataObject.GetDataPresent(String,Boolean)
  fullName: System.Windows.Forms.IDataObject.GetDataPresent(String,Boolean)
- uid: System.Windows.Forms.IDataObject.GetFormats
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats()
  nameWithType: IDataObject.GetFormats()
  fullName: System.Windows.Forms.IDataObject.GetFormats()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.IDataObject.GetFormats(System.Boolean)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats(Boolean)
  nameWithType: IDataObject.GetFormats(Boolean)
  fullName: System.Windows.Forms.IDataObject.GetFormats(Boolean)
- uid: System.Windows.Forms.IDataObject.SetData(System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Object)
  nameWithType: IDataObject.SetData(Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Object)
  nameWithType: IDataObject.SetData(String,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.Type,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(Type,Object)
  nameWithType: IDataObject.SetData(Type,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(Type,Object)
- uid: System.Windows.Forms.IDataObject.SetData(System.String,System.Boolean,System.Object)
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData(String,Boolean,Object)
  nameWithType: IDataObject.SetData(String,Boolean,Object)
  fullName: System.Windows.Forms.IDataObject.SetData(String,Boolean,Object)
- uid: System.Windows.Forms.IDataObject.GetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetData
  nameWithType: IDataObject.GetData
- uid: System.Windows.Forms.IDataObject.GetDataPresent*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetDataPresent
  nameWithType: IDataObject.GetDataPresent
- uid: System.Windows.Forms.IDataObject.GetFormats*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: GetFormats
  nameWithType: IDataObject.GetFormats
- uid: System.Windows.Forms.IDataObject.SetData*
  parent: System.Windows.Forms.IDataObject
  isExternal: false
  name: SetData
  nameWithType: IDataObject.SetData
