### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IServiceContainer
  id: IServiceContainer
  children:
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  langs:
  - csharp
  name: IServiceContainer
  nameWithType: IServiceContainer
  fullName: System.ComponentModel.Design.IServiceContainer
  type: Interface
  summary: "Предоставляет контейнер для служб."
  remarks: "Контейнер службы является, по определению, поставщик служб. Помимо служб, он также предоставляет механизм добавления и удаления служб. Службы являются основой архитектуры платформы .NET Framework во время разработки. Службы предоставляют доступ во время разработки объекты для определенных функций и методов, реализованных объектом службы, предоставляющий службы или службы.       Чтобы получить службы времени разработки, вызовите <xref:System.ComponentModel.Component.GetService%2A>метод компонента, находящегося в режиме конструктора.</xref:System.ComponentModel.Component.GetService%2A> Конструкторы и другие объекты можно добавлять или удалять службы во время разработки с помощью <xref:System.ComponentModel.Design.IDesignerHost>интерфейса.</xref:System.ComponentModel.Design.IDesignerHost>       Контейнеры служб могут содержаться в других, образующие дерево контейнеров служб. По умолчанию интерфейс IServiceContainer добавляет службы в ближайший контейнер служб. При добавлении службы его можно добавить с инструкциями для ее распространения. При повышении уровня службы, он добавляется любой родительский контейнер служб на вплоть до достижения верхней части дерева контейнеров служб. Это позволяет конструктору предоставить общую службу, можно использовать другие объекты в процессе."
  example:
  - "The following code example contains the code for a <xref:System.Windows.Forms.Form> that is configured to demonstrate the behavior of a network of linked service containers.  \n  \n [!code-cs[IServiceContainerExample#1](~/add/codesnippet/csharp/t-system.componentmodel._108_1.cs)]\n [!code-cpp[IServiceContainerExample#1](~/add/codesnippet/cpp/t-system.componentmodel._108_1.cpp)]\n [!code-vb[IServiceContainerExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._108_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IServiceContainer : IServiceProvider
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Добавляет указанную службу в контейнер службы."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#3](~/add/codesnippet/csharp/4abfcb9d-94a0-4da6-9ce0-_1.cs)]\n [!code-vb[ServiceContainerExample#3](~/add/codesnippet/visualbasic/4abfcb9d-94a0-4da6-9ce0-_1.vb)]\n [!code-cpp[ServiceContainerExample#3](~/add/codesnippet/cpp/4abfcb9d-94a0-4da6-9ce0-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Тип добавляемой службы."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Объект обратного вызова, используемый для создания службы. Это позволяет службе, объявленные как доступные, но создание объекта откладывается до запроса службы."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  id: AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object)
  nameWithType: IServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Добавляет указанную службу в контейнер службы."
  remarks: ''
  example:
  - "The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#2](~/add/codesnippet/csharp/78041303-5e2c-4bbb-9d48-_1.cs)]\n [!code-vb[ServiceContainerExample#2](~/add/codesnippet/visualbasic/78041303-5e2c-4bbb-9d48-_1.vb)]\n [!code-cpp[ServiceContainerExample#2](~/add/codesnippet/cpp/78041303-5e2c-4bbb-9d48-_1.cpp)]"
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Тип добавляемой службы."
    - id: serviceInstance
      type: System.Object
      description: "Экземпляр типа службы для добавления. Этот объект должен реализовывать или наследовать тип, определяемый `serviceType` параметра."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Добавляет указанную службу в контейнер службы с возможностью повышения службы до родительских контейнеров службы."
  syntax:
    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Тип добавляемой службы."
    - id: callback
      type: System.ComponentModel.Design.ServiceCreatorCallback
      description: "Объект обратного вызова, используемый для создания службы. Это позволяет службе, объявленные как доступные, но создание объекта откладывается до запроса службы."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы распространить этот запрос на все родительские контейнеры служб; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  id: AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: AddService(Type,Object,Boolean)
  nameWithType: IServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Добавляет указанную службу в контейнер службы с возможностью повышения службы на все родительские контейнеры служб."
  syntax:
    content: public void AddService (Type serviceType, object serviceInstance, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Тип добавляемой службы."
    - id: serviceInstance
      type: System.Object
      description: "Экземпляр типа службы для добавления. Этот объект должен реализовывать или наследовать тип, определяемый `serviceType` параметра."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы распространить этот запрос на все родительские контейнеры служб; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IServiceContainer.AddService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  id: RemoveService(System.Type)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: RemoveService(Type)
  nameWithType: IServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Удаляет указанный тип службы из контейнера служб."
  remarks: ''
  example:
  - "The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/m-system.componentmodel._36_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/m-system.componentmodel._36_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/m-system.componentmodel._36_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Тип удаляемой службы."
  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  id: RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  langs:
  - csharp
  name: RemoveService(Type,Boolean)
  nameWithType: IServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Удаляет указанный тип службы из контейнера службы с возможностью повышения службы до родительских контейнеров службы."
  remarks: ''
  example:
  - "The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \n  \n [!code-cs[ServiceContainerExample#4](~/add/codesnippet/csharp/1ae84a0c-9fec-44a0-ac5a-_1.cs)]\n [!code-vb[ServiceContainerExample#4](~/add/codesnippet/visualbasic/1ae84a0c-9fec-44a0-ac5a-_1.vb)]\n [!code-cpp[ServiceContainerExample#4](~/add/codesnippet/cpp/1ae84a0c-9fec-44a0-ac5a-_1.cpp)]"
  syntax:
    content: public void RemoveService (Type serviceType, bool promote);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Тип удаляемой службы."
    - id: promote
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы распространить этот запрос на все родительские контейнеры служб; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.ServiceCreatorCallback
  parent: System.ComponentModel.Design
  isExternal: false
  name: ServiceCreatorCallback
  nameWithType: ServiceCreatorCallback
  fullName: System.ComponentModel.Design.ServiceCreatorCallback
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,Object)
  nameWithType: IServiceContainer.AddService(Type,Object)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,ServiceCreatorCallback,Boolean)
  nameWithType: IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,ServiceCreatorCallback,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService(Type,Object,Boolean)
  nameWithType: IServiceContainer.AddService(Type,Object,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.AddService(Type,Object,Boolean)
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService(Type)
  nameWithType: IServiceContainer.RemoveService(Type)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type)
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService(Type,Boolean)
  nameWithType: IServiceContainer.RemoveService(Type,Boolean)
  fullName: System.ComponentModel.Design.IServiceContainer.RemoveService(Type,Boolean)
- uid: System.ComponentModel.Design.IServiceContainer.AddService*
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: AddService
  nameWithType: IServiceContainer.AddService
- uid: System.ComponentModel.Design.IServiceContainer.RemoveService*
  parent: System.ComponentModel.Design.IServiceContainer
  isExternal: false
  name: RemoveService
  nameWithType: IServiceContainer.RemoveService
