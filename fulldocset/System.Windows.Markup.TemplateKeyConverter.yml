### YamlMime:ManagedReference
items:
- uid: System.Windows.Markup.TemplateKeyConverter
  id: TemplateKeyConverter
  children:
  - System.Windows.Markup.TemplateKeyConverter.#ctor
  - System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  langs:
  - csharp
  name: TemplateKeyConverter
  nameWithType: TemplateKeyConverter
  fullName: System.Windows.Markup.TemplateKeyConverter
  type: Class
  summary: "Реализуется преобразователь типов для <xref href=&quot;System.Windows.TemplateKey&quot;> </xref> объектов, имеющих намеренно не методами преобразования типа. Преобразователь типа применяет и сообщает этого поведения."
  remarks: "<xref:System.Windows.TemplateKey>Тип не должен использовать путь преобразователя типов для преобразования значений (следует использовать расширения разметки).</xref:System.Windows.TemplateKey> По этой причине <xref:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>и <xref:System.Windows.Markup.TemplateKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29>методы всегда возвращают `false`.</xref:System.Windows.Markup.TemplateKeyConverter.CanConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> </xref:System.Windows.Markup.TemplateKeyConverter.CanConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Type%29> <xref:System.Windows.Markup.TemplateKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>И <xref:System.Windows.Markup.TemplateKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29>методов, всегда вызывает исключение.</xref:System.Windows.Markup.TemplateKeyConverter.ConvertTo%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%2CSystem.Type%29> </xref:System.Windows.Markup.TemplateKeyConverter.ConvertFrom%28System.ComponentModel.ITypeDescriptorContext%2CSystem.Globalization.CultureInfo%2CSystem.Object%29>      <a name=&quot;xamlTextUsage_TemplateKeyConverter&quot;></a>## Использование текста XAML"
  syntax:
    content: 'public sealed class TemplateKeyConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.#ctor
  id: '#ctor'
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: TemplateKeyConverter()
  nameWithType: TemplateKeyConverter.TemplateKeyConverter()
  fullName: System.Windows.Markup.TemplateKeyConverter.TemplateKeyConverter()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Markup.TemplateKeyConverter&quot;> </xref> класса."
  syntax:
    content: public TemplateKeyConverter ();
    parameters: []
  overload: System.Windows.Markup.TemplateKeyConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TemplateKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Определяет, можно преобразовать объект заданного типа в экземпляр <xref href=&quot;System.Windows.TemplateKey&quot;> </xref>."
  remarks: "См. примечания в <xref:System.Windows.Markup.TemplateKeyConverter>.</xref:System.Windows.Markup.TemplateKeyConverter>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Контекст формата, который предоставляет информацию о среде, из которой вызывается данный преобразователь."
    - id: sourceType
      type: System.Type
      description: "Тип которого определяется для преобразования."
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TemplateKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Определяет, является ли экземпляр <xref href=&quot;System.Windows.TemplateKey&quot;> </xref> можно преобразовать в указанный тип."
  remarks: "См. примечания в <xref:System.Windows.Markup.TemplateKeyConverter>.</xref:System.Windows.Markup.TemplateKeyConverter>"
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Контекст формата, который предоставляет информацию о среде, из которой вызывается данный преобразователь."
    - id: destinationType
      type: System.Type
      description: "Тип которого определяется для преобразования."
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Markup.TemplateKeyConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TemplateKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.TemplateKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Пытается преобразовать указанный объект (string) <xref href=&quot;System.Windows.TemplateKey&quot;> </xref>."
  remarks: "См. примечания в <xref:System.Windows.Markup.TemplateKeyConverter>.</xref:System.Windows.Markup.TemplateKeyConverter>"
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Контекст формата, который предоставляет информацию о среде, из которой вызывается данный преобразователь."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Сведения о культуре."
    - id: source
      type: System.Object
      description: "Преобразуемый объект."
    return:
      type: System.Object
      description: "Всегда создает исключение."
  overload: System.Windows.Markup.TemplateKeyConverter.ConvertFrom*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>source</code>не удается преобразовать."
  platform:
  - net462
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TemplateKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Markup
  summary: "Пытается преобразовать <xref href=&quot;System.Windows.TemplateKey&quot;> </xref> в указанный тип, используя заданный контекст."
  remarks: "См. примечания в <xref:System.Windows.Markup.TemplateKeyConverter>.</xref:System.Windows.Markup.TemplateKeyConverter>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Контекст формата, который предоставляет информацию о среде, из которой вызывается данный преобразователь."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Сведения о культуре."
    - id: value
      type: System.Object
      description: "Преобразуемый объект."
    - id: destinationType
      type: System.Type
      description: "Целевой тип преобразования объекта."
    return:
      type: System.Object
      description: "Всегда создает исключение."
  overload: System.Windows.Markup.TemplateKeyConverter.ConvertTo*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>value</code>не удается преобразовать."
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Markup.TemplateKeyConverter.#ctor
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: TemplateKeyConverter()
  nameWithType: TemplateKeyConverter.TemplateKeyConverter()
  fullName: System.Windows.Markup.TemplateKeyConverter.TemplateKeyConverter()
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TemplateKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TemplateKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TemplateKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.Windows.Markup.TemplateKeyConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TemplateKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.Windows.Markup.TemplateKeyConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.Windows.Markup.TemplateKeyConverter.#ctor*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: TemplateKeyConverter
  nameWithType: TemplateKeyConverter.TemplateKeyConverter
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertFrom*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TemplateKeyConverter.CanConvertFrom
- uid: System.Windows.Markup.TemplateKeyConverter.CanConvertTo*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TemplateKeyConverter.CanConvertTo
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertFrom*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TemplateKeyConverter.ConvertFrom
- uid: System.Windows.Markup.TemplateKeyConverter.ConvertTo*
  parent: System.Windows.Markup.TemplateKeyConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TemplateKeyConverter.ConvertTo
