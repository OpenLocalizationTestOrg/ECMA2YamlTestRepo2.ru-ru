### YamlMime:ManagedReference
items:
- uid: System.Deployment.Application.ApplicationDeployment
  id: ApplicationDeployment
  children:
  - System.Deployment.Application.ApplicationDeployment.ActivationUri
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  - System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  - System.Deployment.Application.ApplicationDeployment.CurrentVersion
  - System.Deployment.Application.ApplicationDeployment.DataDirectory
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  - System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  - System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  - System.Deployment.Application.ApplicationDeployment.IsFirstRun
  - System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  - System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  - System.Deployment.Application.ApplicationDeployment.Update
  - System.Deployment.Application.ApplicationDeployment.UpdateAsync
  - System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  - System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  - System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  - System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  - System.Deployment.Application.ApplicationDeployment.UpdateLocation
  - System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  langs:
  - csharp
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
  type: Class
  summary: "Поддерживает обновление текущего развертывания программным способом и обрабатывает загрузку файлов по требованию. Этот класс не наследуется."
  remarks: "Можно настроить на [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложению проверять наличие обновлений и устанавливать их автоматически посредством `subscription` манифеста развертывания. Однако некоторые приложения требуется более точный контроль их обновления. Можно программно установить необходимые обновления и предлагать пользователям устанавливать необязательные обновления при их возможности. Отключив обновления подписки в манифесте развертывания, можно получить полный контроль политик обновления приложения. Кроме того, можно использовать автоматическое подписку в сочетании с ApplicationDeployment, который позволяет [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] для обновления приложение периодически, но использует ApplicationDeployment для загрузки обновлений вскоре после их выпуска.       Можно проверить наличие обновления развертывания с помощью <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>или <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>метод; последний метод вызывает <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>событий при успешном завершении.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>Возвращает важные сведения об обновлении, такие как номер версии и является ли оно обязательное обновление для текущих пользователей.</xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> Если обновление доступно, его можно установить с помощью <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>или <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; последний метод вызывает <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>событий после завершения установки обновления.</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> </xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.Update%2A> Для больших обновлений может получать уведомления о ходе выполнения с помощью <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>и <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>события и воспользоваться этими сведениями в <xref:System.ComponentModel.ProgressChangedEventArgs>для уведомления пользователя о состоянии загрузки.</xref:System.ComponentModel.ProgressChangedEventArgs> </xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged>       Можно также использовать ApplicationDeployment загрузка больших файлов и сборок по требованию. Эти файлы должны быть помечены во время установки манифесте развертывания приложения как «необязательные». Файлы в любой момент можно загрузить в течение периода времени приложения с помощью <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>или <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>метод.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> Вы можете загрузить сборки, перед их загрузкой в память путем предоставления обработчика событий для <xref:System.AppDomain.AssemblyResolve>события в <xref:System.AppDomain>классе.</xref:System.AppDomain> </xref:System.AppDomain.AssemblyResolve> Дополнительные сведения см. в разделе [Пошаговое руководство: загрузка сборок по требованию с помощью API развертывания ClickOnce конструктора](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек при обновлении [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения во время выполнения приложения, пользователь не увидит обновления до вызова <xref:System.Windows.Forms.Application.Restart%2A>метода <xref:System.Windows.Forms.Application>который будет закрыть текущему запущенному экземпляру приложения и немедленно перезапустить его.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A>       ApplicationDeployment не имеет открытого конструктора; получить экземпляры класса в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение через <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>свойство.</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> Вы используете <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>свойство для проверки текущего приложения [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения.</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>       ApplicationDeployment поддерживает проверка наличия обновлений и асинхронную загрузку обновленных файлов с помощью нового [Обзор асинхронной модели на основе событий](~/add/includes/ajax-current-ext-md.md), который предоставляет обратные вызовы завершения, как класс события. ApplicationDeployment запускает и управляет потоками автоматически выполняет обратный вызов приложения в правильном потоке пользовательского интерфейса. С помощью этого класса можно обновить, не блокируя приложения, чтобы этот пользователь может продолжать работу во время установки обновления. Если пользователю придется прекратить всю работу, пока выполняется обновление, рекомендуется использовать синхронные методы.      Настроек [!NOTE] настроек выполнения асинхронного обновления требуется импортировать, приложение как <xref:System.Deployment.Application>и <xref:System.ComponentModel>пространства имен.</xref:System.ComponentModel> </xref:System.Deployment.Application>"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, the code example installs the update asynchronously. This code should be added to a form that contains a <xref:System.Windows.Forms.TextBox> named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/t-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public sealed class ApplicationDeployment
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  id: ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает URL-адрес, используемый для запуска манифеста развертывания приложения."
  remarks: "Это свойство будет работать в полностью доверенной и частично доверенных приложениях."
  example:
  - "The following code shows how to retrieve the URL parameters by using ActivationUri, and how to use the <xref:System.Web.HttpUtility> class to parse the query string safely. Multiple occurrences of the same query string variable are consolidated in one entry of the returned <xref:System.Collections.Specialized.NameValueCollection>.  \n  \n [!code-cs[ClickOnceQueryString#1](~/add/codesnippet/csharp/ClickOnceQueryString/Form1.cs#1)]\n [!code-vb[ClickOnceQueryString#1](~/add/codesnippet/visualbasic/ClickOnceQueryStringVB/Form1.vb#1)]"
  syntax:
    content: public Uri ActivationUri { get; }
    return:
      type: System.Uri
      description: "Строка нулевой длины, если `TrustUrlParameters` свойства в манифесте развертывания <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, или если пользователь предоставил UNC-путь для развертывания или открыл его локально. В противном случае возвращается полный URL-адрес, используемый для запуска приложения, включая любые параметры."
  overload: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  id: CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Выполняет те же функции, как <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>, но возвращает расширенные сведения о доступных обновлениях.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>"
  remarks: "Метод CheckForDetailedUpdate позволяет синхронной получить же расширенные сведения асинхронной вызывающим объектам получить с помощью <xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>класса.</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>"
  example:
  - "The following code example uses CheckForDetailedUpdate to retrieve the information about the latest update. If an update exists, it installs it automatically only if it is a required update; otherwise, it prompts the user.  \n  \n [!code-cs[ClickOnceAPI#7](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#7)]\n [!code-cpp[ClickOnceAPI#7](~/add/codesnippet/cpp/m-system.deployment.appl_4_1.cpp)]\n [!code-vb[ClickOnceAPI#7](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#7)]"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate ();
    parameters: []
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "<xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref> Для данного обновления."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущее приложение настроено для поддержки обновлений или выполняется другая операция проверки обновления уже выполняется."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Не удается загрузить манифест развертывания. Это исключение будет отображаться в <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>свойство <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> событий.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "Манифест развертывания поврежден. Повторно создайте манифест приложения, прежде чем пытаться выполнить развертывание этого приложения для пользователей. Это исключение будет отображаться в <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>свойство <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> событий.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  id: CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Выполняет те же функции, как <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>, но возвращает расширенные сведения о доступных обновлениях.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate*>"
  syntax:
    content: public System.Deployment.Application.UpdateCheckInfo CheckForDetailedUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, обновления будут применяться без уведомления и диалоговое окно не отображается."
    return:
      type: System.Deployment.Application.UpdateCheckInfo
      description: "<xref href=&quot;System.Deployment.Application.UpdateCheckInfo&quot;> </xref> Для данного обновления."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  id: CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Проверяет <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>для определения доступности нового обновления.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  remarks: "Метод CheckForUpdate сравнивает версии развертывания, установленный с версией, указанной в манифесте развертывания, посетите <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A> Если версия на сервере отличается от установленной версии, он возвращает `true`.       Этот метод будет заблокирован до завершения выполнения проверки. Чтобы проверить наличие обновлений в асинхронном режиме, используйте <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>метод вместо.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>      Настроек [!NOTE] настроек CheckForUpdate Если видит, что доступно обновление, и пользователь не был установлен, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] запросит у пользователя, которое будет доступно обновление приложения при следующем запуске. Нет возможности отключить этого запроса. (Если приложение необходимое обновление [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] установка без запроса подтверждения.)"
  example:
  - "The following code example checks for an application update; if one is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#5](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#5)]\n [!code-cpp[ClickOnceAPI#5](~/add/codesnippet/cpp/m-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#5](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#5)]"
  syntax:
    content: public bool CheckForUpdate ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступно новое обновление; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]немедленно выдает исключение при вызове метода CheckForUpdate во время обновления уже выполняется.'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Не удается загрузить манифест развертывания."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "Манифест развертывания поврежден. Скорее всего, потребуется повторное развертывание приложения, чтобы устранить эту проблему."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  id: CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Проверяет <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>для определения доступности нового обновления.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  syntax:
    content: public bool CheckForUpdate (bool persistUpdateCheckResult);
    parameters:
    - id: persistUpdateCheckResult
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, обновления будут применяться без уведомления и диалоговое окно не отображается."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступно новое обновление; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  id: CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Проверяет <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>асинхронно, чтобы определить, доступен ли новое обновление.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation*>"
  remarks: "CheckForUpdateAsync возвращается немедленно и запускает отдельный поток загрузки обновленного приложения. Если метод завершается или отменяется, происходит <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted>событий.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted> Можно использовать <xref:System.ComponentModel.AsyncCompletedEventArgs>в этом обработчике событий, чтобы определить, является ли операция была отменена, или если возникло исключение во время обновления.</xref:System.ComponentModel.AsyncCompletedEventArgs>       Асинхронное обновление можно отменить, вызвав <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel%2A>      Настроек [!NOTE] настроек Если <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>видит, что доступно обновление, и пользователь не был установлен, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] запросит у пользователя, которое будет доступно обновление приложения при следующем запуске.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A> Нет возможности отключить этого запроса. (Если приложение необходимое обновление [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] установка без запроса подтверждения.)"
  example:
  - "The following example checks for an update asynchronously, and installs the update if one exists.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void CheckForUpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: '[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]немедленно выдает исключение, если вы вызываете метод CheckForUpdateAsync во время обновления уже выполняется.'
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Не удается загрузить манифест развертывания. Это исключение отображается в <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>свойство <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> событий.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "Манифест развертывания поврежден. Скорее всего, потребуется повторное развертывание приложения, чтобы устранить эту проблему. Это исключение отображается в <xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>свойство <xref href=&quot;System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted&quot;> </xref> событий.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error*>"
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  id: CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Отменяет асинхронную проверку обновлений."
  remarks: "Используйте этот метод, чтобы отменить проверку обновлений для инициализации <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>метод.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>       Этот метод не отменит все фоновое обновление, возможно, уже выполняется, такие как обновление запущен в рамках подписки. Дополнительные сведения о подписках см. в разделе [Выбор стратегии обновления ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void CheckForUpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  id: CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит при <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>завершена.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>"
  remarks: "<xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>Класс поможет определить, среди прочего, версия обновления, как большие обновления, и является ли доступное обновление обязательными или необязательными.</xref:System.Deployment.Application.CheckForUpdateCompletedEventArgs>"
  example:
  - "The following code example uses CheckForUpdateCompleted to decide whether to ask the user to install the available application update. If the update is a mandatory upgrade, the CheckForUpdateCompleted event handler does not prompt the user. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.CheckForUpdateCompletedEventHandler CheckForUpdateCompleted;
    return:
      type: System.Deployment.Application.CheckForUpdateCompletedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  id: CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит при обновлении хода выполнения можно найти в <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>вызовите.</xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*>"
  remarks: "Манифест CheckForUpdateProgressChanged отчеты о состоянии загрузки для развертывания приложения. Это может быть важной информации для пользователей, которые загружают развертывания через медленное сетевое соединение."
  example:
  - "The following code example uses the CheckForUpdateProgressChanged event to inform the user how much of the deployment manifest is left to download. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/d621aa2f-b92e-4e9d-b698-_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler CheckForUpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  id: CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает текущий <xref href=&quot;System.Deployment.Application.ApplicationDeployment&quot;> </xref> для этого развертывания."
  remarks: "Невозможно создать экземпляры <xref:System.Deployment.Application.ApplicationDeployment>непосредственно в приложении; необходимо получить допустимый экземпляр через свойство CurrentDeployment.</xref:System.Deployment.Application.ApplicationDeployment>       Статическое свойство CurrentDeployment действителен только в приложении, которое было развернуто с помощью [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]. Пытается вызвать это свойство, отличными от[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения будет создано исключение. Если вы разрабатываете приложение, которое может или не могут быть развернуты с помощью [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)], используйте <xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>свойство для проверки текущей программы [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения.</xref:System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed%2A>"
  example:
  - "The following code example retrieves CurrentDeployment and checks to determine whether the application has been updated in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_12_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public static System.Deployment.Application.ApplicationDeployment CurrentDeployment { get; }
    return:
      type: System.Deployment.Application.ApplicationDeployment
      description: "Текущее развертывание."
  overload: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "Предпринята попытка вызова этого статического свойства, отличным от[!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  id: CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает версию развертывания для текущего выполняемого экземпляра приложения."
  remarks: "CurrentVersion будет отличаться от <xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A>Если нового обновления был установлен, но еще не был вызван <xref:System.Windows.Forms.Application.Restart%2A>.</xref:System.Windows.Forms.Application.Restart%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdatedVersion%2A> Если манифест развертывания настроен на автоматическое выполнение обновлений, можно сравнить эти два значения, чтобы определить, если необходимо перезапустить приложение."
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_7_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public Version CurrentVersion { get; }
    return:
      type: System.Version
      description: "Текущая версия развертывания."
  overload: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  id: DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает путь к [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] каталог данных."
  syntax:
    content: public string DataDirectory { get; }
    return:
      type: System.String
      description: "Строка, содержащая путь к каталогу данных приложения на локальном диске."
  overload: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  id: DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Загружает набор необязательных файлов по требованию."
  remarks: "В [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение во время инициализации или обновления не загружаются файлы, отмеченные как «необязательные» в манифесте приложения. Метод DownloadFileGroup загружает все файлы, принадлежащие к именованной группы по требованию, чтобы они не используют сетевые ресурсы и места на диске, пока не убедитесь, что пользователю необходимо их. Например некоторым пользователям может потребоваться использовать пакет для анализа данных включается в приложении на ежедневной основе, тогда может никогда не вызвать другим пользователям.       Чтобы использовать сборки, на которую был загружен с DownloadFileGroup, присоединить прослушиватель событий <xref:System.AppDomain.AssemblyResolve>событие <xref:System.AppDomain.CurrentDomain%2A>.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.AssemblyResolve> Пример см. в разделе =[Пошаговое руководство: загрузка сборок по требованию с помощью API развертывания ClickOnce конструктора](~/add/includes/ajax-current-ext-md.md).       Все файлы загружаются [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] кэша приложения и являются таким образом изолировано в текущей версии приложения. Предположим, что после приложение загружает в файловую группу, пользователь устанавливает новую версию приложения, но позже возвращается к предыдущей версии приложения. В этом случае предыдущая версия по-прежнему будет иметь копии файлов, изначально загруженном. Дополнительные сведения о доступе к файлам данных см. в разделе [доступ к локальным и удаленным данным в приложениях ClickOnce](~/add/includes/ajax-current-ext-md.md).       DownloadFileGroup работает в частично доверенных приложениях, то есть, в каком-либо [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение, работающее с ограниченными разрешениями. Тем не менее при попытке динамической загрузки сборок приложению потребуется полное доверие.       Загрузка файлов данных по требованию в настоящее время не поддерживается.       Приложение не будет отвечать на запросы на ввод данных до возвращения методом DownloadFileGroup пользователем. Если вам нужно загрузить файлы, не прерывая работу пользователя рабочего процесса, используйте <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>метод вместо.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>       Не удается загрузить один файл только его имя файла. Чтобы загрузить один файл, назначьте его имя группы в вашей [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] развертывания и загрузки в группу с помощью этого метода."
  example:
  - "The following code example demonstrates how to load an assembly on demand by listening for the <xref:System.AppDomain.AssemblyResolve> event.  \n  \n [!code-cs[ClickOnceOnDemandCmdLine#2](~/add/codesnippet/csharp/6f3e5fcc-9a7b-4ff6-a5e4-_1.cs)]"
  syntax:
    content: public void DownloadFileGroup (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "Именованная группа файлов для загрузки. Все файлы, помеченные «необязательные» в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения следует указать имя группы."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code> Параметр имеет значение null или иметь нулевую длину."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  id: DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Загружает по требованию набор необязательных файлов в фоновом режиме."
  remarks: "В [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение во время инициализации или обновления не загружаются файлы, отмеченные как «необязательные» в манифесте приложения. Метод DownloadFileGroupAsync загружает все файлы, принадлежащие к именованной группы по требованию, чтобы они не используют сетевые ресурсы и места на диске, пока не убедитесь, что пользователю необходимо их. Такой подход работает не только для статических файлов, но также и для сборок, которые приложение может или не требоваться. Например некоторым пользователям может потребоваться использовать пакет для анализа данных включается в приложении на ежедневной основе, тогда может никогда не вызвать другим пользователям.       Загрузка сборок по требованию, присоедините прослушиватель событий <xref:System.AppDomain.AssemblyResolve>событие <xref:System.AppDomain.CurrentDomain%2A>.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.AssemblyResolve> Пример см. в разделе [Пошаговое руководство: загрузка сборок по требованию с помощью API развертывания ClickOnce](~/add/includes/ajax-current-ext-md.md).       Все сборки загружаются [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] кэш приложения.       Все статические файлы загружаются в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] каталог данных приложения и являются таким образом изолировано в текущей версии приложения. Предположим, что после приложение загружает в файловую группу, пользователь устанавливает новую версию приложения, но позже возвращается к предыдущей версии приложения. В этом случае предыдущая версия по-прежнему будет иметь копии файлов, изначально загруженном. Дополнительные сведения о доступе к статическим файлам см. в разделе [доступ к локальным и удаленным данным в приложениях ClickOnce](~/add/includes/ajax-current-ext-md.md).       Вы можете загрузить одновременно, используя <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> нескольких файловых групп Позволяет отличать одну из них с помощью <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>свойство <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>класса, который передается <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>событий.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> Если нужно передать более сложное состояние, можно использовать <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>для передачи в `state` объекта.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>работает в частично доверенных приложениях, то есть, в каком-либо [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение, работающее с ограниченными разрешениями.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> Тем не менее при попытке динамической загрузки сборок приложению потребуется полное доверие.       Загрузка файлов данных по требованию в настоящее время не поддерживается.       Не удается загрузить один файл только его имя файла. Чтобы загрузить один файл, назначьте его имя группы в вашей [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] развертывания и загрузки в группу с помощью этого метода.       Чтобы Отмена асинхронной операции загрузки, вызовите <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>метод.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "Именованная группа файлов для загрузки. Все файлы, помеченные «необязательные» в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения следует указать имя группы."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code> Параметр имеет значение null или иметь нулевую длину."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удалось инициировать более одной операции загрузки <code> groupName </code> одновременно."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  id: DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Загружает по требованию набор необязательных файлов в фоновом режиме и передает фрагмент состояния приложения в обратных вызовов событий."
  remarks: "В [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение во время инициализации или обновления не загружаются файлы, отмеченные как «необязательные» в манифесте приложения. Можно использовать <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>метод для загрузки всех файлов, принадлежащих именованную группу по требованию, так что они не используют сетевые ресурсы и места на диске пока не убедитесь, чтобы их.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> Такой подход работает не только для статических файлов, но также и для сборок, которые приложение может или не требоваться. Например некоторым пользователям может потребоваться использовать пакет для анализа данных включается в приложении на ежедневной основе, тогда может никогда не вызвать другим пользователям. Загрузка сборок по требованию, присоедините прослушиватель событий <xref:System.AppDomain.AssemblyResolve>событие <xref:System.AppDomain.CurrentDomain%2A>.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.AssemblyResolve>       С помощью метода DownloadFileGroupAsync можно загрузить несколько файловых групп одновременно. Позволяет отличать одну из них с помощью <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A>свойство <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>класса, который передается <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged>событий.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs> </xref:System.Deployment.Application.DeploymentProgressChangedEventArgs.Group%2A> Если нужно передать более сложное состояние, можно использовать для передачи в DownloadFileGroupAsync `state` объекта.       Все статические файлы загружаются в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] каталог данных приложения и являются таким образом изолировано в текущей версии приложения. Дополнительные сведения о доступе к статическим файлам см. в разделе [доступ к локальным и удаленным данным в приложениях ClickOnce](~/add/includes/ajax-current-ext-md.md). . Предположим, приложение загружает в файловую группу, пользователь устанавливает новую версию приложения, но более поздней версии пользователь возвращается к предыдущей версии приложения. В этом случае предыдущая версия по-прежнему будет иметь копии файлов, изначально загруженном.       <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>работает в частично доверенных приложениях, то есть, в каком-либо [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение, работающее с ограниченными разрешениями.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> Тем не менее при попытке динамической загрузки сборок приложению потребуется полное доверие.       Загрузка файлов данных по требованию в настоящее время не поддерживается.       Чтобы Отмена асинхронной операции загрузки, вызовите <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>метод.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel%2A>"
  syntax:
    content: public void DownloadFileGroupAsync (string groupName, object userState);
    parameters:
    - id: groupName
      type: System.String
      description: "Именованная группа файлов для загрузки. Все файлы, помеченные «необязательные» в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения следует указать имя группы."
    - id: userState
      type: System.Object
      description: "Произвольный объект, содержащий сведения о состоянии для асинхронной операции."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> groupName </code> Параметр имеет значение null или иметь нулевую длину."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удалось инициировать более одной операции загрузки <code> groupName </code> одновременно."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  id: DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Отменяет асинхронную файл загрузки."
  syntax:
    content: public void DownloadFileGroupAsyncCancel (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "Именованная группа файлов для загрузки. Все файлы, помеченные «необязательные» в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения следует указать имя группы."
  overload: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>groupName</code>не может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  id: DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит для главного потока приложения после завершения загрузки файла."
  remarks: "DownloadFileGroupCompleted событие вызывается для основного потока приложения. Это потока можно вызывать элементы управления приложения Windows Forms непосредственно внутри этого обратного вызова.       Проверьте <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>свойство <xref:System.ComponentModel.AsyncCompletedEventArgs>предоставленный для этого обратного вызова.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Если это свойство имеет `null`, загрузка завершилась успешно; Если это не `null`, не удалось успешно завершить установку и можно найти дополнительные сведения об ошибке установки через <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`..  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/d8c90486-6b41-4c55-b911-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DownloadFileGroupCompletedEventHandler DownloadFileGroupCompleted;
    return:
      type: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  id: DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит, когда сведения о состоянии можно найти в операции загрузки файла, инициализированный вызовом <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*>"
  remarks: "DownloadFileGroupProgressChanged событие вызывается для основного потока приложения. Это потока можно вызывать элементы управления приложения Windows Forms непосредственно внутри этого обратного вызова.       Используйте сведения, предоставленные в <xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>для передачи сведений о ходе выполнения для пользователей.</xref:System.Deployment.Application.DeploymentProgressChangedEventArgs>"
  example:
  - "The following code example downloads a group of Help files in the background. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/dd149587-df74-4c6a-9251-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler DownloadFileGroupProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  id: IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Проверяет, скачаны ли уже именованная группа файлов на клиентском компьютере."
  remarks: "IsFileGroupDownloaded работает в частично доверенном приложении без любых требований к безопасности.       При обновлении приложения, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] копирует все файлы данных по требованию из предыдущей версии в каталог данных новой версии. Если вы загрузите новые версии этих файлов, следует удалить все данные, которые вы хотите сохранить старой версии и переместите его в новой версии."
  example:
  - "The following code example downloads all of the files in the `HelpFiles` group to disk.  \n  \n [!code-cs[ClickOnceAPI#8](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#8)]\n [!code-cpp[ClickOnceAPI#8](~/add/codesnippet/cpp/ff7c4993-a9b0-4966-b9a0-_1.cpp)]\n [!code-vb[ClickOnceAPI#8](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#8)]"
  syntax:
    content: public bool IsFileGroupDownloaded (string groupName);
    parameters:
    - id: groupName
      type: System.String
      description: "Именованная группа файлов для загрузки. Все файлы, помеченные «необязательные» в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения следует указать имя группы."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если файловая группа уже были загружены для текущей версии приложения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если была установлена новая версия приложения, и новая версия не добавлены, удалены или изменить файлы в файловой группе, возвращает IsFileGroupDownloaded <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  exceptions:
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "<code>groupName</code>не файловой группы, определенные в манифесте приложения."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  id: IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает значение, указывающее, является ли это при первом запуске этого приложения на клиентском компьютере."
  remarks: "Используйте IsFirstRun, чтобы определить, следует ли выполнять никаких операций одноразовую инициализацию при первом запуске приложения.       Не следует полагать, что значение IsFirstRun `true` указывает, что этот экземпляр приложения является первым из отображать свой пользовательский интерфейс для пользователя. Из-за того, система планирует процессов, один экземпляр приложения может иметь значение свойства IsFirstRun `true`, но другой экземпляр может быть первым для отображения на экране. Значение этого свойства сбрасывается всякий раз, когда пользователь обновляет из одной версии до следующего. Если вы хотите выполнить операцию только при первом запуске любой версии запустить приложение, необходимо будет выполнить дополнительную проверку, такие как проверка существования файл, созданный впервые, или хранение флаг с помощью **параметры приложения**."
  example:
  - "The following code example uses IsFirstRun to decide whether to check for an update to the file group `HelpFiles`. If one or more of the files have been updated, it calls <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A> to obtain the new versions.  \n  \n [!code-cs[ClickOnceAPI#9](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#9)]\n [!code-vb[ClickOnceAPI#9](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#9)]"
  syntax:
    content: public bool IsFirstRun { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если эта версия приложения никогда не был запущен на клиентском компьютере, прежде чем; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  id: IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает значение, указывающее, является ли текущее приложение [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения."
  remarks: "Если требуется, чтобы приложение будет работать как внутри, так и за пределами [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] развертывания (например, если необходимо выполнить отладку перед развертыванием приложения на локальном компьютере), проверки IsNetworkDeployed перед обращением к <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>свойство.</xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A>       Возвращает IsNetworkDeployed `true` независимо от того, установлен или размещенного в сети приложения, а также независимо от того, был ли он установлен с веб-сайта, общей папки или компакт-диска."
  example:
  - "The following code example retrieves <xref:System.Deployment.Application.ApplicationDeployment.CurrentDeployment%2A> by using IsNetworkDeployed first to ensure that the reference is not `null`.  \n  \n [!code-cs[ClickOnceAPI#2](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#2)]\n [!code-cpp[ClickOnceAPI#2](~/add/codesnippet/cpp/p-system.deployment.appl_0_1.cpp)]"
  syntax:
    content: public static bool IsNetworkDeployed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если это [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  id: TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает дату и время [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] Последняя проверка наличия обновления приложения."
  remarks: "Объект [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложение можно настроить для обновления подписки. В этом сценарии [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] опрашивает расположение развертывания приложения автоматически через интервалы, определенные в манифесте развертывания и определяет, существует ли обновление. TimeOfLastUpdateCheck Возвращает время последней проверки наличия обновлений независимо от того, является ли она была начата подпиской или явную проверку с использованием <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A>, <xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A>, <xref:System.Deployment.Application.ApplicationDeployment.Update%2A>, или <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>метод.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.Update%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.CheckForUpdate%2A>       Если проверка обновления не выполнено, так как приложение было установлено, TimeOfLastUpdateCheck Возвращает время установки."
  example:
  - "The following code example checks whether a [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] application has been checked for available updates in the past three days.  \n  \n [!code-cs[ClickOnceAPI#3](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#3)]\n [!code-cpp[ClickOnceAPI#3](~/add/codesnippet/cpp/p-system.deployment.appl_8_1.cpp)]\n [!code-vb[ClickOnceAPI#3](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#3)]"
  syntax:
    content: public DateTime TimeOfLastUpdateCheck { get; }
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Проверки последнего обновления.</xref:System.DateTime>"
  overload: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.Update
  id: Update
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Запускает синхронной загрузки и установки последней версии этого приложения."
  remarks: "Приложение называется обновляется при публикации новой версии приложения в расположении, заданном <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, и номер версии в манифесте развертывания приложения больше, чем номер версии приложения, установленные на компьютере пользователя.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>       Вызов обновления будет блокироваться до обновление загружено на компьютер клиента и устанавливается в [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] кэшировать; в течение этого времени приложение не будет отвечать на запросы для пользователя. Если вы хотите поддерживать скорость реагирования приложения или отображение отчета о состоянии во время загрузки, используйте <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>метод вместо.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>       Загружает все файлы, которые не помечены как «необязательные» в манифесте приложения. Можно загрузить дополнительные файлы по требованию с помощью <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>или <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>метод.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]могут уже обновление приложения автоматически при вызове метода обновления; в этом случае вызов этого метода вызывает исключение <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       Если вы обновили один или несколько файлов в развертывании, но манифест приложения не обновлялся, вы получите <xref:System.Deployment.Application.InvalidDeploymentException>.</xref:System.Deployment.Application.InvalidDeploymentException> Большую часть времени, повторное развертывание вашей [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] приложения может решить проблему. Это исключение также будет возникать, если подпись открытого ключа в манифест развертывания и манифест приложения отсутствует или является недопустимым.       Обновление может запросить более высокий уровень доверия на локальном компьютере, чем для предыдущей версии приложения. Если приложение использует развертывание надежных приложений, диспетчер доверия среды CLR проверяет манифест развертывания, чтобы определить, содержит ли лицензию доверия. Если манифест развертывания не содержит соответствующую лицензию доверия [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] установка будет прервана и выдает <xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException> Метод Update никогда не отображают предложит пользователя, следует ли предоставить приложению разрешения для выполнения."
  example:
  - "The following code example checks for an application update; if an update is available, it installs it synchronously.  \n  \n [!code-cs[ClickOnceAPI#6](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#6)]\n [!code-cpp[ClickOnceAPI#6](~/add/codesnippet/cpp/m-system.deployment.appl_6_1.cpp)]\n [!code-vb[ClickOnceAPI#6](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#6)]"
  syntax:
    content: public bool Update ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если была обновлена приложения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Deployment.Application.ApplicationDeployment.Update*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "Локальный компьютер не предоставляет приложение уровень разрешений, запрошенных для выполнения."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "Ваш [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] развертывания поврежден. Советы для диагностики и устранения этой проблемы см. в разделе [Устранение неполадок развертывания ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Не удалось загрузить новое развертывание из расположения в сети."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "В настоящее время выполняется обновление приложения."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  id: UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Начинает операцию асинхронной загрузки и установки последней версии этого приложения."
  remarks: "Приложение называется обновляется при публикации новой версии приложения в расположении, заданном <xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>, и номер версии в манифесте развертывания приложения больше, чем номер версии приложения, установленные на компьютере пользователя.</xref:System.Deployment.Application.ApplicationDeployment.UpdateLocation%2A>       При загрузке обновления, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] вызовет <xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged>обработчик событий для основного потока приложения содержат состояние загрузки.</xref:System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged> После завершения асинхронного обновления, или возникает исключение, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] вызовет <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>событие для основного потока приложения.</xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted> Изучите <xref:System.ComponentModel.AsyncCompletedEventArgs>предоставленный для этого события, чтобы определить, успешно ли выполнено обновление.</xref:System.ComponentModel.AsyncCompletedEventArgs>       Если UpdateAsync вызывает исключение, [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] вызовы <xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>и задает <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>Свойства <xref:System.ComponentModel.AsyncCompletedEventArgs>на исключение, вызванное исключение.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdateCompleted>       UpdateAsync будет загружать все файлы в развертывании не помечен как «необязательные» в манифесте приложения. Можно загрузить дополнительные файлы по требованию с помощью <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>или <xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A>метод.</xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync%2A> </xref:System.Deployment.Application.ApplicationDeployment.DownloadFileGroup%2A>       [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)]могут уже обновление приложения автоматически при вызове метода UpdateAsync; в этом случае вызов этого метода вызывает исключение <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException>       Если вы обновили один или несколько файлов в развертывании, но манифест приложения не обновлялся, вы получите <xref:System.Deployment.Application.InvalidDeploymentException>.</xref:System.Deployment.Application.InvalidDeploymentException> В большинстве случаев, перестроение манифест приложения может решить проблему. Это исключение также будет возникать, если подпись открытого ключа в манифест развертывания и манифест приложения отсутствует или является недопустимым.       Обновление может запросить более высокий уровень доверия на локальном компьютере, чем для предыдущей версии приложения. Если приложение использует развертывание надежных приложений, диспетчер доверия среды CLR проверяет манифест развертывания, чтобы определить, содержит ли лицензию доверия. Если манифест развертывания не содержит соответствующую лицензию доверия [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] установка будет прервана и выдает <xref:System.Deployment.Application.TrustNotGrantedException>.</xref:System.Deployment.Application.TrustNotGrantedException> UpdateAsync никогда не будет отображаться запрос запросом, следует ли предоставить приложению разрешения для выполнения."
  example:
  - "The following code example determines whether a new update is available at application load time; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/m-system.deployment.appl_2_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public void UpdateAsync ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  exceptions:
  - type: System.Deployment.Application.TrustNotGrantedException
    commentId: T:System.Deployment.Application.TrustNotGrantedException
    description: "Локальный компьютер не предоставляет этого приложения уровень разрешений, запрошенных для выполнения."
  - type: System.Deployment.Application.InvalidDeploymentException
    commentId: T:System.Deployment.Application.InvalidDeploymentException
    description: "Ваш [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] развертывания поврежден. Советы для диагностики и устранения этой проблемы см. в разделе [Устранение неполадок развертывания ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  - type: System.Deployment.Application.DeploymentDownloadException
    commentId: T:System.Deployment.Application.DeploymentDownloadException
    description: "Не удалось загрузить новое развертывание из расположения в сети."
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  id: UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
  type: Method
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Отменяет асинхронное обновление инициировано <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "UpdateAsyncCancel только отменяет обновление инициировано вызов <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>; он не отменяет обновление запущен в рамках подписки.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync%2A>"
  syntax:
    content: public void UpdateAsyncCancel ();
    parameters: []
  overload: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  id: UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит, когда [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] закончила обновление приложения в результате вызова <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "UpdateCompleted событие вызывается для основного потока приложения. Элементы управления приложения Windows Forms непосредственно внутри этого обратного вызова может вызвать без возникновения исключения.       Проверьте <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>свойство <xref:System.ComponentModel.AsyncCompletedEventArgs>предоставленный для этого обратного вызова.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> Если это свойство имеет `null`, что установка прошла успешно; Если это не `null`, не удалось успешно завершить установку и можно найти дополнительные сведения об этой ошибке установки через <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>свойство.</xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> После загрузки обновления необходимо вызвать <xref:System.Windows.Forms.Application.Restart%2A>метод <xref:System.Windows.Forms.Application>для использования новой версии приложения.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A>       Если установка обновления была отменена с помощью вызова <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>, <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>свойство <xref:System.ComponentModel.AsyncCompletedEventArgs>класс будет `true`.</xref:System.ComponentModel.AsyncCompletedEventArgs> </xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A> </xref:System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel%2A>       Чтобы использовать этот обработчик событий, приложение необходимо импортировать оба <xref:System.Deployment.Application>и <xref:System.ComponentModel>пространства имен.</xref:System.ComponentModel> </xref:System.Deployment.Application>"
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously. The example requires that you deploy a Windows Forms application that includes a <xref:System.Windows.Forms.StatusStrip> control, and that this control contain a <xref:System.Windows.Forms.ToolStripStatusLabel> control named `downloadStatus`.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_3_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler UpdateCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  id: UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает полное имя приложения после его обновления."
  syntax:
    content: public string UpdatedApplicationFullName { get; }
    return:
      type: System.String
      description: "Объект <xref:System.String>, содержащий полное имя приложения.</xref:System.String>"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  id: UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Возвращает версию последнего загруженного обновления."
  remarks: "UpdatedVersion отличается от <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>Если новое обновление установлено, но еще не был вызван <xref:System.Windows.Forms.Application.Restart%2A> <xref:System.Windows.Forms.Application>.</xref:System.Windows.Forms.Application> </xref:System.Windows.Forms.Application.Restart%2A> </xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A> Если манифест развертывания для приложения настроен на автоматическое выполнение обновлений, можно сравнить эти два значения, чтобы определить, следует ли перезапускать приложение.       Если приложение не была обновлена, UpdatedVersion возвращает то же значение, как <xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>.</xref:System.Deployment.Application.ApplicationDeployment.CurrentVersion%2A>"
  example:
  - "The following code example defines a method that determines whether [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] has updated the application.  \n  \n [!code-cs[ClickOnceAPI#4](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#4)]\n [!code-cpp[ClickOnceAPI#4](~/add/codesnippet/cpp/p-system.deployment.appl_5_1.cpp)]\n [!code-vb[ClickOnceAPI#4](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#4)]"
  syntax:
    content: public Version UpdatedVersion { get; }
    return:
      type: System.Version
      description: "<xref:System.Version>Описывающий версию обновления.</xref:System.Version>"
  overload: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  id: UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  type: Property
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Получает веб-сайт или общую папку, из которой осуществлялось обновление приложения."
  remarks: "UpdateLocation может отличаться от веб-сайта, используемый для загрузки приложения изначально, если для развертывания приложения настроен для использования перенаправления обновления.       Это значение может быть изменено только в манифесте развертывания приложения."
  syntax:
    content: public Uri UpdateLocation { get; }
    return:
      type: System.Uri
      description: "Путь обновления, выраженное как HTTP, HTTPS или URL-адрес файла; или как Windows сетевой путь (UNC)."
  overload: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  id: UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  langs:
  - csharp
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  type: Event
  assemblies:
  - System.Deployment
  namespace: System.Deployment.Application
  summary: "Происходит, когда [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] содержит новые сведения о состоянии для операции обновления, инициированные вызовом <xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>метод.</xref:System.Deployment.Application.ApplicationDeployment.UpdateAsync*>"
  remarks: "UpdateProgressChanged событие вызывается для основного потока приложения. Элементы управления приложения Windows Forms непосредственно внутри этого обратного вызова может вызвать без возникновения исключения."
  example:
  - "The following code example determines at application load time whether a new update is available; if a required update is available, it installs the update asynchronously.  \n  \n [!code-cs[ClickOnceAPI#1](~/add/codesnippet/csharp/ClickOnceAPI/Form1.cs#1)]\n [!code-cpp[ClickOnceAPI#1](~/add/codesnippet/cpp/e-system.deployment.appl_1_1.cpp)]\n [!code-vb[ClickOnceAPI#1](~/add/codesnippet/visualbasic/ClickOnceAPIVB/Form1.vb#1)]"
  syntax:
    content: public event System.Deployment.Application.DeploymentProgressChangedEventHandler UpdateProgressChanged;
    return:
      type: System.Deployment.Application.DeploymentProgressChangedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Deployment.Application.DeploymentDownloadException
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentDownloadException
  nameWithType: DeploymentDownloadException
  fullName: System.Deployment.Application.DeploymentDownloadException
- uid: System.Deployment.Application.InvalidDeploymentException
  parent: System.Deployment.Application
  isExternal: false
  name: InvalidDeploymentException
  nameWithType: InvalidDeploymentException
  fullName: System.Deployment.Application.InvalidDeploymentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Deployment.Application.TrustNotGrantedException
  parent: System.Deployment.Application
  isExternal: false
  name: TrustNotGrantedException
  nameWithType: TrustNotGrantedException
  fullName: System.Deployment.Application.TrustNotGrantedException
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
  fullName: System.Deployment.Application.ApplicationDeployment.ActivationUri
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate()
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate()
- uid: System.Deployment.Application.UpdateCheckInfo
  parent: System.Deployment.Application
  isExternal: false
  name: UpdateCheckInfo
  nameWithType: UpdateCheckInfo
  fullName: System.Deployment.Application.UpdateCheckInfo
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate()
  nameWithType: ApplicationDeployment.CheckForUpdate()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(System.Boolean)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate(Boolean)
  nameWithType: ApplicationDeployment.CheckForUpdate(Boolean)
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdate(Boolean)
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync()
  nameWithType: ApplicationDeployment.CheckForUpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel()
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateCompleted
  nameWithType: ApplicationDeployment.CheckForUpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateCompleted
- uid: System.Deployment.Application.CheckForUpdateCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: CheckForUpdateCompletedEventHandler
  nameWithType: CheckForUpdateCompletedEventHandler
  fullName: System.Deployment.Application.CheckForUpdateCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateProgressChanged
  nameWithType: ApplicationDeployment.CheckForUpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.CheckForUpdateProgressChanged
- uid: System.Deployment.Application.DeploymentProgressChangedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DeploymentProgressChangedEventHandler
  nameWithType: DeploymentProgressChangedEventHandler
  fullName: System.Deployment.Application.DeploymentProgressChangedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment
  parent: System.Deployment.Application
  isExternal: false
  name: ApplicationDeployment
  nameWithType: ApplicationDeployment
  fullName: System.Deployment.Application.ApplicationDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
  fullName: System.Deployment.Application.ApplicationDeployment.CurrentVersion
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
  fullName: System.Deployment.Application.ApplicationDeployment.DataDirectory
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup(String)
  nameWithType: ApplicationDeployment.DownloadFileGroup(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(System.String,System.Object)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync(String,Object)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync(String,Object)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync(String,Object)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel(String)
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel(String)
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupCompleted
  nameWithType: ApplicationDeployment.DownloadFileGroupCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupCompleted
- uid: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
  parent: System.Deployment.Application
  isExternal: false
  name: DownloadFileGroupCompletedEventHandler
  nameWithType: DownloadFileGroupCompletedEventHandler
  fullName: System.Deployment.Application.DownloadFileGroupCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupProgressChanged
  nameWithType: ApplicationDeployment.DownloadFileGroupProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(System.String)
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded(String)
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded(String)
  fullName: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded(String)
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
  fullName: System.Deployment.Application.ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
  fullName: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
  fullName: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Deployment.Application.ApplicationDeployment.Update
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update()
  nameWithType: ApplicationDeployment.Update()
  fullName: System.Deployment.Application.ApplicationDeployment.Update()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync()
  nameWithType: ApplicationDeployment.UpdateAsync()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsync()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel()
  nameWithType: ApplicationDeployment.UpdateAsyncCancel()
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel()
- uid: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateCompleted
  nameWithType: ApplicationDeployment.UpdateCompleted
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
  fullName: System.Deployment.Application.ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateLocation
- uid: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateProgressChanged
  nameWithType: ApplicationDeployment.UpdateProgressChanged
  fullName: System.Deployment.Application.ApplicationDeployment.UpdateProgressChanged
- uid: System.Deployment.Application.ApplicationDeployment.ActivationUri*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: ActivationUri
  nameWithType: ApplicationDeployment.ActivationUri
- uid: System.Deployment.Application.ApplicationDeployment.CheckForDetailedUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForDetailedUpdate
  nameWithType: ApplicationDeployment.CheckForDetailedUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdate*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdate
  nameWithType: ApplicationDeployment.CheckForUpdate
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsync
  nameWithType: ApplicationDeployment.CheckForUpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.CheckForUpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CheckForUpdateAsyncCancel
  nameWithType: ApplicationDeployment.CheckForUpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.CurrentDeployment*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentDeployment
  nameWithType: ApplicationDeployment.CurrentDeployment
- uid: System.Deployment.Application.ApplicationDeployment.CurrentVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: CurrentVersion
  nameWithType: ApplicationDeployment.CurrentVersion
- uid: System.Deployment.Application.ApplicationDeployment.DataDirectory*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DataDirectory
  nameWithType: ApplicationDeployment.DataDirectory
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroup*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroup
  nameWithType: ApplicationDeployment.DownloadFileGroup
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsync
  nameWithType: ApplicationDeployment.DownloadFileGroupAsync
- uid: System.Deployment.Application.ApplicationDeployment.DownloadFileGroupAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: DownloadFileGroupAsyncCancel
  nameWithType: ApplicationDeployment.DownloadFileGroupAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.IsFileGroupDownloaded*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFileGroupDownloaded
  nameWithType: ApplicationDeployment.IsFileGroupDownloaded
- uid: System.Deployment.Application.ApplicationDeployment.IsFirstRun*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsFirstRun
  nameWithType: ApplicationDeployment.IsFirstRun
- uid: System.Deployment.Application.ApplicationDeployment.IsNetworkDeployed*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: IsNetworkDeployed
  nameWithType: ApplicationDeployment.IsNetworkDeployed
- uid: System.Deployment.Application.ApplicationDeployment.TimeOfLastUpdateCheck*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: TimeOfLastUpdateCheck
  nameWithType: ApplicationDeployment.TimeOfLastUpdateCheck
- uid: System.Deployment.Application.ApplicationDeployment.Update*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: Update
  nameWithType: ApplicationDeployment.Update
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsync*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsync
  nameWithType: ApplicationDeployment.UpdateAsync
- uid: System.Deployment.Application.ApplicationDeployment.UpdateAsyncCancel*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateAsyncCancel
  nameWithType: ApplicationDeployment.UpdateAsyncCancel
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedApplicationFullName*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedApplicationFullName
  nameWithType: ApplicationDeployment.UpdatedApplicationFullName
- uid: System.Deployment.Application.ApplicationDeployment.UpdatedVersion*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdatedVersion
  nameWithType: ApplicationDeployment.UpdatedVersion
- uid: System.Deployment.Application.ApplicationDeployment.UpdateLocation*
  parent: System.Deployment.Application.ApplicationDeployment
  isExternal: false
  name: UpdateLocation
  nameWithType: ApplicationDeployment.UpdateLocation
