### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "Управляет службами проверки подлинности форм для веб-приложений. Этот класс не наследуется."
  remarks: "Проверка подлинности форм разрешает проверку пользователя и пароля для веб-приложений, которые не требуют проверки подлинности Windows. С помощью форм, сведения о пользователе хранятся в внешнему источнику данных, таких как <xref:System.Web.Security.Membership>базы данных, или в файле конфигурации приложения.</xref:System.Web.Security.Membership> После проверки подлинности пользователя, проверки подлинности форм хранит билет проверки подлинности в файле cookie или в URL-АДРЕСЕ, прошедшего проверку подлинности пользователя не требуется предоставлять учетные данные при каждом запросе.       Проверка подлинности форм включена, задав `mode` атрибута элемента конфигурации для `Forms`. Можно потребовать наличия билет проверки подлинности пользователя с помощью элемента конфигурации отклонить запрос любого неизвестного пользователя, как показано в следующем примере все запросы к приложению.      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```В предыдущем примере любой запрос к странице ASP.NET, который является частью приложения требуется допустимое имя пользователя, предоставленный для проверки подлинности форм. Если имя пользователя не существует, затем перенаправляет запрос на настроенный <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Класс FormsAuthentication предоставляет доступ к методам и свойствам, которые можно использовать в приложении, которое выполняет проверку подлинности пользователей. <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>Метод перенаправляет браузер настроенного <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>для пользователей для входа в приложение.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>Метод перенаправляет прошедшего проверку подлинности пользователя обратно в исходный защищенный URL-адрес, который был запрошен или <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Существуют методы, которые позволяют управлять билетов проверки подлинности форм, при необходимости."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> класса."
  remarks: "Этот конструктор не предназначен для использования в коде."
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Проверяет имя пользователя и пароль для получения учетных данных, хранящихся в файле конфигурации приложения."
  remarks: "Метод проверки подлинности проверяет учетные данные пользователя, которые хранятся в разделе файла конфигурации приложения. Кроме того, можно использовать членства ASP.NET для хранения учетных данных пользователя и вызова <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>проверить учетные данные.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Дополнительные сведения см. в разделе [Управление пользователями с помощью членства](~/add/includes/ajax-current-ext-md.md).       Для повышения безопасности можно зашифровать пароли, которые хранятся в файле конфигурации приложения с помощью <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>метод.</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "Имя пользователя."
    - id: password
      type: System.String
      description: "Пароль пользователя."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имя пользователя и пароль являются допустимыми; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение домена файла cookie проверки подлинности форм."
  remarks: "Значение свойства CookieDomain задается в файле конфигурации для приложения ASP.NET с помощью `domain` атрибута элемента конфигурации. Значение свойства CookieDomain определяет, <xref:System.Web.HttpCookie.Domain%2A>что файл cookie будет использоваться for.</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "<xref:System.Web.HttpCookie.Domain*>Файла cookie проверки подлинности форм.</xref:System.Web.HttpCookie.Domain*> Значение по умолчанию — пустая строка (»»)."
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, настроено ли приложение для проверки подлинности форм без поддержки файлов cookie."
  remarks: "Свойство CookieMode отражает значение `cookieless` атрибута элемента конфигурации. Свойство CookieMode определяет, является ли <xref:System.Web.Security.FormsAuthenticationTicket>значение будет сохранен в файле cookie сеанса в браузере или хранящихся в <xref:System.Web.HttpRequest.QueryString%2A>свойство.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      Настроек [!NOTE] настроек при <xref:System.Web.Security.FormsAuthenticationTicket>значение хранится в URI, длина сформированный URI может быть длиннее максимально допустимую длину.</xref:System.Web.Security.FormsAuthenticationTicket> Это часто случается при <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>свойству присвоено имя приложения, имя приложения: long (40 символов), при имен пользователей в приложении длинные или когда длинные <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>строки хранятся в <xref:System.Web.Security.FormsAuthenticationTicket>значение.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Если сформированный URI слишком длинный, веб-сервер возвратит `400 - Bad Request` ошибки."
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Один из <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> значений, указывающее, настроено ли приложение для проверки подлинности форм без поддержки файлов cookie. Значение по умолчанию — <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, является ли приложение настроено для поддержки проверки подлинности форм без поддержки файлов cookie."
  remarks: "Свойство CookiesSupported возвращает значение на основе <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>значение и возможности браузера.</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Если <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>свойству <xref:System.Web.HttpCookieMode>, свойство CookiesSupported возвращает `true`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Если <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>свойству <xref:System.Web.HttpCookieMode>, свойство CookiesSupported возвращает `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Если <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>свойству <xref:System.Web.HttpCookieMode>, свойство CookiesSupported возвращает `true` Если браузер поддерживает файлы cookie и включены файлы cookie; в противном случае CookiesSupported свойство возвратит `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Если <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>свойству <xref:System.Web.HttpCookieMode>, CookiesSupported свойство возвратит `true` Если <xref:System.Web.HttpRequest.Browser%2A>для текущего <xref:System.Web.HttpContext.Request%2A>поддерживает файлы cookie и перенаправление с файлы cookie; в противном случае свойство CookiesSupported возвращает `false`.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если приложение настроено для поддержки проверки подлинности форм без поддержки файлов cookie; в противном случае <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> объекта, основанного на зашифрованный форм-билет проверки подлинности передается в метод."
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "Зашифрованный билет проверки подлинности."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. Если <code> encryptedTicket </code> параметр не является допустимым билетом, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> возвращается."
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Получает URL-адрес, который <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> класс выполнит перенаправление, если перенаправление не указан URL-адрес."
  remarks: "Значение свойства DefaultUrl задается в файле конфигурации для приложения ASP.NET с помощью `defaultUrl` атрибута элемента конфигурации. Свойство DefaultUrl используется <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>метод, если нет возвращаемый URL-адрес включается в запрос.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Аналогичным образом <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>метод вернет DefaultUrl, если нет возвращаемый URL-адрес включается в запрос.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "URL-адрес, <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> класс выполнит перенаправление, если перенаправление не указан URL-адрес. Значение по умолчанию — «default.aspx»."
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, может быть перенаправлен на URL-адреса прошедших проверку подлинности пользователей, в других веб-приложений."
  remarks: "Значение свойства EnableCrossAppRedirects задается с помощью `enableCrossAppRedirects` атрибута элемента конфигурации.       Свойство EnableCrossAppRedirects проверяется в рамках <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>метод, если перенаправления URL-адрес не указывает на страницу в текущем приложении.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Если EnableCrossAppRedirects `true`, выполняется перенаправление; Если EnableCrossAppRedirects `false`, браузер перенаправляется на страницу, определенную в <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>свойство.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      Настроек [!NOTE] настроек при перенаправления между приложениями, необходимо убедиться, что определенные атрибуты в элементе конфигурации дублируются в приложениях, прошедших проверку подлинности. Дополнительные сведения и пример см. в разделе [форм проверки подлинности между приложениями](~/add/includes/ajax-current-ext-md.md).      Настроек [!IMPORTANT] настроек при разрешены перенаправления между приложениями, веб-сайт будет уязвим для атак, которые направляет пользователей на вредоносный веб-сайт, но используют страницу входа для веб-узла. Всегда проверяйте, URL-адрес перенаправления, который возвращается <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>метод является URL-адрес, который ожидается, что можно убедиться в том, что разрешать перенаправляет только утвержденные веб-сайтов.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Также необходимо убедиться, что URL-адрес перенаправления использует соответствующий протокол (HTTP или HTTPS). Для выполнения этих проверок, можно добавить обработчик события обратной передачи на страницу входа, или можно добавить обработчик для <xref:System.Web.UI.WebControls.Login.LoggedIn>событие <xref:System.Web.UI.WebControls.Login>элемента управления.</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если прошедших проверку подлинности пользователей может быть перенаправлен на URL-адреса в других веб-приложений; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Включает проверку подлинности форм."
  remarks: "Если <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>свойство `null`, задано значение по умолчанию URL-адрес из `configurationData` параметр.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Если <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>свойство `null`, свойству присвоено значение URL-адрес входа из `configurationData` параметр.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "Коллекция имен и значений, содержащий значения для «defaultUrl» или «loginUrl». Значением параметра может быть null, если нет значений по умолчанию URL-адрес или URL-адрес входа."
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Приложение не на этапе инициализации перед запуском."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает строку, содержащую зашифрованный форм-билет проверки подлинности можно использовать в файл cookie HTTP."
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "<xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> Объекта, с которым необходимо создать билет зашифрованные проверки подлинности форм."
    return:
      type: System.String
      description: "Строка, содержащая зашифрованный форм-билет проверки подлинности."
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает имя файла cookie, используемого для сохранения билета проверки подлинности форм."
  remarks: "Значение свойства FormsCookieName задается в файле конфигурации для приложения ASP.NET с помощью `name` атрибута элемента конфигурации. FormsCookieName используется для ссылки на файл cookie, который хранит <xref:System.Web.Security.FormsAuthenticationTicket>сведения.</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "Имя файла cookie, используемого для сохранения билета проверки подлинности форм. Значение по умолчанию — «. ASPXAUTH»."
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Получает путь для файла cookie проверки подлинности форм."
  remarks: "Значение свойства FormsCookiePath задается в файле конфигурации для приложения ASP.NET с помощью `path` атрибута элемента конфигурации. Указывает FormsCookiePath <xref:System.Web.HttpCookie.Path%2A>для файла cookie, который хранит <xref:System.Web.Security.FormsAuthenticationTicket>сведения.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "Путь файла cookie, в котором хранятся данные билета проверки подлинности форм. Значение по умолчанию — «/»."
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает файл cookie проверки подлинности для полученного имени пользователя. Это не заданы куки-файл как часть исходящих ответов, поэтому приложение может иметь больший контроль над как файл cookie выдается."
  remarks: "Путь файла cookie определяется <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>свойство.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Имя пользователя, прошедшего проверку подлинности."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы создать долговременный файл cookie (т.е. сохраняемый между сеансами браузера); в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref> , Содержащий сведения о билете зашифрованные проверки подлинности форм. Значение по умолчанию для <xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>используется свойство.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает файл cookie проверки подлинности для полученного имени пользователя. Это не устанавливает файл cookie как часть исходящего ответа."
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Имя пользователя, прошедшего проверку подлинности."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы создать долговременный файл cookie (т.е. сохраняемый между сеансами браузера); в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "<xref:System.Web.HttpCookie.Path*>Файла cookie проверки подлинности.</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "<xref href=&quot;System.Web.HttpCookie&quot;> </xref> , Содержащий сведения о билете зашифрованные проверки подлинности форм."
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает URL-адрес перенаправления для первоначального запроса, вызвавший перенаправление на страницу входа."
  remarks: "Этот метод можно использовать, когда требуется выполнить перенаправление в коде приложения, вместо использования <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>метод.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       Метод GetRedirectUrl возвращает URL-адрес, указанный в строку запроса с помощью `ReturnURL` имя переменной. Например, в URL-адрес `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, метод GetRedirectUrl возвращает URL-адрес возврата `caller.aspx`. Если `ReturnURL` переменная не существует, то метод GetRedirectUrl возвращает URL-адрес в <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>свойство.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET автоматически добавляет возвращаемый URL-адрес, когда браузер перенаправляется на страницу входа.       По умолчанию `ReturnUrl` переменные должны ссылаться на страницы в текущем приложении. Если `ReturnUrl` ссылается на страницу в другом приложении или на другом сервере, методы GetRedirectUrl возвращает URL-адрес в <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>свойство.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Если вы хотите разрешить URL-адрес возврата для ссылки на страницы вне текущего приложения, необходимо задать <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Свойства `true` с помощью `enableCrossAppRedirects` атрибута элемента конфигурации.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      Настроек [!IMPORTANT] настроек параметр <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Свойства `true` разрешающее перенаправления между приложениями является потенциальной угрозой безопасности.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Дополнительные сведения см. в разделе <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>свойство.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Имя пользователя, прошедшего проверку подлинности."
    - id: createPersistentCookie
      type: System.Boolean
      description: "Этот параметр учитывается."
    return:
      type: System.String
      description: "Строка, содержащая URL-адрес перенаправления."
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает хэш пароля, подходящий для хранения в файле конфигурации на основе указанного пароля и хэш-алгоритм."
  remarks: "Метод HashPasswordForStoringInConfigFile создает значение хэшированный пароль, который можно использовать при хранении учетных данных проверки подлинности форм в файле конфигурации приложения.       Используются учетные данные хранятся в файле конфигурации приложения <xref:System.Web.Security.FormsAuthentication.Authenticate%2A>метод для проверки паролей для пользователей приложения.</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> Кроме того членства в ASP.NET можно использовать для хранения учетных данных пользователя. Дополнительные сведения см. в разделе [Управление пользователями с помощью членства](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "Пароль для хэширования."
    - id: passwordFormat
      type: System.String
      description: "Хэш-алгоритм для использования. `passwordFormat`— <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> , представляющий один из <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> значений перечисления."
    return:
      type: System.String
      description: "Хэшированный пароль."
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>не является допустимым <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> значение."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Инициализирует <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> объекта на основе параметров конфигурации для приложения."
  remarks: "Метод Initialize вызывается, когда <xref:System.Web.Security.FormsAuthenticationModule>создается экземпляр <xref:System.Web.Security.FormsAuthentication>класса.</xref:System.Web.Security.FormsAuthentication> </xref:System.Web.Security.FormsAuthenticationModule> Этот метод не предназначен для непосредственного вызова из кода."
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, включена ли проверка подлинности форм."
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включена проверка подлинности форм. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Получает URL-адрес страницы входа, <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> будет перенаправлять класса."
  remarks: "Значение свойства LoginUrl задается в файле конфигурации для приложения ASP.NET с помощью `loginUrl` атрибута элемента конфигурации. LoginUrl используется <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>метод.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "Страница URL-адрес для имени входа, <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> будет перенаправлять класса. Значение по умолчанию — «login.aspx.»"
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Перенаправляет прошедшего проверку подлинности пользователя первоначально запрошенный URL-адрес или URL-адрес по умолчанию."
  remarks: "Метод RedirectFromLoginPage перенаправляет на URL-адрес, указанный в строку запроса с помощью `ReturnURL` имя переменной. Например, в URL-адрес `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, метод RedirectFromLoginPage перенаправляет на URL-адрес возврата `caller.aspx`. Если `ReturnURL` переменная не существует, метод RedirectFromLoginPage перенаправляет на URL-адрес в <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>свойство.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET автоматически добавляет возвращаемый URL-адрес, когда браузер перенаправляется на страницу входа.       По умолчанию `ReturnUrl` переменные должны ссылаться на страницы в текущем приложении. Если `ReturnUrl` ссылается на страницу в другом приложении или на другом сервере, методы RedirectFromLoginPage перенаправления URL-адрес в <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>свойство.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Если вы хотите разрешить перенаправление на страницу за пределами текущего приложения, необходимо задать <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Свойства `true` с помощью `enableCrossAppRedirects` атрибута элемента конфигурации.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      Настроек [!IMPORTANT] настроек параметр <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Свойства `true` разрешающее перенаправления между приложениями является потенциальной угрозой безопасности.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Дополнительные сведения см. в разделе <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>свойство.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>свойство `true`и либо `ReturnUrl` переменная находится в пределах текущего приложения или <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>свойство `true`, то метод RedirectFromLoginPage выдает билет проверки подлинности и помещает его в файл cookie по умолчанию с помощью <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>метод.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>является `false` и пути перенаправления на URL-адрес в текущем приложении, билет выдается как часть URL-адрес перенаправления.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>является `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>— `true`, и перенаправления URL-адрес не ссылается на страницу в текущем приложении RedirectFromLoginPage метод выдает билет проверки подлинности и помещает его в <xref:System.Web.HttpRequest.QueryString%2A>свойство.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Имя пользователя, прошедшего проверку подлинности."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы создать долговременный файл cookie (т.е. сохраняемый между сеансами браузера); в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'URL возврата, указанный в строке запроса содержит протокол, отличный от HTTP: или HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Перенаправляет прошедшего проверку подлинности пользователя первоначально запрошенный URL-адрес или URL-адрес по умолчанию, используя путь указанного файла cookie для файла cookie проверки подлинности форм."
  remarks: "Метод RedirectFromLoginPage перенаправляет URL возврата, указанный в строку запроса с помощью `ReturnURL` имя переменной. Например, в URL-адрес `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, метод RedirectFromLoginPage перенаправляет на URL-адрес возврата `caller.aspx`. Если `ReturnURL` переменная не существует, метод RedirectFromLoginPage перенаправляет на URL-адрес в <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>свойство.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET автоматически добавляет возвращаемый URL-адрес, когда браузер перенаправляется на страницу входа.       По умолчанию `ReturnUrl` переменные должны ссылаться на страницы в текущем приложении. Если `ReturnUrl` ссылается на страницу в другом приложении или на другом сервере, RedirectFromLoginPage, метод перенаправляет на URL-адрес в <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>свойство.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Если вы хотите разрешить перенаправление на страницу за пределами текущего приложения, необходимо задать <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Свойства `true` с помощью `enableCrossAppRedirects` атрибута элемента конфигурации.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      Настроек [!IMPORTANT] настроек параметр <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>Свойства `true` разрешающее перенаправления между приложениями является потенциальной угрозой безопасности.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Дополнительные сведения см. в разделе <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>свойство.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>свойство `true`и либо `ReturnUrl` переменная находится в пределах текущего приложения или <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>свойство является `true`, то метод RedirectFromLoginPage выдает билет проверки подлинности и помещает его в файле cookie, определяемое `strCookiePath` с помощью параметра <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>метод.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>является `false` и пути перенаправления на URL-адрес в текущем приложении, билет выдается как часть URL-адрес перенаправления.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>является `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>— `true`, и перенаправления URL-адрес не ссылается на страницу в текущем приложении RedirectFromLoginPage метод выдает билет проверки подлинности и помещает его в <xref:System.Web.HttpRequest.QueryString%2A>свойство.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Имя пользователя, прошедшего проверку подлинности."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы создать долговременный файл cookie (т.е. сохраняемый между сеансами браузера); в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Путь к файлу cookie для билета проверки подлинности форм."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'URL возврата, указанный в строке запроса содержит протокол, отличный от HTTP: или HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Перенаправляет браузер на URL-адрес входа."
  remarks: "Метод RedirectToLoginPage перенаправляет браузер на <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Метод RedirectToLoginPage не очищает файл cookie проверки подлинности форм. Метод RedirectToLoginPage можно использовать в сочетании с помощью <xref:System.Web.Security.FormsAuthentication.SignOut%2A>метода войти один пользователь, и другой пользователь выполнить вход.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Перенаправляет браузер на URL-адрес входа с указанной строкой запроса."
  remarks: "Метод RedirectToLoginPage перенаправляет браузер, чтобы <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>и включает `extraQueryString` как <xref:System.Management.ManagementQuery.QueryString%2A>для URL-адреса перенаправления.</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       Метод RedirectToLoginPage не очищает файл cookie проверки подлинности форм. Метод RedirectToLoginPage можно использовать в сочетании с помощью <xref:System.Web.Security.FormsAuthentication.SignOut%2A>метода войти один пользователь, и другой пользователь выполнить вход.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "Строка запроса для включения с URL-адрес перенаправления."
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Условно обновляет даты выпуска и время и Дата окончания срока действия и время для <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  remarks: "Метод RenewTicketIfOld обновляет дату истечения срока действия и времени, предоставленного <xref:System.Web.Security.FormsAuthenticationTicket>Если текущую дату и время минус <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>значение больше, чем <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>значение минус текущую дату и время.</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       Билет обновляется <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>свойства текущей даты и времени и <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>для текущей даты и времени, а также исходное значение свойства <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>стоимость минус исходного <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>значение.</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Билет проверки подлинности форм для обновления."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "Обновленный <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, требуется ли файл cookie проверки подлинности форм протокол SSL для возвращения на сервер."
  remarks: "Значение свойства RequireSSL задано в файле конфигурации для приложения ASP.NET с помощью `requireSSL` атрибута элемента конфигурации. Можно указать в файле Web.config для приложения ASP.NET требуется ли SSL (Secure Sockets Layer) для возврата файла cookie проверки подлинности форм к серверу, задав `requireSSL` атрибута. Дополнительные сведения см. в разделе <xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>       Рекомендуется, если вы настраиваете `requireSSL` как `false`, можно также настроить `slidingExpiration` как `false`, чтобы сократить количество времени, для которого билет будет действительным."
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если протокол SSL необходим для возврата файла cookie проверки подлинности форм с сервером. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает билет проверки подлинности для указанного имени пользователя и добавляет его к коллекции файлов cookie ответа или URL-адрес, при использовании проверки подлинности без поддержки файлов cookie."
  remarks: "Метод SetAuthCookie добавляет билет проверки подлинности форм коллекции файлов cookie или URL-адрес Если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>является `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Билет проверки подлинности форм предоставляет сведения для проверки подлинности форм для следующего запроса веб-обозревателя. С помощью форм можно использовать метод SetAuthCookie для проверки подлинности пользователя, но по-прежнему сохранение контроля над навигации с перенаправления."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "Имя авторизованного пользователя. Это не обязательно сопоставлять с учетной записью Windows."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы создать постоянный файл cookie (т.е. сохраняемый между сеансами браузера); в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает билет проверки подлинности для указанного имени пользователя и добавляет его в коллекцию файлов cookie ответа с помощью предоставленного файла cookie путь, или URL-адрес при использовании без поддержки файлов cookie проверки подлинности."
  remarks: "Метод SetAuthCookie добавляет билет проверки подлинности форм коллекции файлов cookie или URL-адрес, если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>является `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Билет проверки подлинности форм предоставляет сведения для проверки подлинности форм для следующего запроса веб-обозревателя. С помощью форм можно использовать метод SetAuthCookie для проверки подлинности пользователя, но по-прежнему сохранение контроля над навигации с перенаправления."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "Имя авторизованного пользователя."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы создать долговременный файл cookie (т.е. сохраняемый между сеансами браузера); в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "Путь к файлу cookie для билета проверки подлинности форм."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Удаляет из браузера билет проверки подлинности форм."
  remarks: "Метод SignOut удаляет данные билета проверки подлинности форм из файла cookie или URL-адрес, если <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>является `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Метод SignOut можно использовать в сочетании с помощью <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>метода войти один пользователь, и другой пользователь выполнить вход.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       При использовании исключительно в режиме без поддержки файлов cookie, или если требуется поддержка прошедшего проверку подлинности и анонимных пользователей, следует явно управление перенаправление на страницу входа, если требуются специальные бизнес-логики в результате удаления анонимный идентификатор.       При вызове метода SignOut перенаправление на страницу входа приложения выполняется путем вызова <xref:System.Web.HttpResponse.Redirect%2A>метод с `endResponse` равным `false`.</xref:System.Web.HttpResponse.Redirect%2A> Перенаправления выполняться не до завершения выполнения текущей страницы, можно выполнить дополнительный код. Если код не содержит явного перенаправления на другую страницу, пользователь перенаправляется на страницу входа, настроенные в файле конфигурации приложения.       Вызов метода SignOut удаляет только файл cookie проверки подлинности форм. Веб-сервер не хранит билетов проверки подлинности допустимые и истекшим сроком действия для дальнейшего сравнения. Это делает узел уязвимым для атак воспроизведения, если пользователь-злоумышленник получит файл cookie проверки подлинности допустимых форматов. Для повышения безопасности при использовании файла cookie проверки подлинности форм, должен выполнить следующие:-использовать абсолютный срок действия файлов cookie проверки подлинности форм, задав <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>Свойства `false`.</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Это ограничивает окна, в которых могут воспроизводиться поврежденный файл cookie.      -Только выдачи и принимают файлы cookie проверки подлинности через Secure Sockets Layer (SSL), установив <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>Свойства `true` и выполнив всего веб-сайта в группе SSL.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Параметр <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>Свойства `true` гарантирует, что ASP.NET никогда не будет отправлять файл cookie проверки подлинности в браузере через подключение без использования SSL; тем не менее, клиент не может принять параметры безопасности в файле cookie.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Это означает, что клиент может отправить файл cookie проверки подлинности форм через подключение без использования SSL, таким образом делает его уязвимым для перехвата. Клиенту предотвратить отправку файла cookie проверки подлинности форм в открытом виде, выполнив всего веб-сайта в группе SSL.      -Используйте постоянное хранилище на сервере для записи, когда пользователь выходит из веб-сайта, а затем использовать события приложения, такие как <xref:System.Web.HttpApplication.PostAuthenticateRequest>событие, чтобы определить, является ли текущий пользователь проверку подлинности с помощью форм.</xref:System.Web.HttpApplication.PostAuthenticateRequest> Если пользователь прошел проверку подлинности с помощью форм, и если информация в постоянном хранилище указывает пользователь вышел из, немедленно очистить файл cookie проверки подлинности и перенаправить браузер на страницу входа. После успешного входа обновите хранилища, чтобы отразить вход в. При использовании этого метода приложение должно отслеживать статус вошедшего в систему пользователя и необходимо принудительно бездействующих пользователей выйти из системы."
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, включен ли скользящий срок действия."
  remarks: "Значение свойства SlidingExpiration устанавливается с помощью `slidingExpiration` атрибута элемента конфигурации.       Скользящем сроке действия срок действия файла cookie проверки подлинности при поступлении запроса и по истечении более половины интервала времени ожидания. Если истекает срок действия файла cookie, пользователь должен повторно пройти проверку подлинности. Свойства SlidingExpiration `false` можно повысить безопасность приложения путем ограничения времени, для которого действителен файл cookie проверки подлинности, настроенного на основе `timeout` значение.       Рекомендуется, чтобы при настройке `requireSSL` как `false`, можно также настроить `slidingExpiration` как `false`, чтобы сократить количество времени, для которого билет будет действительным."
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если включен скользящий срок действия; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, следует ли использовать время в формате UTC или местным временем для даты окончания срока действия билета."
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "Значение, указывающее, следует ли использовать время в формате UTC или местным временем для даты окончания срока действия билета."
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает количество времени до истечения срока действия билета проверки подлинности."
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "Срок действия истекает время перед билет проверки подлинности."
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
