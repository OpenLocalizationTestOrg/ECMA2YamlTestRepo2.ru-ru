### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationError
  id: ValidationError
  children:
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  - System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  - System.Windows.Controls.ValidationError.BindingInError
  - System.Windows.Controls.ValidationError.ErrorContent
  - System.Windows.Controls.ValidationError.Exception
  - System.Windows.Controls.ValidationError.RuleInError
  langs:
  - csharp
  name: ValidationError
  nameWithType: ValidationError
  fullName: System.Windows.Controls.ValidationError
  type: Class
  summary: "Представляет ошибку проверки, создаваемую либо модулем привязки ядра при <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> сообщает об ошибке проверки, либо с помощью <xref:System.Windows.Controls.Validation.MarkInvalid*>метод явным образом.</xref:System.Windows.Controls.Validation.MarkInvalid*>"
  remarks: "[!INCLUDE[TLA2#tla_winclient](~/add/includes/tla2sharptla-winclient-md.md)] Модель привязки данных позволяет связать правила проверки с вашей <xref:System.Windows.Data.Binding>объекта.</xref:System.Windows.Data.Binding> Проверка происходит во время передачи значения от цели к источнику перед вызовом преобразователя. Далее описывается процесс проверки.      1.  Когда значение передается от целевого свойства к свойству источника, механизм привязки данных сначала удаляет все ValidationError, могли быть добавлены к <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>присоединенного свойства связанного элемента.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Затем он проверяет, определен ли для этого <xref:System.Windows.Data.Binding>в этом случае он вызывает <xref:System.Windows.Controls.ValidationRule.Validate%2A>метод в каждом <xref:System.Windows.Controls.ValidationRule>пока один из них происходит сбой, или пока все из них пройдены</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ValidationRule.Validate%2A> </xref:System.Windows.Data.Binding> все пользовательские правила проверки      2.  После настраиваемого правила, которое не проходит, создает объект ValidationError механизм привязки и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>коллекции связанного элемента.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Если <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>не пустое, <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName>вложенное свойство элемента имеет значение `true`.</xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=fullName> </xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> Кроме того Если <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>свойство <xref:System.Windows.Data.Binding>имеет значение `true`, а затем вызывает механизм привязки <xref:System.Windows.Controls.Validation.Error?displayProperty=fullName>вложенное событие для элемента.</xref:System.Windows.Controls.Validation.Error?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnValidationError%2A>      3.  Если все правила выполнены, механизм привязки вызывает преобразователь, если таковой существует.      4.  Если преобразователь пройден, механизм привязки вызывает метод задания свойства source.      5.  Если привязка имеет <xref:System.Windows.Controls.ExceptionValidationRule>связанные с ним и исключение во время выполнения шага 3 или 4, что механизму привязки проверяет, существует ли <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> </xref:System.Windows.Controls.ExceptionValidationRule> Можно использовать <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>обратного вызова, чтобы предоставить настраиваемый обработчик для обработки исключений.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> Если <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>не указан в <xref:System.Windows.Data.Binding>, что механизму привязки создает ValidationError с исключением и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>коллекции связанного элемента.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>       Очистит передаче допустимого значения в любом направлении (от цели к источнику или источника к целевому объекту) <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>вложенное свойство.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>"
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of ValidationError objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public class ValidationError
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> класса с заданными параметрами."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "Правило, обнаружена ошибка проверки."
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> Или <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> объект сообщения об ошибках проверки."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  id: '#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)'
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref> класса с заданными параметрами."
  syntax:
    content: public ValidationError (System.Windows.Controls.ValidationRule ruleInError, object bindingInError, object errorContent, Exception exception);
    parameters:
    - id: ruleInError
      type: System.Windows.Controls.ValidationRule
      description: "Правило, обнаружена ошибка проверки."
    - id: bindingInError
      type: System.Object
      description: "<xref href=&quot;System.Windows.Data.BindingExpression&quot;> </xref> Или <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;> </xref> объект сообщения об ошибках проверки."
    - id: errorContent
      type: System.Object
      description: "Сведения об ошибке."
    - id: exception
      type: System.Exception
      description: "Исключение, вызвавшее сбой проверки. Этот параметр является необязательным и может быть присвоено <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Controls.ValidationError.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.BindingInError
  id: BindingInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Gets the <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>. Объект является недопустимым помеченной явно или имеет правило, не прошедших проверку."
  syntax:
    content: public object BindingInError { get; }
    return:
      type: System.Object
      description: "The <xref href=&quot;System.Windows.Data.BindingExpression&quot;></xref> or <xref href=&quot;System.Windows.Data.MultiBindingExpression&quot;></xref> object of this <xref href=&quot;System.Windows.Controls.ValidationError&quot;></xref>."
  overload: System.Windows.Controls.ValidationError.BindingInError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Возвращает или задает объект, который предоставляет дополнительный контекст для этой <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, такие как строка, описывающая ошибку."
  remarks: "<a name=&quot;xamlTextUsage_ErrorContent&quot;></a>## XAML текст об использовании см. пример в разделе Пример."
  example:
  - "The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message. The <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> attached property returns a collection of <xref:System.Windows.Controls.ValidationError> objects on the bound element.  \n  \n [!code-xml[DataBindingLab#14](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#14)]"
  syntax:
    content: public object ErrorContent { get; set; }
    return:
      type: System.Object
      description: "Объект, который предоставляет дополнительный контекст для этой <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>."
  overload: System.Windows.Controls.ValidationError.ErrorContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.Exception
  id: Exception
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Возвращает или задает <xref:System.Exception>объект, который был причиной данного исключения <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, если ошибка является результатом исключение.</xref:System.Exception>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "<xref:System.Exception>Объекта, если ошибка является результатом исключение.</xref:System.Exception>"
  overload: System.Windows.Controls.ValidationError.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Controls.ValidationError.RuleInError
  id: RuleInError
  parent: System.Windows.Controls.ValidationError
  langs:
  - csharp
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: "Возвращает или задает <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> объект, который был причиной данного исключения <xref href=&quot;System.Windows.Controls.ValidationError&quot;> </xref>, если ошибка является результатом правила проверки."
  syntax:
    content: public System.Windows.Controls.ValidationRule RuleInError { get; set; }
    return:
      type: System.Windows.Controls.ValidationRule
      description: "<xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> Объекта, если ошибка является результатом правила проверки."
  overload: System.Windows.Controls.ValidationError.RuleInError*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object)
- uid: System.Windows.Controls.ValidationRule
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationRule
  nameWithType: ValidationRule
  fullName: System.Windows.Controls.ValidationRule
- uid: System.Windows.Controls.ValidationError.#ctor(System.Windows.Controls.ValidationRule,System.Object,System.Object,System.Exception)
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError(ValidationRule,Object,Object,Exception)
  nameWithType: ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
  fullName: System.Windows.Controls.ValidationError.ValidationError(ValidationRule,Object,Object,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Controls.ValidationError.BindingInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
  fullName: System.Windows.Controls.ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
  fullName: System.Windows.Controls.ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
  fullName: System.Windows.Controls.ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
  fullName: System.Windows.Controls.ValidationError.RuleInError
- uid: System.Windows.Controls.ValidationError.#ctor*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ValidationError
  nameWithType: ValidationError.ValidationError
- uid: System.Windows.Controls.ValidationError.BindingInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: BindingInError
  nameWithType: ValidationError.BindingInError
- uid: System.Windows.Controls.ValidationError.ErrorContent*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationError.ErrorContent
- uid: System.Windows.Controls.ValidationError.Exception*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: Exception
  nameWithType: ValidationError.Exception
- uid: System.Windows.Controls.ValidationError.RuleInError*
  parent: System.Windows.Controls.ValidationError
  isExternal: false
  name: RuleInError
  nameWithType: ValidationError.RuleInError
