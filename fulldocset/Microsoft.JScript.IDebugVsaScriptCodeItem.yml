### YamlMime:ManagedReference
items:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem
  id: IDebugVsaScriptCodeItem
  children:
  - Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  - Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  langs:
  - csharp
  name: IDebugVsaScriptCodeItem
  nameWithType: IDebugVsaScriptCodeItem
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem
  type: Interface
  summary: "Определяет методы для вычисления выражений и анализа строк. Обычно этот интерфейс реализуется объектом, представляющим блок кода, и обычно она вызывается с помощью отладчика. Этот интерфейс предоставляет дополнительные функциональные возможности, необходимые для узла IActiveScript."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("6DFE759A-CB8B-4ca0-A973-1D04E0BF0B53")]

      public interface IDebugVsaScriptCodeItem
  implements: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  id: Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: "При реализации в классе вычисляет блок, выражение или оператор, представленные элементом кода и возвращает значение. Обычно вызывается отладчиком, который необходимо вычислить выражение (в окне контрольных значений, например). Для выражений значение является результатом выражения. Для блоков и операторов результирующее выражение равно последнее выражение, вычисленное блоком или инструкции."
  remarks: "Обратите внимание, что метод Evaluate функционально идентичен <xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A>метод.</xref:Microsoft.JScript.IVsaScriptCodeItem.Execute%2A> Отличаются только атрибутами маршалинга. Эта версия интерфейса позволяет неуправляемому отладчику получить возвращаемое значение как `IUnknown` указателя, а не `VARIANT`."
  syntax:
    content: public object Evaluate ();
    parameters: []
    return:
      type: System.Object
      description: "Возвращает значение, которое представляет вычисление инструкции, выражения или блока."
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  id: ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  langs:
  - csharp
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  type: Method
  assemblies:
  - Microsoft.JScript
  namespace: Microsoft.JScript
  summary: 'При реализации в классе, анализирует строки и возвращает полученную в результате анализа данные. Этот метод обычно вызывается отладчиком, который должен анализировать информацию о точке останова, представленных в виде <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref>. У отладчика может быть точка останова, введенная пользователем в форме *имяФункции аргументы смещениеУровняЦелостности*. Строки именованной точки останова могут иметь сложные формат, например, `F.B(C.D[], int, arg : double ) : C.Abc + 123.` список параметров необязательно, поскольку смещение на промежуточном Языке.'
  syntax:
    content: public bool ParseNamedBreakPoint (string input, out string functionName, out int nargs, out string arguments, out string returnType, out ulong offset);
    parameters:
    - id: input
      type: System.String
      description: "Правильный формат именованную строку точки останова, предоставляя функции, список необязательных аргументов и необязательное смещение на промежуточном Языке."
    - id: functionName
      type: System.String
      description: "Выходной параметр возвращение имени функции выделяется из входной строки, или пустая строка, если входная строка не имеет правильного формата."
    - id: nargs
      type: System.Int32
      description: "Параметр out, возвращающий число аргументов в списке необязательных аргументов. Возвращает нуль, если отсутствует список аргументов или если строка не имеет правильного формата."
    - id: arguments
      type: System.String
      description: "Выходной параметр Возвращает список разделенных запятыми имен типов всех аргументов в списке аргументов, или пустая строка, если список аргументов отсутствует или входная строка имеет неправильный формат."
    - id: returnType
      type: System.String
      description: "Выходной параметр Возвращает строку, содержащую возвращаемый тип функции с именем входа, или пустая строка, если возвращаемый тип отсутствует или входная строка имеет неправильный формат."
    - id: offset
      type: System.UInt64
      description: "Длинное целое без знака указав смещение на промежуточном Языке из входной строки, или нуль, если строка имеет неправильный формат или возникла смещение на промежуточном Языке."
    return:
      type: System.Boolean
      description: "Возвращает <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если именованная точка останова успешно обработан, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> в противном случае."
  overload: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate()
  nameWithType: IDebugVsaScriptCodeItem.Evaluate()
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(System.String,System.String@,System.Int32@,System.String@,System.String@,System.UInt64@)
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
  fullName: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint(String,String,Int32,String,String,UInt64)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.UInt64
  parent: System
  isExternal: true
  name: UInt64
  nameWithType: UInt64
  fullName: System.UInt64
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.Evaluate*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: Evaluate
  nameWithType: IDebugVsaScriptCodeItem.Evaluate
- uid: Microsoft.JScript.IDebugVsaScriptCodeItem.ParseNamedBreakPoint*
  parent: Microsoft.JScript.IDebugVsaScriptCodeItem
  isExternal: false
  name: ParseNamedBreakPoint
  nameWithType: IDebugVsaScriptCodeItem.ParseNamedBreakPoint
