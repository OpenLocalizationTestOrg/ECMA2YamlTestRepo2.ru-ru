### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlParameter
  id: SqlParameter
  children:
  - System.Data.SqlClient.SqlParameter.#ctor
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  - System.Data.SqlClient.SqlParameter.CompareInfo
  - System.Data.SqlClient.SqlParameter.DbType
  - System.Data.SqlClient.SqlParameter.Direction
  - System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  - System.Data.SqlClient.SqlParameter.IsNullable
  - System.Data.SqlClient.SqlParameter.LocaleId
  - System.Data.SqlClient.SqlParameter.Offset
  - System.Data.SqlClient.SqlParameter.ParameterName
  - System.Data.SqlClient.SqlParameter.Precision
  - System.Data.SqlClient.SqlParameter.ResetDbType
  - System.Data.SqlClient.SqlParameter.ResetSqlDbType
  - System.Data.SqlClient.SqlParameter.Scale
  - System.Data.SqlClient.SqlParameter.Size
  - System.Data.SqlClient.SqlParameter.SourceColumn
  - System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  - System.Data.SqlClient.SqlParameter.SourceVersion
  - System.Data.SqlClient.SqlParameter.SqlDbType
  - System.Data.SqlClient.SqlParameter.SqlValue
  - System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  - System.Data.SqlClient.SqlParameter.ToString
  - System.Data.SqlClient.SqlParameter.TypeName
  - System.Data.SqlClient.SqlParameter.UdtTypeName
  - System.Data.SqlClient.SqlParameter.Value
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  - System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  langs:
  - csharp
  name: SqlParameter
  nameWithType: SqlParameter
  fullName: System.Data.SqlClient.SqlParameter
  type: Class
  summary: "Представляет параметр для <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> и (необязательно) его сопоставление со <xref href=&quot;System.Data.DataSet&quot;> </xref> столбцы. Этот класс не наследуется. Дополнительные сведения о параметрах см. в разделе [Настройка параметров и типов данных параметров](~/add/includes/ajax-current-ext-md.md)."
  remarks: "Имена параметров не учитывается регистр.      Настроек [!NOTE] настроек Nameless, также называемый порядковый номер, параметры не поддерживаются поставщиком данных .NET Framework для SQL Server.       Дополнительные сведения, а также дополнительные примеры кода демонстрируются способы использования параметров, см [команд и параметров](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates multiple instances of SqlParameter through the <xref:System.Data.SqlClient.SqlParameterCollection> collection within the <xref:System.Data.SqlClient.SqlDataAdapter>. These parameters are used to select data from the data source and put the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and a <xref:System.Data.SqlClient.SqlDataAdapter> have already been created by using the appropriate schema, commands, and connection. For more information and additional examples on using parameters, see [Retrieving and Modifying Data in ADO.NET](~/add/includes/ajax-current-ext-md.md) and [Configuring Parameters and Parameter Data Types](../Topic/Configuring%20Parameters%20and%20Parameter%20Data%20Types.md).  \n  \n [!code-cs[Classic WebData SqlParameter Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._0_1.cs)]\n [!code-vb[Classic WebData SqlParameter Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._0_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.SqlClient.SqlParameter/SqlParameterConverter))]

      public sealed class SqlParameter : System.Data.Common.DbParameter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbParameter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter()
  nameWithType: SqlParameter.SqlParameter()
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SqlParameter Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._24_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SqlParameter Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._24_1.cs)]"
  syntax:
    content: public SqlParameter ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  id: '#ctor(System.String,System.Data.SqlDbType)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> класс, использующий имя параметра и тип данных."
  remarks: "Тип данных и при необходимости, **размер** и <xref:System.Data.SqlClient.SqlParameter.Precision%2A>выводятся из значения `dbType` параметр.</xref:System.Data.SqlClient.SqlParameter.Precision%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter2 Example#1](~/add/codesnippet/csharp/4c1dfa04-4b19-4ef9-bf3e-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter2 Example#1](~/add/codesnippet/visualbasic/4c1dfa04-4b19-4ef9-bf3e-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType);
    parameters:
    - id: parameterName
      type: System.String
      description: "Имя сопоставляемого параметра."
    - id: dbType
      type: System.Data.SqlDbType
      description: "Один из <xref href=&quot;System.Data.SqlDbType&quot;> </xref> значения."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> dbType </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,Object)
  nameWithType: SqlParameter.SqlParameter(String,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> класс, использующий имя параметра и значение нового <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>."
  remarks: "При указании <xref:System.Object>в `value` параметр, <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>выводится из типа Microsoft .NET Framework <xref:System.Object>.</xref:System.Object> </xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> </xref:System.Object>       Соблюдайте осторожность при использовании перегруженного <xref:System.Data.SqlClient.SqlParameter>конструктор для задания целочисленных значений параметров.</xref:System.Data.SqlClient.SqlParameter> Поскольку данная перегрузка принимает `value` типа <xref:System.Object>, необходимо преобразовать целое значение в <xref:System.Object>типа, когда значение равно нулю, как показано в следующем примере C#.</xref:System.Object> </xref:System.Object>      ```   Parameter = new SqlParameter(&quot;@pname&quot;, (object)0);   ```Если такое преобразование не выполнено, компилятор предполагает, что вы пытаетесь вызвать `SqlParameter` (`string`, `SqlDbType`) перегрузку конструктора."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter6 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._12_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter6 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._12_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "Имя сопоставляемого параметра."
    - id: value
      type: System.Object
      description: "<xref:System.Object>, Представляющий значение <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> класс, использующий имя параметра <xref href=&quot;System.Data.SqlDbType&quot;> </xref>и размер."
  remarks: "**Размер** выводится из значения `dbType` параметра, если оно не задано явно в `size` параметра."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter4 Example#1](~/add/codesnippet/csharp/63cca4fc-f4fc-4270-865a-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter4 Example#1](~/add/codesnippet/visualbasic/63cca4fc-f4fc-4270-865a-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size);
    parameters:
    - id: parameterName
      type: System.String
      description: "Имя сопоставляемого параметра."
    - id: dbType
      type: System.Data.SqlDbType
      description: "Один из <xref href=&quot;System.Data.SqlDbType&quot;> </xref> значения."
    - id: size
      type: System.Int32
      description: "Длина параметра."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> dbType </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> класс, использующий имя параметра <xref href=&quot;System.Data.SqlDbType&quot;> </xref>, размер и имя исходного столбца."
  remarks: "**Размер** выводится из значения `dbType` параметра, если оно не задано явно в `size` параметра."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.SqlParameter5 Example#1](~/add/codesnippet/visualbasic/90f2fc39-217a-4d4f-ba7a-_1.vb)]\n [!code-cs[Classic WebData SqlParameter.SqlParameter5 Example#1](~/add/codesnippet/csharp/90f2fc39-217a-4d4f-ba7a-_1.cs)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, string sourceColumn);
    parameters:
    - id: parameterName
      type: System.String
      description: "Имя сопоставляемого параметра."
    - id: dbType
      type: System.Data.SqlDbType
      description: "Один из <xref href=&quot;System.Data.SqlDbType&quot;> </xref> значения."
    - id: size
      type: System.Int32
      description: "Длина параметра."
    - id: sourceColumn
      type: System.String
      description: "Имя исходного столбца (<>*настроек) Если этот <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> используется при обращении к <> </> *настроек."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> dbType </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> класс, использующий имя параметра, тип параметра, размер параметра, <xref href=&quot;System.Data.ParameterDirection&quot;> </xref>, точность параметра Масштаб параметра, исходным столбцом, <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> предполагается использовать и значение параметра."
  remarks: "**Размер** и <xref:System.Data.SqlClient.SqlParameter.Precision%2A>выводятся из значения `dbType` параметра, если они не заданы явным образом `size` и `precision` параметров.</xref:System.Data.SqlClient.SqlParameter.Precision%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.SqlParameter1 Example#1](~/add/codesnippet/csharp/ebcbbbdb-fcc0-4579-9b6d-_1.cs)]\n [!code-vb[Classic WebData SqlParameter.SqlParameter1 Example#1](~/add/codesnippet/visualbasic/ebcbbbdb-fcc0-4579-9b6d-_1.vb)]"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, bool isNullable, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "Имя сопоставляемого параметра."
    - id: dbType
      type: System.Data.SqlDbType
      description: "Один из <xref href=&quot;System.Data.SqlDbType&quot;> </xref> значения."
    - id: size
      type: System.Int32
      description: "Длина параметра."
    - id: direction
      type: System.Data.ParameterDirection
      description: "Один из <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение поля может быть null. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: precision
      type: System.Byte
      description: "Общее число разрядов слева и справа от десятичной запятой, до которого <xref:System.Data.SqlClient.SqlParameter.Value*>разрешается.</xref:System.Data.SqlClient.SqlParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "Общее число десятичных разрядов, до которого <xref:System.Data.SqlClient.SqlParameter.Value*>разрешается.</xref:System.Data.SqlClient.SqlParameter.Value*>"
    - id: sourceColumn
      type: System.String
      description: "Имя исходного столбца (<>*настроек) Если этот <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> используется при обращении к <> </> *настроек."
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "Один из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения."
    - id: value
      type: System.Object
      description: "<xref:System.Object>, Представляющий значение <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> dbType </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  id: '#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)'
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> класс, использующий имя параметра, тип параметра, длину параметра, направление, точность, масштаб, имя исходного столбца, один из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения, логическое значение для сопоставления, значение столбца источника <xref uid=&quot;langword_csharp_SqlParameter&quot; name=&quot;SqlParameter&quot; href=&quot;&quot;> </xref>, имя базы данных, в которой находится коллекция схем для данного экземпляра XML , реляционная схема-владелец которой находится коллекция схем для данного экземпляра XML и имя коллекции схем для данного параметра."
  remarks: "<xref:System.Data.SqlClient.SqlParameter.Size%2A>И <xref:System.Data.SqlClient.SqlParameter.Precision%2A>выводятся из значения `dbType` параметра, если они не заданы явным образом `size` и `precision` параметров.</xref:System.Data.SqlClient.SqlParameter.Precision%2A> </xref:System.Data.SqlClient.SqlParameter.Size%2A>"
  syntax:
    content: public SqlParameter (string parameterName, System.Data.SqlDbType dbType, int size, System.Data.ParameterDirection direction, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value, string xmlSchemaCollectionDatabase, string xmlSchemaCollectionOwningSchema, string xmlSchemaCollectionName);
    parameters:
    - id: parameterName
      type: System.String
      description: "Имя сопоставляемого параметра."
    - id: dbType
      type: System.Data.SqlDbType
      description: "Один из <xref href=&quot;System.Data.SqlDbType&quot;> </xref> значения."
    - id: size
      type: System.Int32
      description: "Длина параметра."
    - id: direction
      type: System.Data.ParameterDirection
      description: "Один из <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения."
    - id: precision
      type: System.Byte
      description: "Общее число разрядов слева и справа от десятичной запятой, до которого <xref:System.Data.SqlClient.SqlParameter.Value*>разрешается.</xref:System.Data.SqlClient.SqlParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "Общее число десятичных разрядов, до которого <xref:System.Data.SqlClient.SqlParameter.Value*>разрешается.</xref:System.Data.SqlClient.SqlParameter.Value*>"
    - id: sourceColumn
      type: System.String
      description: "Имя исходного столбца (<>*настроек) Если этот <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref> используется при обращении к <> </> *настроек."
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "Один из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения."
    - id: sourceColumnNullMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если исходный столбец допускает значение NULL; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если это не так."
    - id: value
      type: System.Object
      description: "<xref:System.Object>, Представляющий значение <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>.</xref:System.Object>"
    - id: xmlSchemaCollectionDatabase
      type: System.String
      description: "Имя базы данных, в которой находится коллекция схем для данного экземпляра XML."
    - id: xmlSchemaCollectionOwningSchema
      type: System.String
      description: "Реляционная схема-владелец, в которой находится коллекция схем для данного экземпляра XML."
    - id: xmlSchemaCollectionName
      type: System.String
      description: "Имя коллекции схем для данного параметра."
  overload: System.Data.SqlClient.SqlParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.CompareInfo
  id: CompareInfo
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
  fullName: System.Data.SqlClient.SqlParameter.CompareInfo
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает <xref:System.Globalization.CompareInfo>объект, который определяет, как следует выполнять сравнения строк для этого параметра.</xref:System.Globalization.CompareInfo>"
  syntax:
    content: public System.Data.SqlTypes.SqlCompareOptions CompareInfo { get; set; }
    return:
      type: System.Data.SqlTypes.SqlCompareOptions
      description: "Объект <xref:System.Globalization.CompareInfo>объект, который определяет сравнение строк для этого параметра.</xref:System.Globalization.CompareInfo>"
  overload: System.Data.SqlClient.SqlParameter.CompareInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.DbType
  id: DbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: DbType
  nameWithType: SqlParameter.DbType
  fullName: System.Data.SqlClient.SqlParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает <xref href=&quot;System.Data.SqlDbType&quot;> </xref> параметра."
  remarks: "<xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>И связанных DbType.</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> Следовательно параметр тип DbType изменения <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>на вспомогательные <xref:System.Data.SqlDbType>.</xref:System.Data.SqlDbType> </xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>       Список поддерживаемых типов данных см. в разделе соответствующего <xref:System.Data.SqlDbType>член.</xref:System.Data.SqlDbType> Дополнительные сведения см. в разделе [параметры DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._41_1.cs)]\n [!code-vb[Classic WebData SqlParameter.IsNullable Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._41_1.vb)]"
  syntax:
    content: public override System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "Один из <xref href=&quot;System.Data.SqlDbType&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_NVarChar&quot; name=&quot;NVarChar&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlParameter.DbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Direction
  id: Direction
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Direction
  nameWithType: SqlParameter.Direction
  fullName: System.Data.SqlClient.SqlParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает значение, указывающее ли параметр только входным, только выходным, двунаправленным или параметром возвращаемое значение хранимой процедурой."
  remarks: "Если <xref:System.Data.ParameterDirection>является выходным параметром, то при выполнении связанной <xref:System.Data.SqlClient.SqlCommand>не возвращает значение, <xref:System.Data.SqlClient.SqlParameter>содержит значение null.</xref:System.Data.SqlClient.SqlParameter> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.ParameterDirection>       `Output`, `InputOut`, и `ReturnValue` параметров, возвращенный при вызове <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>невозможен, пока не будет закрыта <xref:System.Data.SqlClient.SqlDataReader>.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [Commands and Parameters](~/add/includes/ajax-current-ext-md.md)  \n  \n [DataAdapter Parameters](~/add/includes/ajax-current-ext-md.md)  \n  \n [SQL Server and ADO.NET](~/add/includes/ajax-current-ext-md.md)"
  syntax:
    content: public override System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "Один из <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Свойство не было задано одно из допустимых <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения."
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  id: ForceColumnEncryption
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
  fullName: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Принудительно шифрует параметр при использовании [постоянного шифрования](https://msdn.microsoft.com/library/mt163865.aspx). Если SQL Server сообщает драйверу, что параметр не должен быть зашифрован, запрос, использующий параметр завершится ошибкой. Это свойство обеспечивает дополнительную защиту от атак на систему безопасности, включающих предоставление неверных метаданных шифрования клиенту, что может привести к раскрытию данных SQL Server."
  syntax:
    content: public bool ForceColumnEncryption { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если для параметра задано принудительное шифрование столбца; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlParameter.ForceColumnEncryption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.IsNullable
  id: IsNullable
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
  fullName: System.Data.SqlClient.SqlParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает значение, указывающее, принимает ли этот параметр значения null. IsNullable не используется для проверки значения параметра и не будет препятствовать отправке или получении значения null при выполнении команды."
  remarks: "Значения NULL обрабатываются с помощью <xref:System.DBNull>класса.</xref:System.DBNull>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#2](~/add/codesnippet/visualbasic/p-system.data.sqlclient._27_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#2](~/add/codesnippet/csharp/p-system.data.sqlclient._27_1.cs)]"
  syntax:
    content: public override bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значения null принимаются; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.LocaleId
  id: LocaleId
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
  fullName: System.Data.SqlClient.SqlParameter.LocaleId
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает идентификатор языкового стандарта, определяющий соглашения и язык для конкретного региона."
  remarks: "Языкового стандарта, определяющего соглашения и язык для конкретного географического региона. Кодовая страница, используемая для кодирования определенной строки (набор символов) основана на языковой стандарт, используемый с этой строкой или среды, который его создал. Это свойство задает (для входных параметров) или возвращает (для выходных параметров) язык, который будет присоединен к строке при обмене данными с сервером. Это свойство обычно используется вместе с <xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A>свойство.</xref:System.Data.SqlClient.SqlParameter.CompareInfo%2A>      ```   static void CreateSqlParameterLocaleId(){      SqlParameter parameter = new SqlParameter(&quot;pName&quot;, SqlDbType.VarChar);      parameter.LocaleId = 1033;   // English - United States   }   ```"
  syntax:
    content: public int LocaleId { get; set; }
    return:
      type: System.Int32
      description: "Возвращает идентификатор языкового стандарта, связанный с параметром."
  overload: System.Data.SqlClient.SqlParameter.LocaleId*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Offset
  id: Offset
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Offset
  nameWithType: SqlParameter.Offset
  fullName: System.Data.SqlClient.SqlParameter.Offset
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает смещение для <xref:System.Data.SqlClient.SqlParameter.Value*>свойство.</xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "`Offset` Свойство используется для фрагментации двоичных и строковых данных на стороне клиента. Например, чтобы вставить 10 МБ текста в столбец на сервере, пользователь может выполнить 10 параметризованных блоков размером 1 МБ, сдвигая значение `Offset` каждой итерации на 1 МБ.       `Offset`Указывает число байтов для двоичных типов и количество символов в строках. Число строк не включает завершающий символ."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#3](~/add/codesnippet/visualbasic/p-system.data.sqlclient._43_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#3](~/add/codesnippet/csharp/p-system.data.sqlclient._43_1.cs)]"
  syntax:
    content: public int Offset { get; set; }
    return:
      type: System.Int32
      description: "Смещение на <xref:System.Data.SqlClient.SqlParameter.Value*>.</xref:System.Data.SqlClient.SqlParameter.Value*> Значение по умолчанию — 0."
  overload: System.Data.SqlClient.SqlParameter.Offset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ParameterName
  id: ParameterName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
  fullName: System.Data.SqlClient.SqlParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>."
  remarks: "Имя_параметра указывается в виде @paramname. Перед выполнением необходимо значение ParameterName <xref:System.Data.SqlClient.SqlCommand>зависящей от параметров.</xref:System.Data.SqlClient.SqlCommand>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._1_1.vb)]\n [!code-cs[Classic WebData SqlParameter.ParameterName Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._1_1.cs)]"
  syntax:
    content: public override string ParameterName { get; set; }
    return:
      type: System.String
      description: "Имя <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>. Значение по умолчанию — пустая строка."
  overload: System.Data.SqlClient.SqlParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Precision
  id: Precision
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Precision
  nameWithType: SqlParameter.Precision
  fullName: System.Data.SqlClient.SqlParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает максимальное число разрядов, используемых для представления <xref:System.Data.SqlClient.SqlParameter.Value*>свойство.</xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "Параметры, имеющие используется свойство точности <xref:System.Data.SqlDbType>из `Decimal`.</xref:System.Data.SqlDbType>       Необходимо указать значения для точности и <xref:System.Data.SqlClient.SqlParameter.Scale%2A>Свойства для входных параметров, как можно получить из значения параметра.</xref:System.Data.SqlClient.SqlParameter.Scale%2A> `Precision`и `Scale` необходимы для выходных параметров и для сценариев, где необходимо указывать все метаданные для параметра без значения, например, указать значение null с определенной точности и масштаба.      Настроек [!NOTE] настроек использование этого свойства для принудительного ограничения данных, передаваемые в базу данных не поддерживается. Чтобы округлить, усечения или иного принудительного ограничения данных до его передачи в базу данных, используйте <xref:System.Math>класс, который является частью `System` имен до присвоения значения параметру `Value` свойство.</xref:System.Math>      Настроек [!NOTE] настроек поставщики данных платформы Microsoft .NET Framework, входящих в состав .NET Framework версии 1.0 не проверять точность или <xref:System.Data.SqlClient.SqlParameter.Scale%2A>из <xref:System.Decimal>значения параметров.</xref:System.Decimal> </xref:System.Data.SqlClient.SqlParameter.Scale%2A> Это может привести к усечению данных, добавляемых в источнике данных. Если вы используете .NET Framework версии 1.0, проверить точность и <xref:System.Data.SqlClient.SqlParameter.Scale%2A>из <xref:System.Decimal>значения, прежде чем устанавливать значение параметра.</xref:System.Decimal> </xref:System.Data.SqlClient.SqlParameter.Scale%2A> При использовании .NET Framework версии 1.1 или более поздней версии, создается исключение, если <xref:System.Decimal>значение параметра задается с помощью Недопустимая точность.</xref:System.Decimal> <xref:System.Data.SqlClient.SqlParameter.Scale%2A>значения, превышающие <xref:System.Decimal>Масштаб параметра по-прежнему усекаются.</xref:System.Decimal></xref:System.Data.SqlClient.SqlParameter.Scale%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlParameter.Precision Example#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._18_1.vb)]\n [!code-cs[Classic WebData SqlParameter.Precision Example#1](~/add/codesnippet/csharp/p-system.data.sqlclient._18_1.cs)]"
  syntax:
    content: public byte Precision { get; set; }
    return:
      type: System.Byte
      description: "Максимальное число разрядов, используемых для представления <> </> *настроек свойств. По умолчанию используется значение 0. Это означает, что поставщик данных задает точность для <> </> *настроек."
  overload: System.Data.SqlClient.SqlParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: SqlParameter.ResetDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Сбрасывает тип, связанный с этим <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>."
  remarks: "При выполнении команды, содержащей значения параметров, код может либо явно задавать тип параметра или параметра можно определить его тип, от его значения. Вызов этого метода сбрасывает параметр, чтобы можно было повторно определить его тип из значения, передаваемые в качестве параметра. Вызов этого метода влияет на обе <xref:System.Data.SqlClient.SqlParameter.DbType%2A>и <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>Свойства <xref:System.Data.SqlClient.SqlParameter>.</xref:System.Data.SqlClient.SqlParameter> </xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> </xref:System.Data.SqlClient.SqlParameter.DbType%2A>"
  syntax:
    content: public override void ResetDbType ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType
  id: ResetSqlDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ResetSqlDbType()
  nameWithType: SqlParameter.ResetSqlDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Сбрасывает тип, связанный с этим <xref href=&quot;System.Data.SqlClient.SqlParameter&quot;> </xref>."
  remarks: "При выполнении команды, содержащей значения параметров, код может либо явно задавать тип параметра или параметра можно определить его тип, от его значения. Вызов этого метода сбрасывает параметр, чтобы можно было повторно определить его тип из значения, передаваемые в качестве параметра. Вызов этого метода влияет на обе <xref:System.Data.SqlClient.SqlParameter.DbType%2A>и <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>Свойства <xref:System.Data.SqlClient.SqlParameter>.</xref:System.Data.SqlClient.SqlParameter> </xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> </xref:System.Data.SqlClient.SqlParameter.DbType%2A>"
  syntax:
    content: public void ResetSqlDbType ();
    parameters: []
  overload: System.Data.SqlClient.SqlParameter.ResetSqlDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Scale
  id: Scale
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Scale
  nameWithType: SqlParameter.Scale
  fullName: System.Data.SqlClient.SqlParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает число десятичных разрядов, до которых <xref:System.Data.SqlClient.SqlParameter.Value*>разрешается.</xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "Свойства шкалы используется с параметрами, имеющими <xref:System.Data.SqlDbType>из `Decimal`.</xref:System.Data.SqlDbType>      Настроек [!WARNING] настроек данных может быть усечена, если свойства шкалы не указан явно, и данные на сервере не помещается в масштаб 0 (по умолчанию).       Необходимо указать значения для <xref:System.Data.SqlClient.SqlParameter.Precision%2A>и масштабировать свойства для входных параметров, как можно получить из значения параметра.</xref:System.Data.SqlClient.SqlParameter.Precision%2A> `Precision`и `Scale` необходимы для выходных параметров и для сценариев, где необходимо указывать все метаданные для параметра без значения, например, указать значение null с определенной точности и масштаба.      Настроек [!NOTE] настроек использование этого свойства для принудительного ограничения данных, передаваемые в базу данных не поддерживается. Чтобы округлить, усечения или иного принудительного ограничения данных до его передачи в базу данных, используйте <xref:System.Math>класс, который является частью `System` имен до присвоения значения параметру `Value` свойство.</xref:System.Math>      Настроек [!NOTE] настроек поставщиков данных .NET framework, которые входят в состав .NET Framework версии 1.0 не проверять <xref:System.Data.SqlClient.SqlParameter.Precision%2A>или масштаб <xref:System.Decimal>значения параметров.</xref:System.Decimal> </xref:System.Data.SqlClient.SqlParameter.Precision%2A> Это может привести к усечению данных для вставки в источнике данных. Если вы используете .NET Framework версии 1.0, проверить <xref:System.Data.SqlClient.SqlParameter.Precision%2A>и <xref:System.Data.SqlClient.SqlParameter>из <xref:System.Decimal>значения, прежде чем устанавливать значение параметра.</xref:System.Decimal> </xref:System.Data.SqlClient.SqlParameter> </xref:System.Data.SqlClient.SqlParameter.Precision%2A> Масштабировать значения, превышающие <xref:System.Decimal>Масштаб параметра по-прежнему усекаются.</xref:System.Decimal>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#4](~/add/codesnippet/visualbasic/p-system.data.sqlclient._60_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#4](~/add/codesnippet/csharp/p-system.data.sqlclient._60_1.cs)]"
  syntax:
    content: public byte Scale { get; set; }
    return:
      type: System.Byte
      description: "Число десятичных разрядов, до которого <xref:System.Data.SqlClient.SqlParameter.Value*>разрешается.</xref:System.Data.SqlClient.SqlParameter.Value*> Значение по умолчанию — 0."
  overload: System.Data.SqlClient.SqlParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Size
  id: Size
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Size
  nameWithType: SqlParameter.Size
  fullName: System.Data.SqlClient.SqlParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает максимальный размер в байтах данных внутри столбца."
  remarks: "Возвращаемые значения не затрагиваются этим свойством; возвращаемые параметры из хранимых процедур всегда являются целыми числами фиксированного размера.       Для выходных параметров с типом данных переменной длины (например, nvarchar) размер параметра определяет размер буфера, удерживая выходного параметра. Выходной параметр может быть усечена до размера, указанного размера. Для символьных типов размер, указанный размер находится в символы.       Свойство размера используется для двоичных и строковых типов. Для параметров типа `SqlType.String`, `Size` означает длина в символах Юникода. Для параметров типа `SqlType.Xml`, `Size` учитывается.       Для нестроковых типов данных и строковых данных ANSI свойство Size относится к числу байтов. Для строковых данных Юникода размер ссылается на число символов. Число строк не включает завершающий символ.       Для типов данных переменной длины размером описывает максимальный объем данных для передачи на сервер. Например для строкового значения Юникода, размер может использоваться для ограничения объема данных, отправляемых на сервер до&100; символов.       Если явно не набор размер получается из фактического размера указанного значения параметра.       Если дробная часть значения параметра больше, чем размер, то значение будет усечено в соответствии с размером.       Значение размера для типов данных фиксированной длины, учитывается. Можно получить в информационных целях и возвращает максимальное количество байтов, используемых поставщиком при передаче значения параметра на сервер.       Сведения о потоковой передаче см. в разделе [поддержка потоковой передачи SqlClient](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#5](~/add/codesnippet/visualbasic/p-system.data.sqlclient._19_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#5](~/add/codesnippet/csharp/p-system.data.sqlclient._19_1.cs)]"
  syntax:
    content: public override int Size { get; set; }
    return:
      type: System.Int32
      description: "Максимальный размер в байтах данных внутри столбца. Значение по умолчанию выводится из значения параметра."
  overload: System.Data.SqlClient.SqlParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
  fullName: System.Data.SqlClient.SqlParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя исходного столбца, сопоставленного <xref href=&quot;System.Data.DataSet&quot;> </xref> и используется для загрузки или возвращения<xref:System.Data.SqlClient.SqlParameter.Value*></xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "Если свойство SourceColumn указано значение, отличное от пустой строки, значение параметра извлекается из столбца с именем SourceColumn. Если <xref:System.Data.SqlClient.SqlParameter.Direction%2A>имеет значение `Input`, значение берется из <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.SqlClient.SqlParameter.Direction%2A> Если <xref:System.Data.SqlClient.SqlParameter.Direction%2A>имеет значение `Output`, значение берется из источника данных.</xref:System.Data.SqlClient.SqlParameter.Direction%2A> Объект <xref:System.Data.SqlClient.SqlParameter.Direction%2A>из `InputOutput` представляет собой комбинацию.</xref:System.Data.SqlClient.SqlParameter.Direction%2A>       Дополнительные сведения о том, как использовать свойство SourceColumn см. в разделе [параметры DataAdapter](~/add/includes/ajax-current-ext-md.md) и [обновление источников данных с помощью DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#6](~/add/codesnippet/visualbasic/p-system.data.sqlclient._48_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#6](~/add/codesnippet/csharp/p-system.data.sqlclient._48_1.cs)]"
  syntax:
    content: public override string SourceColumn { get; set; }
    return:
      type: System.String
      description: "Имя исходного столбца, сопоставленного <xref href=&quot;System.Data.DataSet&quot;> </xref>. Значение по умолчанию — пустая строка."
  overload: System.Data.SqlClient.SqlParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Задает или возвращает значение, показывающее, может ли исходный столбец значение NULL. Это позволяет <xref href=&quot;System.Data.SqlClient.SqlCommandBuilder&quot;> </xref> правильно создавать инструкции Update для столбцов со значением NULL."
  remarks: "Используемые SourceColumnNullMapping <xref:System.Data.SqlClient.SqlCommandBuilder>правильно создать команды обновления при работе столбцов со значением NULL.</xref:System.Data.SqlClient.SqlCommandBuilder> Как правило использование SourceColumnNullMapping ограничена разработчикам, наследующим <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder>       <xref:System.Data.Common.DbCommandBuilder>использует это свойство, чтобы определить, является ли исходный столбец допускает значения NULL и задает для этого свойства `true` Если значение NULL, и `false` , если это не так.</xref:System.Data.Common.DbCommandBuilder> Если <xref:System.Data.SqlClient.SqlCommandBuilder>является создание его инструкции Update, он проверяет SourceColumnNullMapping для каждого параметра.</xref:System.Data.SqlClient.SqlCommandBuilder> Если свойство `true`, <xref:System.Data.SqlClient.SqlCommandBuilder>создает предложение WHERE следующим образом (в следующее выражение запроса «FieldName» представляет имя поля): ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ``` имеет значение false, если SourceColumnNullMapping для поля <xref:System.Data.SqlClient.SqlCommandBuilder>приводит к возникновению ошибки следующее предложение WHERE: ```   FieldName = @OriginalFieldName   ``` в дополнение к этому @IsNull_FieldName содержит 1, если поле источника содержит значение null и 0, если это не.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Этот механизм позволяет оптимизировать производительность в SQL Server и предоставляет общий код, который работает в нескольких поставщиков."
  syntax:
    content: public override bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если исходный столбец допускает значение NULL; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если это не так."
  overload: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
  fullName: System.Data.SqlClient.SqlParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> для использования при загрузке<xref:System.Data.SqlClient.SqlParameter.Value*></xref:System.Data.SqlClient.SqlParameter.Value*>"
  remarks: "Это свойство используется `SqlDataAdapter.UpdateCommand` во время обновления, чтобы определить, используется ли значение исходного или текущего значения параметра. Это позволяет обновить первичные ключи. Это свойство имеет значение версии <xref:System.Data.DataRow>используемые `DataRow.Item` свойства или одного из `DataRow.GetChildRows` методы <xref:System.Data.DataRow>объекта.</xref:System.Data.DataRow> </xref:System.Data.DataRow>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#7](~/add/codesnippet/visualbasic/p-system.data.sqlclient._64_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#7](~/add/codesnippet/csharp/p-system.data.sqlclient._64_1.cs)]"
  syntax:
    content: public override System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "Один из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_Current&quot; name=&quot;Current&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlParameter.SourceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SqlDbType
  id: SqlDbType
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
  fullName: System.Data.SqlClient.SqlParameter.SqlDbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает <xref href=&quot;System.Data.SqlDbType&quot;> </xref> параметра."
  remarks: "SqlDbType и <xref:System.Data.SqlClient.SqlParameter.DbType%2A>связаны.</xref:System.Data.SqlClient.SqlParameter.DbType%2A> Таким образом Если <xref:System.Data.SqlClient.SqlParameter.DbType%2A>изменения SqlDbType на вспомогательные <xref:System.Data.SqlDbType>.</xref:System.Data.SqlDbType> </xref:System.Data.SqlClient.SqlParameter.DbType%2A>       Список поддерживаемых типов данных см. в разделе соответствующего <xref:System.Data.SqlDbType>член.</xref:System.Data.SqlDbType> Дополнительные сведения см. в разделе [параметры DataAdapter](~/add/includes/ajax-current-ext-md.md).       Сведения о потоковой передаче см. в разделе [поддержка потоковой передачи SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.SqlDbType SqlDbType { get; set; }
    return:
      type: System.Data.SqlDbType
      description: "Один из <xref href=&quot;System.Data.SqlDbType&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_NVarChar&quot; name=&quot;NVarChar&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlClient.SqlParameter.SqlDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.SqlValue
  id: SqlValue
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
  fullName: System.Data.SqlClient.SqlParameter.SqlValue
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает значение параметра как тип SQL."
  remarks: "Для входных параметров значение, привязанное к <xref:System.Data.SqlClient.SqlCommand>, отправляемое на сервер.</xref:System.Data.SqlClient.SqlCommand> Для вывода параметров и возвращаемых значений, имеет значение по завершении <xref:System.Data.SqlClient.SqlCommand>и после <xref:System.Data.SqlClient.SqlDataReader>закрыт.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand>       Это свойство может быть присвоено значение null или <xref:System.DBNull.Value>.</xref:System.DBNull.Value> Используйте <xref:System.DBNull.Value>для отправки значения NULL как значение параметра.</xref:System.DBNull.Value> Используйте значение null или не задано SqlValue, чтобы использовать значение по умолчанию для параметра.       Если приложение указывает тип базы данных, связанное значение преобразуется к этому типу, когда поставщик данных отправляет данные на сервер. Поставщик пытается преобразовать любой тип значения, если он поддерживает <xref:System.IConvertible>интерфейса.</xref:System.IConvertible> Если указанный тип не совместим со значением, могут возникнуть ошибки преобразования.       Как <xref:System.Data.SqlClient.SqlParameter.DbType%2A>и <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>Свойства могут быть заданы путем установки <xref:System.Data.SqlClient.SqlParameter.Value%2A>.</xref:System.Data.SqlClient.SqlParameter.Value%2A> </xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> </xref:System.Data.SqlClient.SqlParameter.DbType%2A>       <xref:System.Data.SqlClient.SqlParameter.Value%2A>Перезаписывается `SqlDataAdapter.UpdateCommand`.</xref:System.Data.SqlClient.SqlParameter.Value%2A>       Используйте <xref:System.Data.SqlClient.SqlParameter.Value%2A>свойство для возврата значения параметров как общий язык типов среды выполнения (CLR).</xref:System.Data.SqlClient.SqlParameter.Value%2A>       Сведения о потоковой передаче см. в разделе [поддержка потоковой передачи SqlClient](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public object SqlValue { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>, Значение параметра, использующего типы SQL.</xref:System.Object> Значение по умолчанию имеет значение null."
  overload: System.Data.SqlClient.SqlParameter.SqlValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlParameter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlParameter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Описание этого члена см. в разделе <xref:System.ICloneable.Clone*>.</xref:System.ICloneable.Clone*>"
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Data.SqlClient.SqlParameter>экземпляр приводится к <xref:System.ICloneable>интерфейс.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlParameter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Новый <xref:System.Object>, является копией данного экземпляра.</xref:System.Object>"
  overload: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.ToString
  id: ToString
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: ToString()
  nameWithType: SqlParameter.ToString()
  fullName: System.Data.SqlClient.SqlParameter.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает строку, содержащую <xref:System.Data.SqlClient.SqlParameter.ParameterName*>.</xref:System.Data.SqlClient.SqlParameter.ParameterName*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строка, содержащая <xref:System.Data.SqlClient.SqlParameter.ParameterName*>.</xref:System.Data.SqlClient.SqlParameter.ParameterName*>"
  overload: System.Data.SqlClient.SqlParameter.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.TypeName
  id: TypeName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: TypeName
  nameWithType: SqlParameter.TypeName
  fullName: System.Data.SqlClient.SqlParameter.TypeName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает имя типа для возвращающего табличное значение параметра."
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "Имя типа, указанного параметра, возвращающих табличные значения."
  overload: System.Data.SqlClient.SqlParameter.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName
  id: UdtTypeName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
  fullName: System.Data.SqlClient.SqlParameter.UdtTypeName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> , представляющий определяемый пользователем тип, используемый в качестве параметра."
  remarks: "Пример, демонстрирующий UdtTypeName см. в разделе [извлечение данных определяемого пользователем ТИПА](http://msdn.microsoft.com/library/ms131080.aspx)."
  syntax:
    content: public string UdtTypeName { get; set; }
    return:
      type: System.String
      description: "Объект <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> , представляющий полное имя определяемого пользователем типа в базе данных."
  overload: System.Data.SqlClient.SqlParameter.UdtTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.Value
  id: Value
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: Value
  nameWithType: SqlParameter.Value
  fullName: System.Data.SqlClient.SqlParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает значение параметра."
  remarks: "Для входных параметров значение, привязанное к <xref:System.Data.SqlClient.SqlCommand>, отправляемое на сервер.</xref:System.Data.SqlClient.SqlCommand> Для вывода параметров и возвращаемых значений, имеет значение по завершении <xref:System.Data.SqlClient.SqlCommand>и после <xref:System.Data.SqlClient.SqlDataReader>закрыт.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient.SqlCommand>       Это свойство может быть присвоено значение null или <xref:System.DBNull.Value>.</xref:System.DBNull.Value> Используйте <xref:System.DBNull.Value>для отправки значения NULL как значение параметра.</xref:System.DBNull.Value> Используйте значение null или не задано значение по умолчанию для параметра.       Если данные Юникода XML передаются как строка исключение.       Если приложение указывает тип базы данных, связанное значение преобразуется к этому типу, когда поставщик данных отправляет данные на сервер. Поставщик пытается преобразовать любой тип значения, если он поддерживает <xref:System.IConvertible>интерфейса.</xref:System.IConvertible> Если указанный тип не совместим со значением, могут возникнуть ошибки преобразования.       Как <xref:System.Data.SqlClient.SqlParameter.DbType%2A>и <xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A>могут быть заданы путем установки значения свойства.</xref:System.Data.SqlClient.SqlParameter.SqlDbType%2A> </xref:System.Data.SqlClient.SqlParameter.DbType%2A>       Свойство значения заменены `SqlDataAdapter.UpdateCommand`.       Сведения о потоковой передаче см. в разделе [поддержка потоковой передачи SqlClient](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlParameter> and sets some of its properties.  \n  \n [!code-vb[DataWorks SqlParam.Properties#8](~/add/codesnippet/visualbasic/p-system.data.sqlclient._17_1.vb)]\n [!code-cs[DataWorks SqlParam.Properties#8](~/add/codesnippet/csharp/p-system.data.sqlclient._17_1.cs)]"
  syntax:
    content: public override object Value { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>Который является значением параметра.</xref:System.Object> Значение по умолчанию имеет значение null."
  overload: System.Data.SqlClient.SqlParameter.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  id: XmlSchemaCollectionDatabase
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Получает имя базы данных, в которой находится коллекция схем для данного экземпляра XML."
  remarks: "Это значение равно null (`Nothing` в Visual Basic), если коллекция определена в текущей базе данных. Он также имеет значение null, если нет коллекции схем, в этом случае <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>и <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>также равны null.</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> </xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>"
  syntax:
    content: public string XmlSchemaCollectionDatabase { get; set; }
    return:
      type: System.String
      description: "Имя базы данных, в которой находится коллекция схем для данного экземпляра XML."
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  id: XmlSchemaCollectionName
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает имя коллекции схем для данного экземпляра XML."
  remarks: "Это значение равно null (`Nothing` в Visual Basic) при наличии связанной коллекции схем. Если значение равно null, затем <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>и <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A>также равны null.</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema%2A> </xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>"
  syntax:
    content: public string XmlSchemaCollectionName { get; set; }
    return:
      type: System.String
      description: "Имя коллекции схем для данного экземпляра XML."
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  id: XmlSchemaCollectionOwningSchema
  parent: System.Data.SqlClient.SqlParameter
  langs:
  - csharp
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Реляционная схема-владелец, в которой находится коллекция схем для данного экземпляра XML."
  remarks: "Это значение равно null (`Nothing` в Visual Basic), если коллекция определена в текущей базе данных. Он также имеет значение null, если нет коллекции схем, в этом случае <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>и <xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A>также равны null.</xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName%2A> </xref:System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase%2A>"
  syntax:
    content: public string XmlSchemaCollectionOwningSchema { get; set; }
    return:
      type: System.String
      description: "Реляционная схема-владелец для данного экземпляра XML."
  overload: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.Common.DbParameter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlClient.SqlParameter.#ctor
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter()
  nameWithType: SqlParameter.SqlParameter()
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter()
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlDbType
  parent: System.Data
  isExternal: false
  name: SqlDbType
  nameWithType: SqlDbType
  fullName: System.Data.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Object)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,Object)
  nameWithType: SqlParameter.SqlParameter(String,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.String)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,String)
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.SqlClient.SqlParameter.#ctor(System.String,System.Data.SqlDbType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object,System.String,System.String,System.String)
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  nameWithType: SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
  fullName: System.Data.SqlClient.SqlParameter.SqlParameter(String,SqlDbType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object,String,String,String)
- uid: System.Data.SqlClient.SqlParameter.CompareInfo
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
  fullName: System.Data.SqlClient.SqlParameter.CompareInfo
- uid: System.Data.SqlTypes.SqlCompareOptions
  parent: System.Data.SqlTypes
  isExternal: false
  name: SqlCompareOptions
  nameWithType: SqlCompareOptions
  fullName: System.Data.SqlTypes.SqlCompareOptions
- uid: System.Data.SqlClient.SqlParameter.DbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: DbType
  nameWithType: SqlParameter.DbType
  fullName: System.Data.SqlClient.SqlParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.SqlClient.SqlParameter.Direction
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Direction
  nameWithType: SqlParameter.Direction
  fullName: System.Data.SqlClient.SqlParameter.Direction
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
  fullName: System.Data.SqlClient.SqlParameter.ForceColumnEncryption
- uid: System.Data.SqlClient.SqlParameter.IsNullable
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
  fullName: System.Data.SqlClient.SqlParameter.IsNullable
- uid: System.Data.SqlClient.SqlParameter.LocaleId
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
  fullName: System.Data.SqlClient.SqlParameter.LocaleId
- uid: System.Data.SqlClient.SqlParameter.Offset
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Offset
  nameWithType: SqlParameter.Offset
  fullName: System.Data.SqlClient.SqlParameter.Offset
- uid: System.Data.SqlClient.SqlParameter.ParameterName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
  fullName: System.Data.SqlClient.SqlParameter.ParameterName
- uid: System.Data.SqlClient.SqlParameter.Precision
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Precision
  nameWithType: SqlParameter.Precision
  fullName: System.Data.SqlClient.SqlParameter.Precision
- uid: System.Data.SqlClient.SqlParameter.ResetDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: SqlParameter.ResetDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetDbType()
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetSqlDbType()
  nameWithType: SqlParameter.ResetSqlDbType()
  fullName: System.Data.SqlClient.SqlParameter.ResetSqlDbType()
- uid: System.Data.SqlClient.SqlParameter.Scale
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Scale
  nameWithType: SqlParameter.Scale
  fullName: System.Data.SqlClient.SqlParameter.Scale
- uid: System.Data.SqlClient.SqlParameter.Size
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Size
  nameWithType: SqlParameter.Size
  fullName: System.Data.SqlClient.SqlParameter.Size
- uid: System.Data.SqlClient.SqlParameter.SourceColumn
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
  fullName: System.Data.SqlClient.SqlParameter.SourceColumn
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
  fullName: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping
- uid: System.Data.SqlClient.SqlParameter.SourceVersion
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
  fullName: System.Data.SqlClient.SqlParameter.SourceVersion
- uid: System.Data.SqlClient.SqlParameter.SqlDbType
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
  fullName: System.Data.SqlClient.SqlParameter.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.SqlValue
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
  fullName: System.Data.SqlClient.SqlParameter.SqlValue
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlParameter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlParameter.System.ICloneable.Clone()
- uid: System.Data.SqlClient.SqlParameter.ToString
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ToString()
  nameWithType: SqlParameter.ToString()
  fullName: System.Data.SqlClient.SqlParameter.ToString()
- uid: System.Data.SqlClient.SqlParameter.TypeName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: TypeName
  nameWithType: SqlParameter.TypeName
  fullName: System.Data.SqlClient.SqlParameter.TypeName
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
  fullName: System.Data.SqlClient.SqlParameter.UdtTypeName
- uid: System.Data.SqlClient.SqlParameter.Value
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Value
  nameWithType: SqlParameter.Value
  fullName: System.Data.SqlClient.SqlParameter.Value
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
  fullName: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema
- uid: System.Data.SqlClient.SqlParameter.#ctor*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlParameter
  nameWithType: SqlParameter.SqlParameter
- uid: System.Data.SqlClient.SqlParameter.CompareInfo*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: CompareInfo
  nameWithType: SqlParameter.CompareInfo
- uid: System.Data.SqlClient.SqlParameter.DbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: DbType
  nameWithType: SqlParameter.DbType
- uid: System.Data.SqlClient.SqlParameter.Direction*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Direction
  nameWithType: SqlParameter.Direction
- uid: System.Data.SqlClient.SqlParameter.ForceColumnEncryption*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ForceColumnEncryption
  nameWithType: SqlParameter.ForceColumnEncryption
- uid: System.Data.SqlClient.SqlParameter.IsNullable*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: IsNullable
  nameWithType: SqlParameter.IsNullable
- uid: System.Data.SqlClient.SqlParameter.LocaleId*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: LocaleId
  nameWithType: SqlParameter.LocaleId
- uid: System.Data.SqlClient.SqlParameter.Offset*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Offset
  nameWithType: SqlParameter.Offset
- uid: System.Data.SqlClient.SqlParameter.ParameterName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ParameterName
  nameWithType: SqlParameter.ParameterName
- uid: System.Data.SqlClient.SqlParameter.Precision*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Precision
  nameWithType: SqlParameter.Precision
- uid: System.Data.SqlClient.SqlParameter.ResetDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetDbType
  nameWithType: SqlParameter.ResetDbType
- uid: System.Data.SqlClient.SqlParameter.ResetSqlDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ResetSqlDbType
  nameWithType: SqlParameter.ResetSqlDbType
- uid: System.Data.SqlClient.SqlParameter.Scale*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Scale
  nameWithType: SqlParameter.Scale
- uid: System.Data.SqlClient.SqlParameter.Size*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Size
  nameWithType: SqlParameter.Size
- uid: System.Data.SqlClient.SqlParameter.SourceColumn*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumn
  nameWithType: SqlParameter.SourceColumn
- uid: System.Data.SqlClient.SqlParameter.SourceColumnNullMapping*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: SqlParameter.SourceColumnNullMapping
- uid: System.Data.SqlClient.SqlParameter.SourceVersion*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SourceVersion
  nameWithType: SqlParameter.SourceVersion
- uid: System.Data.SqlClient.SqlParameter.SqlDbType*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlDbType
  nameWithType: SqlParameter.SqlDbType
- uid: System.Data.SqlClient.SqlParameter.SqlValue*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: SqlValue
  nameWithType: SqlParameter.SqlValue
- uid: System.Data.SqlClient.SqlParameter.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlParameter.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlParameter.ToString*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: ToString
  nameWithType: SqlParameter.ToString
- uid: System.Data.SqlClient.SqlParameter.TypeName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: TypeName
  nameWithType: SqlParameter.TypeName
- uid: System.Data.SqlClient.SqlParameter.UdtTypeName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: UdtTypeName
  nameWithType: SqlParameter.UdtTypeName
- uid: System.Data.SqlClient.SqlParameter.Value*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: Value
  nameWithType: SqlParameter.Value
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionDatabase*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionDatabase
  nameWithType: SqlParameter.XmlSchemaCollectionDatabase
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionName*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionName
  nameWithType: SqlParameter.XmlSchemaCollectionName
- uid: System.Data.SqlClient.SqlParameter.XmlSchemaCollectionOwningSchema*
  parent: System.Data.SqlClient.SqlParameter
  isExternal: false
  name: XmlSchemaCollectionOwningSchema
  nameWithType: SqlParameter.XmlSchemaCollectionOwningSchema
