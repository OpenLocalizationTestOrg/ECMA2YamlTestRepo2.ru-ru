### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpList
  id: JumpList
  children:
  - System.Windows.Shell.JumpList.#ctor
  - System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  - System.Windows.Shell.JumpList.Apply
  - System.Windows.Shell.JumpList.BeginInit
  - System.Windows.Shell.JumpList.EndInit
  - System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  - System.Windows.Shell.JumpList.JumpItems
  - System.Windows.Shell.JumpList.JumpItemsRejected
  - System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  - System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  - System.Windows.Shell.JumpList.ShowFrequentCategory
  - System.Windows.Shell.JumpList.ShowRecentCategory
  langs:
  - csharp
  name: JumpList
  nameWithType: JumpList
  fullName: System.Windows.Shell.JumpList
  type: Class
  summary: "Представляет список элементов и задач, которые отображаются в виде меню на [!INCLUDE[win7](~/add/includes/win7-md.md)] кнопку на панели задач."
  remarks: "[!INCLUDE[win7](~/add/includes/win7-md.md)] Задач предоставляет расширенные функциональные возможности для запуска программ непосредственно из кнопки панели задач с помощью списка переходов. Списки переходов также используются в [!INCLUDE[win7](~/add/includes/win7-md.md)] меню &quot;Пуск&quot;. Доступ к список переходов, щелкнув правой кнопкой мыши кнопку на панели задач или щелкните стрелку рядом с программой, в меню «Пуск». Дополнительные сведения о списках переходов см. в разделе [задач](http://go.microsoft.com/fwlink/?LinkId=178478) части инструкции взаимодействие пользователя Windows.       Класс JumpList предоставляет управляемую оболочку для функции список переходов в [!INCLUDE[win7](~/add/includes/win7-md.md)] задач и управляет ими данные, передаваемые [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] оболочки. Функциональные возможности, предоставляемые классом JumpList недоступен в версиях [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] более раннюю, чем [!INCLUDE[win7](~/add/includes/win7-md.md)]. Приложения, использующие класс JumpList будет выполняться в других версиях [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)], но список переходов будет недоступен. Дополнительные сведения об оболочке Windows и собственных API список переходов см. в разделе [задач расширения](http://go.microsoft.com/fwlink/?LinkId=178479).       На следующем рисунке показан перехода списка для проигрывателя Windows Media, с элементами в **задачи** и **частые** категории.       ![Список переходов проигрывателя Windows Media](~/add/media/wpfshell-jumplist.png &quot;список переходов проигрывателя Windows Media&quot;) список переходов проигрывателя Windows Media ## Настройка список переходов списки переходов может содержать два типа элементов, <xref:System.Windows.Shell.JumpTask>и <xref:System.Windows.Shell.JumpPath>.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Объект <xref:System.Windows.Shell.JumpTask>представляет собой ссылку на программу и <xref:System.Windows.Shell.JumpPath>представляет собой ссылку на файл.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Можно визуально отделить элементы в список переходов, создав <xref:System.Windows.Shell.JumpTask>, не содержащий <xref:System.Windows.Shell.JumpTask.Title%2A>и <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>указанный.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> </xref:System.Windows.Shell.JumpTask> Это пустой <xref:System.Windows.Shell.JumpTask>отображается как горизонтальная линия в списке переходов.</xref:System.Windows.Shell.JumpTask>      Настроек [!NOTE] настроек, если тип файла, указанный в <xref:System.Windows.Shell.JumpPath>не зарегистрирован в приложении, файл не будет отображаться в списке переходов.</xref:System.Windows.Shell.JumpPath> Например, при добавлении <xref:System.Windows.Shell.JumpPath>, указывающий на файл .txt, ваше приложение должно быть зарегистрировано для обработки файлов с расширением txt.</xref:System.Windows.Shell.JumpPath> Дополнительные сведения см. в разделе [Общие сведения о связи файлов](http://go.microsoft.com/fwlink/?LinkId=178480).       Элементы помещаются в категории в JumpList. По умолчанию <xref:System.Windows.Shell.JumpItem>отображается в **задачи** категории.</xref:System.Windows.Shell.JumpItem> Кроме того можно указать <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>для <xref:System.Windows.Shell.JumpItem>.</xref:System.Windows.Shell.JumpItem> </xref:System.Windows.Shell.JumpItem.CustomCategory%2A>       Можно указать ли стандартной **последние** и **частые** в JumpList будут отображены категории, установив <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>и <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>Свойства.</xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> </xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> Содержимое этих категорий управляются [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] оболочки. Поскольку эти категории могут содержать большую часть тех же данных, вы обычно отображают одно из них в вашей JumpList, но не оба. [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]автоматически управляет недавно использовавшихся элементов, если их открытия по стандартным диалоговым окном файла и используемого для открытия приложения с помощью сопоставления типов файлов. Если элемент осуществляется через список переходов, можно уведомить [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] оболочки, чтобы добавить элемент в **последние** категории, вызвав <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>метод.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>      ## Применения список переходов Windows Shell вам не может напрямую обращаться к списку переходов в оболочке или прочесть его содержимое в классе JumpList. Вместо этого класс JumpList предоставляет представление список переходов, работать с, а затем применить [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] оболочки. Обычно создание JumpList и задать его один раз, при первом запуске приложения. Тем не менее можно изменить или заменить JumpList во время выполнения.       При установке свойства JumpList перед ее содержимое отображается в панели задач список переходов JumpList необходимо установить в оболочку Windows. Это выполняется автоматически при JumpList впервые присоединяется к приложению в XAML или в вызове <xref:System.Windows.Shell.JumpList.SetJumpList%2A>метода.</xref:System.Windows.Shell.JumpList.SetJumpList%2A> Если изменить содержимое JumpList во время выполнения, необходимо вызвать <xref:System.Windows.Shell.JumpList.Apply%2A>метод, применяемый к оболочке Windows текущего содержимого.</xref:System.Windows.Shell.JumpList.Apply%2A>      ## Задание в списке переходов в XAML A JumpList не присоединяется автоматически к <xref:System.Windows.Application>объекта.</xref:System.Windows.Application> Присоединение JumpList к <xref:System.Windows.Application>объекту в XAML с помощью синтаксиса вложенного свойства.</xref:System.Windows.Application> Этот класс реализует JumpList <xref:System.ComponentModel.ISupportInitialize>интерфейс для поддержки XAML объявление JumpList.</xref:System.ComponentModel.ISupportInitialize> Если объявляется в XAML и вложенные в текущий JumpList <xref:System.Windows.Application>, он автоматически применяется к [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] оболочки при инициализации JumpList.</xref:System.Windows.Application>      ## Установка и изменение списка переходов в коде можно присоединить JumpList для <xref:System.Windows.Application>объекта в коде путем вызова статического <xref:System.Windows.Shell.JumpList.SetJumpList%2A>метод.</xref:System.Windows.Shell.JumpList.SetJumpList%2A> </xref:System.Windows.Application> Это также относится к JumpList [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] оболочки.       Для изменения JumpList во время выполнения, следует вызвать <xref:System.Windows.Shell.JumpList.GetJumpList%2A>метод, чтобы получить JumpList, который в настоящее время присоединена на <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList.GetJumpList%2A> После изменения свойства JumpList необходимо вызвать <xref:System.Windows.Shell.JumpList.Apply%2A>метод для применения изменений в оболочку Windows.</xref:System.Windows.Shell.JumpList.Apply%2A>      Настроек [!NOTE] настроек обычно создается один JumpList, к которому присоединена <xref:System.Windows.Application>и применяются к [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] оболочки.</xref:System.Windows.Application> Тем не менее можно создать несколько объектов JumpList. Только один JumpList одновременно может применяться к [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] оболочки и только один JumpList одновременно могут быть связаны с <xref:System.Windows.Application>.</xref:System.Windows.Application> Платформа .NET Framework не требуется, эти же JumpList.      Настроек [!NOTE] настроек этот класс содержит запрос компоновки на уровне класса, который применяется ко всем элементам. Объект <xref:System.Security.SecurityException>возникает, когда непосредственный вызывающий объект не имеет разрешения с полным доверием.</xref:System.Security.SecurityException> Дополнительные сведения о требованиях безопасности см. в разделе [требования связывания](~/add/includes/ajax-current-ext-md.md) и [требования к наследованию](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example shows an application with a Jump List. The application has three buttons that enable you to add a task to the current Jump List, clear the contents of the Jump List, and apply a new Jump List to the application.  \n  \n The following example shows how to declare a JumpList in markup. The JumpList contains two <xref:System.Windows.Shell.JumpTask> links and one <xref:System.Windows.Shell.JumpPath>. Applying the <xref:System.Windows.Shell.JumpPath> to the shell will fail if the application is not registered to handle the .txt file name extension.  \n  \n [!code-xml[Shell_JumpListSample#000](~/add/codesnippet/xaml/jumplistsample/app.xaml#000)]  \n  \n The following example shows the code-behind page for `App.xaml`. This code handles the <xref:System.Windows.Shell.JumpList.JumpItemsRejected> and <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> events.  \n  \n [!code-cs[Shell_JumpListSample#100](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#100)]  \n  \n The following example shows the markup used to create the application user interface.  \n  \n [!code-xml[Shell_JumpListSample#300](~/add/codesnippet/xaml/jumplistsample/mainwindow.xaml#300)]  \n  \n The following example shows the code-behind page for `MainWindow.xaml`. This code demonstrates how to modify, clear, and create a JumpList in procedural code. For the new Jump List, the static <xref:System.Windows.Shell.JumpList.SetJumpList%2A> method is called to associate the JumpList with the current application and apply the JumpList to the Windows shell.  \n  \n [!code-cs[Shell_JumpListSample#200](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#200)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      [System.Windows.Markup.ContentProperty("JumpItems")]

      public sealed class JumpList : System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpList()
  nameWithType: JumpList.JumpList()
  fullName: System.Windows.Shell.JumpList.JumpList()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> класса."
  syntax:
    content: public JumpList ();
    parameters: []
  overload: System.Windows.Shell.JumpList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)'
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  nameWithType: JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  fullName: System.Windows.Shell.JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> класса с заданными параметрами."
  remarks: "**Последние** и **частые** категории часто содержат множество тем же элементам перехода. В результате приложения обычно отображают одно **последние** или **частые** категорию в списке переходов, но не оба."
  syntax:
    content: public JumpList (System.Collections.Generic.IEnumerable<System.Windows.Shell.JumpItem> items, bool showFrequent, bool showRecent);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem}
      description: "Коллекция <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> объектов, отображаемых в списке переходов."
    - id: showFrequent
      type: System.Boolean
      description: "Значение, указывающее, отображаются ли часто используемые элементы в списке переходов."
    - id: showRecent
      type: System.Boolean
      description: "Значение, указывающее, отображаются ли недавно использовавшиеся элементы в списке переходов."
  overload: System.Windows.Shell.JumpList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  id: AddToRecentCategory(System.String)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(String)
  nameWithType: JumpList.AddToRecentCategory(String)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Добавляет указанный элемент путь **последние** категории списка переходов."
  remarks: "Содержимое **последние** категории управляются с помощью оболочки Windows. Чтобы отобразить недавно использовавшихся элементов в списке переходов, задайте <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>Свойства `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Можно вызвать метод AddToRecentCategory для запроса, в оболочке Windows добавьте путь к элементу для **последние** список элементов. Если приложение не зарегистрировано для обработки типа файла элемента, он не будет отображаться в **последние** списка и вызовы AddToRecentCategory завершится ошибкой без сообщений."
  syntax:
    content: public static void AddToRecentCategory (string itemPath);
    parameters:
    - id: itemPath
      type: System.String
      description: "Путь для добавления в список переходов."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  id: AddToRecentCategory(System.Windows.Shell.JumpPath)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(JumpPath)
  nameWithType: JumpList.AddToRecentCategory(JumpPath)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpPath)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Добавляет указанный путь перехода к **последние** категории списка переходов."
  remarks: "Содержимое **последние** категории управляются с помощью оболочки Windows. Чтобы отобразить недавно использовавшихся элементов в списке переходов, задайте <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>Свойства `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Можно вызвать метод AddToRecentCategory для запроса, в оболочке Windows добавьте указанный путь перехода к **последние** список элементов. Если приложение не зарегистрировано для обработки типа файла элемента, он не будет отображаться в **последние** списка и вызовы AddToRecentCategory завершится ошибкой без сообщений."
  syntax:
    content: public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);
    parameters:
    - id: jumpPath
      type: System.Windows.Shell.JumpPath
      description: "<xref href=&quot;System.Windows.Shell.JumpPath&quot;> </xref> Для добавления в список переходов."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  id: AddToRecentCategory(System.Windows.Shell.JumpTask)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(JumpTask)
  nameWithType: JumpList.AddToRecentCategory(JumpTask)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpTask)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Добавляет указанную задачу перехода к **последние** категории списка переходов."
  remarks: "Содержимое **последние** категории управляются с помощью оболочки Windows. Чтобы отобразить недавно использовавшихся элементов в списке переходов, задайте <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>Свойства `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Можно вызвать метод AddToRecentCategory для запроса, в оболочке Windows добавьте указанную задачу перехода к **последние** список элементов."
  syntax:
    content: public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);
    parameters:
    - id: jumpTask
      type: System.Windows.Shell.JumpTask
      description: "<xref href=&quot;System.Windows.Shell.JumpTask&quot;> </xref> Для добавления в список переходов."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.Apply
  id: Apply
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: Apply()
  nameWithType: JumpList.Apply()
  fullName: System.Windows.Shell.JumpList.Apply()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Отправляет <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> в оболочку Windows, в ее текущем состоянии."
  remarks: "Метод Apply отправляет содержимое <xref:System.Windows.Shell.JumpList>в оболочку Windows, в ее текущем состоянии.</xref:System.Windows.Shell.JumpList> После завершения этого вызова <xref:System.Windows.Shell.JumpList.JumpItems%2A>свойство изменяется содержит только те элементы, которые в оболочке Windows успешно добавлены к его задач список переходов.</xref:System.Windows.Shell.JumpList.JumpItems%2A> Можно обращаться из удаленных элементов в списках обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected>и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>события.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to get the current <xref:System.Windows.Shell.JumpList> and clear the contents of the <xref:System.Windows.Shell.JumpList.JumpItems%2A> collection. The Apply method is then called to apply the <xref:System.Windows.Shell.JumpList> changes to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#230](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#230)]"
  syntax:
    content: public void Apply ();
    parameters: []
  overload: System.Windows.Shell.JumpList.Apply*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> Инициализирован неполностью."
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.BeginInit
  id: BeginInit
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: BeginInit()
  nameWithType: JumpList.BeginInit()
  fullName: System.Windows.Shell.JumpList.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Сигнализирует о начале <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> инициализации."
  remarks: "<xref:System.Windows.Shell.JumpList>Класс реализует <xref:System.ComponentModel.ISupportInitialize>интерфейс для поддержки XAML объявление <xref:System.Windows.Shell.JumpList>.</xref:System.Windows.Shell.JumpList> </xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Shell.JumpList> Метод BeginInit только вызывается, когда <xref:System.Windows.Shell.JumpList>объявлена в XAML и присоединяется к <xref:System.Windows.Application>с помощью синтаксиса вложенного свойства.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Этот метод не вызывается из кода приложения."
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.Shell.JumpList.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Этот вызов BeginInit, вложенные в предыдущего вызова BeginInit."
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.EndInit
  id: EndInit
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: EndInit()
  nameWithType: JumpList.EndInit()
  fullName: System.Windows.Shell.JumpList.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Сигнализирует о завершении <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> инициализации."
  remarks: "<xref:System.Windows.Shell.JumpList>Класс реализует <xref:System.ComponentModel.ISupportInitialize>интерфейс для поддержки XAML объявление <xref:System.Windows.Shell.JumpList>.</xref:System.Windows.Shell.JumpList> </xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Shell.JumpList> Метод EndInit только вызывается, когда <xref:System.Windows.Shell.JumpList>объявлена в XAML и присоединяется к <xref:System.Windows.Application>с помощью синтаксиса вложенного свойства.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Этот метод не вызывается из кода приложения.       Метод EndInit действует так же, как <xref:System.Windows.Shell.JumpList.Apply%2A>метод.</xref:System.Windows.Shell.JumpList.Apply%2A> EndInit отправляет содержимое <xref:System.Windows.Shell.JumpList>в оболочку Windows, в ее текущем состоянии.</xref:System.Windows.Shell.JumpList> После завершения этого вызова <xref:System.Windows.Shell.JumpList.JumpItems%2A>свойство изменяется содержит только те элементы, которые в оболочке Windows успешно добавлен в список переходов.</xref:System.Windows.Shell.JumpList.JumpItems%2A> Можно обращаться из удаленных элементов в списках обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected>и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>события.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.Shell.JumpList.EndInit*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Этот вызов EndInit не связан с вызовом <xref:System.Windows.Shell.JumpList.BeginInit*>.</xref:System.Windows.Shell.JumpList.BeginInit*>"
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  id: GetJumpList(System.Windows.Application)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: GetJumpList(Application)
  nameWithType: JumpList.GetJumpList(Application)
  fullName: System.Windows.Shell.JumpList.GetJumpList(Application)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Возвращает <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> объекта, связанного с приложением."
  remarks: "Можно вызвать метод GetJumpList для получения <xref:System.Windows.Shell.JumpList>в текущий момент связан с <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Платформа .NET Framework не требуется, чтобы это был <xref:System.Windows.Shell.JumpList>включен в оболочку Windows.</xref:System.Windows.Shell.JumpList>"
  example:
  - "The following example shows how to get the <xref:System.Windows.Shell.JumpList> associated with the current application. A <xref:System.Windows.Shell.JumpTask> is added to the <xref:System.Windows.Shell.JumpList.JumpItems%2A> collection and added to the **Recent** category. The <xref:System.Windows.Shell.JumpList.Apply%2A> method is called to apply the updated <xref:System.Windows.Shell.JumpList> to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#240](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#240)]"
  syntax:
    content: public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);
    parameters:
    - id: application
      type: System.Windows.Application
      description: "Приложение, связанное с <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>."
    return:
      type: System.Windows.Shell.JumpList
      description: "<xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> Объект, связанный с указанным приложением."
  overload: System.Windows.Shell.JumpList.GetJumpList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItems
  id: JumpItems
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItems
  nameWithType: JumpList.JumpItems
  fullName: System.Windows.Shell.JumpList.JumpItems
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Возвращает коллекцию <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> объектов, отображаемых в списке переходов."
  remarks: "Список переходов может содержать два типа элементов, <xref:System.Windows.Shell.JumpTask>и <xref:System.Windows.Shell.JumpPath>.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Объект <xref:System.Windows.Shell.JumpTask>представляет собой ссылку на программу и <xref:System.Windows.Shell.JumpPath>представляет собой ссылку на файл.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask>       Когда <xref:System.Windows.Shell.JumpList>создается JumpItems, возвращается пустая коллекция.</xref:System.Windows.Shell.JumpList> Можно добавить любую <xref:System.Windows.Shell.JumpTask>или <xref:System.Windows.Shell.JumpPath>объекты в коллекцию.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Коллекция будет содержать только элементы, которые были добавлены в программе. После <xref:System.Windows.Shell.JumpList>была передана в оболочке Windows успешного вызова либо <xref:System.Windows.Shell.JumpList.EndInit%2A>или <xref:System.Windows.Shell.JumpList.Apply%2A>методы, JumpItems коллекция будет содержать только элементы, которые были успешно добавлены на панель задач список переходов.</xref:System.Windows.Shell.JumpList.Apply%2A> </xref:System.Windows.Shell.JumpList.EndInit%2A> </xref:System.Windows.Shell.JumpList> Элементы, которые не были успешно добавлены удаляются из коллекции JumpItems. Можно обращаться из удаленных элементов в списках обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected>и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>события.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to get the current <xref:System.Windows.Shell.JumpList> and clear the contents of the JumpItems collection. The <xref:System.Windows.Shell.JumpList.Apply%2A> method is then called to apply the <xref:System.Windows.Shell.JumpList> changes to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#230](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#230)]"
  syntax:
    content: public System.Collections.Generic.List<System.Windows.Shell.JumpItem> JumpItems { get; }
    return:
      type: System.Collections.Generic.List{System.Windows.Shell.JumpItem}
      description: "Коллекция <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> объектов, отображаемых в списке переходов. Значение по умолчанию является пустой коллекцией."
  overload: System.Windows.Shell.JumpList.JumpItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItemsRejected
  id: JumpItemsRejected
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItemsRejected
  nameWithType: JumpList.JumpItemsRejected
  fullName: System.Windows.Shell.JumpList.JumpItemsRejected
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Происходит, когда элементы являются не удалось добавить в список переходов оболочка Windows."
  remarks: "После содержимого <xref:System.Windows.Shell.JumpList>применяются к оболочке Windows <xref:System.Windows.Shell.JumpList.JumpItems%2A>свойство изменяется содержит только те элементы, которые в оболочке Windows успешно добавлен в список переходов.</xref:System.Windows.Shell.JumpList.JumpItems%2A> </xref:System.Windows.Shell.JumpList> Можно обращаться из удаленных элементов в списках обработчики событий для JumpItemsRejected и <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>события.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>"
  example:
  - "The following example shows how to handle the JumpItemsRejected event to display the rejected items in a message box. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#110](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#110)]"
  syntax:
    content: public event EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs> JumpItemsRejected;
    return:
      type: System.EventHandler{System.Windows.Shell.JumpItemsRejectedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  id: JumpItemsRemovedByUser
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItemsRemovedByUser
  nameWithType: JumpList.JumpItemsRemovedByUser
  fullName: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Происходит, когда ранее добавленных элементов в список переходов, удаляются из списка пользователем."
  remarks: "После содержимого <xref:System.Windows.Shell.JumpList>применяются к оболочке Windows <xref:System.Windows.Shell.JumpList.JumpItems%2A>свойство изменяется содержит только те элементы, которые в оболочке Windows успешно добавлен в список переходов.</xref:System.Windows.Shell.JumpList.JumpItems%2A> </xref:System.Windows.Shell.JumpList> Можно обращаться из удаленных элементов в списках обработчики событий для <xref:System.Windows.Shell.JumpList.JumpItemsRejected>и события JumpItemsRemovedByUser.</xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to handle the JumpItemsRemovedByUser event to display the rejected items in a message box. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#120](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#120)]"
  syntax:
    content: public event EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs> JumpItemsRemovedByUser;
    return:
      type: System.EventHandler{System.Windows.Shell.JumpItemsRemovedEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  id: SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: SetJumpList(Application,JumpList)
  nameWithType: JumpList.SetJumpList(Application,JumpList)
  fullName: System.Windows.Shell.JumpList.SetJumpList(Application,JumpList)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Наборы <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> объекта, связанного с приложением."
  remarks: "Можно создать несколько <xref:System.Windows.Shell.JumpList>объектов.</xref:System.Windows.Shell.JumpList> Однако только один <xref:System.Windows.Shell.JumpList>одновременно могут быть связаны с <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Вызовите метод SetJumpList, чтобы задать <xref:System.Windows.Shell.JumpList>в текущий момент связан с <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.JumpList> in code. The static SetJumpList method is called to associate the <xref:System.Windows.Shell.JumpList> with the current application. The <xref:System.Windows.Shell.JumpList> is automatically applied to the Windows shell when it is set. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#210](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#210)]"
  syntax:
    content: public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);
    parameters:
    - id: application
      type: System.Windows.Application
      description: "Приложение, связанное с <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>."
    - id: value
      type: System.Windows.Shell.JumpList
      description: "<xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> Для связи с приложением."
  overload: System.Windows.Shell.JumpList.SetJumpList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory
  id: ShowFrequentCategory
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
  fullName: System.Windows.Shell.JumpList.ShowFrequentCategory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Возвращает или задает значение, указывающее, отображаются ли часто используемые элементы в списке переходов."
  remarks: "Содержимое **частые** категории управляются с помощью оболочки Windows. Чтобы отобразить часто используемые элементы в списке переходов, свойству ShowFrequentCategory `true`.       **Последние** и **частые** категории часто содержат множество тем же элементам перехода. В результате приложения обычно отображают одно **последние** или **частые** категорию в списке переходов, но не оба."
  example:
  - "The following example shows a <xref:System.Windows.Shell.JumpList> configured to show the **Frequent** category. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-xml[Shell_JumpListSample#001](~/add/codesnippet/xaml/jumplistsample/app.xaml#001)]"
  syntax:
    content: public bool ShowFrequentCategory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если часто используемые элементы отображаются в списке переходов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpList.ShowFrequentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.ShowRecentCategory
  id: ShowRecentCategory
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
  fullName: System.Windows.Shell.JumpList.ShowRecentCategory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Возвращает или задает значение, указывающее, отображаются ли недавно использовавшиеся элементы в списке переходов."
  remarks: "Содержимое **последние** категории управляются с помощью оболочки Windows. Чтобы отобразить часто используемые элементы в списке переходов, свойству ShowRecentCategory `true`.       **Последние** и **частые** категории часто содержат множество тем же элементам перехода. В результате приложения обычно отображают одно **последние** или **частые** категорию в списке переходов, но не оба.       Можно вызвать <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>метод для запроса, что оболочка Windows добавления элементов в **последние** список элементов.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> Если приложение не зарегистрировано для обработки типа имя файла элемента, он не будет отображаться в **последние** списка и вызовы <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>завершится ошибкой без сообщений.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>"
  example:
  - "The following example shows a <xref:System.Windows.Shell.JumpList> configured to show the **Recent** category. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-xml[Shell_JumpListSample#001](~/add/codesnippet/xaml/jumplistsample/app.xaml#001)]"
  syntax:
    content: public bool ShowRecentCategory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если недавно использовавшиеся элементы отображаются в списке переходов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpList.ShowRecentCategory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Shell.JumpList.#ctor
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList()
  nameWithType: JumpList.JumpList()
  fullName: System.Windows.Shell.JumpList.JumpList()
- uid: System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  nameWithType: JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  fullName: System.Windows.Shell.JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JumpItem>
  nameWithType: IEnumerable<JumpItem>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Shell.JumpItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Shell.JumpItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItem
    name: JumpItem
    nameWithType: JumpItem
    fullName: JumpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(String)
  nameWithType: JumpList.AddToRecentCategory(String)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(JumpPath)
  nameWithType: JumpList.AddToRecentCategory(JumpPath)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpPath)
- uid: System.Windows.Shell.JumpPath
  parent: System.Windows.Shell
  isExternal: false
  name: JumpPath
  nameWithType: JumpPath
  fullName: System.Windows.Shell.JumpPath
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(JumpTask)
  nameWithType: JumpList.AddToRecentCategory(JumpTask)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpTask)
- uid: System.Windows.Shell.JumpTask
  parent: System.Windows.Shell
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
- uid: System.Windows.Shell.JumpList.Apply
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: Apply()
  nameWithType: JumpList.Apply()
  fullName: System.Windows.Shell.JumpList.Apply()
- uid: System.Windows.Shell.JumpList.BeginInit
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: BeginInit()
  nameWithType: JumpList.BeginInit()
  fullName: System.Windows.Shell.JumpList.BeginInit()
- uid: System.Windows.Shell.JumpList.EndInit
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: EndInit()
  nameWithType: JumpList.EndInit()
  fullName: System.Windows.Shell.JumpList.EndInit()
- uid: System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: GetJumpList(Application)
  nameWithType: JumpList.GetJumpList(Application)
  fullName: System.Windows.Shell.JumpList.GetJumpList(Application)
- uid: System.Windows.Shell.JumpList
  parent: System.Windows.Shell
  isExternal: false
  name: JumpList
  nameWithType: JumpList
  fullName: System.Windows.Shell.JumpList
- uid: System.Windows.Application
  parent: System.Windows
  isExternal: false
  name: Application
  nameWithType: Application
  fullName: System.Windows.Application
- uid: System.Windows.Shell.JumpList.JumpItems
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItems
  nameWithType: JumpList.JumpItems
  fullName: System.Windows.Shell.JumpList.JumpItems
- uid: System.Collections.Generic.List{System.Windows.Shell.JumpItem}
  parent: System.Collections.Generic
  isExternal: true
  name: List<JumpItem>
  nameWithType: List<JumpItem>
  fullName: System.Collections.Generic.List<System.Windows.Shell.JumpItem>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Windows.Shell.JumpItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItem
    name: JumpItem
    nameWithType: JumpItem
    fullName: JumpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.JumpItemsRejected
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItemsRejected
  nameWithType: JumpList.JumpItemsRejected
  fullName: System.Windows.Shell.JumpList.JumpItemsRejected
- uid: System.EventHandler{System.Windows.Shell.JumpItemsRejectedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<JumpItemsRejectedEventArgs>
  nameWithType: EventHandler<JumpItemsRejectedEventArgs>
  fullName: System.EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItemsRejectedEventArgs
    name: JumpItemsRejectedEventArgs
    nameWithType: JumpItemsRejectedEventArgs
    fullName: JumpItemsRejectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItemsRemovedByUser
  nameWithType: JumpList.JumpItemsRemovedByUser
  fullName: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
- uid: System.EventHandler{System.Windows.Shell.JumpItemsRemovedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<JumpItemsRemovedEventArgs>
  nameWithType: EventHandler<JumpItemsRemovedEventArgs>
  fullName: System.EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItemsRemovedEventArgs
    name: JumpItemsRemovedEventArgs
    nameWithType: JumpItemsRemovedEventArgs
    fullName: JumpItemsRemovedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: SetJumpList(Application,JumpList)
  nameWithType: JumpList.SetJumpList(Application,JumpList)
  fullName: System.Windows.Shell.JumpList.SetJumpList(Application,JumpList)
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
  fullName: System.Windows.Shell.JumpList.ShowFrequentCategory
- uid: System.Windows.Shell.JumpList.ShowRecentCategory
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
  fullName: System.Windows.Shell.JumpList.ShowRecentCategory
- uid: System.Windows.Shell.JumpList.#ctor*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList
  nameWithType: JumpList.JumpList
- uid: System.Windows.Shell.JumpList.AddToRecentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory
  nameWithType: JumpList.AddToRecentCategory
- uid: System.Windows.Shell.JumpList.Apply*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: Apply
  nameWithType: JumpList.Apply
- uid: System.Windows.Shell.JumpList.BeginInit*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: BeginInit
  nameWithType: JumpList.BeginInit
- uid: System.Windows.Shell.JumpList.EndInit*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: EndInit
  nameWithType: JumpList.EndInit
- uid: System.Windows.Shell.JumpList.GetJumpList*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: GetJumpList
  nameWithType: JumpList.GetJumpList
- uid: System.Windows.Shell.JumpList.JumpItems*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItems
  nameWithType: JumpList.JumpItems
- uid: System.Windows.Shell.JumpList.SetJumpList*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: SetJumpList
  nameWithType: JumpList.SetJumpList
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
- uid: System.Windows.Shell.JumpList.ShowRecentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
