### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.NonceCache
  id: NonceCache
  children:
  - System.ServiceModel.Security.NonceCache.#ctor
  - System.ServiceModel.Security.NonceCache.CacheSize
  - System.ServiceModel.Security.NonceCache.CachingTimeSpan
  - System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])
  - System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])
  langs:
  - csharp
  name: NonceCache
  nameWithType: NonceCache
  fullName: System.ServiceModel.Security.NonceCache
  type: Class
  summary: "Абстрактный базовый класс, представляющий собой кэш для параметров nonce."
  syntax:
    content: public abstract class NonceCache
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: NonceCache()
  nameWithType: NonceCache.NonceCache()
  fullName: System.ServiceModel.Security.NonceCache.NonceCache()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Вызывается из конструкторов в производных классах для инициализации <xref href=&quot;System.ServiceModel.Security.NonceCache&quot;> </xref> класса."
  syntax:
    content: protected NonceCache ();
    parameters: []
  overload: System.ServiceModel.Security.NonceCache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.CacheSize
  id: CacheSize
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: CacheSize
  nameWithType: NonceCache.CacheSize
  fullName: System.ServiceModel.Security.NonceCache.CacheSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает или задает максимальный размер кэша, который указан как количество параметров nonce, содержащие кэша."
  syntax:
    content: public int CacheSize { get; set; }
    return:
      type: System.Int32
      description: "Максимальный размер кэша указан как количество параметров nonce, что кэш может содержать."
  overload: System.ServiceModel.Security.NonceCache.CacheSize*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Происходит попытка задать значение меньше нуля."
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan
  id: CachingTimeSpan
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: CachingTimeSpan
  nameWithType: NonceCache.CachingTimeSpan
  fullName: System.ServiceModel.Security.NonceCache.CachingTimeSpan
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает или задает максимальный промежуток времени, после которого nonce удаляются из кэша."
  syntax:
    content: public TimeSpan CachingTimeSpan { get; set; }
    return:
      type: System.TimeSpan
      description: "Максимальный период времени, после которого nonce удаляются из кэша. Это значение должно быть по крайней мере дважды максимальное расфазировки синхронизирующих импульсов добавлены размер окна воспроизведения."
  overload: System.ServiceModel.Security.NonceCache.CachingTimeSpan*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Предпринята попытка установить значение меньше, чем <xref:System.TimeSpan>происходит.</xref:System.TimeSpan>       - или - выполняется попытка задать значение превышает допустимый максимум."
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])
  id: CheckNonce(System.Byte[])
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: CheckNonce(Byte[])
  nameWithType: NonceCache.CheckNonce(Byte[])
  fullName: System.ServiceModel.Security.NonceCache.CheckNonce(Byte[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "При переопределении в производном классе, возвращает значение, указывающее, является ли указанный элемент в кэше."
  syntax:
    content: public abstract bool CheckNonce (byte[] nonce);
    parameters:
    - id: nonce
      type: System.Byte[]
      description: "Элемент nonce для проверки."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный элемент уже находится в кэше. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.NonceCache.CheckNonce*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])
  id: TryAddNonce(System.Byte[])
  parent: System.ServiceModel.Security.NonceCache
  langs:
  - csharp
  name: TryAddNonce(Byte[])
  nameWithType: NonceCache.TryAddNonce(Byte[])
  fullName: System.ServiceModel.Security.NonceCache.TryAddNonce(Byte[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "При переопределении в производном классе пытается добавить указанный элемент в кэш."
  syntax:
    content: public abstract bool TryAddNonce (byte[] nonce);
    parameters:
    - id: nonce
      type: System.Byte[]
      description: "Элемент nonce для добавления в кэш."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если был добавлен элемент nonce в кэше. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.NonceCache.TryAddNonce*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.Security.NonceCache.#ctor
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: NonceCache()
  nameWithType: NonceCache.NonceCache()
  fullName: System.ServiceModel.Security.NonceCache.NonceCache()
- uid: System.ServiceModel.Security.NonceCache.CacheSize
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CacheSize
  nameWithType: NonceCache.CacheSize
  fullName: System.ServiceModel.Security.NonceCache.CacheSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CachingTimeSpan
  nameWithType: NonceCache.CachingTimeSpan
  fullName: System.ServiceModel.Security.NonceCache.CachingTimeSpan
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Security.NonceCache.CheckNonce(System.Byte[])
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CheckNonce(Byte[])
  nameWithType: NonceCache.CheckNonce(Byte[])
  fullName: System.ServiceModel.Security.NonceCache.CheckNonce(Byte[])
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Security.NonceCache.TryAddNonce(System.Byte[])
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: TryAddNonce(Byte[])
  nameWithType: NonceCache.TryAddNonce(Byte[])
  fullName: System.ServiceModel.Security.NonceCache.TryAddNonce(Byte[])
- uid: System.ServiceModel.Security.NonceCache.#ctor*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: NonceCache
  nameWithType: NonceCache.NonceCache
- uid: System.ServiceModel.Security.NonceCache.CacheSize*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CacheSize
  nameWithType: NonceCache.CacheSize
- uid: System.ServiceModel.Security.NonceCache.CachingTimeSpan*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CachingTimeSpan
  nameWithType: NonceCache.CachingTimeSpan
- uid: System.ServiceModel.Security.NonceCache.CheckNonce*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: CheckNonce
  nameWithType: NonceCache.CheckNonce
- uid: System.ServiceModel.Security.NonceCache.TryAddNonce*
  parent: System.ServiceModel.Security.NonceCache
  isExternal: false
  name: TryAddNonce
  nameWithType: NonceCache.TryAddNonce
