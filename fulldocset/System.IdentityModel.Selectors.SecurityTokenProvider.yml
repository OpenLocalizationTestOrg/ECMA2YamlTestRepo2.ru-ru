### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.SecurityTokenProvider
  id: SecurityTokenProvider
  children:
  - System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  - System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  langs:
  - csharp
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider
  type: Class
  summary: "Представляет поставщик маркеров безопасности, который обрабатывает маркеры безопасности для отправителя сообщения SOAP."
  remarks: "Класс SecurityTokenProvider, когда требуются пользовательские маркеры безопасности. Поставщик маркеров безопасности предназначен для получения маркера безопасности при сообщение SOAP отправлено клиентом, и маркер безопасности используется для проверки подлинности клиента или защиты сообщения SOAP. В частности <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>метод вызывается для получения маркера безопасности.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> Поставщик маркеров безопасности также может вызываться для отмены и обновления безопасности с помощью <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>и <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>методы.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>       Классы, производные от <xref:System.IdentityModel.Selectors.SecurityTokenManager>Реализуйте класс <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A>метод, чтобы определить, какие безопасности поставщик маркеров не требуется для данного маркера безопасности.</xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> </xref:System.IdentityModel.Selectors.SecurityTokenManager>       <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>И <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>классы предоставляют реализации по умолчанию для встроенных типов маркеров.</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> </xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> Для сценариев маркера безопасности, необходимо унаследовать класс из одного из <xref:System.IdentityModel.Selectors.SecurityTokenManager>, <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager>, или <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager>классов и предоставляют функциональные возможности для создания поставщика маркеров безопасности, проверки подлинности маркеров безопасности и сериализатора маркеров безопасности для пользовательского маркера безопасности.</xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> </xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> </xref:System.IdentityModel.Selectors.SecurityTokenManager> [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]Создание пользовательского маркера см [как: Создание пользовательского токена](~/add/includes/ajax-current-ext-md.md)."
  example:
  - >-
    [!code-vb[SecurityTokenProvider#0](~/add/codesnippet/visualbasic/t-system.identitymodel.s_9_1.vb)]
     [!code-cs[SecurityTokenProvider#0](~/add/codesnippet/csharp/t-system.identitymodel.s_9_1.cs)]
  syntax:
    content: public abstract class SecurityTokenProvider
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenProvider&quot;> </xref> класса."
  syntax:
    content: protected SecurityTokenProvider ();
    parameters: []
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Начинает асинхронную операцию отмены маркера безопасности."
  remarks: "Маркер безопасности, можно отменить, подобный выданному, позволяет клиенту, запросившему маркер безопасности, отменить его, когда оно выполняется с ним."
  syntax:
    content: public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, отменяющего маркер безопасности.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для отмены."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление о завершении асинхронной операции закрытия.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, указанный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операции закрытия."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию отмены.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Начинает асинхронную операцию отмены маркера безопасности."
  remarks: "Маркер безопасности, можно отменить, подобный выданному, позволяет клиенту, запросившему маркер безопасности, отменить его, когда оно выполняется с ним."
  syntax:
    content: protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, отменяющего маркер безопасности.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для отмены."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление о завершении асинхронной операции закрытия.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, указанный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операции закрытия."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию отмены.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Начинает асинхронную операцию получения маркера безопасности."
  remarks: "Вызовы метода BeginGetToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>"
  syntax:
    content: public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, получающего маркер безопасности.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление о завершении асинхронной операции закрытия.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, указанный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операции закрытия."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию закрытия.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Начинает асинхронную операцию получения маркера безопасности."
  remarks: "При наследовании от <xref:System.IdentityModel.Selectors.SecurityTokenProvider>не требуется переопределять асинхронные методы, поскольку класс <xref:System.IdentityModel.Selectors.SecurityTokenProvider>базовый класс предоставляет асинхронную реализацию, основанную на синхронных методах.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Таким образом вы не требуется переопределять метод BeginGetTokenCore, когда необходимо предоставить собственную асинхронную реализацию.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>Метод вызывает метод BeginGetTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, получающего маркер безопасности.</xref:System.TimeSpan>"
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление о завершении асинхронной операции закрытия.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, указанный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операции закрытия."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Начинает асинхронную операцию, которая обновляет маркер безопасности."
  remarks: "Вызовы метода BeginRenewToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>"
  syntax:
    content: public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, обновляющего маркер безопасности.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для обновления."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление о завершении асинхронной операции закрытия.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, указанный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операции закрытия."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  id: BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Начинает асинхронную операцию, которая обновляет маркер безопасности."
  remarks: "При наследовании от <xref:System.IdentityModel.Selectors.SecurityTokenProvider>не требуется переопределять асинхронные методы, поскольку класс <xref:System.IdentityModel.Selectors.SecurityTokenProvider>базовый класс предоставляет асинхронную реализацию, основанную на синхронных методах.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Таким образом вы не требуется переопределять метод BeginRenewTokenCore, когда необходимо предоставить собственную асинхронную реализацию.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>Метод вызывает метод BeginRenewTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, обновляющего маркер безопасности.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для обновления."
    - id: callback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, принимающий уведомление о завершении асинхронной операции закрытия.</xref:System.AsyncCallback>"
    - id: state
      type: System.Object
      description: "Объект, указанный приложением объект, который содержит сведения о состоянии, связанные с асинхронной операции закрытия."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию.</xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Отменяет маркер безопасности."
  remarks: "Маркер безопасности, можно отменить, подобный выданному, позволяет клиенту, запросившему маркер безопасности, отменить его, когда оно выполняется с ним.       Вызовы метода CancelToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>"
  syntax:
    content: public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, отменяющего маркер безопасности.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для отмены."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Отменяет маркер безопасности."
  remarks: "Маркер безопасности, можно отменить, подобный выданному, позволяет клиенту, запросившему маркер безопасности, отменить его, когда оно выполняется с ним.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>Метод вызывает метод CancelTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A>       При переопределении метода CancelTokenCore и может быть отменена маркера безопасности, переданного в качестве параметра token, создается исключение <xref:System.IdentityModel.Tokens.SecurityTokenException>исключение.</xref:System.IdentityModel.Tokens.SecurityTokenException>"
  syntax:
    content: protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, отменяющего маркер безопасности.</xref:System.TimeSpan>"
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для отмены."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  id: EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Завершает асинхронную операцию отмены маркера безопасности."
  remarks: "Маркер безопасности, можно отменить, подобный выданному, позволяет клиенту, запросившему маркер безопасности, отменить его, когда оно выполняется с ним.       Вызовы метода EndCancelToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>"
  syntax:
    content: public void EndCancelToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Возвращается путем вызова <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*> </xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  id: EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Завершает асинхронную операцию отмены маркера безопасности."
  remarks: "Маркер безопасности, можно отменить, подобный выданному, позволяет клиенту, запросившему маркер безопасности, отменить его, когда оно выполняется с ним.       При наследовании от <xref:System.IdentityModel.Selectors.SecurityTokenProvider>не требуется переопределять асинхронные методы, поскольку класс <xref:System.IdentityModel.Selectors.SecurityTokenProvider>базовый класс предоставляет асинхронную реализацию, основанную на синхронных методах.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Таким образом вы не требуется переопределять метод EndCancelTokenCore, когда необходимо предоставить собственную асинхронную реализацию.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>Метод вызывает метод EndCancelTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A>"
  syntax:
    content: protected virtual void EndCancelTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Возвращается путем вызова <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*> </xref:System.IAsyncResult>"
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  id: EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Завершает асинхронную операцию получения маркера безопасности."
  remarks: "Вызовы метода EndGetToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Возвращается путем вызова <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> , Представляющий маркер безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  id: EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Завершает асинхронную операцию получения маркера безопасности."
  remarks: "При наследовании от <xref:System.IdentityModel.Selectors.SecurityTokenProvider>не требуется переопределять асинхронные методы, поскольку класс <xref:System.IdentityModel.Selectors.SecurityTokenProvider>базовый класс предоставляет асинхронную реализацию, основанную на синхронных методах.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Таким образом вы не требуется переопределять метод EndGetTokenCore, когда необходимо предоставить собственную асинхронную реализацию.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>Метод вызывает метод EndGetTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Возвращается путем вызова <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> , Представляющий маркер безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  id: EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Завершает асинхронную операцию для обновления маркера безопасности."
  remarks: "Вызовы метода EndRenewToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Возвращается путем вызова <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> , Представляющий обновляемый маркер безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  id: EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Завершает асинхронную операцию для обновления маркера безопасности."
  remarks: "При наследовании от <xref:System.IdentityModel.Selectors.SecurityTokenProvider>не требуется переопределять асинхронные методы, поскольку класс <xref:System.IdentityModel.Selectors.SecurityTokenProvider>базовый класс предоставляет асинхронную реализацию, основанную на синхронных методах.</xref:System.IdentityModel.Selectors.SecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Таким образом вы не требуется переопределять метод EndRenewTokenCore, когда необходимо предоставить собственную асинхронную реализацию.       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>Метод вызывает метод EndRenewTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Возвращается путем вызова <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*> </xref:System.IAsyncResult>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> , Представляющий обновляемый маркер безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  id: GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Возвращает маркер безопасности."
  remarks: "Метод GetToken вызывается <xref:System.ServiceModel.Description.ClientCredentials>класс при отправке клиентом сообщения SOAP и требуется маркер безопасности.</xref:System.ServiceModel.Description.ClientCredentials>       Вызовы метода GetToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>       В большинстве случаев `timeout` параметр не используется производными классами, например <xref:System.IdentityModel.Selectors.SecurityTokenProvider> <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>.</xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider> </xref:System.IdentityModel.Selectors.SecurityTokenProvider> Однако иногда извлечение маркера безопасности включает в себя распределенным обменом сообщениями. Например, <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider>используется в федеративной службе.</xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> В таких случаях `timeout` параметр используется, чтобы избежать исключений, вызываемых сбоями сети, потерей сообщений и другие условия возникновения ошибок."
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, получающего маркер безопасности.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> , Представляющий получаемый маркер безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  id: GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Возвращает маркер безопасности."
  remarks: "При переопределении метода GetTokenCore и не удается получить маркер безопасности, переданного в качестве маркера параметра, создается исключение <xref:System.IdentityModel.Tokens.SecurityTokenException>исключение.</xref:System.IdentityModel.Tokens.SecurityTokenException>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>Метод вызывается методом <xref:System.ServiceModel.Description.ClientCredentials>класса, когда клиент отправляет сообщение SOAP и требуется маркер безопасности.</xref:System.ServiceModel.Description.ClientCredentials> </xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>Метод вызывает метод GetTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A>"
  example:
  - >-
    [!code-vb[SecurityTokenProvider#1](~/add/codesnippet/visualbasic/501effc0-dded-4b3b-893a-_1.vb)]
     [!code-cs[SecurityTokenProvider#1](~/add/codesnippet/csharp/501effc0-dded-4b3b-893a-_1.cs)]
  syntax:
    content: protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, получающего маркер безопасности.</xref:System.TimeSpan>"
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> , Представляющий получаемый маркер безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Обновляет маркер безопасности."
  remarks: "Выданный маркер безопасности, обновляемым позволяет клиенту возобновить его, если маркер безопасности истекает или истек срок действия.       Вызовы метода RenewToken <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>метод.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>"
  syntax:
    content: public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, обновляющего маркер безопасности.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для обновления."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> , Представляющий обновляемый маркер безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  id: RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Обновляет маркер безопасности."
  remarks: "Выданный маркер безопасности, обновляемым позволяет клиенту возобновить его, если маркер безопасности истекает или истек срок действия.       При переопределении метода RenewTokenCore и невозможности обновления маркера безопасности, переданного в качестве параметра token, создается исключение <xref:System.IdentityModel.Tokens.SecurityTokenException>исключение.</xref:System.IdentityModel.Tokens.SecurityTokenException>       <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>Метод вызывает метод RenewTokenCore.</xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>"
  syntax:
    content: protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, задает время ожидания для сообщения, обновляющего маркер безопасности.</xref:System.TimeSpan>"
    - id: tokenToBeRenewed
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> Для обновления."
    return:
      type: System.IdentityModel.Tokens.SecurityToken
      description: "<xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> , Представляющий обновляемый маркер безопасности."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  id: SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Возвращает значение, указывающее, можно ли отменить маркер безопасности."
  remarks: "Маркер безопасности, можно отменить, подобный выданному, позволяет клиенту, запросившему маркер безопасности, отменить его, когда оно выполняется с ним."
  syntax:
    content: public virtual bool SupportsTokenCancellation { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если маркер безопасности может быть отменено; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  id: SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  langs:
  - csharp
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Возвращает значение, указывающее, является ли маркер безопасности обновляемым."
  remarks: "Выданный маркер безопасности, обновляемым позволяет клиенту возобновить его, если маркер безопасности истекает или истек срок действия."
  syntax:
    content: public virtual bool SupportsTokenRenewal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если маркер безопасности могут быть обновлены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider()
  nameWithType: SecurityTokenProvider.SecurityTokenProvider()
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SecurityTokenProvider()
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(TimeSpan,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(TimeSpan,SecurityToken,AsyncCallback,Object)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewToken(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore(IAsyncResult)
  nameWithType: SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(IAsyncResult)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken(TimeSpan)
  nameWithType: SecurityTokenProvider.GetToken(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore(TimeSpan)
  nameWithType: SecurityTokenProvider.GetTokenCore(TimeSpan)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(TimeSpan)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore(TimeSpan,SecurityToken)
  nameWithType: SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(TimeSpan,SecurityToken)
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
  fullName: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.#ctor*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SecurityTokenProvider
  nameWithType: SecurityTokenProvider.SecurityTokenProvider
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelToken
  nameWithType: SecurityTokenProvider.BeginCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginCancelTokenCore
  nameWithType: SecurityTokenProvider.BeginCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetToken
  nameWithType: SecurityTokenProvider.BeginGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginGetTokenCore
  nameWithType: SecurityTokenProvider.BeginGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewToken
  nameWithType: SecurityTokenProvider.BeginRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: BeginRenewTokenCore
  nameWithType: SecurityTokenProvider.BeginRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelToken
  nameWithType: SecurityTokenProvider.CancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: CancelTokenCore
  nameWithType: SecurityTokenProvider.CancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelToken
  nameWithType: SecurityTokenProvider.EndCancelToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndCancelTokenCore
  nameWithType: SecurityTokenProvider.EndCancelTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetToken
  nameWithType: SecurityTokenProvider.EndGetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndGetTokenCore
  nameWithType: SecurityTokenProvider.EndGetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewToken
  nameWithType: SecurityTokenProvider.EndRenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: EndRenewTokenCore
  nameWithType: SecurityTokenProvider.EndRenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetToken
  nameWithType: SecurityTokenProvider.GetToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: GetTokenCore
  nameWithType: SecurityTokenProvider.GetTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewToken
  nameWithType: SecurityTokenProvider.RenewToken
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: RenewTokenCore
  nameWithType: SecurityTokenProvider.RenewTokenCore
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenCancellation
  nameWithType: SecurityTokenProvider.SupportsTokenCancellation
- uid: System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal*
  parent: System.IdentityModel.Selectors.SecurityTokenProvider
  isExternal: false
  name: SupportsTokenRenewal
  nameWithType: SecurityTokenProvider.SupportsTokenRenewal
