### YamlMime:ManagedReference
items:
- uid: System.Data.Linq.Mapping.MetaAccessor
  id: MetaAccessor
  children:
  - System.Data.Linq.Mapping.MetaAccessor.#ctor
  - System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)
  - System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)
  - System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)
  - System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)
  - System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)
  - System.Data.Linq.Mapping.MetaAccessor.Type
  langs:
  - csharp
  name: MetaAccessor
  nameWithType: MetaAccessor
  fullName: System.Data.Linq.Mapping.MetaAccessor
  type: Class
  summary: "Представляет метод доступа к члену."
  syntax:
    content: public abstract class MetaAccessor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAccessor.#ctor
  id: '#ctor'
  parent: System.Data.Linq.Mapping.MetaAccessor
  langs:
  - csharp
  name: MetaAccessor()
  nameWithType: MetaAccessor.MetaAccessor()
  fullName: System.Data.Linq.Mapping.MetaAccessor.MetaAccessor()
  type: Constructor
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Linq.Mapping.MetaAccessor&quot;> </xref> класса."
  syntax:
    content: protected MetaAccessor ();
    parameters: []
  overload: System.Data.Linq.Mapping.MetaAccessor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)
  id: GetBoxedValue(System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  langs:
  - csharp
  name: GetBoxedValue(Object)
  nameWithType: MetaAccessor.GetBoxedValue(Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Указывает объект, для которого требуется задать значение или из которого необходимо получить значение."
  syntax:
    content: public abstract object GetBoxedValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Экземпляр, из которого необходимо получить значение или для которого требуется задать значение."
    return:
      type: System.Object
      description: "Упакованное значение этого экземпляра."
  overload: System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)
  id: HasAssignedValue(System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  langs:
  - csharp
  name: HasAssignedValue(Object)
  nameWithType: MetaAccessor.HasAssignedValue(Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Указывает, имеет ли экземпляр присвоено значение."
  syntax:
    content: public virtual bool HasAssignedValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Экземпляр, решением которой ведется работа."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если экземпляр содержит присвоено значение; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)
  id: HasLoadedValue(System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  langs:
  - csharp
  name: HasLoadedValue(Object)
  nameWithType: MetaAccessor.HasLoadedValue(Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Указывает, имеет ли экземпляр значение, загруженное из отложенного источника."
  syntax:
    content: public virtual bool HasLoadedValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Экземпляр, решением которой ведется работа."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если экземпляр содержит значение, загруженное из отложенного источника; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)
  id: HasValue(System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  langs:
  - csharp
  name: HasValue(Object)
  nameWithType: MetaAccessor.HasValue(Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.HasValue(Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Указывает, имеет ли экземпляр загруженное или присвоенное значение."
  syntax:
    content: public virtual bool HasValue (object instance);
    parameters:
    - id: instance
      type: System.Object
      description: "Экземпляр, решением которой ведется работа."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если экземпляр содержит загруженное или присвоенное значение; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Linq.Mapping.MetaAccessor.HasValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)
  id: SetBoxedValue(System.Object@,System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  langs:
  - csharp
  name: SetBoxedValue(Object,Object)
  nameWithType: MetaAccessor.SetBoxedValue(Object,Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(Object,Object)
  type: Method
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Устанавливает значение в виде объекта."
  syntax:
    content: public abstract void SetBoxedValue (ref object instance, object value);
    parameters:
    - id: instance
      type: System.Object
      description: "Экземпляр, для которого требуется задать значение."
    - id: value
      type: System.Object
      description: "Задаваемое значение."
  overload: System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Linq.Mapping.MetaAccessor.Type
  id: Type
  parent: System.Data.Linq.Mapping.MetaAccessor
  langs:
  - csharp
  name: Type
  nameWithType: MetaAccessor.Type
  fullName: System.Data.Linq.Mapping.MetaAccessor.Type
  type: Property
  assemblies:
  - System.Data.Linq
  namespace: System.Data.Linq.Mapping
  summary: "Возвращает тип члена, которому принадлежит этот метод доступа."
  syntax:
    content: public abstract Type Type { get; }
    return:
      type: System.Type
      description: "Тип члена."
  overload: System.Data.Linq.Mapping.MetaAccessor.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Linq.Mapping.MetaAccessor.#ctor
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: MetaAccessor()
  nameWithType: MetaAccessor.MetaAccessor()
  fullName: System.Data.Linq.Mapping.MetaAccessor.MetaAccessor()
- uid: System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: GetBoxedValue(Object)
  nameWithType: MetaAccessor.GetBoxedValue(Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue(Object)
- uid: System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: HasAssignedValue(Object)
  nameWithType: MetaAccessor.HasAssignedValue(Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: HasLoadedValue(Object)
  nameWithType: MetaAccessor.HasLoadedValue(Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue(Object)
- uid: System.Data.Linq.Mapping.MetaAccessor.HasValue(System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: HasValue(Object)
  nameWithType: MetaAccessor.HasValue(Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.HasValue(Object)
- uid: System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(System.Object@,System.Object)
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: SetBoxedValue(Object,Object)
  nameWithType: MetaAccessor.SetBoxedValue(Object,Object)
  fullName: System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue(Object,Object)
- uid: System.Data.Linq.Mapping.MetaAccessor.Type
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: Type
  nameWithType: MetaAccessor.Type
  fullName: System.Data.Linq.Mapping.MetaAccessor.Type
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Linq.Mapping.MetaAccessor.#ctor*
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: MetaAccessor
  nameWithType: MetaAccessor.MetaAccessor
- uid: System.Data.Linq.Mapping.MetaAccessor.GetBoxedValue*
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: GetBoxedValue
  nameWithType: MetaAccessor.GetBoxedValue
- uid: System.Data.Linq.Mapping.MetaAccessor.HasAssignedValue*
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: HasAssignedValue
  nameWithType: MetaAccessor.HasAssignedValue
- uid: System.Data.Linq.Mapping.MetaAccessor.HasLoadedValue*
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: HasLoadedValue
  nameWithType: MetaAccessor.HasLoadedValue
- uid: System.Data.Linq.Mapping.MetaAccessor.HasValue*
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: HasValue
  nameWithType: MetaAccessor.HasValue
- uid: System.Data.Linq.Mapping.MetaAccessor.SetBoxedValue*
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: SetBoxedValue
  nameWithType: MetaAccessor.SetBoxedValue
- uid: System.Data.Linq.Mapping.MetaAccessor.Type*
  parent: System.Data.Linq.Mapping.MetaAccessor
  isExternal: false
  name: Type
  nameWithType: MetaAccessor.Type
