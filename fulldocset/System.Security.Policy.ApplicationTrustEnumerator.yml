### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationTrustEnumerator
  id: ApplicationTrustEnumerator
  children:
  - System.Security.Policy.ApplicationTrustEnumerator.Current
  - System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  - System.Security.Policy.ApplicationTrustEnumerator.Reset
  - System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  langs:
  - csharp
  name: ApplicationTrustEnumerator
  nameWithType: ApplicationTrustEnumerator
  fullName: System.Security.Policy.ApplicationTrustEnumerator
  type: Class
  summary: "Представляет перечислитель для <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> объекты в <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> коллекции."
  remarks: "Перечислители допускают только чтение данных в коллекции. Перечислители не может использоваться для изменения коллекции.       Изначально перечислитель располагается перед первым элементом в коллекции. <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>Метод также переводит перечислитель в эту позицию.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> В этой позиции вызов <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>вызывает исключение.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> Поэтому необходимо вызвать метод <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>метод, чтобы переместить перечислитель к первому элементу коллекции до считывания значения свойства <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>свойство.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>Возвращает тот же объект, пока не <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>или <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>называется.</xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>Задает <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>к следующему элементу.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A></xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       После окончания коллекции перечислитель помещается за последним элементом в коллекции и при вызове метода <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>возвращает `false`.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Если последний вызов метода <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>возвращается `false`, вызов <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>приводит к возникновению исключения.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Чтобы сбросить <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>на первый элемент коллекции, вызовите <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>следуют вызов <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       Перечислитель остается действительным, пока коллекция остается неизменной. Если изменения вносятся в коллекцию, такие как добавление, изменение, или удаление элементов, перечислитель становится необратимо недействительным, а при следующем вызове <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>или <xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A>вызывает <xref:System.InvalidOperationException>исключение.</xref:System.InvalidOperationException> </xref:System.Security.Policy.ApplicationTrustEnumerator.Reset%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A> Если коллекция изменяется в промежутке между вызовом метода <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>и <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>, <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>возвращает элемент, к которому в настоящее время задано, даже если перечислитель уже недействителен.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Перечислитель не имеет монопольного доступа к коллекции. Таким образом, перечисление коллекции само по себе не является потокобезопасной процедурой. Даже если коллекция синхронизирована, другие потоки могут ее изменить, что приводит к созданию исключения перечислителем. Для обеспечения потокобезопасности при перечислении можно либо заблокировать коллекцию на все время перечисления или перехватывать исключения, возникающие в результате изменений, внесенных другими потоками."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationTrustEnumerator : System.Collections.IEnumerator
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerator
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  id: Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает текущий <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> объекта в <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> коллекции."
  remarks: "При создании перечислителя он не указывает на объект, поэтому текущее свойство не является допустимым и будет вызывать исключение, если при доступе. Необходимо сначала вызвать <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>метод, чтобы установить курсор на первый объект в коллекции.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>       Несколько вызовов текущего без соответствующих вызовов к <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>вернет же <xref:System.Security.Policy.ApplicationTrust>объекта.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public System.Security.Policy.ApplicationTrust Current { get; }
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "The current <xref href=&quot;System.Security.Policy.ApplicationTrust&quot;></xref> in the <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;></xref>."
  overload: System.Security.Policy.ApplicationTrustEnumerator.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  id: MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Переходит к следующему элементу в <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> коллекции."
  remarks: "Метод MoveNext немедленно возвращает `false` , если нет ни одного объекта в коллекции.       MoveNext вернет `true` до достижения конечного элемента коллекции. Затем он вернет `false` для каждого последующего вызова. Однако после возвращения MoveNext `false`, доступ к свойству <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>свойство вызовет исключение.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>       После создания перечислитель располагается перед первым <xref:System.Security.Policy.ApplicationTrust>объекта в коллекции и первый вызов MoveNext помещает перечислитель на первый объект в коллекции.</xref:System.Security.Policy.ApplicationTrust>"
  syntax:
    content: public bool MoveNext ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если перечислитель был успешно перемещен к следующему элементу; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , если перечислитель достиг конца коллекции."
  overload: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  id: Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Устанавливает перечислитель в начало <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> коллекции."
  remarks: "Перечислитель перемещается в направлении только вперед. Используйте этот метод, чтобы вернуть перечислитель в начало коллекции <xref:System.Security.Policy.ApplicationTrust>объектов.</xref:System.Security.Policy.ApplicationTrust>       Метод Reset курсор помещается в первый объект в коллекции. После вызова Reset, не требуется вызывать <xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>метод для перемещения курсора вперед на первый объект.</xref:System.Security.Policy.ApplicationTrustEnumerator.MoveNext%2A>"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  isEii: true
  parent: System.Security.Policy.ApplicationTrustEnumerator
  langs:
  - csharp
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает текущий <xref:System.Object>в <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref> коллекции.</xref:System.Object>"
  remarks: "Не вызывайте этот метод; Используйте <xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>свойство вместо.</xref:System.Security.Policy.ApplicationTrustEnumerator.Current%2A>"
  syntax:
    content: object System.Collections.IEnumerator.Current { get; }
    return:
      type: System.Object
      description: "Текущий <xref:System.Object>в <xref href=&quot;System.Security.Policy.ApplicationTrustCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext()
  nameWithType: ApplicationTrustEnumerator.MoveNext()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.MoveNext()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset()
  nameWithType: ApplicationTrustEnumerator.Reset()
  fullName: System.Security.Policy.ApplicationTrustEnumerator.Reset()
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
  fullName: System.Security.Policy.ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Current
  nameWithType: ApplicationTrustEnumerator.Current
- uid: System.Security.Policy.ApplicationTrustEnumerator.MoveNext*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: MoveNext
  nameWithType: ApplicationTrustEnumerator.MoveNext
- uid: System.Security.Policy.ApplicationTrustEnumerator.Reset*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: Reset
  nameWithType: ApplicationTrustEnumerator.Reset
- uid: System.Security.Policy.ApplicationTrustEnumerator.System#Collections#IEnumerator#Current*
  parent: System.Security.Policy.ApplicationTrustEnumerator
  isExternal: false
  name: System.Collections.IEnumerator.Current
  nameWithType: ApplicationTrustEnumerator.System.Collections.IEnumerator.Current
