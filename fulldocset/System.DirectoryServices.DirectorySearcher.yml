### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.DirectorySearcher
  id: DirectorySearcher
  children:
  - System.DirectoryServices.DirectorySearcher.#ctor
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  - System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  - System.DirectoryServices.DirectorySearcher.Asynchronous
  - System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  - System.DirectoryServices.DirectorySearcher.CacheResults
  - System.DirectoryServices.DirectorySearcher.ClientTimeout
  - System.DirectoryServices.DirectorySearcher.DerefAlias
  - System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  - System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  - System.DirectoryServices.DirectorySearcher.ExtendedDN
  - System.DirectoryServices.DirectorySearcher.Filter
  - System.DirectoryServices.DirectorySearcher.FindAll
  - System.DirectoryServices.DirectorySearcher.FindOne
  - System.DirectoryServices.DirectorySearcher.PageSize
  - System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  - System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  - System.DirectoryServices.DirectorySearcher.ReferralChasing
  - System.DirectoryServices.DirectorySearcher.SearchRoot
  - System.DirectoryServices.DirectorySearcher.SearchScope
  - System.DirectoryServices.DirectorySearcher.SecurityMasks
  - System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  - System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  - System.DirectoryServices.DirectorySearcher.SizeLimit
  - System.DirectoryServices.DirectorySearcher.Sort
  - System.DirectoryServices.DirectorySearcher.Tombstone
  - System.DirectoryServices.DirectorySearcher.VirtualListView
  langs:
  - csharp
  name: DirectorySearcher
  nameWithType: DirectorySearcher
  fullName: System.DirectoryServices.DirectorySearcher
  type: Class
  summary: "Выполняет запросы к доменным службам Active Directory."
  remarks: "Используйте объект DirectorySearcher для поиска и выполнения запросов к иерархии доменных служб Active Directory с помощью Lightweight Directory Access Protocol (LDAP). LDAP является единственным поставщиком системным интерфейсы службы Active Directory (ADSI), который поддерживает поиск. Администратор может сделать, изменения и удаления объектов, которые находятся в иерархии. Дополнительные сведения см. в разделе [с помощью System.DirectoryServices](http://msdn.microsoft.com/en-us/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).       При создании экземпляра DirectorySearcher указываются корень, которым вы хотите получить и необязательный список свойств для извлечения. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>Свойство позволяет задать дополнительные свойства, чтобы выполнить следующие задачи:-кэширование результатов поиска на локальном компьютере.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> Задать <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A>Свойства `true` для хранения сведений о каталоге на локальном компьютере.</xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> Внесенные в этом локальном кэше и зафиксирована в доменных службах Active Directory обновлений только если <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>вызывается метод.</xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=fullName>      — Укажите интервал времени, чтобы выполнить поиск, используя <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>свойство.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>      -Извлечение только имен атрибутов. Задать <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>Свойства `true` Чтобы получить только имена атрибутов, которым присвоены значения.</xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A>      — Выполните страничный поиск. Задать <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>свойство, чтобы указать максимальное число объектов, возвращаемых при постраничном поиске.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> Если вы не хотите выполнять страничный поиск, задайте <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>Свойства по умолчанию равно нулю.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>      — Укажите максимальное число возвращаемых записей с помощью <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>свойство.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> Если задать <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>Свойства по умолчанию равно нулю, определяемый сервером по умолчанию — 1000 записей.</xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A>      Настроек [!NOTE] настроек Если максимальное количество возвращаемых элементов и пределы времени превышает ограничения, установленные на сервере, эти параметры переопределяют параметры компонента.       Список начальных значений свойств для экземпляра класса DirectorySearcher см. в разделе <xref:System.DirectoryServices.DirectorySearcher.%23ctor>конструктор.</xref:System.DirectoryServices.DirectorySearcher.%23ctor>      Настроек [!NOTE] настроек предполагается, что имеется общее представление о доменных службах Active Directory перед использованием этого класса. Дополнительные сведения см. в разделе <xref:System.DirectoryServices?displayProperty=fullName>Обзор.</xref:System.DirectoryServices?displayProperty=fullName>"
  syntax:
    content: >-
      [System.DirectoryServices.DSDescription("DirectorySearcherDesc")]

      public class DirectorySearcher : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  id: '#ctor'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> класса со значениями по умолчанию."
  remarks: "В следующей таблице показаны исходные значения свойств из <xref:System.DirectoryServices.DirectorySearcher>объекта.</xref:System.DirectoryServices.DirectorySearcher>      | Свойство | Начальное значение |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Пустая ссылка (`Nothing` в Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *)» |   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Пустой объект <xref:System.Collections.Specialized.StringCollection>|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher ();
    parameters: []
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  id: '#ctor(System.DirectoryServices.DirectoryEntry)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> класса, используя корневой поиска."
  remarks: "В следующей таблице показаны исходные значения свойств из <xref:System.DirectoryServices.DirectorySearcher>объекта.</xref:System.DirectoryServices.DirectorySearcher>      | Свойство | Начальное значение |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|&quot; (objectClass = *)» |   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Пустой объект <xref:System.Collections.Specialized.StringCollection>|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.Filter%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Узел в иерархии доменных служб Active Directory, в которой начинается поиск. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> класса указанный фильтр поиска."
  remarks: "В следующей таблице показаны исходные значения свойств из <xref:System.DirectoryServices.DirectorySearcher>объекта.</xref:System.DirectoryServices.DirectorySearcher>      | Свойство | Начальное значение |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Пустая ссылка (`Nothing` в Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Пустой объект <xref:System.Collections.Specialized.StringCollection>|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter);
    parameters:
    - id: filter
      type: System.String
      description: "Строка фильтра поиска в формате Lightweight Directory Access Protocol (LDAP). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> класса указанный корневой и поиска фильтр поиска."
  remarks: "В следующей таблице показаны исходные значения свойств из <xref:System.DirectoryServices.DirectorySearcher>объекта.</xref:System.DirectoryServices.DirectorySearcher>      | Свойство | Начальное значение |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>| Пустой объект <xref:System.Collections.Specialized.StringCollection>. |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.Collections.Specialized.StringCollection></xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Узел в иерархии доменных служб Active Directory, в которой начинается поиск. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Строка фильтра поиска в формате Lightweight Directory Access Protocol (LDAP). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  id: '#ctor(System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> класса указанный фильтр поиска и свойств для извлечения."
  remarks: "В следующей таблице показаны исходные значения свойств из <xref:System.DirectoryServices.DirectorySearcher>объекта.</xref:System.DirectoryServices.DirectorySearcher>      | Свойство | Начальное значение |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Пустая ссылка (`Nothing` в Visual Basic) |   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A></xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad);
    parameters:
    - id: filter
      type: System.String
      description: "Строка фильтра поиска в формате Lightweight Directory Access Protocol (LDAP). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Набор свойств для извлечения в ходе поиска. <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> класса с корень указанного поиска, фильтр поиска и свойств для извлечения..."
  remarks: "В следующей таблице показаны исходные значения свойств из <xref:System.DirectoryServices.DirectorySearcher>объекта.</xref:System.DirectoryServices.DirectorySearcher>      | Свойство | Начальное значение |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>| <xref:System.DirectoryServices.SearchScope>|</xref:System.DirectoryServices.SearchScope></xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>"
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Узел в иерархии доменных служб Active Directory, в которой начинается поиск. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Строка фильтра поиска в формате Lightweight Directory Access Protocol (LDAP). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Набор свойств, извлекаемых в ходе поиска. <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> поиск указанного класса, свойства фильтра для получения и область поиска."
  remarks: "В следующей таблице показаны исходные значения свойств из <xref:System.DirectoryServices.DirectorySearcher>объекта.</xref:System.DirectoryServices.DirectorySearcher>      | Свойство | Начальное значение |   |--------------|-------------------|   | <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>| Пустая ссылка (`Nothing` в Visual Basic) |</xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>"
  syntax:
    content: public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: filter
      type: System.String
      description: "Строка фильтра поиска в формате Lightweight Directory Access Protocol (LDAP). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Набор свойств для извлечения в ходе поиска. <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "Область поиска, просматриваемая сервером. <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> Этим значением инициализируется свойство."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  id: '#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)'
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  type: Constructor
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> класс корень указанного поиска, фильтр поиска, свойства, чтобы получить и область поиска."
  syntax:
    content: public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);
    parameters:
    - id: searchRoot
      type: System.DirectoryServices.DirectoryEntry
      description: "Узел в иерархии доменных служб Active Directory, в которой начинается поиск. <xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.SearchRoot*>"
    - id: filter
      type: System.String
      description: "Строка фильтра поиска в формате Lightweight Directory Access Protocol (LDAP). <xref:System.DirectoryServices.DirectorySearcher.Filter*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.Filter*>"
    - id: propertiesToLoad
      type: System.String[]
      description: "Набор свойств для извлечения в ходе поиска. <xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>Этим значением инициализируется свойство.</xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad*>"
    - id: scope
      type: System.DirectoryServices.SearchScope
      description: "Область поиска, просматриваемая сервером. <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> Этим значением инициализируется свойство."
  overload: System.DirectoryServices.DirectorySearcher.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  id: Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее, если поиск выполняется асинхронно."
  remarks: "Асинхронный поиск можно показать результаты, найденные при одновременно поиск дополнительных результатов. Это полезно для задач, таких как заполнение списков.       Значение по умолчанию для этого свойства равно `false`."
  example:
  - "The following C# example shows how to create an asynchronous search.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n//Set the Asynchronous property to true.  \nsrc.Asynchronous = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Asynchronous { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поиск является асинхронным; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> в противном случае."
  overload: System.DirectoryServices.DirectorySearcher.Asynchronous*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  id: AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает отображаемое имя LDAP, различающееся имя атрибута для поиска. Для такого типа можно использовать только один атрибут."
  remarks: "Атрибут, который имеет значение этого свойства должен быть атрибут различающегося имени, например, член или специалисты. Атрибут может быть либо одним или несколькими значениями. Дополнительные сведения см. в разделах adschema &quot;[член](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)«и»[управляемого по](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)» в библиотеке MSDN по [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       Поиск выполняется по объектам, которые идентифицируются по различающееся имя, указанное в атрибуте базового объекта. Например если класс adschema группа является базовым объектом и AttributeScopeQuery задано значение «member», затем поиск будет выполняться для всех объектов, которые являются членами группы. Дополнительные сведения см. в разделе класса adschema «Группа» в библиотеке MSDN по [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).       Если свойство AttributeScopeQuery, <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>свойство должно быть присвоено <xref:System.DirectoryServices.SearchScope>.</xref:System.DirectoryServices.SearchScope> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> Если <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>задано любое другое значение, параметр AttributeScopeQuery свойство вызовет <xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>       Дополнительные сведения см. в разделе «Выполнение запроса области атрибута» в библиотеке MSDN по [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library))."
  example:
  - "The following example shows how to use the AttributeScopeQuery property with the member attribute to get the members of a group. It then prints out the first and last names of the members and their telephone numbers.  \n  \n```c#  \nusing System.DirectoryServices;  \nDirectoryEntry group = new DirectoryEntry(\"LDAP://CN=MyGroup, …\");  \nDirectorySearcher src = new DirectorySearcher(group \"(&(objectClass=user)(objectCategory=Person))\");  \nsrc.AttributeScopedQuery = \"member\";  \nsrc.PropertiesToLoad.Add(\"sn\");  \nsrc.PropertiesToLoad.Add(\"givenName\");  \nsrc.PropertiesToLoad.Add(\"telephoneNumber\");  \nforeach(SearchResult res in src.FindAll())  \n{  \n    Console.WriteLine(\"…\");  \n}  \n```"
  syntax:
    content: public string AttributeScopeQuery { get; set; }
    return:
      type: System.String
      description: "Отображаемое имя атрибута для выполнения поиска для LDAP или пустой запрос области атрибута не задано."
  overload: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref:System.DirectoryServices.DirectorySearcher.SearchScope*>Свойству присвоено значение, отличное от <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>.</xref:System.DirectoryServices.DirectorySearcher.SearchScope*>"
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  id: CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее, является ли результат в кэш на клиентском компьютере."
  remarks: "Если результаты поиска большой результирующий набор, поиск будет более эффективным, если это свойство имеет значение `false` исключит передачу результирующего набора на клиентский компьютер.  При этом, однако не можно перечислить результаты дважды, так как <xref:System.DirectoryServices.SearchResultCollection>объект создает новый объект перечислителя при каждом вызове.</xref:System.DirectoryServices.SearchResultCollection>"
  syntax:
    content: public bool CacheResults { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если результат в кэш на клиентском компьютере; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.CacheResults*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  id: ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает максимальное время, которое клиент ожидает возвращения результатов с сервера. Если сервер не отвечает в течение этого времени, поиск прерывается и результаты не возвращаются."
  remarks: "Минимальное разрешение для этого свойства составляет одну секунду. Доли секунды учитываются.       Если <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A>достигнут, прежде чем время ожидания клиента, сервер возвращает результаты и клиент прекращает ожидание.</xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> Временное ограничение максимального объема — 120 секунд."
  syntax:
    content: public TimeSpan ClientTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>Структура, содержащая максимальное количество времени для клиента с сервером для возврата результатов.</xref:System.TimeSpan>       Значение по умолчанию-1, что означает неограниченное время ожидания."
  overload: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  id: DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее разрешению псевдонимов объектов, обнаруженных в ходе поиска."
  remarks: ''
  example:
  - "The following C# example shows how to set the DerefAlias property to <xref:System.DirectoryServices.DereferenceAlias> , so that it dereferences aliases when both searching subordinates and locating base objects.  \n  \n```  \nusing System.DirectoryServices;  \n...  \n// Bind to the users container.  \nDirectoryEntry entry = new DirectoryEntry(\"LDAP://CN=users,DC=fabrikam,DC=com\");  \n// Create a DirectorySearcher object.  \nDirectorySearcher mySearcher = new DirectorySearcher(entry);  \n// Set DerefAlias to Always.  \nsrc.DerefAlias = DerefenceAlias.Always;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }
    return:
      type: System.DirectoryServices.DereferenceAlias
      description: "Объект <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref> значение, определяющее режим, в котором разыменовывать псевдонимы. Значение по умолчанию для этого свойства равно <xref href=&quot;System.DirectoryServices.DereferenceAlias&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.DerefAlias*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  id: DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает объект, представляющий элемент управления синхронизации каталога для использования при поиске."
  remarks: "Элемент управления синхронизации каталога, известен как элемент управления DirSync, является элементом управления LDAP, который будет использоваться для поиска объектов, которые были изменены с момента предыдущего состояния.       Дополнительные сведения см. в разделе «[опрос для изменения с помощью элемент управления DirSync](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)» в библиотеке MSDN по [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }
    return:
      type: System.DirectoryServices.DirectorySynchronization
      description: "<xref href=&quot;System.DirectoryServices.DirectorySynchronization&quot;> </xref> Объект для поиска. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>Если элемент управления синхронизации каталога использовать не следует."
  overload: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Освобождает управляемые ресурсы, используемые <xref href=&quot;System.DirectoryServices.DirectorySearcher&quot;> </xref> объекта и, возможно, выпуски неуправляемые ресурсы."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если данный метод освобождает управляемые и неуправляемые ресурсы; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> , если он освобождает только неуправляемые ресурсы."
  overload: System.DirectoryServices.DirectorySearcher.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  id: ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее формат отличительных имен."
  remarks: ''
  example:
  - "The following example shows how to return a collection of distinguished names in hexadecimal format.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.ExtendedDN = ExtendedDN.HexString;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }
    return:
      type: System.DirectoryServices.ExtendedDN
      description: "Один из <xref href=&quot;System.DirectoryServices.ExtendedDN&quot;> </xref> значения."
  overload: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Filter
  id: Filter
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее строку формата фильтра Lightweight Directory Access Protocol (LDAP)."
  remarks: "The filter uses the following guidelines:  \n  \n1.  The string must be enclosed in parentheses.  \n  \n2.  Expressions can use the relational operators: <, \\<=, =, >=, and >. An example is \"(objectClass=user)\". Another example is \"(lastName>=Davis)\".  \n  \n3.  Compound expressions are formed with the prefix operators & and &#124;. An example is \"(&(objectClass=user)(lastName= Davis))\". Another example is \"(&(objectClass=printer)(&#124;(building=42)(building=43)))\".  \n  \n When the filter contains an attribute of ADS_UTC_TIME type, its value must be of the yyyymmddhhmmssZ format where y, m, d, h, m, and s stand for year, month, day, hour, minute, and second, respectively. The seconds (ss) value is optional. The final letter Z means there is no time differential. In this format, \"10:20:00 A.M. May 13, 1999\" becomes \"19990513102000Z\". Note that Active Directory Domain Services stores date and time as Coordinated Universal Time (Greenwich Mean Time). If you specify a time with no time differential, you are specifying the time in GMT time.  \n  \n If you are not in the Coordinated Universal Time time zone, you can add a differential value to the Coordinated Universal Time (instead of specifying Z) to specify a time according to your time zone. The differential is based on the following: differential = Coordinated Universal Time- Local. To specify a differential, use the following format: yyyymmddhhmmss[+/-]hhmm. For example, \"8:52:58 P.M. March 23, 1999\" New Zealand Standard Time (the differential is 12 hours) is specified as \"19990323205258.0+1200\".  \n  \n For more information about the LDAP search string format, see \"Search Filter Syntax\" in the MSDN Library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public string Filter { get; set; }
    return:
      type: System.String
      description: "Строка фильтра поиска в LDAP форматирования, такие как &quot;(objectClass=user)». Значение по умолчанию — &quot;(objectClass=*)», который получает все объекты."
  overload: System.DirectoryServices.DirectorySearcher.Filter*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  id: FindAll
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Выполняет поиск и возвращает коллекцию найденных элементов."
  remarks: "Из-за ограничения реализации <xref:System.DirectoryServices.SearchResultCollection>класса не может освободить все свои неуправляемые ресурсы после сбора мусора.</xref:System.DirectoryServices.SearchResultCollection> Чтобы предотвратить утечку памяти, необходимо вызвать <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>метод при <xref:System.DirectoryServices.SearchResultCollection>объект больше не нужен.</xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResultCollection.Dispose%2A>"
  syntax:
    content: public System.DirectoryServices.SearchResultCollection FindAll ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResultCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.SearchResultCollection&quot;> </xref> , содержащий результаты поиска."
  overload: System.DirectoryServices.DirectorySearcher.FindAll*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Указанный <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> не является контейнером."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Поиск не поддерживается поставщиком, который используется."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  id: FindOne
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Выполняет поиск и возвращает только первый найденный элемент."
  remarks: "При обнаружении нескольких записей во время поиска возвращается только первый элемент. Если не найдены записи, для соответствия условиям поиска, пустая ссылка (`Nothing` в Visual Basic) возвращается."
  syntax:
    content: public System.DirectoryServices.SearchResult FindOne ();
    parameters: []
    return:
      type: System.DirectoryServices.SearchResult
      description: "Объект <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> объект, который содержит первый элемент, находящийся в процессе поиска."
  overload: System.DirectoryServices.DirectorySearcher.FindOne*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  id: PageSize
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее размер страницы при постраничном поиске."
  remarks: "После обнаружения сервера число объектов, которые определяются свойства PageSize прервет поиск и возвращать результаты клиенту. Когда клиент запрашивает больше данных, сервер будет перезагружен поиска, в котором она остановилась."
  syntax:
    content: public int PageSize { get; set; }
    return:
      type: System.Int32
      description: "Максимальное число объектов, которые сервер может вернуть при постраничном поиске. Значение по умолчанию равно нулю, означающее, что это не страничный поиск."
  overload: System.DirectoryServices.DirectorySearcher.PageSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Новое значение меньше нуля."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  id: PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает значение, указывающее список свойств для извлечения в ходе поиска."
  remarks: "Чтобы извлечь определенные свойства, добавьте их в эту коллекцию перед началом поиска. Например `searcher.PropertiesToLoad.Add(&quot;phone&quot;);` будет добавлено свойство телефона к списку свойств поиска.       Свойство «ADsPath» всегда получено во время поиска. На [!INCLUDE[Win2kFamily](~/add/includes/win2kfamily-md.md)] и более ранних операционных систем, учетная запись, которая выполняет поиск должен быть членом группы &quot;Администраторы&quot; для извлечения свойства ntSecurityDescriptor. Если это не так, значение свойства, возвращаемые для ntSecurityDescriptor будет `null`. Дополнительные сведения см. в разделе «-дескриптор безопасности NT-» в библиотеке MSDN в [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Объект <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref> объект, содержащий набор свойств для извлечения в ходе поиска.       Значение по умолчанию — пустая коллекция типа <xref href=&quot;System.Collections.Specialized.StringCollection&quot;> </xref>, который получает все свойства."
  overload: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  id: PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее, будет ли при поиске извлекать только имена атрибутов, которым присвоены значения."
  syntax:
    content: public bool PropertyNamesOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поиск получает только имена атрибутов, которым присвоены значения; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> при поиске должны быть получены имена и значения всех запрошенных атрибутов. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  id: ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее, как отслеживаются ссылки."
  remarks: "Если корень поиска не указан в контексте именования сервера или результаты поиска выходят контекста именования (например, при наличии дочерних доменов и поиска в родительском домене), сервер отправляет сообщение ссылок для клиента, клиент может проигнорировать или проследить."
  syntax:
    content: public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }
    return:
      type: System.DirectoryServices.ReferralChasingOption
      description: "Один из <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Значение не является одним из <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> значения."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  id: SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее узел в иерархии доменных служб Active Directory, в которой начинается поиск."
  remarks: "Если SearchRoot является пустой ссылкой (`Nothing` в Visual Basic), корень поиска задано значение корневого домена, сервер в данный момент.       Существует несколько способов для поиска в глобальном каталоге: - перечисление глобального каталога и выбрать первый дочерний элемент.      -Укажите имя сервера. Используйте функцию DsGetDcName для поиска глобального каталога.  Дополнительные сведения о функции DsGetDcName см. в разделе «DsGetDcName» в библиотеке MSDN по [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library).      -Получение RootDSE глобального каталога и запрашивать «rootNamingContext».      -Используйте глобальный каталог, указав путь поиска, с LDAP. Например» GC: / / Подразделение =..., DC =..., DC =...».      -Следующий код C# показано, как перечисление глобального каталога и выбрать первый дочерний элемент.          ```c#       DirectoryEntry entry = new DirectoryEntry(&quot;GC://forestname&quot;);       IEnumerator ie = entry.Children.GetEnumerator();       ie.MoveNext();       entry = (DirectoryEntry)ie.Current;       DirectorySearcher search = new DirectorySearcher(entry);       ```"
  syntax:
    content: public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }
    return:
      type: System.DirectoryServices.DirectoryEntry
      description: "<xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> Объект в иерархии доменных служб Active Directory, в которой начинается поиск. Значение по умолчанию — пустая ссылка (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  overload: System.DirectoryServices.DirectorySearcher.SearchRoot*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  id: SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее область поиска, просматриваемая сервером."
  syntax:
    content: public System.DirectoryServices.SearchScope SearchScope { get; set; }
    return:
      type: System.DirectoryServices.SearchScope
      description: "Один из <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.DirectoryServices.SearchScope&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.SearchScope*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Значение не является одним из <xref href=&quot;System.DirectoryServices.ReferralChasingOption&quot;> </xref> значения."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  id: SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее, какая информация доступа безопасности для указанных атрибутов должны возвращаться в результате поиска."
  remarks: ''
  example:
  - "```c#  \nusing System.DirectoryServices;  \n...  \nDirectorySearcher src = new DirectorySearcher(\"…\");  \nsrc.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  \nsrc.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }
    return:
      type: System.DirectoryServices.SecurityMasks
      description: "Один из <xref href=&quot;System.DirectoryServices.SecurityMasks&quot;> </xref> значения."
  overload: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  id: ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее максимальное количество раз, когда сервер будет производить поиск для отдельной страницы результатов. Это не то же, что время, выделенное для всей операции поиска."
  remarks: "Минимальное разрешение для этого свойства составляет одну секунду. Доли секунды учитываются.       При достижении предельного времени сервер прекращает поиск и возвращает результаты, полученные к этому моменту, вместе с куки-файл, содержащий сведения о месте возобновления поиска.      Настроек [!NOTE] настроек это свойство применимо только к поиску где <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>присвоено значение, которое не является по умолчанию -1.</xref:System.DirectoryServices.DirectorySearcher.PageSize%2A>"
  syntax:
    content: public TimeSpan ServerPageTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, представляющий количество времени, сервер будет производить поиск для страницы результатов.</xref:System.TimeSpan>       Значение по умолчанию —&1; секунд, что означает неограниченное время поиска."
  overload: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  id: ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "ServerTimeLimit Возвращает или задает значение, указывающее максимальное количество времени, сервер выполняет поиск. При достижении предельного времени возвращаются только элементы, найденные до точки."
  remarks: "Минимальное разрешение для этого свойства составляет одну секунду. Доли секунды учитываются.       В отличие от <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A>Свойства, свойство ServerTimeLimit указывает общий объем сервера будут тратить время на поиск.</xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> При достижении предельного времени сервер прекращает поиск и возвращает результаты, полученные до этого момента.       Значение-1 секунды по умолчанию сервер определил ServerTimeLimit.      Настроек [!NOTE] настроек Если ServerTimeLimit присвоено значение, которое больше, чем значение по умолчанию сервер определил 120 секунд, используется значение по умолчанию, определяемый сервером. По достижении предельного времени сервера не удается продолжить поиск с места остановки."
  syntax:
    content: public TimeSpan ServerTimeLimit { get; set; }
    return:
      type: System.TimeSpan
      description: "Объект <xref:System.TimeSpan>, представляющий количество времени, сервер будет производить поиск.</xref:System.TimeSpan>       Значение по умолчанию —-1 секунд, используется значение по умолчанию сервер определил 120 секунд."
  overload: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  id: SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее максимальное количество объектов, возвращаемых сервером при поиске."
  remarks: "Сервер прекратит поиск после достижения предельного размера и возвращает результаты, собранные к этому моменту.      Настроек [!NOTE] настроек Если SizeLimit присвоено значение, которое больше, чем значение по умолчанию сервер определил 1000 элементов, используется значение по умолчанию, определяемый сервером."
  syntax:
    content: public int SizeLimit { get; set; }
    return:
      type: System.Int32
      description: "Максимальное число объектов, возвращаемых сервером при поиске. Значение по умолчанию равно нулю, это означает, что используется предельный размер, определяемый сервером по умолчанию 1000 элементов."
  overload: System.DirectoryServices.DirectorySearcher.SizeLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Новое значение меньше нуля."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Sort
  id: Sort
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее свойство, на котором сортировки результатов."
  syntax:
    content: public System.DirectoryServices.SortOption Sort { get; set; }
    return:
      type: System.DirectoryServices.SortOption
      description: "Объект <xref href=&quot;System.DirectoryServices.SortOption&quot;> </xref> объект, который указывает свойство и направление, в котором необходимо отсортировать результаты поиска по."
  overload: System.DirectoryServices.DirectorySearcher.Sort*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение свойства <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (Nothing в Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  id: Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее, должно ли поиска также возвращать удаленные объекты, соответствующие фильтру поиска."
  remarks: ''
  example:
  - "The following C# example shows how to set the Tombstone property to `true`.  \n  \n```c#  \nusing System.DirectoryServices;  \n...  \n// Create a DirectorySearcher object.  \nDirectorySearcher src = new DirectorySearcher(\"(isDeleted=true)\");  \n//Set the Tombstone property to true.  \nsrc.Tombstone = true;  \n//Use the FindAll method to get search results.  \nSearchResultCollection res = src.FindAll();  \n  \n```"
  syntax:
    content: public bool Tombstone { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если удаленные объекты должны быть включены в поиск; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> в противном случае. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.DirectorySearcher.Tombstone*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  id: VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  langs:
  - csharp
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение, указывающее параметры виртуального представления списка для поиска."
  syntax:
    content: public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }
    return:
      type: System.DirectoryServices.DirectoryVirtualListView
      description: "Объект <xref href=&quot;System.DirectoryServices.DirectoryVirtualListView&quot;> </xref> , содержащий сведения о поиска представления виртуального списка. Значение по умолчанию для этого свойства — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, означающее, что следует использовать параметр поиска представления виртуального списка."
  overload: System.DirectoryServices.DirectorySearcher.VirtualListView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.DirectoryServices.DirectorySearcher.#ctor
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher()
  nameWithType: DirectorySearcher.DirectorySearcher()
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher()
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry)
- uid: System.DirectoryServices.DirectoryEntry
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryEntry
  nameWithType: DirectoryEntry
  fullName: System.DirectoryServices.DirectoryEntry
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String)
  nameWithType: DirectorySearcher.DirectorySearcher(String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String)
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[])
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[])
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(String,String[],SearchScope)
- uid: System.DirectoryServices.SearchScope
  parent: System.DirectoryServices
  isExternal: false
  name: SearchScope
  nameWithType: SearchScope
  fullName: System.DirectoryServices.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  nameWithType: DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySearcher(DirectoryEntry,String,String[],SearchScope)
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
  fullName: System.DirectoryServices.DirectorySearcher.Asynchronous
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
  fullName: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
  fullName: System.DirectoryServices.DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
  fullName: System.DirectoryServices.DirectorySearcher.ClientTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
  fullName: System.DirectoryServices.DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DereferenceAlias
  parent: System.DirectoryServices
  isExternal: false
  name: DereferenceAlias
  nameWithType: DereferenceAlias
  fullName: System.DirectoryServices.DereferenceAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySynchronization
  parent: System.DirectoryServices
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySynchronization
  fullName: System.DirectoryServices.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DirectorySearcher.Dispose(Boolean)
  fullName: System.DirectoryServices.DirectorySearcher.Dispose(Boolean)
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
  fullName: System.DirectoryServices.DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.ExtendedDN
  parent: System.DirectoryServices
  isExternal: false
  name: ExtendedDN
  nameWithType: ExtendedDN
  fullName: System.DirectoryServices.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
  fullName: System.DirectoryServices.DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll()
  nameWithType: DirectorySearcher.FindAll()
  fullName: System.DirectoryServices.DirectorySearcher.FindAll()
- uid: System.DirectoryServices.SearchResultCollection
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResultCollection
  nameWithType: SearchResultCollection
  fullName: System.DirectoryServices.SearchResultCollection
- uid: System.DirectoryServices.DirectorySearcher.FindOne
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne()
  nameWithType: DirectorySearcher.FindOne()
  fullName: System.DirectoryServices.DirectorySearcher.FindOne()
- uid: System.DirectoryServices.SearchResult
  parent: System.DirectoryServices
  isExternal: false
  name: SearchResult
  nameWithType: SearchResult
  fullName: System.DirectoryServices.SearchResult
- uid: System.DirectoryServices.DirectorySearcher.PageSize
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
  fullName: System.DirectoryServices.DirectorySearcher.PageSize
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
  fullName: System.DirectoryServices.DirectorySearcher.PropertiesToLoad
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
  fullName: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
  fullName: System.DirectoryServices.DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.ReferralChasingOption
  parent: System.DirectoryServices
  isExternal: false
  name: ReferralChasingOption
  nameWithType: ReferralChasingOption
  fullName: System.DirectoryServices.ReferralChasingOption
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
  fullName: System.DirectoryServices.DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
  fullName: System.DirectoryServices.DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
  fullName: System.DirectoryServices.DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.SecurityMasks
  parent: System.DirectoryServices
  isExternal: false
  name: SecurityMasks
  nameWithType: SecurityMasks
  fullName: System.DirectoryServices.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
  fullName: System.DirectoryServices.DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
  fullName: System.DirectoryServices.DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
  fullName: System.DirectoryServices.DirectorySearcher.Sort
- uid: System.DirectoryServices.SortOption
  parent: System.DirectoryServices
  isExternal: false
  name: SortOption
  nameWithType: SortOption
  fullName: System.DirectoryServices.SortOption
- uid: System.DirectoryServices.DirectorySearcher.Tombstone
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
  fullName: System.DirectoryServices.DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
  fullName: System.DirectoryServices.DirectorySearcher.VirtualListView
- uid: System.DirectoryServices.DirectoryVirtualListView
  parent: System.DirectoryServices
  isExternal: false
  name: DirectoryVirtualListView
  nameWithType: DirectoryVirtualListView
  fullName: System.DirectoryServices.DirectoryVirtualListView
- uid: System.DirectoryServices.DirectorySearcher.#ctor*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySearcher
  nameWithType: DirectorySearcher.DirectorySearcher
- uid: System.DirectoryServices.DirectorySearcher.Asynchronous*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Asynchronous
  nameWithType: DirectorySearcher.Asynchronous
- uid: System.DirectoryServices.DirectorySearcher.AttributeScopeQuery*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: AttributeScopeQuery
  nameWithType: DirectorySearcher.AttributeScopeQuery
- uid: System.DirectoryServices.DirectorySearcher.CacheResults*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: CacheResults
  nameWithType: DirectorySearcher.CacheResults
- uid: System.DirectoryServices.DirectorySearcher.ClientTimeout*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ClientTimeout
  nameWithType: DirectorySearcher.ClientTimeout
- uid: System.DirectoryServices.DirectorySearcher.DerefAlias*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DerefAlias
  nameWithType: DirectorySearcher.DerefAlias
- uid: System.DirectoryServices.DirectorySearcher.DirectorySynchronization*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: DirectorySynchronization
  nameWithType: DirectorySearcher.DirectorySynchronization
- uid: System.DirectoryServices.DirectorySearcher.Dispose*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Dispose
  nameWithType: DirectorySearcher.Dispose
- uid: System.DirectoryServices.DirectorySearcher.ExtendedDN*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ExtendedDN
  nameWithType: DirectorySearcher.ExtendedDN
- uid: System.DirectoryServices.DirectorySearcher.Filter*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Filter
  nameWithType: DirectorySearcher.Filter
- uid: System.DirectoryServices.DirectorySearcher.FindAll*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindAll
  nameWithType: DirectorySearcher.FindAll
- uid: System.DirectoryServices.DirectorySearcher.FindOne*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: FindOne
  nameWithType: DirectorySearcher.FindOne
- uid: System.DirectoryServices.DirectorySearcher.PageSize*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PageSize
  nameWithType: DirectorySearcher.PageSize
- uid: System.DirectoryServices.DirectorySearcher.PropertiesToLoad*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertiesToLoad
  nameWithType: DirectorySearcher.PropertiesToLoad
- uid: System.DirectoryServices.DirectorySearcher.PropertyNamesOnly*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: PropertyNamesOnly
  nameWithType: DirectorySearcher.PropertyNamesOnly
- uid: System.DirectoryServices.DirectorySearcher.ReferralChasing*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ReferralChasing
  nameWithType: DirectorySearcher.ReferralChasing
- uid: System.DirectoryServices.DirectorySearcher.SearchRoot*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchRoot
  nameWithType: DirectorySearcher.SearchRoot
- uid: System.DirectoryServices.DirectorySearcher.SearchScope*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SearchScope
  nameWithType: DirectorySearcher.SearchScope
- uid: System.DirectoryServices.DirectorySearcher.SecurityMasks*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SecurityMasks
  nameWithType: DirectorySearcher.SecurityMasks
- uid: System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerPageTimeLimit
  nameWithType: DirectorySearcher.ServerPageTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.ServerTimeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: ServerTimeLimit
  nameWithType: DirectorySearcher.ServerTimeLimit
- uid: System.DirectoryServices.DirectorySearcher.SizeLimit*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: SizeLimit
  nameWithType: DirectorySearcher.SizeLimit
- uid: System.DirectoryServices.DirectorySearcher.Sort*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Sort
  nameWithType: DirectorySearcher.Sort
- uid: System.DirectoryServices.DirectorySearcher.Tombstone*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: Tombstone
  nameWithType: DirectorySearcher.Tombstone
- uid: System.DirectoryServices.DirectorySearcher.VirtualListView*
  parent: System.DirectoryServices.DirectorySearcher
  isExternal: false
  name: VirtualListView
  nameWithType: DirectorySearcher.VirtualListView
