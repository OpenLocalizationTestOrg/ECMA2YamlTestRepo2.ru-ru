### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ExpressionPrefixAttribute
  id: ExpressionPrefixAttribute
  children:
  - System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)
  - System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
  langs:
  - csharp
  name: ExpressionPrefixAttribute
  nameWithType: ExpressionPrefixAttribute
  fullName: System.Web.Compilation.ExpressionPrefixAttribute
  type: Class
  summary: "Указывает атрибут префикс для использования построителя выражений. Этот класс не наследуется."
  remarks: "Класс ExpressionPrefixAttribute используется во время разработки с помощью выражений, которые не определены в файле конфигурации. Используйте <xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A>свойство для получения имени префикс, связанный с объектом ExpressionPrefixAttribute.</xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A> Построитель выражений ищет все выражения следующего вида: `<%$ [expressionPrefix]:[expressionValue] %>` затем построитель выражений, на основе префикса выражения, создает код для присвоения свойства. `expressionPrefix` Параметр ссылается на настроенный построителя, который определен в файле конфигурации или с помощью объекта ExpressionPrefixAttribute."
  example:
  - "The following code examples demonstrate how to use the ExpressionPrefixAttribute class. The attribute is applied to a custom expression builder that implements the <xref:System.Web.Compilation.ExpressionBuilder> abstract class. This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression. To run this example, you must first register the custom expression builder in the Web.config file. The first code example demonstrates how to register the custom expression builder in the Web.config file.  \n  \n```  \n<configuration>  \n    <system.web>  \n       <compilation>  \n          <expressionBuilders>  \n              <add expressionPrefix=\"MyCustomExpression\"  \n               type=\"MyCustomExpressionBuilder\"/>  \n          </expressionBuilders>  \n       </compilation>  \n    </system.web>  \n</configuration>  \n```  \n  \n The second code example demonstrates how to reference the expression in an .aspx file.  \n  \n```  \n<asp:Label ID=\"Label1\" runat=\"server\"   \nText=\"<%$ MyCustomExpression:Hello, world! %>\" />  \n```  \n  \n The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>. To run this code example, you must place the class in the App_Code folder.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)]

      public sealed class ExpressionPrefixAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  langs:
  - csharp
  name: ExpressionPrefixAttribute(String)
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefixAttribute(String)
  fullName: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefixAttribute(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Compilation.ExpressionPrefixAttribute&quot;> </xref> класса."
  remarks: "Конструктор ExpressionPrefixAttribute используется для инициализации нового экземпляра <xref:System.Web.Compilation.ExpressionPrefixAttribute>класса с помощью префикса идентификатора.</xref:System.Web.Compilation.ExpressionPrefixAttribute> ExpressionPrefixAttribute является конструктором по умолчанию для <xref:System.Web.Compilation.ExpressionPrefixAttribute>класса.</xref:System.Web.Compilation.ExpressionPrefixAttribute>"
  syntax:
    content: public ExpressionPrefixAttribute (string expressionPrefix);
    parameters:
    - id: expressionPrefix
      type: System.String
      description: "Префикс текущего <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref>."
  overload: System.Web.Compilation.ExpressionPrefixAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>expressionPrefix</code>имеет значение null или пустая строка (»»)."
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
  id: ExpressionPrefix
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  langs:
  - csharp
  name: ExpressionPrefix
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefix
  fullName: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает значение префикса для текущего <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> объекта."
  remarks: "Свойство ExpressionPrefix для извлечения имени префикс, связанный с заданным атрибутом."
  syntax:
    content: public string ExpressionPrefix { get; }
    return:
      type: System.String
      description: "Префикс выражения для настроенного <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref>."
  overload: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  isExternal: false
  name: ExpressionPrefixAttribute(String)
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefixAttribute(String)
  fullName: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefixAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefix
  fullName: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix
- uid: System.Web.Compilation.ExpressionPrefixAttribute.#ctor*
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  isExternal: false
  name: ExpressionPrefixAttribute
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefixAttribute
- uid: System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix*
  parent: System.Web.Compilation.ExpressionPrefixAttribute
  isExternal: false
  name: ExpressionPrefix
  nameWithType: ExpressionPrefixAttribute.ExpressionPrefix
