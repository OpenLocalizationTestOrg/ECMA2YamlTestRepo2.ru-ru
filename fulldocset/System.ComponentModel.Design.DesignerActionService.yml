### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionService
  id: DesignerActionService
  children:
  - System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Clear
  - System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  - System.ComponentModel.Design.DesignerActionService.Dispose
  - System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  - System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  langs:
  - csharp
  name: DesignerActionService
  nameWithType: DesignerActionService
  fullName: System.ComponentModel.Design.DesignerActionService
  type: Class
  summary: "Устанавливает службы во время разработки, который управляет коллекцией <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;> </xref> объектов для компонентов."
  remarks: "Класс DesignerActionService отвечает за управление коллекцию <xref:System.ComponentModel.Design.DesignerActionItem>объекты для каждого экземпляра компонента, который существует в форме во время разработки.</xref:System.ComponentModel.Design.DesignerActionItem> Этот класс позволяет использовать технологии direct push модель создания элемента и в основном предназначен для использования разработчиками средство разработки, несмотря на то, что он может также использоваться компонента и разработчики пользовательских элементов управления.       Разработчики инструментов разработки, необходимо определить список элементов для отображения для компонента и определите, при изменении этого списка. Они также могут создавать надстройки, которые работают совместно с объектами панель смарт-тега.       Дополнительных компонентов, разработчикам может потребоваться динамически управлять элементы, связанные с компонентом, заменяя или дополняя стандартную модель внедрения. Например панель команд может изменяться в зависимости от контекста их использования и состояния времени разработки компонента.      Настроек [!NOTE] настроек DesignerActionService фактически является определяющим службой за push и pull моделей; Однако в последнем случае она действует неявно.       DesignerActionService предоставляет простой интерфейс для доступа и управления элементами для каждого компонента, включая следующие методы и события: - <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>метод определяет ли DesignerActionService управляет отдельного компонента.</xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>      - <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>Метод обеспечивает поддержку перечисления в списках элементов.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      - <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>Метод разрешает добавление <xref:System.ComponentModel.Design.DesignerActionList>или <xref:System.ComponentModel.Design.DesignerActionListCollection>для набора существующих элементов для экземпляра компонента.</xref:System.ComponentModel.Design.DesignerActionListCollection> </xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Напротив <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>метод удаляет одно или все списки элементов, связанных с компонентом.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>          Настроек [!NOTE] настроек <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>метод представляет технология direct push модели сопоставления элементы панели с компонентом.</xref:System.ComponentModel.Design.DesignerActionService.Add%2A> В отличие от этого зависит переопределение модели по запросу <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>Свойства конструктора класса для этого компонента.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> В среде разработки отвечает за добавление этих элементов в текущем DesignerActionService при создании компонента в рабочей области конструирования.          Настроек [!IMPORTANT] настроек <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, и <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A>методы только рекомендуется или повлиять на элементы модели внедрения.</xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> </xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> </xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A>      - <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>Указывает событие при изменении коллекции элементов для компонента.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>       Большие степень взаимодействия, поскольку часто желательно использовать некоторые же панели элементов компонента времени разработки контекстное меню и панель, существует между <xref:System.ComponentModel.Design.DesignerActionItem>объекты и команды конструктора.</xref:System.ComponentModel.Design.DesignerActionItem>       Если конструктор компонентов не указывает явно <xref:System.ComponentModel.Design.DesignerActionList>(то есть, он не содержит переопределенный <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>Свойства), то будет создан список из существующих команд конструктора.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> </xref:System.ComponentModel.Design.DesignerActionList> Эти команды задаются <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>свойство.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> В этом случае внутреннем классе списка команд используется для хранения коллекции записей области элементов команд.       Если вы хотите <xref:System.ComponentModel.Design.DesignerActionMethodItem>для использования в качестве входа панели и запись во время разработки контекстное меню можно задавать `includeAsDesignerVerb` параметра в конструктор элемента.</xref:System.ComponentModel.Design.DesignerActionMethodItem>       Использовать <xref:System.ComponentModel.Design.DesignerActionUIService>для управления отображением конструктора <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> </xref:System.ComponentModel.Design.DesignerActionUIService>"
  syntax:
    content: 'public class DesignerActionService : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> класса."
  remarks: "Поставщик услуг необходима для отслеживания выбора и изменения компонентов. Он должен поддерживать <xref:System.ComponentModel.Design.IDesignerHost>и <xref:System.ComponentModel.Design.IComponentChangeService>типов.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.IDesignerHost> <xref:System.ComponentModel.Design.DesignerActionService>Класс использует внутреннюю таблицу для управления, компоненты и связанные с ними <xref:System.ComponentModel.Design.DesignerActionList>смарт-теги.</xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService>       Как правило разработчики компонентов не нужно будет создать экземпляр этого класса; Вместо этого они могли получить экземпляр посредством вызова <xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>метод.</xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>"
  syntax:
    content: public DesignerActionService (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Поставщик услуг для текущей среды разработки."
  overload: System.ComponentModel.Design.DesignerActionService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Добавляет <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> в текущую коллекцию управляемых смарт-тегов."
  remarks: "Метод Add представляет модель принудительной добавления элементов смарт-тегов. Альтернативный запросу модель основывается на переопределение <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>Свойства в конструкторе для соответствующего компонента.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       При вызове этого метода, проверяются на наличие любых списки должны быть добавлены <xref:System.ComponentModel.Design.DesignerActionMethodItem>с <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>свойство `true`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> Эти элементы добавляются в список команд конструктора для этого компонента путем вызова <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>метод.</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       Смарт-тегами осуществляется на уровне экземпляра компонента. Управляемая коллекция может содержать повторяющиеся записи.       Этот метод вызывает <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>событий.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> Для связывания со смарт-тегами."
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> , Содержащий новые элементы для добавления смарт-тега."
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба параметра, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Добавляет <xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref> в текущую коллекцию управляемых смарт-тегов."
  remarks: "Метод Add представляет модель принудительной добавления элементов смарт-тегов. Альтернативный запросу модель основывается на переопределение <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>Свойства в конструкторе для соответствующего компонента.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       При вызове этого метода, проверяются на наличие любых списки должны быть добавлены <xref:System.ComponentModel.Design.DesignerActionMethodItem>с <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>свойство `true`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> Эти элементы добавляются в список команд конструктора для этого компонента путем вызова <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>метод.</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       Смарт-тегами осуществляется на уровне экземпляра компонента. Управляемая коллекция может содержать повторяющиеся записи.       Этот метод вызывает <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>событий.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> Для связывания со смарт-тегами."
    - id: designerActionListCollection
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "<xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref> , Содержащий новые элементы для добавления смарт-тега."
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба параметра, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  id: Clear
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Освобождает все компоненты от управления и очищает все списки смарт-тегов модель принудительной отправки."
  remarks: "Метод Clear очищает Внутренняя таблица, используемая для хранения сведений о компонентах и их списки смарт-тегов модель принудительной отправки.      Настроек [!CAUTION] настроек, так как этот метод влияет на все компоненты, которые управляются текущей службы, а не только на текущий компонент, этот метод следует использовать осторожно. Как правило средство разработки разработчик использует его при сбросе рабочей области конструирования. Разработчикам компонентов следует использовать один из <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>методов вместо этого для удаления отдельных смарт-тегов элементов или не выводится.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       Объект <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>событие вызывается для каждого компонента, который ранее был под управлением текущей службы.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  id: Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Определяет, управляет ли текущая служба смарт-тег списки действий для указанного компонента."
  remarks: "Метод Contains распознает только модель принудительной отправки смарт-тегов, которые связаны в компонент с <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>метод.</xref:System.ComponentModel.Design.DesignerActionService.Add%2A>       Несмотря на то, что нет структурных ограничений на количество одновременных <xref:System.ComponentModel.Design.DesignerActionService>экземпляров, созданных с помощью средства разработки, обычно только один экземпляр службы создается на область конструктора.</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public bool Contains (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> Для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если компонент управляется текущей службой; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionService.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  id: DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Происходит, когда <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> удалении или добавлении для любого компонента."
  remarks: "Следующая таблица показывает набор специализированные классы, связанные с событием DesignerActionListsChanged.      | Специализированные типа | Описание |   |----------------------|-----------------|   | <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>| Добавляет сведения, относящиеся к управлению список смарт-тегов.</xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> Этот класс является специальным из <xref:System.EventArgs>. |   | <xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>| Подключается к его обработчик <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>. |   | <xref:System.ComponentModel.Design.DesignerActionListsChangedType>| Указывает, ли список были добавлены или удалены. |       Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</xref:System.ComponentModel.Design.DesignerActionListsChangedType> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler> </xref:System.EventArgs>"
  syntax:
    content: public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;
    return:
      type: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Освобождает все ресурсы, используемые <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> класса."
  remarks: "Метод Dispose является реализацией единственный метод, предусмотренные в <xref:System.IDisposable>интерфейса.</xref:System.IDisposable> Этот метод вызывается при завершении использования <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> Он выполняет два основных действия:-удаление текущей службы из списка служб, доступных в среде разработки посредством вызова <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>метод.</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -Отменяет подписку на события изменения компонента связанного <xref:System.ComponentModel.Design.IComponentChangeService>интерфейса.</xref:System.ComponentModel.Design.IComponentChangeService>       После использования <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.ComponentModel.Design.DesignerActionService>окажется в неработоспособном состоянии.</xref:System.ComponentModel.Design.DesignerActionService> После вызова Dispose, необходимо освободить все ссылки на <xref:System.ComponentModel.Design.DesignerActionService>, сборщик мусора мог освободить память, <xref:System.ComponentModel.Design.DesignerActionService>занимаемую.</xref:System.ComponentModel.Design.DesignerActionService> </xref:System.ComponentModel.Design.DesignerActionService> Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.ComponentModel.Design.DesignerActionService>объекта `Finalize` метод.</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  remarks: "<xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>Метод является реализацией единственный метод, предусмотренные в <xref:System.IDisposable>интерфейса.</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> Этот метод вызывается при завершении использования <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> Он выполняет два основных действия:-удаление текущей службы из списка служб, доступных в среде разработки посредством вызова <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>метод.</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -Отменяет подписку на события изменения компонента связанного <xref:System.ComponentModel.Design.IComponentChangeService>интерфейса.</xref:System.ComponentModel.Design.IComponentChangeService>       Этот метод вызывается методом открытые `Dispose()` метод и <xref:System.Object.Finalize%2A>метод.</xref:System.Object.Finalize%2A> `Dispose()`вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A>вызывает `Dispose` с `disposing` значение `false`.</xref:System.Object.Finalize%2A>       При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.ComponentModel.Design.DesignerActionService>ссылки.</xref:System.ComponentModel.Design.DesignerActionService> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  id: GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Возвращает коллекцию списков элементов смарт-тег, связанные с компонентом."
  remarks: "Метод GetComponentActions эквивалентно вызов <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29>с помощью метода `type` параметр <xref:System.ComponentModel.Design.ComponentActionsType>.</xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> Таким образом возвращаемая коллекция будет содержать push и pull списки смарт-тегов.       Возвращенный <xref:System.ComponentModel.Design.DesignerActionListCollection>— это объединение списков элементов, добавленных с помощью <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>методы, а также списки получены из <xref:System.ComponentModel.Design.DesignerCommandSet>экземпляр получен от компонента узла.</xref:System.ComponentModel.Design.DesignerCommandSet> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> </xref:System.ComponentModel.Design.DesignerActionListCollection>"
  syntax:
    content: public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Компонент, связанных со смарт-тегами."
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "Коллекция смарт-тегов для указанного компонента."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  id: GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Возвращает коллекцию смарт-тег списки элементов заданного типа, связанный с компонентом."
  remarks: "Эта версия перегруженного <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>метод выполняется фильтрация по `type` параметр, который может иметь одно из следующих значений.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      | Значение | Описание |   |-----------|-----------------|   | <xref:System.ComponentModel.Design.ComponentActionsType>| Все связанные с ней смарт-тегов. |   | <xref:System.ComponentModel.Design.ComponentActionsType>| Модель извлечения смарт только теги. |   | <xref:System.ComponentModel.Design.ComponentActionsType>| Модель принудительной отправки смарт только теги. |       Если связанный конструктор для компонента не предоставляет список модель извлечения смарт-тег, то вместо этого будет использоваться методом GetComponentActions пунктов меню быстрого вызова во время разработки конструктор из <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>свойство.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Компонент, связанных со смарт-тегами."
    - id: type
      type: System.ComponentModel.Design.ComponentActionsType
      description: "<xref href=&quot;System.ComponentModel.Design.ComponentActionsType&quot;> </xref> Для фильтрации смарт-теги, связанные с."
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "Коллекция смарт-тегов заданного типа для указанного компонента."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Извлекает модель извлечения смарт-теги, связанные с компонентом."
  remarks: "Метод GetComponentDesignerActions — это вспомогательный метод для <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>методы.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Ищет GetComponentDesignerActions модель извлечения смарт-теги типа <xref:System.ComponentModel.Design.ComponentActionsType>и добавляет их в предоставленном `actionLists` коллекции.</xref:System.ComponentModel.Design.ComponentActionsType>       Если разработчик компонента не предоставляет явно коллекцию смарт-тегов через <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>Свойства его конструктор, этот метод будет использовать пункты меню контекстное во время разработки, которые извлекаются через <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>Свойства конструктора.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>"
  syntax:
    content: protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Компонент, связанных со смарт-тегами."
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "Добавление связанных смарт-тегов в коллекции."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба параметра, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Извлекает модель принудительной отправки смарт-теги, связанные с компонентом."
  remarks: "Метод GetComponentServiceActions — это вспомогательный метод для <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>методы.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Он выполняет поиск модели внедрения смарт-тегов типа <xref:System.ComponentModel.Design.ComponentActionsType>и добавляет их в предоставленном `actionLists` коллекции.</xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Компонент, связанных со смарт-тегами."
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "Добавление связанных смарт-тегов в коллекции."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба параметра, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Удаляет список указанного смарт-тегов из всех компонентов, управляемых текущей службой."
  remarks: "Эта версия <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>метод обычно используется разработчиками средство разработки, так как компонент разработчики обычно не знают, какие другие компоненты существует в текущей области конструктора.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       При успешном выполнении, этот метод вызывает <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>событий.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "Список смарт-тегов для удаления."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>actionList</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  id: Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Удаляет все списки смарт-тег, связанные с указанным компонентом."
  remarks: "При успешном выполнении метод Remove создает событие <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>событий.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "Компонент разорвать связь смарт-тегов."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Удаляет список указанного смарт-тегов из указанного компонента."
  remarks: "При успешном выполнении метод Remove создает событие <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>событий.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "Компонент разорвать связь смарт-тегов."
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "Список смарт-тега для удаления."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Один или оба параметра, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignerActionList
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionList
  nameWithType: DesignerActionList
  fullName: System.ComponentModel.Design.DesignerActionList
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionListCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListCollection
  nameWithType: DesignerActionListCollection
  fullName: System.ComponentModel.Design.DesignerActionListCollection
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
- uid: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListsChangedEventHandler
  nameWithType: DesignerActionListsChangedEventHandler
  fullName: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
- uid: System.ComponentModel.Design.ComponentActionsType
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentActionsType
  nameWithType: ComponentActionsType
  fullName: System.ComponentModel.Design.ComponentActionsType
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.#ctor*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService
  nameWithType: DesignerActionService.DesignerActionService
- uid: System.ComponentModel.Design.DesignerActionService.Add*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add
  nameWithType: DesignerActionService.Add
- uid: System.ComponentModel.Design.DesignerActionService.Clear*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear
  nameWithType: DesignerActionService.Clear
- uid: System.ComponentModel.Design.DesignerActionService.Contains*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains
  nameWithType: DesignerActionService.Contains
- uid: System.ComponentModel.Design.DesignerActionService.Dispose*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose
  nameWithType: DesignerActionService.Dispose
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions
  nameWithType: DesignerActionService.GetComponentActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions
  nameWithType: DesignerActionService.GetComponentDesignerActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions
  nameWithType: DesignerActionService.GetComponentServiceActions
- uid: System.ComponentModel.Design.DesignerActionService.Remove*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove
  nameWithType: DesignerActionService.Remove
