### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.Animation.CubicEase
  id: CubicEase
  children:
  - System.Windows.Media.Animation.CubicEase.#ctor
  - System.Windows.Media.Animation.CubicEase.CreateInstanceCore
  - System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)
  langs:
  - csharp
  name: CubicEase
  nameWithType: CubicEase
  fullName: System.Windows.Media.Animation.CubicEase
  type: Class
  summary: "Представляет функцию плавности, создающую анимацию, которая ускоряется и замедляется с помощью формулы *f*(*t*) = *t*<sup>3</sup>."
  remarks: "Можно управлять ли анимация ускоряется, замедляется, или оба, указав <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> Следующей диаграмме показано различных значений <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>, где *f*(*t*) представляет ход выполнения анимации и *t* представляет время.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>       ![Графы cubicease при различных значениях EasingMode. ] (~/add/media/cubicease-graph.png &quot;Графы cubicease при различных значениях EasingMode.&quot;)       Формула, используемая для этой функции выглядит следующим образом.       *f*(*t*) = *t*<sup>3</sup> существует несколько других плавности функций помимо cubicease при различных значениях которого можно исследовать с помощью следующего примера Silverlight.       [Запуск образца](http://go.microsoft.com/fwlink/?LinkId=139798&sref=easing_functions_gallery) Помимо использования функций округления, включенных в среду выполнения, можно создать собственные функции плавности путем наследования от <xref:System.Windows.Media.Animation.EasingFunctionBase>.</xref:System.Windows.Media.Animation.EasingFunctionBase>      <a name=&quot;xamlObjectElementUsage_CubicEase&quot;></a>## Использование элемента объекта XAML```   <CubicEase .../>   ```"
  example:
  - "The following example applies a CubicEase easing function to a <xref:System.Windows.Media.Animation.DoubleAnimation> to create a decelerating animation.  \n  \n [!code-xml[CubicEase#CubicEase](~/add/codesnippet/xaml/t-system.windows.media.a_17_1.xaml)]\n [!code-xml[CubicEase#CubicEase](~/add/codesnippet/xaml/cubicease/window1.xaml#cubicease)]"
  syntax:
    content: 'public class CubicEase : System.Windows.Media.Animation.EasingFunctionBase'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.EasingFunctionBase
  implements: []
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.Clone
  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)
  - System.Windows.Freezable.CloneCurrentValue
  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.FreezeCore(System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.EasingFunctionBase.Ease(System.Double)
  - System.Windows.Media.Animation.EasingFunctionBase.EasingMode
  - System.Windows.Media.Animation.EasingFunctionBase.EasingModeProperty
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.Animation.CubicEase.#ctor
  id: '#ctor'
  parent: System.Windows.Media.Animation.CubicEase
  langs:
  - csharp
  name: CubicEase()
  nameWithType: CubicEase.CubicEase()
  fullName: System.Windows.Media.Animation.CubicEase.CubicEase()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Windows.Media.Animation.CubicEase&quot;> </xref> класса."
  syntax:
    content: public CubicEase ();
    parameters: []
  overload: System.Windows.Media.Animation.CubicEase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.Animation.CubicEase
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: CubicEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.CubicEase.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Создает новый экземпляр <xref href=&quot;System.Windows.Freezable&quot;> </xref> производного класса. При создании производного класса, необходимо переопределить этот метод."
  remarks: "Классы анимации косвенно наследовать <xref:System.Windows.Freezable>.</xref:System.Windows.Freezable> По этой причине необходимо переопределить <xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>метод для создания пользовательской анимации объекта.</xref:System.Windows.Media.Animation.BackEase.CreateInstanceCore%2A>"
  example:
  - "The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  \n  \n [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/visualbasic/freezablesample_visualbasic/freezablesample.vb#createinstancecoreexample)]\n [!code-cs[freezablesample_procedural#CreateInstanceCoreExample](~/add/codesnippet/csharp/freezablesample_csharp/freezablesample.cs#createinstancecoreexample)]"
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "Новый экземпляр."
  overload: System.Windows.Media.Animation.CubicEase.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)
  id: EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.CubicEase
  langs:
  - csharp
  name: EaseInCore(Double)
  nameWithType: CubicEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.CubicEase.EaseInCore(Double)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media.Animation
  summary: "Предоставляет часть логики функции плавности, можно переопределить для создания <xref href=&quot;System.Windows.Media.Animation.EasingMode&quot;> </xref> режим пользовательской функции реалистичной анимации."
  remarks: "Этот метод преобразует нормализованное время для управления скоростью анимации в <xref:System.Windows.Media.Animation.EasingMode>случае <xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A>.</xref:System.Windows.Media.Animation.EasingFunctionBase.EasingMode%2A> </xref:System.Windows.Media.Animation.EasingMode>       Необходимо указать функции для реалистичной анимации <xref:System.Windows.Media.Animation.EasingMode>вариант, поскольку реализация <xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A>метода преобразования `normalizedTime` для <xref:System.Windows.Media.Animation.EasingMode>и <xref:System.Windows.Media.Animation.EasingMode>вариантов.</xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingMode> </xref:System.Windows.Media.Animation.EasingFunctionBase.Ease%2A> </xref:System.Windows.Media.Animation.EasingMode>"
  syntax:
    content: protected override double EaseInCore (double normalizedTime);
    parameters:
    - id: normalizedTime
      type: System.Double
      description: "Нормализованное время (ход выполнения) анимации."
    return:
      type: System.Double
      description: "Значение типа double, представляющее преобразованный ход выполнения."
  overload: System.Windows.Media.Animation.CubicEase.EaseInCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.EasingFunctionBase
  isExternal: false
  name: System.Windows.Media.Animation.EasingFunctionBase
- uid: System.Windows.Media.Animation.CubicEase.#ctor
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: CubicEase()
  nameWithType: CubicEase.CubicEase()
  fullName: System.Windows.Media.Animation.CubicEase.CubicEase()
- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: CubicEase.CreateInstanceCore()
  fullName: System.Windows.Media.Animation.CubicEase.CreateInstanceCore()
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.Animation.CubicEase.EaseInCore(System.Double)
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: EaseInCore(Double)
  nameWithType: CubicEase.EaseInCore(Double)
  fullName: System.Windows.Media.Animation.CubicEase.EaseInCore(Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Windows.Media.Animation.CubicEase.#ctor*
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: CubicEase
  nameWithType: CubicEase.CubicEase
- uid: System.Windows.Media.Animation.CubicEase.CreateInstanceCore*
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: CreateInstanceCore
  nameWithType: CubicEase.CreateInstanceCore
- uid: System.Windows.Media.Animation.CubicEase.EaseInCore*
  parent: System.Windows.Media.Animation.CubicEase
  isExternal: false
  name: EaseInCore
  nameWithType: CubicEase.EaseInCore
