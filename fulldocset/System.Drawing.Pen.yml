### YamlMime:ManagedReference
items:
- uid: System.Drawing.Pen
  id: Pen
  children:
  - System.Drawing.Pen.#ctor(System.Drawing.Brush)
  - System.Drawing.Pen.#ctor(System.Drawing.Color)
  - System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  - System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  - System.Drawing.Pen.Alignment
  - System.Drawing.Pen.Brush
  - System.Drawing.Pen.Clone
  - System.Drawing.Pen.Color
  - System.Drawing.Pen.CompoundArray
  - System.Drawing.Pen.CustomEndCap
  - System.Drawing.Pen.CustomStartCap
  - System.Drawing.Pen.DashCap
  - System.Drawing.Pen.DashOffset
  - System.Drawing.Pen.DashPattern
  - System.Drawing.Pen.DashStyle
  - System.Drawing.Pen.Dispose
  - System.Drawing.Pen.EndCap
  - System.Drawing.Pen.Finalize
  - System.Drawing.Pen.LineJoin
  - System.Drawing.Pen.MiterLimit
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  - System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.PenType
  - System.Drawing.Pen.ResetTransform
  - System.Drawing.Pen.RotateTransform(System.Single)
  - System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  - System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  - System.Drawing.Pen.StartCap
  - System.Drawing.Pen.Transform
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  - System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  - System.Drawing.Pen.Width
  langs:
  - csharp
  name: Pen
  nameWithType: Pen
  fullName: System.Drawing.Pen
  type: Class
  summary: "Определяет объект, используемый для рисования линий и кривых. Этот класс не наследуется."
  remarks: "Перо рисует строку заданную ширину и стиль. Используйте <xref:System.Drawing.Drawing2D.DashStyle>свойство, чтобы нарисовать несколько вариаций пунктирных линий.</xref:System.Drawing.Drawing2D.DashStyle> Линия, проведенная пера можно указать различные стили заливки, включая сплошные цвета и текстуры. Стиль заливки зависит от кисти или текстуры, которая используется в качестве объекта заполнения."
  example:
  - "The following code example demonstrates constructing a Pen with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a Pen.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/t-system.drawing.pen_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/t-system.drawing.pen_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/t-system.drawing.pen_1.cpp)]"
  syntax:
    content: 'public sealed class Pen : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  id: '#ctor(System.Drawing.Brush)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Pen&quot;> </xref> класса с заданным <xref href=&quot;System.Drawing.Brush&quot;> </xref>."
  remarks: "<xref:System.Drawing.Pen.Brush%2A>Свойство определяет, каким образом <xref:System.Drawing.Pen>рисуются линии.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.Brush%2A> Отображаются линии, как если бы они были заполненных прямоугольников с характеристиками указанного <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush>       <xref:System.Drawing.Pen.Width%2A>Нового <xref:System.Drawing.Pen>имеет значение 1 (по умолчанию).</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.Width%2A>"
  example:
  - "The following code example demonstrates constructing a <xref:System.Drawing.Pen> with a <xref:System.Drawing.Pen.Brush%2A> and the effects of setting the <xref:System.Drawing.Pen.LineJoin%2A> property on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.sha_2_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_2_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.sha_2_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "Объект <xref href=&quot;System.Drawing.Brush&quot;> </xref> , определяющий свойства заполнения объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  id: '#ctor(System.Drawing.Color)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Pen&quot;> </xref> класса с указанным цветом."
  remarks: "<xref:System.Drawing.Color>Свойству цвет, определенный параметром `color` параметр.</xref:System.Drawing.Color> <xref:System.Drawing.Pen.Width%2A>Задано значение 1 (по умолчанию).</xref:System.Drawing.Pen.Width%2A>"
  syntax:
    content: public Pen (System.Drawing.Color color);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, показывающая цвет объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  id: '#ctor(System.Drawing.Brush,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Pen&quot;> </xref> класса с заданным <xref href=&quot;System.Drawing.Brush&quot;> </xref> и <xref:System.Drawing.Pen.Width*>.</xref:System.Drawing.Pen.Width*>"
  remarks: "<xref:System.Drawing.Brush>Задается цвет, указанный в `brush` параметр <xref:System.Drawing.Pen.Width%2A>свойству присвоено значение, указанное в `width` параметр и единицы измерения задаются <xref:System.Drawing.GraphicsUnit>.</xref:System.Drawing.GraphicsUnit> </xref:System.Drawing.Pen.Width%2A> </xref:System.Drawing.Brush>       Обратите внимание, что `brush` также задает <xref:System.Drawing.Color>свойство <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> </xref:System.Drawing.Color>       Объект `width` 0 приведет к <xref:System.Drawing.Pen>рисования, как если бы ширина была равна 1.</xref:System.Drawing.Pen>"
  example:
  - "The following code example creates a <xref:System.Drawing.Pen> and demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.ImageExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_0_1.cs)]\n [!code-cpp[System.Drawing.ImageExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_0_1.cpp)]\n [!code-vb[System.Drawing.ImageExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_0_1.vb)]"
  syntax:
    content: public Pen (System.Drawing.Brush brush, float width);
    parameters:
    - id: brush
      type: System.Drawing.Brush
      description: "Объект <xref href=&quot;System.Drawing.Brush&quot;> </xref> , определяющий характеристики данного объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
    - id: width
      type: System.Single
      description: "Ширина нового <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>brush</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  id: '#ctor(System.Drawing.Color,System.Single)'
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Drawing.Pen&quot;> </xref> класса с заданным <xref href=&quot;System.Drawing.Color&quot;> </xref> и <xref:System.Drawing.Pen.Width*>Свойства.</xref:System.Drawing.Pen.Width*>"
  remarks: "<xref:System.Drawing.Color>Свойству цвет, определенный параметром `color` параметр.</xref:System.Drawing.Color> <xref:System.Drawing.Pen.Width%2A>Свойству присвоено значение, указанное в `width` параметр.</xref:System.Drawing.Pen.Width%2A> Объект `width` 0 приведет к <xref:System.Drawing.Pen>рисования, как если бы ширина была равна 1.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing e as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/m-system.drawing.pen.sha_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/m-system.drawing.pen.sha_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/m-system.drawing.pen.sha_1_1.cpp)]"
  syntax:
    content: public Pen (System.Drawing.Color color, float width);
    parameters:
    - id: color
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структура, показывающая цвет объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
    - id: width
      type: System.Single
      description: "Значение, показывающее ширину объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Alignment
  id: Alignment
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает выравнивание для <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Это свойство определяет, каким образом <xref:System.Drawing.Pen>рисует замкнутые кривые и многоугольники.</xref:System.Drawing.Pen> <xref:System.Drawing.Drawing2D.PenAlignment>Перечисления указывает пять значений, однако только два значения —<xref:System.Drawing.Drawing2D.PenAlignment> и <xref:System.Drawing.Drawing2D.PenAlignment>— будет изменить внешний вид отображаемой строки.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> <xref:System.Drawing.Drawing2D.PenAlignment>значение по умолчанию для этого свойства и указывает, что по центру ширину пера контура кривая или многоугольник.</xref:System.Drawing.Drawing2D.PenAlignment> Значение <xref:System.Drawing.Drawing2D.PenAlignment>для это свойство определяет ширину пера внутри границы кривой или многоугольника.</xref:System.Drawing.Drawing2D.PenAlignment> Другие три значения <xref:System.Drawing.Drawing2D.PenAlignment>, <xref:System.Drawing.Drawing2D.PenAlignment>, и <xref:System.Drawing.Drawing2D.PenAlignment>, приведет к перо, который выравнивается по центру.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Drawing2D.PenAlignment>       Объект <xref:System.Drawing.Pen>с выравниванием <xref:System.Drawing.Drawing2D.PenAlignment>даст ненадежные результаты, иногда рисования в позицию вставки, а иногда — в позиции, выровненный по центру.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen> Кроме того нельзя использовать для рисования составных вложенного пера и пунктирных линий с <xref:System.Drawing.Drawing2D.DashCap>caps. тире</xref:System.Drawing.Drawing2D.DashCap>"
  syntax:
    content: public System.Drawing.Drawing2D.PenAlignment Alignment { get; set; }
    return:
      type: System.Drawing.Drawing2D.PenAlignment
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref> , представляющее выравнивание для <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Alignment*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Указанное значение не является членом <xref href=&quot;System.Drawing.Drawing2D.PenAlignment&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство выравнивания для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.Brush
  id: Brush
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает <xref href=&quot;System.Drawing.Brush&quot;> </xref> , определяющий атрибуты объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "При присвоении свойства пера для рисования линий и кривых. Оно переопределяет <xref:System.Drawing.Color>свойство <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> </xref:System.Drawing.Color>"
  syntax:
    content: public System.Drawing.Brush Brush { get; set; }
    return:
      type: System.Drawing.Brush
      description: "Объект <xref href=&quot;System.Drawing.Brush&quot;> </xref> , определяющий атрибуты объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Brush*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Свойство кисти имеет значение для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.Clone
  id: Clone
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Создает точную копию данного объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Creates a copy of that pen.  \n  \n-   Draws a line to the screen, using the copy of the pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/cpp/m-system.drawing.pen.clone_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/csharp/m-system.drawing.pen.clone_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.clone_1.vb)]"
  syntax:
    content: public object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>Может быть приведен к <xref href=&quot;System.Drawing.Pen&quot;> </xref>.</xref:System.Object>"
  overload: System.Drawing.Pen.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Color
  id: Color
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает цвет объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  syntax:
    content: public System.Drawing.Color Color { get; set; }
    return:
      type: System.Drawing.Color
      description: "Объект <xref href=&quot;System.Drawing.Color&quot;> </xref> структуру, которая представляет цвет объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Color*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство цвета для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.CompoundArray
  id: CompoundArray
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает массив значений, определяющий составное перо. Составное перо рисует составную линию, состоящую из параллельных линий и промежутков."
  remarks: "Составная линия состоит из сменяющих друг друга параллельных линий и промежутков различной ширины. Значения в массиве указать начальной точки компонентов составной линии относительно ширины пера. Первое значение массива задает начало первого компонента (линии) как доля расстояние по ширину пера. Второе значение массива задает начало следующего компонента (пробел) как доля расстояние по ширину пера. Конечное значение в массиве указывает, где заканчивается последнего компонента.       Предположим, что нужно пера для рисования двух параллельных линий, где ширина первой строки составляет 20 процентов ширины пера ширину пространства, которое разделяет две строки — 50 процентов пера &quot;s ширину и второй строки — 30 процентов ширины пера. Начните с создания <xref:System.Drawing.Pen>и массив действительных чисел.</xref:System.Drawing.Pen> Задайте составной массив, передавая массив со значениями 0,0, 0,2, 0,7 и 1.0 данное свойство.       Это свойство не задано, если <xref:System.Drawing.Pen>имеется <xref:System.Drawing.Pen.Alignment%2A>свойство <xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen.Alignment%2A> его</xref:System.Drawing.Pen>"
  syntax:
    content: public float[] CompoundArray { get; set; }
    return:
      type: System.Single[]
      description: "Массив действительных чисел, задающий составной массив. Элементы массива должны быть по возрастанию, не меньше 0 и не больше 1."
  overload: System.Drawing.Pen.CompoundArray*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство CompoundArray для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.CustomEndCap
  id: CustomEndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает настраиваемое завершение для использования в конце линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomEndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> , представляющий завершение для использования в конце линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.CustomEndCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство CustomEndCap для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.CustomStartCap
  id: CustomStartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает настраиваемое завершение, используемое в начале линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  syntax:
    content: public System.Drawing.Drawing2D.CustomLineCap CustomStartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.CustomLineCap
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.CustomLineCap&quot;> </xref> , представляющий завершение, используемое в начале линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.CustomStartCap*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство CustomStartCap для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.DashCap
  id: DashCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает стиль законцовки в конце штрихов, которые составляют пунктирные линии, нарисованные при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Это свойство не задано <xref:System.Drawing.Drawing2D.DashCap>Если <xref:System.Drawing.Pen>имеется <xref:System.Drawing.Pen.Alignment%2A>свойство <xref:System.Drawing.Drawing2D.PenAlignment>.</xref:System.Drawing.Drawing2D.PenAlignment> </xref:System.Drawing.Pen.Alignment%2A> его</xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.DashCap>"
  example:
  - "The following code example demonstrates creating a <xref:System.Drawing.Pen> and the effects of setting the DashCap, <xref:System.Drawing.Pen.DashPattern%2A>, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_0_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_0_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_0_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.DashCap DashCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashCap
      description: "Один из <xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;> </xref> значений, представляющих стиль завершения, используемый в начале и конце штрихов, которые составляют пунктирные линии, нарисованные при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.DashCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Указанное значение не является членом <xref href=&quot;System.Drawing.Drawing2D.DashCap&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство точечными для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.DashOffset
  id: DashOffset
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает расстояние от начала линии до начала шаблона штриха."
  syntax:
    content: public float DashOffset { get; set; }
    return:
      type: System.Single
      description: "Расстояние от начала линии до начала шаблона штриха."
  overload: System.Drawing.Pen.DashOffset*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство DashOffset для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.DashPattern
  id: DashPattern
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает массив настраиваемых штрихов и промежутков."
  remarks: "Присваивание значения, отличного от `null` для этого свойства задать <xref:System.Drawing.Drawing2D.DashStyle>Свойства для этого <xref:System.Drawing.Pen> <xref:System.Drawing.Drawing2D.DashStyle>.</xref:System.Drawing.Drawing2D.DashStyle> </xref:System.Drawing.Pen> </xref:System.Drawing.Drawing2D.DashStyle>       Элементы в `dashArray` массива задать длину всех штрихов и промежутков в шаблоне. Первый элемент задает длину штриха, второй элемент задает длину промежутка, третий элемент задает длину штриха и т. д. Таким образом каждый элемент должен быть ненулевое положительное число.       Имеет длину всех штрихов и промежутков в шаблоне продукта из значения элемента массива и ширины <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.DashCap%2A>, DashPattern, and <xref:System.Drawing.Graphics.SmoothingMode%2A> properties.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowPensAndSmoothingMode` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#3](~/add/codesnippet/csharp/p-system.drawing.pen.das_1_1.cs)]\n [!code-vb[System.Drawing.PensExample#3](~/add/codesnippet/visualbasic/p-system.drawing.pen.das_1_1.vb)]\n [!code-cpp[System.Drawing.PensExample#3](~/add/codesnippet/cpp/p-system.drawing.pen.das_1_1.cpp)]"
  syntax:
    content: public float[] DashPattern { get; set; }
    return:
      type: System.Single[]
      description: "Массив действительных чисел, задающий длины сменяющих друг друга штрихов и промежутков в пунктирных линиях."
  overload: System.Drawing.Pen.DashPattern*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство DashPattern для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.DashStyle
  id: DashStyle
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает стиль, используемый для пунктирных линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Значение <xref:System.Drawing.Drawing2D.DashStyle>этого свойства указывает пользовательский шаблон из штрихов и промежутков, определяемый <xref:System.Drawing.Pen.DashPattern%2A>свойством, составляющих линий, нарисованных при помощи <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen.DashPattern%2A> </xref:System.Drawing.Drawing2D.DashStyle> Если значение этого свойства равно <xref:System.Drawing.Drawing2D.DashStyle>и значение <xref:System.Drawing.Pen.DashPattern%2A>свойство `null`, перо рисует сплошные линии.</xref:System.Drawing.Pen.DashPattern%2A> </xref:System.Drawing.Drawing2D.DashStyle>"
  syntax:
    content: public System.Drawing.Drawing2D.DashStyle DashStyle { get; set; }
    return:
      type: System.Drawing.Drawing2D.DashStyle
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.DashStyle&quot;> </xref> , представляющий стиль, используемый для пунктирных линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.DashStyle*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство DashStyle для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.Dispose
  id: Dispose
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Освобождает все ресурсы, используемые этим <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Вызов Dispose позволяет ресурсы, используемые <xref:System.Drawing.Brush>перераспределить для других целей.</xref:System.Drawing.Brush>       После использования <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.Drawing.Pen>окажется в неработоспособном состоянии.</xref:System.Drawing.Pen> После вызова Dispose, необходимо освободить все ссылки на <xref:System.Drawing.Pen>, сборщик мусора мог освободить память, <xref:System.Drawing.Pen>занимаемую.</xref:System.Drawing.Pen> </xref:System.Drawing.Pen> Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.Drawing.Pen>.</xref:System.Drawing.Pen> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.Drawing.Pen>объекта `Finalize` метод.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and <xref:System.Drawing.Pen.LineJoin%2A> properties, and shows how to call the Dispose method for a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/m-system.drawing.pen.dis_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/m-system.drawing.pen.dis_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/m-system.drawing.pen.dis_1.cpp)]"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Pen.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.EndCap
  id: EndCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает стиль завершения линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.StartCap%2A> and EndCap properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.end_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.end_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.end_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap EndCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "Один из <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> значений, представляющих стиль завершения линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.EndCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Указанное значение не является членом <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство EndCap для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.Finalize
  id: Finalize
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Позволяет объекту попытаться освободить ресурсы и выполнить другие операции очистки, прежде чем он будет удален при сборке мусора."
  syntax:
    content: ~Pen ();
    parameters: []
  overload: System.Drawing.Pen.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.LineJoin
  id: LineJoin
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает объединенный стиль завершений для при двух последовательных линий, нарисованных при помощи объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Соединение линий — это общая область, сформированное две строки которого заканчивается соответствуют или перекрываться. Существует три стиля соединения линий: фацетное скоса и округления.  При указании стиль соединения линий для объекта <xref:System.Drawing.Pen>применения стиля соединения для всех соединенных линий в любом объекте <xref:System.Drawing.Drawing2D.GraphicsPath>, рисуется с помощью этого пера. На следующем рисунке показан результатов в примере скошенной строки соединения.</xref:System.Drawing.Drawing2D.GraphicsPath> </xref:System.Drawing.Pen>       ![Перья](~/add/media/pens5.gif &quot;перья&quot;)"
  example:
  - "The following code example demonstrates the effects of setting the <xref:System.Drawing.Pen.Width%2A> and LineJoin properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs> .  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.lin_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.lin_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.lin_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineJoin LineJoin { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineJoin
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.LineJoin&quot;> </xref> , представляющий стиль окончаний при двух последовательных линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.LineJoin*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство LineJoin для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.MiterLimit
  id: MiterLimit
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает ограничение толщины соединения скошенных углов."
  remarks: "Длина соединения — расстояние от точки пересечения границ линий внутри соединения пересечения границ линий за пределами соединения. Длина соединения могут быть большими при небольшом угол между двумя строками. Среза является максимально допустимое отношение длины соединения к ширине штриха. Значение по умолчанию — 10.0f.       Если длина объединенного пересечения превышает предел соединения, соединения багетной их хранения в пределах соединения пересечения."
  syntax:
    content: public float MiterLimit { get; set; }
    return:
      type: System.Single
      description: "Ограничение толщины соединения скошенных углов."
  overload: System.Drawing.Pen.MiterLimit*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство MiterLimit для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Умножает матрицу преобразования <xref href=&quot;System.Drawing.Pen&quot;> </xref> по заданному <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref>."
  remarks: "Этот метод добавляет матрицу умножения, заданную в `matrix` параметр к матрице преобразования для операции умножения."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/cpp/m-system.drawing.pen.mul_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/csharp/m-system.drawing.pen.mul_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.pen.mul_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> Объекта, на который умножается матрица преобразования."
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  id: MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Умножает матрицу преобразования <xref href=&quot;System.Drawing.Pen&quot;> </xref> по заданному <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> в указанном порядке."
  remarks: "Этот метод использует <xref:System.Drawing.Drawing2D.MatrixOrder>элемент перечисления (начале или в конце) заданные `order` для выполнения операции умножения.</xref:System.Drawing.Drawing2D.MatrixOrder>"
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a line to the screen.  \n  \n-   Multiplies the transformation matrix of the pen by the specified matrix.  \n  \n-   Draws a line with the transformed pen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/cpp/b3caf9f4-4a37-409d-bccb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/csharp/b3caf9f4-4a37-409d-bccb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#3](~/add/codesnippet/visualbasic/b3caf9f4-4a37-409d-bccb-_1.vb)]"
  syntax:
    content: public void MultiplyTransform (System.Drawing.Drawing2D.Matrix matrix, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: matrix
      type: System.Drawing.Drawing2D.Matrix
      description: "<xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , На который умножается матрица преобразования."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Порядок, в котором выполняется операция умножения."
  overload: System.Drawing.Pen.MultiplyTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.PenType
  id: PenType
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает стиль линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Объект <xref:System.Drawing.Pen>можно нарисовать сплошные линии, заполненные линии или линии с текстурой, в зависимости от стиля, указанного участником <xref:System.Drawing.Drawing2D.PenType>перечисления.</xref:System.Drawing.Drawing2D.PenType> </xref:System.Drawing.Pen>"
  syntax:
    content: public System.Drawing.Drawing2D.PenType PenType { get; }
    return:
      type: System.Drawing.Drawing2D.PenType
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.PenType&quot;> </xref> перечисления, задающее стиль линий, нарисованных с этим <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.PenType*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ResetTransform
  id: ResetTransform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает матрице геометрического преобразования <xref href=&quot;System.Drawing.Pen&quot;> </xref> удостоверению."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.  \n  \n-   Draws a line to the screen.  \n  \n-   Resets the transformation matrix to identity.  \n  \n-   Draws a second line to the screen.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/cpp/m-system.drawing.pen.res_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/csharp/m-system.drawing.pen.res_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.pen.res_1.vb)]"
  syntax:
    content: public void ResetTransform ();
    parameters: []
  overload: System.Drawing.Pen.ResetTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  id: RotateTransform(System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Поворачивает локальное геометрическое преобразование на заданный угол. Этот метод добавляет поворот перед преобразованием."
  remarks: "Поскольку перо имеет круглую форму, поворот не будет заметен без увеличения размера пера вдоль оси x и оси."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/cpp/m-system.drawing.pen.rot_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/csharp/m-system.drawing.pen.rot_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#5](~/add/codesnippet/visualbasic/m-system.drawing.pen.rot_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle);
    parameters:
    - id: angle
      type: System.Single
      description: "Угол поворота."
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Поворачивает локальное геометрическое преобразование на заданный угол в заданном порядке."
  remarks: "Поскольку перо имеет круглую форму, поворот не будет заметен без увеличения размера пера вдоль оси x и оси."
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Rotates the pen 90 degrees clockwise.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/cpp/35c127d1-4f45-4168-8641-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/csharp/35c127d1-4f45-4168-8641-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#6](~/add/codesnippet/visualbasic/35c127d1-4f45-4168-8641-_1.vb)]"
  syntax:
    content: public void RotateTransform (float angle, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: angle
      type: System.Single
      description: "Угол поворота."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , указывающий, в конце или в начале матрица поворота."
  overload: System.Drawing.Pen.RotateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  id: ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Выполняет изменение масштаба локального геометрического преобразования при помощи заданных коэффициентов. Этот метод добавляет масштабирования матрицы преобразования."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n Creates a <xref:System.Drawing.Pen>.  \n  \n Draws a rectangle using the pen.  \n  \n Scales the pen by 2 times in the x-axis direction.  \n  \n Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/cpp/m-system.drawing.pen.sca_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/csharp/m-system.drawing.pen.sca_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#7](~/add/codesnippet/visualbasic/m-system.drawing.pen.sca_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy);
    parameters:
    - id: sx
      type: System.Single
      description: "Коэффициент изменения масштаба по оси х."
    - id: sy
      type: System.Single
      description: "Коэффициент изменения масштаба по оси y."
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Выполняет изменение масштаба локального геометрического преобразования при помощи заданных коэффициентов в заданном порядке."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code performs the following actions:  \n  \n-   Creates a <xref:System.Drawing.Pen>.  \n  \n-   Draws a rectangle using the pen.  \n  \n-   Scales the pen by 2 times in the x-axis direction.  \n  \n-   Draws a second rectangle to demonstrate the difference.  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/cpp/f408f2ab-3827-481d-becb-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/csharp/f408f2ab-3827-481d-becb-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#8](~/add/codesnippet/visualbasic/f408f2ab-3827-481d-becb-_1.vb)]"
  syntax:
    content: public void ScaleTransform (float sx, float sy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: sx
      type: System.Single
      description: "Коэффициент изменения масштаба по оси х."
    - id: sy
      type: System.Single
      description: "Коэффициент изменения масштаба по оси y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.MatrixOrder&quot;> </xref> , указывающий, в конце или в начале матрица масштабирования."
  overload: System.Drawing.Pen.ScaleTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  id: SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Задает значения, определяющие стиль завершения, используемый в конце линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example is designed for use with Windows Forms, and it requires <xref:System.Windows.Forms.PaintEventArgs>`e`, which is a parameter of the <xref:System.Windows.Forms.Control.Paint> event handler. The code creates a <xref:System.Drawing.Pen> and sets it to draw arrow anchor caps at the beginning of lines:  \n  \n [!code-cpp[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/cpp/40b79849-2bf1-4135-844f-_1.cpp)]\n [!code-cs[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/csharp/40b79849-2bf1-4135-844f-_1.cs)]\n [!code-vb[System.Drawing.ClassicPenExamples#9](~/add/codesnippet/visualbasic/40b79849-2bf1-4135-844f-_1.vb)]"
  syntax:
    content: public void SetLineCap (System.Drawing.Drawing2D.LineCap startCap, System.Drawing.Drawing2D.LineCap endCap, System.Drawing.Drawing2D.DashCap dashCap);
    parameters:
    - id: startCap
      type: System.Drawing.Drawing2D.LineCap
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> , представляющий стиль завершения, используемое в начале линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
    - id: endCap
      type: System.Drawing.Drawing2D.LineCap
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> , представляющий стиль для использования в конце линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
    - id: dashCap
      type: System.Drawing.Drawing2D.DashCap
      description: "Объект <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> , представляющий стиль для использования в начале или конце пунктирных линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.SetLineCap*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.StartCap
  id: StartCap
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает стиль, используемый в начале линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates the effects of setting the StartCap and <xref:System.Drawing.Pen.EndCap%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowStartAndEndCaps` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#2](~/add/codesnippet/csharp/p-system.drawing.pen.sta_1.cs)]\n [!code-vb[System.Drawing.PensExample#2](~/add/codesnippet/visualbasic/p-system.drawing.pen.sta_1.vb)]\n [!code-cpp[System.Drawing.PensExample#2](~/add/codesnippet/cpp/p-system.drawing.pen.sta_1.cpp)]"
  syntax:
    content: public System.Drawing.Drawing2D.LineCap StartCap { get; set; }
    return:
      type: System.Drawing.Drawing2D.LineCap
      description: "Один из <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref> значений, представляющих стиль завершения, используемый в начале линий, нарисованных при помощи <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.StartCap*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "Указанное значение не является членом <xref href=&quot;System.Drawing.Drawing2D.LineCap&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство свойства StartCap для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.Transform
  id: Transform
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает копию геометрического преобразования объекта <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  remarks: "Это свойство определяет эллиптическую форму наконечника пера. Эта форма получается из обычной круглой формы по применению матрицы преобразования. Обратите внимание, что часть матрицы преобразования учитывается. Так как матрица возвращена и преобразованием свойство представляет собой копию геометрического преобразования пера, следует освободить память, матрицы, когда он больше не нужен."
  syntax:
    content: public System.Drawing.Drawing2D.Matrix Transform { get; set; }
    return:
      type: System.Drawing.Drawing2D.Matrix
      description: "Копия <xref href=&quot;System.Drawing.Drawing2D.Matrix&quot;> </xref> , представляющий геометрическое преобразование <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Transform*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство преобразования для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  id: TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Преобразует локального геометрического преобразования на заданные размеры. Этот метод добавляет преобразования для преобразования."
  syntax:
    content: public void TranslateTransform (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "Значение сдвига по оси x."
    - id: dy
      type: System.Single
      description: "Значение сдвига по оси y."
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  id: TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Выполняет перевод локального геометрического преобразования на заданные размеры в заданном порядке."
  syntax:
    content: public void TranslateTransform (float dx, float dy, System.Drawing.Drawing2D.MatrixOrder order);
    parameters:
    - id: dx
      type: System.Single
      description: "Значение сдвига по оси x."
    - id: dy
      type: System.Single
      description: "Значение сдвига по оси y."
    - id: order
      type: System.Drawing.Drawing2D.MatrixOrder
      description: "Порядок (в начале или в конце) в перевода."
  overload: System.Drawing.Pen.TranslateTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Pen.Width
  id: Width
  parent: System.Drawing.Pen
  langs:
  - csharp
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
  type: Property
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Возвращает или задает ширину пера <xref href=&quot;System.Drawing.Pen&quot;> </xref>, в единицах <xref href=&quot;System.Drawing.Graphics&quot;> </xref> объект, используемый для рисования."
  remarks: "Единицы измерения можно получить доступ к <xref:System.Drawing.Graphics>с помощью его <xref:System.Drawing.Graphics.PageUnit%2A>свойство.</xref:System.Drawing.Graphics.PageUnit%2A> </xref:System.Drawing.Graphics> Единица измерения — обычно пикселей. Ширина 0 приведет к <xref:System.Drawing.Pen>рисования, как если бы ширина была равна 1.</xref:System.Drawing.Pen>"
  example:
  - "The following code example demonstrates the effects of setting the Width and <xref:System.Drawing.Pen.LineJoin%2A> properties on a <xref:System.Drawing.Pen>.  \n  \n This example is designed to be used with Windows Forms. Paste the code into a form and call the `ShowLineJoin` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.  \n  \n [!code-cs[System.Drawing.PensExample#1](~/add/codesnippet/csharp/p-system.drawing.pen.width_1.cs)]\n [!code-vb[System.Drawing.PensExample#1](~/add/codesnippet/visualbasic/p-system.drawing.pen.width_1.vb)]\n [!code-cpp[System.Drawing.PensExample#1](~/add/codesnippet/cpp/p-system.drawing.pen.width_1.cpp)]"
  syntax:
    content: public float Width { get; set; }
    return:
      type: System.Single
      description: "Ширина этого <xref href=&quot;System.Drawing.Pen&quot;> </xref>."
  overload: System.Drawing.Pen.Width*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Задать свойство ширины для неизменяемого <xref href=&quot;System.Drawing.Pen&quot;> </xref>, например возвращаемых командлетом <xref href=&quot;System.Drawing.Pens&quot;> </xref> класса."
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush)
  nameWithType: Pen.Pen(Brush)
  fullName: System.Drawing.Pen.Pen(Brush)
- uid: System.Drawing.Brush
  parent: System.Drawing
  isExternal: false
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color)
  nameWithType: Pen.Pen(Color)
  fullName: System.Drawing.Pen.Pen(Color)
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Brush,Single)
  nameWithType: Pen.Pen(Brush,Single)
  fullName: System.Drawing.Pen.Pen(Brush,Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen(Color,Single)
  nameWithType: Pen.Pen(Color,Single)
  fullName: System.Drawing.Pen.Pen(Color,Single)
- uid: System.Drawing.Pen.Alignment
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
  fullName: System.Drawing.Pen.Alignment
- uid: System.Drawing.Drawing2D.PenAlignment
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenAlignment
  nameWithType: PenAlignment
  fullName: System.Drawing.Drawing2D.PenAlignment
- uid: System.Drawing.Pen.Brush
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
  fullName: System.Drawing.Pen.Brush
- uid: System.Drawing.Pen.Clone
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone()
  nameWithType: Pen.Clone()
  fullName: System.Drawing.Pen.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Pen.Color
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
  fullName: System.Drawing.Pen.Color
- uid: System.Drawing.Pen.CompoundArray
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
  fullName: System.Drawing.Pen.CompoundArray
- uid: System.Single[]
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single[]
  spec.csharp:
  - uid: System.Single
    name: Single
    nameWithType: Single
    fullName: Single[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Drawing.Pen.CustomEndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
  fullName: System.Drawing.Pen.CustomEndCap
- uid: System.Drawing.Drawing2D.CustomLineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: CustomLineCap
  nameWithType: CustomLineCap
  fullName: System.Drawing.Drawing2D.CustomLineCap
- uid: System.Drawing.Pen.CustomStartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
  fullName: System.Drawing.Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
  fullName: System.Drawing.Pen.DashCap
- uid: System.Drawing.Drawing2D.DashCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashCap
  nameWithType: DashCap
  fullName: System.Drawing.Drawing2D.DashCap
- uid: System.Drawing.Pen.DashOffset
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
  fullName: System.Drawing.Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
  fullName: System.Drawing.Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
  fullName: System.Drawing.Pen.DashStyle
- uid: System.Drawing.Drawing2D.DashStyle
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: DashStyle
  nameWithType: DashStyle
  fullName: System.Drawing.Drawing2D.DashStyle
- uid: System.Drawing.Pen.Dispose
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose()
  nameWithType: Pen.Dispose()
  fullName: System.Drawing.Pen.Dispose()
- uid: System.Drawing.Pen.EndCap
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
  fullName: System.Drawing.Pen.EndCap
- uid: System.Drawing.Drawing2D.LineCap
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineCap
  nameWithType: LineCap
  fullName: System.Drawing.Drawing2D.LineCap
- uid: System.Drawing.Pen.Finalize
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize()
  nameWithType: Pen.Finalize()
  fullName: System.Drawing.Pen.Finalize()
- uid: System.Drawing.Pen.LineJoin
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
  fullName: System.Drawing.Pen.LineJoin
- uid: System.Drawing.Drawing2D.LineJoin
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: LineJoin
  nameWithType: LineJoin
  fullName: System.Drawing.Drawing2D.LineJoin
- uid: System.Drawing.Pen.MiterLimit
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
  fullName: System.Drawing.Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix)
  nameWithType: Pen.MultiplyTransform(Matrix)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix)
- uid: System.Drawing.Drawing2D.Matrix
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: Matrix
  nameWithType: Matrix
  fullName: System.Drawing.Drawing2D.Matrix
- uid: System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform(Matrix,MatrixOrder)
  nameWithType: Pen.MultiplyTransform(Matrix,MatrixOrder)
  fullName: System.Drawing.Pen.MultiplyTransform(Matrix,MatrixOrder)
- uid: System.Drawing.Drawing2D.MatrixOrder
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: MatrixOrder
  nameWithType: MatrixOrder
  fullName: System.Drawing.Drawing2D.MatrixOrder
- uid: System.Drawing.Pen.PenType
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
  fullName: System.Drawing.Pen.PenType
- uid: System.Drawing.Drawing2D.PenType
  parent: System.Drawing.Drawing2D
  isExternal: false
  name: PenType
  nameWithType: PenType
  fullName: System.Drawing.Drawing2D.PenType
- uid: System.Drawing.Pen.ResetTransform
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform()
  nameWithType: Pen.ResetTransform()
  fullName: System.Drawing.Pen.ResetTransform()
- uid: System.Drawing.Pen.RotateTransform(System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single)
  nameWithType: Pen.RotateTransform(Single)
  fullName: System.Drawing.Pen.RotateTransform(Single)
- uid: System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform(Single,MatrixOrder)
  nameWithType: Pen.RotateTransform(Single,MatrixOrder)
  fullName: System.Drawing.Pen.RotateTransform(Single,MatrixOrder)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single)
  nameWithType: Pen.ScaleTransform(Single,Single)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single)
- uid: System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.ScaleTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.ScaleTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap(LineCap,LineCap,DashCap)
  nameWithType: Pen.SetLineCap(LineCap,LineCap,DashCap)
  fullName: System.Drawing.Pen.SetLineCap(LineCap,LineCap,DashCap)
- uid: System.Drawing.Pen.StartCap
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
  fullName: System.Drawing.Pen.StartCap
- uid: System.Drawing.Pen.Transform
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
  fullName: System.Drawing.Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single)
  nameWithType: Pen.TranslateTransform(Single,Single)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single)
- uid: System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform(Single,Single,MatrixOrder)
  nameWithType: Pen.TranslateTransform(Single,Single,MatrixOrder)
  fullName: System.Drawing.Pen.TranslateTransform(Single,Single,MatrixOrder)
- uid: System.Drawing.Pen.Width
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
  fullName: System.Drawing.Pen.Width
- uid: System.Drawing.Pen.#ctor*
  parent: System.Drawing.Pen
  isExternal: false
  name: Pen
  nameWithType: Pen.Pen
- uid: System.Drawing.Pen.Alignment*
  parent: System.Drawing.Pen
  isExternal: false
  name: Alignment
  nameWithType: Pen.Alignment
- uid: System.Drawing.Pen.Brush*
  parent: System.Drawing.Pen
  isExternal: false
  name: Brush
  nameWithType: Pen.Brush
- uid: System.Drawing.Pen.Clone*
  parent: System.Drawing.Pen
  isExternal: false
  name: Clone
  nameWithType: Pen.Clone
- uid: System.Drawing.Pen.Color*
  parent: System.Drawing.Pen
  isExternal: false
  name: Color
  nameWithType: Pen.Color
- uid: System.Drawing.Pen.CompoundArray*
  parent: System.Drawing.Pen
  isExternal: false
  name: CompoundArray
  nameWithType: Pen.CompoundArray
- uid: System.Drawing.Pen.CustomEndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomEndCap
  nameWithType: Pen.CustomEndCap
- uid: System.Drawing.Pen.CustomStartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: CustomStartCap
  nameWithType: Pen.CustomStartCap
- uid: System.Drawing.Pen.DashCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashCap
  nameWithType: Pen.DashCap
- uid: System.Drawing.Pen.DashOffset*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashOffset
  nameWithType: Pen.DashOffset
- uid: System.Drawing.Pen.DashPattern*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashPattern
  nameWithType: Pen.DashPattern
- uid: System.Drawing.Pen.DashStyle*
  parent: System.Drawing.Pen
  isExternal: false
  name: DashStyle
  nameWithType: Pen.DashStyle
- uid: System.Drawing.Pen.Dispose*
  parent: System.Drawing.Pen
  isExternal: false
  name: Dispose
  nameWithType: Pen.Dispose
- uid: System.Drawing.Pen.EndCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: EndCap
  nameWithType: Pen.EndCap
- uid: System.Drawing.Pen.Finalize*
  parent: System.Drawing.Pen
  isExternal: false
  name: Finalize
  nameWithType: Pen.Finalize
- uid: System.Drawing.Pen.LineJoin*
  parent: System.Drawing.Pen
  isExternal: false
  name: LineJoin
  nameWithType: Pen.LineJoin
- uid: System.Drawing.Pen.MiterLimit*
  parent: System.Drawing.Pen
  isExternal: false
  name: MiterLimit
  nameWithType: Pen.MiterLimit
- uid: System.Drawing.Pen.MultiplyTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: MultiplyTransform
  nameWithType: Pen.MultiplyTransform
- uid: System.Drawing.Pen.PenType*
  parent: System.Drawing.Pen
  isExternal: false
  name: PenType
  nameWithType: Pen.PenType
- uid: System.Drawing.Pen.ResetTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ResetTransform
  nameWithType: Pen.ResetTransform
- uid: System.Drawing.Pen.RotateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: RotateTransform
  nameWithType: Pen.RotateTransform
- uid: System.Drawing.Pen.ScaleTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: ScaleTransform
  nameWithType: Pen.ScaleTransform
- uid: System.Drawing.Pen.SetLineCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: SetLineCap
  nameWithType: Pen.SetLineCap
- uid: System.Drawing.Pen.StartCap*
  parent: System.Drawing.Pen
  isExternal: false
  name: StartCap
  nameWithType: Pen.StartCap
- uid: System.Drawing.Pen.Transform*
  parent: System.Drawing.Pen
  isExternal: false
  name: Transform
  nameWithType: Pen.Transform
- uid: System.Drawing.Pen.TranslateTransform*
  parent: System.Drawing.Pen
  isExternal: false
  name: TranslateTransform
  nameWithType: Pen.TranslateTransform
- uid: System.Drawing.Pen.Width*
  parent: System.Drawing.Pen
  isExternal: false
  name: Width
  nameWithType: Pen.Width
