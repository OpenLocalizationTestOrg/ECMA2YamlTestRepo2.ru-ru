### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.TypedMessageConverter
  id: TypedMessageConverter
  children:
  - System.ServiceModel.Description.TypedMessageConverter.#ctor
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  - System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  - System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  langs:
  - csharp
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter
  fullName: System.ServiceModel.Description.TypedMessageConverter
  type: Class
  summary: "Преобразует типизированное сообщение в нетипизированное, или нетипизированное сообщение в типизированное сообщение."
  remarks: "Этот класс предоставляет функциональные возможности для преобразования типизированного сообщения в нетипизированное, или нетипизированное сообщение в типизированное сообщение. Типизированное сообщение является экземпляром типа, который содержит <xref:System.ServiceModel.MessageContractAttribute>аннотированный атрибут.</xref:System.ServiceModel.MessageContractAttribute> Нетипизированное сообщение является запрос, который является экземпляром <xref:System.ServiceModel.Channels.Message>класса.</xref:System.ServiceModel.Channels.Message>  Можно аннотировать тип с <xref:System.ServiceModel.MessageContractAttribute>для создания настраиваемого типа сообщений и затем использовать методы, предоставленные этим классом для преобразования его в нетипизированный <xref:System.ServiceModel.Channels.Message>экземпляра.</xref:System.ServiceModel.Channels.Message> </xref:System.ServiceModel.MessageContractAttribute>"
  syntax:
    content: public abstract class TypedMessageConverter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: TypedMessageConverter()
  nameWithType: TypedMessageConverter.TypedMessageConverter()
  fullName: System.ServiceModel.Description.TypedMessageConverter.TypedMessageConverter()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> класса."
  syntax:
    content: protected TypedMessageConverter ();
    parameters: []
  overload: System.ServiceModel.Description.TypedMessageConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  id: Create(System.Type,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String)
  nameWithType: TypedMessageConverter.Create(Type,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Представляет статический метод, возвращающий <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Тип сообщения контракта, который является <xref:System.Type>заметками с <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Строка действия."
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "Объект <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Аргументы<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Тип контракта для указанного сообщения не имеет MessageContractAttribute применения"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  id: Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Представляет статический метод, возвращающий <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.DataContractFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Тип сообщения контракта, который является <xref:System.Type>заметками с <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Строка действия."
    - id: formatterAttribute
      type: System.ServiceModel.DataContractFormatAttribute
      description: "Объект <xref:System.ServiceModel.DataContractFormatAttribute>, указывающий модуль форматирования для использования.</xref:System.ServiceModel.DataContractFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "Объект <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Аргументы<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Тип контракта для указанного сообщения не имеет MessageContractAttribute применения"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  id: Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Представляет статический метод, возвращающий <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Тип сообщения контракта, который является <xref:System.Type>заметками с <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Строка действия."
    - id: formatterAttribute
      type: System.ServiceModel.XmlSerializerFormatAttribute
      description: "Объект <xref:System.ServiceModel.XmlSerializerFormatAttribute>, указывающий модуль форматирования для использования.</xref:System.ServiceModel.XmlSerializerFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "Объект <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Аргументы<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Тип контракта для указанного сообщения не имеет MessageContractAttribute применения"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  id: Create(System.Type,System.String,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String)
  nameWithType: TypedMessageConverter.Create(Type,String,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Представляет статический метод, возвращающий <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Тип сообщения контракта, который является <xref:System.Type>заметками с <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Строка действия."
    - id: defaultNamespace
      type: System.String
      description: "Пространство имен."
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "Объект <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Аргументы<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Тип контракта для указанного сообщения не имеет MessageContractAttribute применения"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  id: Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Представляет статический метод, возвращающий <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.DataContractFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Тип сообщения контракта, который является <xref:System.Type>заметками с <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Строка действия."
    - id: defaultNamespace
      type: System.String
      description: "Пространство имен."
    - id: formatterAttribute
      type: System.ServiceModel.DataContractFormatAttribute
      description: "Объект <xref:System.ServiceModel.DataContractFormatAttribute>, указывающий модуль форматирования для использования.</xref:System.ServiceModel.DataContractFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "Объект <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Аргументы<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Тип контракта для указанного сообщения не имеет MessageContractAttribute применения"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  id: Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: Create(Type,String,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Представляет статический метод, возвращающий <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  syntax:
    content: public static System.ServiceModel.Description.TypedMessageConverter Create (Type messageContract, string action, string defaultNamespace, System.ServiceModel.XmlSerializerFormatAttribute formatterAttribute);
    parameters:
    - id: messageContract
      type: System.Type
      description: "Тип сообщения контракта, который является <xref:System.Type>заметками с <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.Type>"
    - id: action
      type: System.String
      description: "Строка действия."
    - id: defaultNamespace
      type: System.String
      description: "Пространство имен."
    - id: formatterAttribute
      type: System.ServiceModel.XmlSerializerFormatAttribute
      description: "Объект <xref:System.ServiceModel.XmlSerializerFormatAttribute>, указывающий модуль форматирования для использования.</xref:System.ServiceModel.XmlSerializerFormatAttribute>"
    return:
      type: System.ServiceModel.Description.TypedMessageConverter
      description: "Объект <xref href=&quot;System.ServiceModel.Description.TypedMessageConverter&quot;> </xref> экземпляра."
  overload: System.ServiceModel.Description.TypedMessageConverter.Create*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Аргументы<xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Тип контракта для указанного сообщения не имеет MessageContractAttribute применения"
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  id: FromMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: FromMessage(Message)
  nameWithType: TypedMessageConverter.FromMessage(Message)
  fullName: System.ServiceModel.Description.TypedMessageConverter.FromMessage(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Создает типизированное сообщение из указанного <xref:System.ServiceModel.Channels.Message>экземпляра.</xref:System.ServiceModel.Channels.Message>"
  remarks: "Этот метод принимает нетипизированное [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] сообщений, то есть экземпляр <xref:System.ServiceModel.Channels.Message>и преобразует его в типизированное сообщение, то есть экземпляр типа, которое помечается <xref:System.ServiceModel.MessageContractAttribute>.</xref:System.ServiceModel.MessageContractAttribute> </xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract object FromMessage (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "Нетипизированное сообщение."
    return:
      type: System.Object
      description: "Объект, являющийся типизированным сообщением."
  overload: System.ServiceModel.Description.TypedMessageConverter.FromMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  id: ToMessage(System.Object)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: ToMessage(Object)
  nameWithType: TypedMessageConverter.ToMessage(Object)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Создает <xref:System.ServiceModel.Channels.Message>экземпляр из заданного типизированного сообщения.</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage);
    parameters:
    - id: typedMessage
      type: System.Object
      description: "Типизированное сообщение."
    return:
      type: System.ServiceModel.Channels.Message
      description: "Объект <xref:System.ServiceModel.Channels.Message>экземпляра.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  id: ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Description.TypedMessageConverter
  langs:
  - csharp
  name: ToMessage(Object,MessageVersion)
  nameWithType: TypedMessageConverter.ToMessage(Object,MessageVersion)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object,MessageVersion)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Создает <xref:System.ServiceModel.Channels.Message>экземпляр из заданного типизированного сообщения с использованием указанной версии.</xref:System.ServiceModel.Channels.Message>"
  syntax:
    content: public abstract System.ServiceModel.Channels.Message ToMessage (object typedMessage, System.ServiceModel.Channels.MessageVersion version);
    parameters:
    - id: typedMessage
      type: System.Object
      description: "Типизированное сообщение."
    - id: version
      type: System.ServiceModel.Channels.MessageVersion
      description: "Объект <xref:System.ServiceModel.Channels.MessageVersion>, указывает версии SOAP и WS-Addressing, связанные с сообщением.</xref:System.ServiceModel.Channels.MessageVersion>"
    return:
      type: System.ServiceModel.Channels.Message
      description: "Объект <xref:System.ServiceModel.Channels.Message>экземпляра.</xref:System.ServiceModel.Channels.Message>"
  overload: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: TypedMessageConverter()
  nameWithType: TypedMessageConverter.TypedMessageConverter()
  fullName: System.ServiceModel.Description.TypedMessageConverter.TypedMessageConverter()
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String)
  nameWithType: TypedMessageConverter.Create(Type,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String)
- uid: System.ServiceModel.Description.TypedMessageConverter
  parent: System.ServiceModel.Description
  isExternal: false
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter
  fullName: System.ServiceModel.Description.TypedMessageConverter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,DataContractFormatAttribute)
- uid: System.ServiceModel.DataContractFormatAttribute
  parent: System.ServiceModel
  isExternal: true
  name: DataContractFormatAttribute
  nameWithType: DataContractFormatAttribute
  fullName: System.ServiceModel.DataContractFormatAttribute
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,XmlSerializerFormatAttribute)
- uid: System.ServiceModel.XmlSerializerFormatAttribute
  parent: System.ServiceModel
  isExternal: true
  name: XmlSerializerFormatAttribute
  nameWithType: XmlSerializerFormatAttribute
  fullName: System.ServiceModel.XmlSerializerFormatAttribute
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String)
  nameWithType: TypedMessageConverter.Create(Type,String,String)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String)
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.DataContractFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String,DataContractFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,DataContractFormatAttribute)
- uid: System.ServiceModel.Description.TypedMessageConverter.Create(System.Type,System.String,System.String,System.ServiceModel.XmlSerializerFormatAttribute)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create(Type,String,String,XmlSerializerFormatAttribute)
  nameWithType: TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
  fullName: System.ServiceModel.Description.TypedMessageConverter.Create(Type,String,String,XmlSerializerFormatAttribute)
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: FromMessage(Message)
  nameWithType: TypedMessageConverter.FromMessage(Message)
  fullName: System.ServiceModel.Description.TypedMessageConverter.FromMessage(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage(Object)
  nameWithType: TypedMessageConverter.ToMessage(Object)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object)
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage(System.Object,System.ServiceModel.Channels.MessageVersion)
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage(Object,MessageVersion)
  nameWithType: TypedMessageConverter.ToMessage(Object,MessageVersion)
  fullName: System.ServiceModel.Description.TypedMessageConverter.ToMessage(Object,MessageVersion)
- uid: System.ServiceModel.Channels.MessageVersion
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageVersion
  nameWithType: MessageVersion
  fullName: System.ServiceModel.Channels.MessageVersion
- uid: System.ServiceModel.Description.TypedMessageConverter.#ctor*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: TypedMessageConverter
  nameWithType: TypedMessageConverter.TypedMessageConverter
- uid: System.ServiceModel.Description.TypedMessageConverter.Create*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: Create
  nameWithType: TypedMessageConverter.Create
- uid: System.ServiceModel.Description.TypedMessageConverter.FromMessage*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: FromMessage
  nameWithType: TypedMessageConverter.FromMessage
- uid: System.ServiceModel.Description.TypedMessageConverter.ToMessage*
  parent: System.ServiceModel.Description.TypedMessageConverter
  isExternal: false
  name: ToMessage
  nameWithType: TypedMessageConverter.ToMessage
