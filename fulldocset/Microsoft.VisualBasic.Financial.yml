### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Financial
  id: Financial
  children:
  - Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  - Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  - Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  - Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  - Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  - Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  langs:
  - csharp
  name: Financial
  nameWithType: Financial
  fullName: Microsoft.VisualBasic.Financial
  type: Class
  summary: "<xref uid=&quot;langword_csharp_Financial&quot; name=&quot;Financial&quot; href=&quot;&quot;> </xref> Модуль содержит процедуры, используемые для выполнения финансовых операций."
  remarks: "Этот модуль поддерживает члены библиотеки времени выполнения Visual Basic, которые выполняют финансовых расчетов, например амортизации, текущих и будущих значений, процентных ставок, ставок возврата и платежей."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan, given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._25_1.vb)]"
  syntax:
    content: >-
      [Microsoft.VisualBasic.CompilerServices.StandardModule]

      public sealed class Financial
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  id: DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее амортизацию ресурса за за определенный период времени с помощью метода двойного уменьшения остатка или другого метода указывается."
  remarks: "Метод двойного уменьшения остатка вычисляет амортизацию, используя увеличенный коэффициент. Снижение стоимости максимальна в первый период и уменьшается в последующие.       `Life` И `Period` аргументы должны задаваться в одинаковых единицах измерения. Например если `Life` задается в месяцах, `Period` также должен быть задан в месяцах. Все аргументы должны быть положительными числами.       `DDB` Функция использует следующую формулу для вычисления амортизации в течение заданного периода: амортизации / период = ((Cost – Salvage) * коэффициент) / жизни"
  example:
  - "This example uses the `DDB` function to return the depreciation of an asset for a specified period given the initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), the total life of the asset in years (`LifeTime`), and the period in years for which the depreciation is calculated (`Depr`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/0a9b2d8a-2f04-4c59-80da-_1.vb)]"
  syntax:
    content: public static double DDB (double Cost, double Salvage, double Life, double Period, double Factor = 2);
    parameters:
    - id: Cost
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>задает начальную стоимость ресурса."
    - id: Salvage
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>При указании значения в конце срока полезного использования актива."
    - id: Life
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание срок эксплуатации актива."
    - id: Period
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Задание интервала времени для актива рассчитывается снижение стоимости."
    - id: Factor
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание частоты, с которой остатка. Если не указано, предполагается 2 (метод двойного уменьшения)."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее амортизацию ресурса за за определенный период времени с помощью метода двойного уменьшения остатка или другого метода указывается."
  overload: Microsoft.VisualBasic.Financial.DDB*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Factor</code>&lt;= 0, <code>Salvage</code> &lt; 0, <code>Period</code> &lt;= 0, or <code>Period</code> &gt;<code>Life.</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее будущее значение ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  remarks: "Ежегодного платежа представляет собой серию фиксированных денежных выплат. Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).       `Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения. Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.       Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа."
  example:
  - "This example uses the `FV` function to return the future value of an investment given the percentage rate that accrues per period (`APR / 12`), the total number of payments (`TotPmts`), the payment (`Payment`), the current value of the investment (`PVal`), and a number that indicates whether the payment is made at the beginning or end of the payment period (`PayType`). Note that because `Payment` represents cash paid out, it is a negative number.  \n  \n [!code-vb[VbVbalrMath#22](~/add/codesnippet/visualbasic/0c46fa91-bd2b-4dd0-a9f3-_1.vb)]"
  syntax:
    content: public static double FV (double Rate, double NPer, double Pmt, double PV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание процентную ставку за период. Например если получить автомобиль под годовую процентную ставку (APR) размером 10% и ежемесячных платежей, ставка за период — 0,1/12 или 0,0083."
    - id: NPer
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание общее количество периодов платежа. Например при внесении ежемесячных платежей на четыре года на автомобиль протяжении имеет всего 4 x 12 (или 48) периодов."
    - id: Pmt
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание выплаты для каждого периода. Обычно платежи содержат капиталу и процентам, не изменяются на протяжении платежа."
    - id: PV
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание текущее значение (или общую сумму) серии будущих выплат. Например если для покупки автомобиля сумму кредита представляет текущее значение предстоящих ежемесячных платежей автомобиля, которые нужно внести. Если не указано, используется значение 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Необязательный параметр. Тип объекта <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , указывающий время внесения платежей. Этот аргумент должен быть либо <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> когда нужно платить в конце периода оплаты или <xref uid=&quot;langword_csharp_DueDate.BegOfPeriod&quot; name=&quot;DueDate.BegOfPeriod&quot; href=&quot;&quot;> </xref> когда нужно платить за период с начала. Если не указано, <xref uid=&quot;langword_csharp_DueDate.EndOfPeriod&quot; name=&quot;DueDate.EndOfPeriod&quot; href=&quot;&quot;> </xref> предполагается."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее будущее значение ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  overload: Microsoft.VisualBasic.Financial.FV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее Процентные платежи для данного периода ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  remarks: "Ежегодного платежа представляет собой серию фиксированных денежных выплат. Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).       `Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения. Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.       Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа."
  example:
  - "This example uses the `IPmt` function to calculate how much of a payment is interest when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the interest portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#26](~/add/codesnippet/visualbasic/2fa7f248-74e0-4498-aee1-_1.vb)]"
  syntax:
    content: public static double IPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание процентную ставку за период. Например если получить автомобиль под годовую процентную ставку (APR) размером 10% и ежемесячных платежей, ставка за период — 0,1/12 или 0,0083."
    - id: Per
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание расчетный период в диапазоне от 1 до `NPer`."
    - id: NPer
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание общее количество периодов платежа. Например при внесении ежемесячных платежей на четыре года на автомобиль протяжении имеет всего 4 x 12 (или 48) периодов."
    - id: PV
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание присутствует значение или значение из серии будущих выплат и поступлений на сегодняшний день. Например если для покупки автомобиля сумму кредита представляет текущее значение предстоящих ежемесячных платежей автомобиля, которые нужно внести."
    - id: FV
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание будущее значение или остаток после последней выплаты. Например будущее значение кредиту — $0, так как его значение после последнего платежа. Тем не менее если вы хотите собрать за 18 лет, $ 50 000 является будущее значение. Если не указано, используется значение 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Необязательный параметр. Тип объекта <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , указывающий время внесения платежей. Этот аргумент должен быть либо `DueDate.EndOfPeriod` когда нужно платить в конце периода оплаты или `DueDate.BegOfPeriod` когда нужно платить за период с начала. Если не указано, `DueDate.EndOfPeriod` предполагается."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее Процентные платежи для данного периода ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  overload: Microsoft.VisualBasic.Financial.IPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;= 0 or <code>Per</code> &gt;<code>NPer</code>"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  id: IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее внутреннюю норму прибыли для ряда периодических денежных потоков (выплат и поступлений)."
  remarks: "Внутреннюю норму прибыли является процентную ставку, полученную от вложений, состоящий из выплат и поступлений, возникающие через регулярные интервалы.       `IRR` Функция использует порядок значений в массиве для интерпретации порядок выплат и поступлений. Убедитесь в том, что значения поступления платежей и в верной последовательности. Движение денежных средств за каждый период необязательно должно быть постоянным, как и для ежегодного платежа.       `IRR`вычисляется путем итерации. Начиная со значением `Guess`, `IRR` циклы вычисления, пока не получит результат с точностью 0,00001 процента. Если `IRR` не удается найти результат после 20 пытается подключиться, она завершается."
  example:
  - "In this example, the `IRR` function returns the internal rate of return for a series of five cash flows contained in the array `Values()`. The first array element is a negative cash flow representing business start-up costs. The remaining four cash flows represent positive cash flows for the subsequent four years. `Guess` is the estimated internal rate of return.  \n  \n [!code-vb[VbVbalrMath#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._228_1.vb)]"
  syntax:
    content: public static double IRR (ref double[] ValueArray, double Guess = 0.1);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Обязательный параметр. Массив <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указания денежных значений. Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление)."
    - id: Guess
      type: System.Double
      description: "Необязательный параметр. Объект, задающий значение, можно оценить будут возвращаться <xref uid=&quot;langword_csharp_IRR&quot; name=&quot;IRR&quot; href=&quot;&quot;> </xref>. Если не указано, `Guess` равно 0,1 (10 процентов)."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее внутреннюю норму прибыли для ряда периодических денежных потоков (выплат и поступлений)."
  overload: Microsoft.VisualBasic.Financial.IRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Указаны недопустимые значения аргументов массива или <code> Guess </code> &lt;= -1."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  id: MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указание измененную внутреннюю норму прибыли для ряда периодических денежных потоков (выплат и поступлений)."
  remarks: "Измененную внутреннюю норму прибыли при внутреннюю норму прибыли выплат и поступлений подсчитываются с разной интенсивностью. `MIRR` Функции учитывается как стоимость инвестиций (`FinanceRate`) и процентную ставку реинвестирования денежных средств (`ReinvestRate`).       `FinanceRate` И `ReinvestRatearguments` процентных соотношений, выраженное в виде десятичных значений. Например 12 процентов задаются как 0,12.       `MIRR` Функция использует порядок значений в массиве для интерпретации порядок выплат и поступлений. Убедитесь в том, что значения поступления платежей и в верной последовательности."
  example:
  - "This example uses the `MIRR` function to return the modified internal rate of return for a series of cash flows contained in the array `Values()`. `LoanAPR` represents the financing interest, and `InvAPR` represents the interest rate received on reinvestment.  \n  \n [!code-vb[VbVbalrMath#29](~/add/codesnippet/visualbasic/ba568dc0-432d-4a7b-b1d0-_1.vb)]"
  syntax:
    content: public static double MIRR (ref double[] ValueArray, double FinanceRate, double ReinvestRate);
    parameters:
    - id: ValueArray
      type: System.Double[]
      description: "Обязательный параметр. Массив <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> Указание значения денежных потоков. Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление)."
    - id: FinanceRate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание процентной ставки оплаты как стоимость финансирования."
    - id: ReinvestRate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание процентную ставку доходов от реинвестирования денежных средств."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указание измененную внутреннюю норму прибыли для ряда периодических денежных потоков (выплат и поступлений)."
  overload: Microsoft.VisualBasic.Financial.MIRR*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Rank of <code>ValueArray</code> does not equal 1, <code>FinanceRate</code> = -1, or <code>ReinvestRate</code> = -1"
  - type: System.DivideByZeroException
    commentId: T:System.DivideByZeroException
    description: "Произошло деление на ноль."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> определяющее количество периодов для ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  remarks: "Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени. Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).       Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа."
  example:
  - "This example uses the `NPer` function to return the number of periods during which payments must be made to pay off a loan whose value is contained in `PVal`. Also provided are the interest percentage rate per period (`APR / 12`), the payment (`Payment`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#19](~/add/codesnippet/visualbasic/57cf6dfc-5811-4703-a937-_1.vb)]"
  syntax:
    content: public static double NPer (double Rate, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание процентную ставку за период. Например если получить автомобиль под годовую процентную ставку (APR) размером 10% и ежемесячных платежей, ставка за период — 0,1/12 или 0,0083."
    - id: Pmt
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание выплаты для каждого периода. Обычно платежи содержат капиталу и процентам, которые не изменяются на протяжении периода выплат."
    - id: PV
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание присутствует значение или значение из серии будущих выплат и поступлений на сегодняшний день. Например если для покупки автомобиля сумму кредита представляет текущее значение предстоящих ежемесячных платежей автомобиля, которые нужно внести."
    - id: FV
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание будущее значение или остаток после внесения последнего платежа. Например будущее значение кредиту — $0, так как его значение после последнего платежа. Тем не менее если вы хотите собрать за 18 лет, $ 50 000 является будущее значение. Если не указано, используется значение 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Необязательный параметр. Тип объекта <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , указывающий время внесения платежей. Этот аргумент должен быть либо `DueDate.EndOfPeriod` когда нужно платить в конце периода оплаты или `DueDate.BegOfPeriod` когда нужно платить за период с начала. Если не указано, `DueDate.EndOfPeriod` предполагается."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> определяющее количество периодов для ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  overload: Microsoft.VisualBasic.Financial.NPer*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Rate</code>= 0 and <code>Pmt</code> = 0"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  id: NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указание чистую приведенную стоимость вложений на основе ряда периодических денежных потоков (выплат и поступлений) и учетной ставки."
  remarks: "Чистую приведенную стоимость вложений — это текущее значение из серии будущих выплат и поступлений.       `NPV` Функция использует порядок значений в массиве для интерпретации порядок выплат и поступлений. Убедитесь в том, что значения поступления платежей и в верной последовательности.       `NPV` Инвестиции начинается за один период до даты первого значения денежных и оканчивается последней значение денежного потока в массиве.       Расчет чистой текущей стоимости основан на будущих денежных потоков. Если первый денежные потоки возникает в начале первого периода, первое значение необходимо добавить в значение, возвращаемое `NPV` и не должно включаться в значения денежных `ValueArray`.       `NPV` Функция подобна `PV` функции (текущее значение), за исключением того, что `PV` функция обеспечивает денежных потоков начать в конце или в начале периода. В отличие от переменной `NPV` значений денежных `PV` денежных потоков, которые должны быть постоянными на протяжении капиталовложения."
  example:
  - "This example uses the `NPV` function to return the net present value for a series of cash flows contained in the array `values()`. The return value, stored in `FixedRetRate`, represents the fixed internal rate of return.  \n  \n [!code-vb[VbVbalrMath#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._103_1.vb)]"
  syntax:
    content: public static double NPV (double Rate, ref double[] ValueArray);
    parameters:
    - id: Rate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание скидка по продолжительность времени, в виде десятичного числа."
    - id: ValueArray
      type: System.Double[]
      description: "Обязательный параметр. Массив <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указания денежных значений. Этот массив должен содержать по крайней мере одно отрицательное значение (платеж) и одно положительное значение (поступление)."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указание чистую приведенную стоимость вложений на основе ряда периодических денежных потоков (выплат и поступлений) и учетной ставки."
  overload: Microsoft.VisualBasic.Financial.NPV*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>ValueArray</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>, rank of <code>ValueArray</code> &lt;&gt; 1, or <code>Rate</code> = -1"
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее выплату для ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  remarks: "Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени. Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).       `Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения. Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.       Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа."
  example:
  - "This example uses the `Pmt` function to return the monthly payment for a loan during a fixed period. Given are the interest percentage rate per period (`APR / 12`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period `(PayType).`  \n  \n [!code-vb[VbVbalrMath#7](~/add/codesnippet/visualbasic/7dc3a2f6-c47c-4a51-b799-_1.vb)]"
  syntax:
    content: public static double Pmt (double Rate, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает процентную ставку для каждого периода. Например если получить автомобиль под годовую процентную ставку (APR) размером 10% и ежемесячных платежей, ставка за период — 0,1/12 или 0,0083."
    - id: NPer
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Определяет общее количество периодов внесения платежей. Например при внесении ежемесячных платежей на четыре года на автомобиль протяжении имеет всего 4 x 12 (или 48) периодов."
    - id: PV
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает значение присутствует (или общую сумму), ряд платежей в будущем равноценна. Например если для покупки автомобиля сумму кредита представляет текущее значение предстоящих ежемесячных платежей автомобиля, которые нужно внести."
    - id: FV
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание будущее значение или остаток после внесения последнего платежа. Например будущее значение кредиту — $0, так как его значение после последнего платежа. Тем не менее если требуется собрать за 18 лет образования ребенку $ 50 000 является будущее значение. Если не указано, используется значение 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Необязательный параметр. Тип объекта <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , указывающий время внесения платежей. Этот аргумент должен быть либо `DueDate.EndOfPeriod` когда нужно платить в конце периода оплаты или `DueDate.BegOfPeriod` когда нужно платить за период с начала. Если не указано, `DueDate.EndOfPeriod` предполагается."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее выплату для ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  overload: Microsoft.VisualBasic.Financial.Pmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> Указание основного для данного периода ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  remarks: "Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени. Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).       `Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения. Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.       Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа."
  example:
  - "This example uses the `PPmt` function to calculate how much of a payment for a specific period is principal when all the payments are of equal value. Given are the interest percentage rate per period (`APR / 12`), the payment period for which the principal portion is desired (`Period`), the total number of payments (`TotPmts`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), and a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`).  \n  \n [!code-vb[VbVbalrMath#24](~/add/codesnippet/visualbasic/43623fd2-2acb-4eab-9abc-_1.vb)]"
  syntax:
    content: public static double PPmt (double Rate, double Per, double NPer, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает процентную ставку для каждого периода. Например если получить автомобиль под годовую процентную ставку (APR) размером 10% и ежемесячных платежей, ставка за период — 0,1/12 или 0,0083."
    - id: Per
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>задает расчетный период в диапазоне от 1 до `NPer`."
    - id: NPer
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Определяет общее количество периодов внесения платежей. Например при внесении ежемесячных платежей на четыре года на автомобиль протяжении имеет всего 4 x 12 (или 48) периодов."
    - id: PV
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает текущее значение из серии будущих выплат и поступлений. Например если для покупки автомобиля сумму кредита представляет текущее значение предстоящих ежемесячных платежей автомобиля, которые нужно внести."
    - id: FV
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание будущее значение или остаток после внесения последнего платежа. Например будущее значение кредиту — $0, так как его значение после последнего платежа. Тем не менее если вы хотите собрать за 18 лет, $ 50 000 является будущее значение. Если не указано, используется значение 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Необязательный параметр. Тип объекта <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , указывающий время внесения платежей. Этот аргумент должен быть либо `DueDate.EndOfPeriod` когда нужно платить в конце периода оплаты или `DueDate.BegOfPeriod` когда нужно платить за период с начала. Если не указано, `DueDate.EndOfPeriod` предполагается."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> Указание основного для данного периода ежегодного платежа на основе периодических фиксированных выплат и фиксированной процентной ставки."
  overload: Microsoft.VisualBasic.Financial.PPmt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Per</code>&lt;=0 or <code>Per</code> &gt; <code>NPer</code>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  id: PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее текущее значение ежегодного платежа на основе фиксированных периодических платежей и фиксированной процентной ставки."
  remarks: "Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени. Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).       `Rate` И `NPer` нужно вычислять с помощью периодов платежей, выраженных в одинаковых единицах измерения. Например если `Rate` вычисляется с использованием месяцев, `NPer` должен также быть выражен в месяцах.       Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа."
  example:
  - "In this example, the `PV` function returns the present value of an $1,000,000 annuity that will provide $50,000 a year for the next 20 years. Provided are the expected annual percentage rate (`APR`), the total number of payments (`TotPmts`), the amount of each payment (`YrIncome`), the total future value of the investment (`FVal`), and a number that indicates whether each payment is made at the beginning or end of the payment period (`PayType`). Note that `YrIncome` is a negative number because it represents cash paid out from the annuity each year.  \n  \n [!code-vb[VbVbalrMath#25](~/add/codesnippet/visualbasic/0175a2c1-5f6c-4f6b-9587-_1.vb)]"
  syntax:
    content: public static double PV (double Rate, double NPer, double Pmt, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod);
    parameters:
    - id: Rate
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает процентную ставку для каждого периода. Например если получить автомобиль под годовую процентную ставку (APR) размером 10% и ежемесячных платежей, ставка за период — 0,1/12 или 0,0083."
    - id: NPer
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Определяет общее количество периодов внесения платежей. Например при внесении ежемесячных платежей на четыре года на автомобиль протяжении имеет 4 x 12 (или 48) периодов."
    - id: Pmt
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает выплаты для каждого периода. Обычно платежи содержат капиталу и процентам, которые не изменяются на протяжении периода выплат."
    - id: FV
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает будущих значение остатка после последней выплаты. Например будущее значение кредиту — $0, так как его значение после последнего платежа. Тем не менее если вы хотите собрать за 18 лет, $ 50 000 является будущее значение. Если не указано, используется значение 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Необязательный параметр. Тип объекта <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , указывающий время внесения платежей. Этот аргумент должен быть либо `DueDate.EndOfPeriod` когда нужно платить в конце периода оплаты или `DueDate.BegOfPeriod` когда нужно платить за период с начала. Если не указано, `DueDate.EndOfPeriod` предполагается."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее текущее значение ежегодного платежа на основе фиксированных периодических платежей и фиксированной процентной ставки."
  overload: Microsoft.VisualBasic.Financial.PV*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  id: Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указание процентную ставку для каждого периода ежегодного платежа."
  remarks: "Ежегодного платежа представляет собой серию фиксированных денежных выплат за период времени. Это может быть заем (например ипотеки) или инвестиций (например ежемесячный сберегательный план).       Все аргументы выплаченные (такие как вклады на сберегательный счет) представляются отрицательными числами; денежных средств, полученных (например дивидендов) будет представлен положительные числа.       `Rate`вычисляется путем итерации. Начиная со значением `Guess`, `Rate` циклы вычисления, пока не получит результат с точностью 0,00001 процента. Если `Rate` не удается найти результат после 20 пытается подключиться, она завершается. Если guess составляет 10 процентов и `Rate` завершается ошибкой, попробуйте другое значение для `Guess`."
  example:
  - "This example uses the `Rate` function to calculate the interest rate of a loan given the total number of payments (`TotPmts`), the amount of the loan payment (`Payment`), the present value or principal of the loan (`PVal`), the future value of the loan (`FVal`), a number that indicates whether the payment is due at the beginning or end of the payment period (`PayType`), and an approximation of the expected interest rate (`Guess`).  \n  \n [!code-vb[VbVbalrMath#2](~/add/codesnippet/visualbasic/ea19cd36-8223-44a7-9131-_1.vb)]"
  syntax:
    content: public static double Rate (double NPer, double Pmt, double PV, double FV = 0, Microsoft.VisualBasic.DueDate Due = Microsoft.VisualBasic.DueDate.EndOfPeriod, double Guess = 0.1);
    parameters:
    - id: NPer
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Определяет общее количество периодов внесения платежей. Например при внесении ежемесячных платежей на четыре года на автомобиль протяжении имеет всего 4 * 12 (или 48) периодов."
    - id: Pmt
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает выплаты для каждого периода. Обычно платежи содержат капиталу и процентам, не изменяются на протяжении платежа."
    - id: PV
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает текущую значение или значение из серии будущих выплат и поступлений на сегодняшний день. Например если для покупки автомобиля сумму кредита представляет текущее значение предстоящих ежемесячных платежей автомобиля, которые нужно внести."
    - id: FV
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указывает будущих значение остатка после последней выплаты. Например будущее значение кредиту — $0, так как его значение после последнего платежа. Тем не менее если вы хотите собрать за 18 лет, $ 50 000 является будущее значение. Если не указано, используется значение 0."
    - id: Due
      type: Microsoft.VisualBasic.DueDate
      description: "Необязательный параметр. Тип объекта <xref href=&quot;Microsoft.VisualBasic.DueDate&quot;> </xref> , указывающий время внесения платежей. Этот аргумент должен быть либо `DueDate.EndOfPeriod` когда нужно платить в конце периода оплаты или `DueDate.BegOfPeriod` когда нужно платить за период с начала. Если не указано, `DueDate.EndOfPeriod` предполагается."
    - id: Guess
      type: System.Double
      description: "Необязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание значения, можно оценить возвращается <xref uid=&quot;langword_csharp_Rate&quot; name=&quot;Rate&quot; href=&quot;&quot;> </xref>. Если не указано, `Guess` равно 0,1 (10 процентов)."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указание процентную ставку для каждого периода ежегодного платежа."
  overload: Microsoft.VisualBasic.Financial.Rate*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>NPer</code> &lt;= 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  id: SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее линейную амортизацию ресурса за один период."
  remarks: "Период амортизации должны задаваться в одну и ту же единицу как `Life` аргумент. Все аргументы должны быть положительными числами."
  example:
  - "This example uses the `SLN` function to return the straight-line depreciation of an asset for a single period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._10_1.vb)]"
  syntax:
    content: public static double SLN (double Cost, double Salvage, double Life);
    parameters:
    - id: Cost
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>задает начальную стоимость ресурса."
    - id: Salvage
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>При указании значения в конце срока полезного использования актива."
    - id: Life
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание срок эксплуатации актива."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указывающее линейную амортизацию ресурса за один период."
  overload: Microsoft.VisualBasic.Financial.SLN*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Life</code> = 0."
  platform:
  - net462
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  id: SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  langs:
  - csharp
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic
  summary: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указание сумма годам амортизацию ресурса за указанный период."
  remarks: "`Life` И `Period` аргументы должны задаваться в одинаковых единицах измерения. Например если `Life` задается в месяцах, `Period` также должен быть задан в месяцах. Все аргументы должны быть положительными числами."
  example:
  - "This example uses the `SYD` function to return the depreciation of an asset for a specified period given the asset's initial cost (`InitCost`), the salvage value at the end of the asset's useful life (`SalvageVal`), and the total life of the asset in years (`LifeTime`).  \n  \n [!code-vb[VbVbalrMath#3](~/add/codesnippet/visualbasic/9fc7d5a0-c6cb-4861-b899-_1.vb)]"
  syntax:
    content: public static double SYD (double Cost, double Salvage, double Life, double Period);
    parameters:
    - id: Cost
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>задает начальную стоимость ресурса."
    - id: Salvage
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>При указании значения в конце срока полезного использования актива."
    - id: Life
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание срок эксплуатации актива."
    - id: Period
      type: System.Double
      description: "Обязательный параметр. <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;></xref>Указание периода актива рассчитывается снижение стоимости."
    return:
      type: System.Double
      description: "Возвращает <xref uid=&quot;langword_csharp_Double&quot; name=&quot;Double&quot; href=&quot;&quot;> </xref> указание сумма годам амортизацию ресурса за указанный период."
  overload: Microsoft.VisualBasic.Financial.SYD*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>Salvage</code>&lt; 0, <code>Period</code> &gt; <code>Life</code>, or <code>Period</code> &lt;=0."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.DivideByZeroException
  isExternal: true
  name: System.DivideByZeroException
- uid: Microsoft.VisualBasic.Financial.DDB(System.Double,System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB(Double,Double,Double,Double,Double)
  nameWithType: Financial.DDB(Double,Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.DDB(Double,Double,Double,Double,Double)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Microsoft.VisualBasic.Financial.FV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.FV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.FV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.DueDate
  parent: Microsoft.VisualBasic
  isExternal: false
  name: DueDate
  nameWithType: DueDate
  fullName: Microsoft.VisualBasic.DueDate
- uid: Microsoft.VisualBasic.Financial.IPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.IPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.IRR(System.Double[]@,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR(Double[],Double)
  nameWithType: Financial.IRR(Double[],Double)
  fullName: Microsoft.VisualBasic.Financial.IRR(Double[],Double)
- uid: System.Double[]
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double[]
  spec.csharp:
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: Double[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Financial.MIRR(System.Double[]@,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR(Double[],Double,Double)
  nameWithType: Financial.MIRR(Double[],Double,Double)
  fullName: Microsoft.VisualBasic.Financial.MIRR(Double[],Double,Double)
- uid: Microsoft.VisualBasic.Financial.NPer(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.NPer(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.NPer(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.NPV(System.Double,System.Double[]@)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV(Double,Double[])
  nameWithType: Financial.NPV(Double,Double[])
  fullName: Microsoft.VisualBasic.Financial.NPV(Double,Double[])
- uid: Microsoft.VisualBasic.Financial.Pmt(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.Pmt(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.Pmt(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PPmt(System.Double,System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt(Double,Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PPmt(Double,Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.PV(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV(Double,Double,Double,Double,DueDate)
  nameWithType: Financial.PV(Double,Double,Double,Double,DueDate)
  fullName: Microsoft.VisualBasic.Financial.PV(Double,Double,Double,Double,DueDate)
- uid: Microsoft.VisualBasic.Financial.Rate(System.Double,System.Double,System.Double,System.Double,Microsoft.VisualBasic.DueDate,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate(Double,Double,Double,Double,DueDate,Double)
  nameWithType: Financial.Rate(Double,Double,Double,Double,DueDate,Double)
  fullName: Microsoft.VisualBasic.Financial.Rate(Double,Double,Double,Double,DueDate,Double)
- uid: Microsoft.VisualBasic.Financial.SLN(System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN(Double,Double,Double)
  nameWithType: Financial.SLN(Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SLN(Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.SYD(System.Double,System.Double,System.Double,System.Double)
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD(Double,Double,Double,Double)
  nameWithType: Financial.SYD(Double,Double,Double,Double)
  fullName: Microsoft.VisualBasic.Financial.SYD(Double,Double,Double,Double)
- uid: Microsoft.VisualBasic.Financial.DDB*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: DDB
  nameWithType: Financial.DDB
- uid: Microsoft.VisualBasic.Financial.FV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: FV
  nameWithType: Financial.FV
- uid: Microsoft.VisualBasic.Financial.IPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IPmt
  nameWithType: Financial.IPmt
- uid: Microsoft.VisualBasic.Financial.IRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: IRR
  nameWithType: Financial.IRR
- uid: Microsoft.VisualBasic.Financial.MIRR*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: MIRR
  nameWithType: Financial.MIRR
- uid: Microsoft.VisualBasic.Financial.NPer*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPer
  nameWithType: Financial.NPer
- uid: Microsoft.VisualBasic.Financial.NPV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: NPV
  nameWithType: Financial.NPV
- uid: Microsoft.VisualBasic.Financial.Pmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Pmt
  nameWithType: Financial.Pmt
- uid: Microsoft.VisualBasic.Financial.PPmt*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PPmt
  nameWithType: Financial.PPmt
- uid: Microsoft.VisualBasic.Financial.PV*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: PV
  nameWithType: Financial.PV
- uid: Microsoft.VisualBasic.Financial.Rate*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: Rate
  nameWithType: Financial.Rate
- uid: Microsoft.VisualBasic.Financial.SLN*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SLN
  nameWithType: Financial.SLN
- uid: Microsoft.VisualBasic.Financial.SYD*
  parent: Microsoft.VisualBasic.Financial
  isExternal: false
  name: SYD
  nameWithType: Financial.SYD
