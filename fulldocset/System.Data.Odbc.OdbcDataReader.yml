### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcDataReader
  id: OdbcDataReader
  children:
  - System.Data.Odbc.OdbcDataReader.Close
  - System.Data.Odbc.OdbcDataReader.Depth
  - System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  - System.Data.Odbc.OdbcDataReader.FieldCount
  - System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetEnumerator
  - System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  - System.Data.Odbc.OdbcDataReader.GetSchemaTable
  - System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  - System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  - System.Data.Odbc.OdbcDataReader.HasRows
  - System.Data.Odbc.OdbcDataReader.IsClosed
  - System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  - System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  - System.Data.Odbc.OdbcDataReader.Item(System.String)
  - System.Data.Odbc.OdbcDataReader.NextResult
  - System.Data.Odbc.OdbcDataReader.Read
  - System.Data.Odbc.OdbcDataReader.RecordsAffected
  langs:
  - csharp
  name: OdbcDataReader
  nameWithType: OdbcDataReader
  fullName: System.Data.Odbc.OdbcDataReader
  type: Class
  summary: "Предоставляет способ чтения однопроходные потоки строк данных из источника данных. Этот класс не наследуется."
  remarks: "Чтобы создать OdbcDataReader, необходимо вызвать метод <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>метод <xref:System.Data.Odbc.OdbcCommand>объекта, вместо непосредственного использования конструктора.</xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>       При использовании OdbcDataReader соответствующего <xref:System.Data.Odbc.OdbcConnection>является занят обслуживающий OdbcDataReader, и никакие другие операции, которые могут выполняться на <xref:System.Data.Odbc.OdbcConnection>отличный от закрывает его.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection> Это состояние сохраняется до <xref:System.Data.Odbc.OdbcDataReader.Close%2A>вызывается метод OdbcDataReader.</xref:System.Data.Odbc.OdbcDataReader.Close%2A> Например не удается получить выходные параметры можно только после вызова метода <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</xref:System.Data.Odbc.OdbcDataReader.Close%2A>       Изменения, внесенные в результирующий набор другим процессом или потоком во время чтения данных, могут быть видны пользователю OdbcDataReader. Однако точное поведение зависит драйвер и зависит от времени.       <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>и <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>только свойства, которые могут быть вызваны после закрытия OdbcDataReader.</xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A></xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A> В некоторых случаях необходимо вызывать <xref:System.Data.Odbc.OdbcDataReader.Close%2A>перед вызовом <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>.</xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A> </xref:System.Data.Odbc.OdbcDataReader.Close%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an OdbcDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OdbcDataReader, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-vb[Classic WebData OdbcDataReader#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcd_0_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcd_0_1.cs)]"
  syntax:
    content: 'public sealed class OdbcDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.GetData(System.Int32)
  - System.Data.Common.DbDataReader.GetDbDataReader(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.Data.Common.DbDataReader.VisibleFieldCount
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Close
  id: Close
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OdbcDataReader.Close()
  fullName: System.Data.Odbc.OdbcDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Закрывает <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> объекта."
  remarks: "Когда вы закончите необходимо явно вызвать метод Close с помощью <xref:System.Data.Odbc.OdbcDataReader>использовать связанный <xref:System.Data.Odbc.OdbcConnection>для других целей.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcDataReader>      Настроек [!CAUTION] настроек не следует вызывать `Close` или `Dispose` на соединение, DataReader или любого другого управляемого объекта в `Finalize` метод класса. Метод завершения следует только освобождать неуправляемые ресурсы, которыми ваш класс непосредственно владеет. Если класс не владеет все неуправляемые ресурсы, не включайте `Finalize` метод в определении класса. Дополнительные сведения см. в разделе [мусора](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_4_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_4_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.Odbc.OdbcDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Depth
  id: Depth
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OdbcDataReader.Depth
  fullName: System.Data.Odbc.OdbcDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение, указывающее глубину вложенности для текущей строки."
  remarks: "Внешняя таблица имеет нулевую глубину вложенности."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "Глубина вложенности для текущей строки."
  overload: System.Data.Odbc.OdbcDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: OdbcDataReader.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcDataReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Для добавления."
  overload: System.Data.Odbc.OdbcDataReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.FieldCount
  id: FieldCount
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
  fullName: System.Data.Odbc.OdbcDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает число столбцов в текущей строке."
  remarks: "Включает скрытые поля. Используйте <xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>для исключения скрытых полей.</xref:System.Data.Common.DbDataReader.VisibleFieldCount%2A>       После выполнения запроса, который не возвращает строк FieldCount возвращает 0."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Если столбец отсутствует в допустимом наборе записей 0; в противном случае число столбцов в текущей записи. Значение по умолчанию — -1."
  overload: System.Data.Odbc.OdbcDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Нет текущего подключения к источнику данных."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OdbcDataReader.GetBoolean(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде логического значения."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается вызов метода завершится ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Boolean
      description: "Логическое значение, значение столбца."
  overload: System.Data.Odbc.OdbcDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OdbcDataReader.GetByte(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде байта."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается, вызов метода завершается ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Byte
      description: "Значение указанного столбца в виде байта."
  overload: System.Data.Odbc.OdbcDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Считывает поток байтов из указанного смещения столбца в буфер как массив, начиная с конкретного смещения буфера."
  remarks: "Метод GetBytes возвращает число доступных байтов в поле. В большинстве случаев это точная длина поля. Однако возвращенное число может быть меньше фактической длины поля, если GetBytes уже использовался для получения байтов из поля. Это может быть так, например, если <xref:System.Data.Odbc.OdbcDataReader>читает большую структуру данных в буфер.</xref:System.Data.Odbc.OdbcDataReader> Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       При передаче буфера, который имеет значение null, GetBytes возвращает длину поля в байтах.       Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается вызов метода завершится ошибкой.      Настроек [!NOTE] настроек будет создано исключение, если значение `bufferIndex` находится за пределами массива. Данные не будут считываться и метод возвратит 0."
  syntax:
    content: public override long GetBytes (int i, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    - id: dataIndex
      type: System.Int64
      description: "Индекс внутри поля, с которого начинается операция чтения."
    - id: buffer
      type: System.Byte[]
      description: "Буфер, в который необходимо считать поток байтов."
    - id: bufferIndex
      type: System.Int32
      description: "Индекс в `buffer` которого начинается операция записи."
    - id: length
      type: System.Int32
      description: "Число байтов для чтения."
    return:
      type: System.Int64
      description: "Фактическое число считанных байтов."
  overload: System.Data.Odbc.OdbcDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OdbcDataReader.GetChar(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца как символ."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается, вызов метода завершается ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override char GetChar (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Char
      description: "Значение указанного столбца в виде символа."
  overload: System.Data.Odbc.OdbcDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Считывает поток символов из указанного смещения столбца в буфер как массив, начиная с конкретного смещения буфера."
  remarks: "GetChars возвращает количество доступных символов в поле. В большинстве случаев это точная длина поля. Однако возвращенное число может быть меньше фактической длины поля, если GetChars уже использовался для получения символов из поля. Это может быть так, например, если <xref:System.Data.Odbc.OdbcDataReader>читает большую структуру данных в буфер.</xref:System.Data.Odbc.OdbcDataReader> Дополнительные сведения см. в разделе `SequentialAccess` для <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       При передаче буфера, который имеет значение null, GetChars возвращает длину поля в символах.       Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается вызов метода завершится ошибкой.      Настроек [!NOTE] настроек будет создано исключение, если значение `bufferIndex` находится за пределами массива. Данные не будут считываться и метод возвратит 0."
  syntax:
    content: public override long GetChars (int i, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    - id: dataIndex
      type: System.Int64
      description: "Индекс в строке, с которого начинается операция чтения."
    - id: buffer
      type: System.Char[]
      description: "Буфер, в который копируются данные."
    - id: bufferIndex
      type: System.Int32
      description: "Индекс в `buffer` которого начинается операция записи."
    - id: length
      type: System.Int32
      description: "Число символов для чтения."
    return:
      type: System.Int64
      description: "Фактическое число считанных символов."
  overload: System.Data.Odbc.OdbcDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OdbcDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает имя типа источника данных."
  syntax:
    content: public override string GetDataTypeName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.String
      description: "Имя исходного типа данных."
  overload: System.Data.Odbc.OdbcDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  id: GetDate(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDate(Int32)
  nameWithType: OdbcDataReader.GetDate(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDate(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде <xref:System.DateTime>объекта.</xref:System.DateTime>"
  syntax:
    content: public DateTime GetDate (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.DateTime
      description: "Значение указанного столбца в виде <xref:System.DateTime>объекта.</xref:System.DateTime>"
  overload: System.Data.Odbc.OdbcDataReader.GetDate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OdbcDataReader.GetDateTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде <xref:System.DateTime>объекта.</xref:System.DateTime>"
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается вызов метода завершится ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.DateTime
      description: "Значение указанного столбца в виде <xref:System.DateTime>объекта.</xref:System.DateTime>"
  overload: System.Data.Odbc.OdbcDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OdbcDataReader.GetDecimal(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде <xref:System.Decimal>объекта.</xref:System.Decimal>"
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается вызов метода завершится ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>       GetDecimal имеет максимальная точность 28. Попытка извлечь десятичные данные с большей точностью вызовет исключение. Одним из решений будет изменение запроса для приведения десятичного типа меньшему типу данных или преобразование в строки или двоичного файла."
  syntax:
    content: public override decimal GetDecimal (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Decimal
      description: "Значение указанного столбца в виде <xref:System.Decimal>объекта.</xref:System.Decimal>"
  overload: System.Data.Odbc.OdbcDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OdbcDataReader.GetDouble(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца как число с плавающей запятой двойной точности."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается, вызов метода завершается ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Double
      description: "Значение указанного столбца в виде числа с плавающей запятой двойной точности."
  overload: System.Data.Odbc.OdbcDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OdbcDataReader.GetEnumerator()
  fullName: System.Data.Odbc.OdbcDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает <xref:System.Collections.IEnumerator>может использоваться для итерации строк в модуле чтения данных.</xref:System.Collections.IEnumerator>"
  remarks: "Несмотря на то, что этот метод можно использовать для получения явный перечислитель, в языках, которые поддерживают `foreach` конструкции, проще использовать циклы для перебора строк в модуле чтения данных."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Может использоваться для итерации строк в модуле чтения данных.</xref:System.Collections.IEnumerator>"
  overload: System.Data.Odbc.OdbcDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OdbcDataReader.GetFieldType(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает <xref:System.Type>который является типом данных объекта.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Type
      description: "<xref:System.Type>Который является типом данных объекта.</xref:System.Type>"
  overload: System.Data.Odbc.OdbcDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OdbcDataReader.GetFloat(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца как число с плавающей запятой одиночной точности."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается вызов метода завершится ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Single
      description: "Значение указанного столбца в виде числа с плавающей запятой одиночной точности."
  overload: System.Data.Odbc.OdbcDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OdbcDataReader.GetGuid(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде глобально уникальный идентификатор (GUID)."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается, вызов метода завершается ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Guid
      description: "Значение указанного столбца в виде идентификатора GUID."
  overload: System.Data.Odbc.OdbcDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OdbcDataReader.GetInt16(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде 16-разрядное целое число со знаком."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается, вызов метода завершается ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Int16
      description: "Значение указанного столбца в виде 16-разрядное целое число со знаком."
  overload: System.Data.Odbc.OdbcDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OdbcDataReader.GetInt32(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде 32-разрядное целое число со знаком."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается, вызов метода завершается ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Int32
      description: "Значение указанного столбца в виде 32-разрядное целое число со знаком."
  overload: System.Data.Odbc.OdbcDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OdbcDataReader.GetInt64(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде 64-разрядное целое число со знаком."
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается, вызов метода завершается ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Int64
      description: "Значение указанного столбца в виде 64-разрядное целое число со знаком."
  overload: System.Data.Odbc.OdbcDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OdbcDataReader.GetName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает имя указанного столбца."
  syntax:
    content: public override string GetName (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.String
      description: "Строка, представляющая имя указанного столбца."
  overload: System.Data.Odbc.OdbcDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OdbcDataReader.GetOrdinal(String)
  fullName: System.Data.Odbc.OdbcDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает порядковый номер столбца, заданному имени столбца."
  remarks: "GetOrdinal сначала выполняет поиск с учетом регистра. В случае неудачи выполняется второй поиска без учета регистра. Метод создает `IndexOutOfRange` исключение, если не найден отсчитываемый от нуля порядковый номер столбца.       GetOrdinal не учитывает ширину японской азбуки.       Поскольку порядковым числительным более эффективны, чем поиск по имени, рекомендуется использовать метод GetOrdinal в цикле. Вместо этого вызовите GetOrdinal один раз, а затем присвоить результаты целочисленной переменной для использования в цикле."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-vb[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_3_1.vb)]\n [!code-cs[Classic WebData OdbcDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_3_1.cs)]"
  syntax:
    content: public override int GetOrdinal (string value);
    parameters:
    - id: value
      type: System.String
      description: "Имя столбца."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
  overload: System.Data.Odbc.OdbcDataReader.GetOrdinal*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OdbcDataReader.GetSchemaTable()
  fullName: System.Data.Odbc.OdbcDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает <xref href=&quot;System.Data.DataTable&quot;> </xref> , описывающий метаданные столбца <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref>."
  remarks: "Метод GetSchemaTable возвращает метаданные о каждом столбце в следующем порядке: | Столбец DataReader | Описание |   |-----------------------|-----------------|   | ColumnName | Имя столбца; оно не может быть уникальным. Если не удается определить имя столбца, возвращается значение null. Это имя всегда отражает последнее именование столбца в текущем представлении или команды в тексте. |   | ColumnOrdinal | Отсчитываемый от нуля порядковый номер столбца. Этот столбец не может содержать значение null. |   | ColumnSize | Максимально возможная длина значения в столбце. Для столбцов, использующих тип данных фиксированной длины, это размер типа данных. |   | NumericPrecision | Если <xref:System.Data.DbType>является числовым типом данных, это максимальная точность столбца.</xref:System.Data.DbType> Точность зависит от определения столбца. Если <xref:System.Data.DbType>не числовые данные типом, не используйте данные в этом столбце.</xref:System.Data.DbType> Если основной драйвер ODBC возвращает значение точности для типа нечисловые данные, это значение используется в таблице схемы. |   | NumericScale | Если <xref:System.Data.DbType>является <xref:System.Data.DbType>, количество цифр справа от десятичной запятой.</xref:System.Data.DbType> </xref:System.Data.DbType> В противном случае это значение null. Если основной драйвер ODBC возвращает значение точности для типа нечисловые данные, это значение используется в таблице схемы. |   | Тип данных | Сопоставляется с типом среды выполнения <xref:System.Data.DbType>. |   | ProviderType | Тип основного драйвера. |   | IsLong | `true` Если столбец содержит большой двоичный объект (BLOB), содержащий данные очень большой длины.</xref:System.Data.DbType> Определение очень большого объема данных, относящиеся к драйверу. |   | AllowDBNull | `true` если потребитель может установить для столбца значение null или если драйвер не может определить, может ли потребитель задать столбец значение null. В противном случае `false`. Столбец может содержать значения null, даже если он не может быть присвоено значение null. |   | IsReadOnly | `true` Если столбец не может быть изменен; в противном случае `false`. |   | IsRowVersion | Значение, если столбец содержит постоянный идентификатор строки, не может быть записан и не имеет смысла значения за исключением удостоверений строки. |   | IsUnique | `true`: Никакие две строки в базовой таблице (таблица, возвращаемая в BaseTableName) может иметь то же значение в этом столбце. IsUnique гарантированно `true` Если столбец представляет собой ключ сам по себе, или если имеется ограничение типа UNIQUE, которое применяется только к этому столбцу.<br /><br /> `false`: Столбец может содержать повторяющиеся значения в базовой таблице. Значение по умолчанию для этого столбца — `false`. |   | IsKey | `true`: Столбец является элементом набора столбцов в наборе строк, в совокупности уникально идентифицировать строку. Набор столбцов с IsKey присвоено `true` должен однозначно идентифицировать строку в наборе строк. Нет необходимости, этот набор столбцов является минимальным набором столбцов. Этот набор столбцов может быть создан из первичного ключа базовой таблицы, уникального ограничения или уникального индекса.<br /><br /> `false`: Столбец не требуется для уникальной идентификации строки. |   | IsAutoIncrement | `true` , если столбец присваивает значения новым строкам с фиксированным приращением; в противном случае `false`. Значение по умолчанию для этого столбца — `false`. |   | BaseSchemaName | Имя схемы в источнике данных, содержащей столбец. Имеет значение NULL, если не удается определить имя базового каталога. Значение по умолчанию для этого столбца — значение null. |   | BaseCatalogName | Имя каталога в хранилище данных, содержащем столбец. Имеет значение NULL, если не удается определить имя базового каталога. Значение по умолчанию для этого столбца — значение null. |   | BaseTableName | Имя таблицы или представления в хранилище данных, содержащем столбец. Значение null, если не удается определить имя базовой таблицы. По умолчанию этот столбец имеет значение null. |   | BaseColumnName | Имя столбца в хранилище данных. Это может отличаться от имени столбца, возвращаемого в столбце ColumnName, если используется псевдоним. Значение null, если невозможно определить имя базового столбца или если столбец набора строк является производным, но не идентично, хранилище столбцов в данных. Значение по умолчанию для этого столбца — значение null. |       Для каждого столбца в результирующем наборе возвращается строка.       Поставщик данных .NET Framework для ODBC предполагает, что метаданные доступна, от драйвера ODBC после одного из **SQLPrepare**, **SQLExecute**, или **SQLExecuteDirect** вызываются функции. Для «SchemaOnly» команды поведение работал правильно, **SQLPrepare** должен возвращать сведения о необходимых метаданных. Не все драйверы ODBC поддерживают эту функцию или возвращают сведения о метаданных. В этих случаях часть или все данные в SchemaTable будет отсутствовать. После вызова метода **SQLPrepare**, поставщик данных вызывает функцию ODBC **SQLColAttribute** функцию, чтобы определить сведения метаданных, связанных с каждым столбцом в результатах запроса (например, IsLong, IsUnique, AllowDBNull, BaseTableName, BaseColumnName). Если основной драйвер не возвращает некоторые из этих сведений, соответствующие значения в SchemaTable не будут установлены правильно.       Поставщик данных .NET Framework для ODBC также вызывает **SQLPrimaryKeys** для получения сведения о ключах для каждой таблицы. Если основной драйвер ODBC не поддерживает эту функцию, поставщик данных вызывает **SQLStatistics** и выбирает один из уникальных индексов в качестве первичного ключа для таблицы. Это может не всегда возвратить желаемые результаты.       <xref:System.Data.Odbc.OdbcCommandBuilder>требуется корректная Идентификация первичных ключей таблицы для правильной работы.</xref:System.Data.Odbc.OdbcCommandBuilder> Если значение BaseTableName не возвращается для каждого столбца в результатах запроса, поставщик данных .NET Framework для ODBC пытается выполнить синтаксический анализ инструкции SQL, чтобы найти имена таблиц, участвующих в запросе. Это работает, UPDATE, INSERT, DELETE и простые инструкции SELECT, но не с хранимых процедур или инструкций SELECT, в зависимости от соединения. Если некоторые или все сведения о схеме отсутствует в этой таблице <xref:System.Data.Odbc.OdbcCommandBuilder>не будет работать правильно, так как она содержит недостаточно сведений схемы для автоматического создания правильного инструкций INSERT, UPDATE или DELETE.</xref:System.Data.Odbc.OdbcCommandBuilder>       Чтобы убедиться в том, что столбцы метаданных возвращают правильные данные, необходимо вызвать метод <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>с параметром поведение, установленным в значение KeyInfo.</xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A> В противном случае некоторые столбцы в таблице схемы могут возвращать по умолчанию, значение null или неправильные данные.       При использовании ODBC.NET Oracle через драйвер ODBC столбцы ключей с псевдонимами не распознаются как ключи. Это влияет на столбцы в таблице схемы OdbcDataReader IsKey и IsUnique. Он также влияет на OdbcCommandBuilder создавать алгоритм. Рекомендуется не использовать псевдоним для столбца первичного ключа.      Настроек [!NOTE] настроек драйвер Microsoft Jet ODBC всегда возвращает уникальный индекс и первичные ключевые столбцы как допускающие значение NULL, независимо от того, являются ли они значения NULL или нет. Драйвер также не возвращает сведения о первичных ключах; Возвращает только список уникальных индексов и их столбцов, включая столбцы первичных ключей, не делая различий между ними."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Объект <xref href=&quot;System.Data.DataTable&quot;> </xref> , описывающий метаданные столбца."
  overload: System.Data.Odbc.OdbcDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> Закрыт."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OdbcDataReader.GetString(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде <xref:System.String>.</xref:System.String>"
  remarks: "Преобразования выполняются на основе базовых возможностей драйвера ODBC. Если преобразование не поддерживается, вызов метода завершается ошибкой.       Вызовите <xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>для поиска значений null перед вызовом этого метода.</xref:System.Data.Odbc.OdbcDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.String
      description: "Значение указанного столбца в виде <xref:System.String>.</xref:System.String>"
  overload: System.Data.Odbc.OdbcDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Заданное приведение является недопустимым."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  id: GetTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetTime(Int32)
  nameWithType: OdbcDataReader.GetTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в виде <xref:System.TimeSpan>объекта.</xref:System.TimeSpan>"
  syntax:
    content: public TimeSpan GetTime (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.TimeSpan
      description: "Значение указанного столбца в виде <xref:System.TimeSpan>объекта.</xref:System.TimeSpan>"
  overload: System.Data.Odbc.OdbcDataReader.GetTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OdbcDataReader.GetValue(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Получает значение столбца с указанным порядковым номером в его собственном формате."
  remarks: "Этот метод возвращает <xref:System.DBNull>для пустых столбцов базы данных.</xref:System.DBNull>"
  syntax:
    content: public override object GetValue (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Object
      description: "Возвращаемое значение."
  overload: System.Data.Odbc.OdbcDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OdbcDataReader.GetValues(Object[])
  fullName: System.Data.Odbc.OdbcDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Заполняет массив объектов значениями столбца текущей строки."
  remarks: "Для большинства приложений <xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>метод предоставляет эффективные средства для извлечения всех столбцов вместо извлечения каждого столбца отдельно.</xref:System.Data.Odbc.OdbcDataReader.GetValues%2A>       Можно передать <xref:System.Object>массив, который содержит меньшее число столбцов, содержащихся в результирующей строке.</xref:System.Object> Объем данных <xref:System.Object>содержит массив копируется в массив.</xref:System.Object> Можно также передать <xref:System.Object>массив, длина которого превышает количество столбцов, содержащихся в результирующей строке.</xref:System.Object>       Этот метод возвращает <xref:System.DBNull>для пустых столбцов базы данных.</xref:System.DBNull>"
  example:
  - >-
    [!code-vb[OdbcDataReader_GetValues#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_5_1.vb)]
     [!code-cs[OdbcDataReader_GetValues#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_5_1.cs)]
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Массив объектов типа <xref:System.Object>в который необходимо скопировать столбцы атрибутов.</xref:System.Object>"
    return:
      type: System.Int32
      description: "Число экземпляров <xref:System.Object>в массиве.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.HasRows
  id: HasRows
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
  fullName: System.Data.Odbc.OdbcDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение, указывающее, является ли <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> содержит одну или несколько строк."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> содержит одну или несколько строк; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.IsClosed
  id: IsClosed
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
  fullName: System.Data.Odbc.OdbcDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Указывает, является ли <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> закрыт."
  remarks: "IsClosed и <xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>только свойства, которые можно вызывать после <xref:System.Data.Odbc.OdbcDataReader>закрыт.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.RecordsAffected%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> закрыт; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OdbcDataReader.IsDBNull(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение, указывающее, содержит ли столбец несуществующие или отсутствующие значения."
  remarks: "Чтобы избежать возникновения ошибки, этот метод для поиска значений null столбцов перед вызовом типизированных методов Get (например, <xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>, <xref:System.Data.Odbc.OdbcDataReader.GetChar%2A>и так далее).</xref:System.Data.Odbc.OdbcDataReader.GetChar%2A> </xref:System.Data.Odbc.OdbcDataReader.GetByte%2A>"
  syntax:
    content: public override bool IsDBNull (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля порядковый номер столбца."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение указанного столбца эквивалентно <xref href=&quot;System.DBNull&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OdbcDataReader.Item(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в его собственном формате по порядковому номеру столбца."
  syntax:
    content: public override object this[int i] { get; }
    parameters:
    - id: i
      type: System.Int32
      description: "Порядковый номер столбца."
    return:
      type: System.Object
      description: "Значение указанного столбца в его собственном формате."
  overload: System.Data.Odbc.OdbcDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Переданный индекс находился вне диапазона от 0 до <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OdbcDataReader.Item(String)
  fullName: System.Data.Odbc.OdbcDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает значение указанного столбца в его собственном формате по имени столбца."
  remarks: "Сначала выполняется поиск с учетом регистра. В случае неудачи выполняется второй поиска без учета регистра.       Этот метод не учитывает ширину японской азбуки."
  syntax:
    content: public override object this[string value] { get; }
    parameters:
    - id: value
      type: System.String
      description: "Имя столбца."
    return:
      type: System.Object
      description: "Значение указанного столбца в его собственном формате."
  overload: System.Data.Odbc.OdbcDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Столбец с указанным именем не найден."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.NextResult
  id: NextResult
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OdbcDataReader.NextResult()
  fullName: System.Data.Odbc.OdbcDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Перемещает <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> к следующему результату при считывании результатов пакета инструкций SQL."
  remarks: "Используется для обработки нескольких результатов, которые могут быть созданы при выполнении пакетных инструкций SQL.       По умолчанию <xref:System.Data.Odbc.OdbcDataReader>расположено на первый результат.</xref:System.Data.Odbc.OdbcDataReader>"
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имеются дополнительные результирующие наборы; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.Read
  id: Read
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OdbcDataReader.Read()
  fullName: System.Data.Odbc.OdbcDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Перемещает <xref href=&quot;System.Data.Odbc.OdbcDataReader&quot;> </xref> к следующей записи."
  remarks: "По умолчанию <xref:System.Data.Odbc.OdbcDataReader>— перед первой записью.</xref:System.Data.Odbc.OdbcDataReader> Таким образом необходимо вызвать чтения для запуска, доступ к данным.       Хотя <xref:System.Data.Odbc.OdbcDataReader>используется, <xref:System.Data.Odbc.OdbcConnection>обслуживает его, пока не будет вызван <xref:System.Data.Odbc.OdbcDataReader.Close%2A>.</xref:System.Data.Odbc.OdbcDataReader.Close%2A> </xref:System.Data.Odbc.OdbcConnection> связанные</xref:System.Data.Odbc.OdbcDataReader>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcConnection>, an <xref:System.Data.Odbc.OdbcCommand>, and an <xref:System.Data.Odbc.OdbcDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.Odbc.OdbcDataReader>, and then the <xref:System.Data.Odbc.OdbcConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcd_0_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcd_0_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имеются дополнительные строки. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.Odbc.OdbcDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
  fullName: System.Data.Odbc.OdbcDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает номер строки изменены, вставлены или удалены инструкцией SQL."
  remarks: "Свойство RecordsAffected не задано, пока не будут считаны все строки и закройте <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader>       Значение этого свойства является накапливаемым. Например если две записи вставляются в пакетном режиме, значение RecordsAffected будет равен 2.       <xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>и RecordsAffected являются единственными свойствами, которые могут быть вызваны после <xref:System.Data.Odbc.OdbcDataReader>закрыт.</xref:System.Data.Odbc.OdbcDataReader></xref:System.Data.Odbc.OdbcDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "Число строк, которые были изменены, вставлены или удалены. -1 для инструкций SELECT; 0, если строки не были затронуты или выполнение инструкции завершилось ошибкой."
  overload: System.Data.Odbc.OdbcDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.Odbc.OdbcDataReader.Close
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Close()
  nameWithType: OdbcDataReader.Close()
  fullName: System.Data.Odbc.OdbcDataReader.Close()
- uid: System.Data.Odbc.OdbcDataReader.Depth
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Depth
  nameWithType: OdbcDataReader.Depth
  fullName: System.Data.Odbc.OdbcDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcDataReader.Dispose(System.Boolean)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: OdbcDataReader.Dispose(Boolean)
  fullName: System.Data.Odbc.OdbcDataReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Odbc.OdbcDataReader.FieldCount
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
  fullName: System.Data.Odbc.OdbcDataReader.FieldCount
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OdbcDataReader.GetBoolean(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBoolean(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetByte(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OdbcDataReader.GetByte(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.Odbc.OdbcDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.GetChar(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OdbcDataReader.GetChar(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.Odbc.OdbcDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OdbcDataReader.GetDataTypeName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcDataReader.GetDate(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDate(Int32)
  nameWithType: OdbcDataReader.GetDate(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDate(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OdbcDataReader.GetDateTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDateTime(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OdbcDataReader.GetDecimal(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.Odbc.OdbcDataReader.GetDouble(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OdbcDataReader.GetDouble(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OdbcDataReader.GetEnumerator()
  fullName: System.Data.Odbc.OdbcDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OdbcDataReader.GetFieldType(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.Odbc.OdbcDataReader.GetFloat(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OdbcDataReader.GetFloat(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.Odbc.OdbcDataReader.GetGuid(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OdbcDataReader.GetGuid(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.Odbc.OdbcDataReader.GetInt16(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OdbcDataReader.GetInt16(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.Odbc.OdbcDataReader.GetInt32(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OdbcDataReader.GetInt32(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt32(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetInt64(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OdbcDataReader.GetInt64(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetInt64(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetName(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OdbcDataReader.GetName(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetName(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OdbcDataReader.GetOrdinal(String)
  fullName: System.Data.Odbc.OdbcDataReader.GetOrdinal(String)
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OdbcDataReader.GetSchemaTable()
  fullName: System.Data.Odbc.OdbcDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Odbc.OdbcDataReader.GetString(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OdbcDataReader.GetString(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetString(Int32)
- uid: System.Data.Odbc.OdbcDataReader.GetTime(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetTime(Int32)
  nameWithType: OdbcDataReader.GetTime(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetTime(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.Odbc.OdbcDataReader.GetValue(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OdbcDataReader.GetValue(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcDataReader.GetValues(System.Object[])
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OdbcDataReader.GetValues(Object[])
  fullName: System.Data.Odbc.OdbcDataReader.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Odbc.OdbcDataReader.HasRows
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
  fullName: System.Data.Odbc.OdbcDataReader.HasRows
- uid: System.Data.Odbc.OdbcDataReader.IsClosed
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
  fullName: System.Data.Odbc.OdbcDataReader.IsClosed
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OdbcDataReader.IsDBNull(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.IsDBNull(Int32)
- uid: System.Data.Odbc.OdbcDataReader.Item(System.Int32)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OdbcDataReader.Item(Int32)
  fullName: System.Data.Odbc.OdbcDataReader.Item(Int32)
- uid: System.Data.Odbc.OdbcDataReader.Item(System.String)
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OdbcDataReader.Item(String)
  fullName: System.Data.Odbc.OdbcDataReader.Item(String)
- uid: System.Data.Odbc.OdbcDataReader.NextResult
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OdbcDataReader.NextResult()
  fullName: System.Data.Odbc.OdbcDataReader.NextResult()
- uid: System.Data.Odbc.OdbcDataReader.Read
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Read()
  nameWithType: OdbcDataReader.Read()
  fullName: System.Data.Odbc.OdbcDataReader.Read()
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
  fullName: System.Data.Odbc.OdbcDataReader.RecordsAffected
- uid: System.Data.Odbc.OdbcDataReader.Close*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Close
  nameWithType: OdbcDataReader.Close
- uid: System.Data.Odbc.OdbcDataReader.Depth*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Depth
  nameWithType: OdbcDataReader.Depth
- uid: System.Data.Odbc.OdbcDataReader.Dispose*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Dispose
  nameWithType: OdbcDataReader.Dispose
- uid: System.Data.Odbc.OdbcDataReader.FieldCount*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OdbcDataReader.FieldCount
- uid: System.Data.Odbc.OdbcDataReader.GetBoolean*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OdbcDataReader.GetBoolean
- uid: System.Data.Odbc.OdbcDataReader.GetByte*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetByte
  nameWithType: OdbcDataReader.GetByte
- uid: System.Data.Odbc.OdbcDataReader.GetBytes*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OdbcDataReader.GetBytes
- uid: System.Data.Odbc.OdbcDataReader.GetChar*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChar
  nameWithType: OdbcDataReader.GetChar
- uid: System.Data.Odbc.OdbcDataReader.GetChars*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetChars
  nameWithType: OdbcDataReader.GetChars
- uid: System.Data.Odbc.OdbcDataReader.GetDataTypeName*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OdbcDataReader.GetDataTypeName
- uid: System.Data.Odbc.OdbcDataReader.GetDate*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDate
  nameWithType: OdbcDataReader.GetDate
- uid: System.Data.Odbc.OdbcDataReader.GetDateTime*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OdbcDataReader.GetDateTime
- uid: System.Data.Odbc.OdbcDataReader.GetDecimal*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OdbcDataReader.GetDecimal
- uid: System.Data.Odbc.OdbcDataReader.GetDouble*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OdbcDataReader.GetDouble
- uid: System.Data.Odbc.OdbcDataReader.GetEnumerator*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OdbcDataReader.GetEnumerator
- uid: System.Data.Odbc.OdbcDataReader.GetFieldType*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OdbcDataReader.GetFieldType
- uid: System.Data.Odbc.OdbcDataReader.GetFloat*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OdbcDataReader.GetFloat
- uid: System.Data.Odbc.OdbcDataReader.GetGuid*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OdbcDataReader.GetGuid
- uid: System.Data.Odbc.OdbcDataReader.GetInt16*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OdbcDataReader.GetInt16
- uid: System.Data.Odbc.OdbcDataReader.GetInt32*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OdbcDataReader.GetInt32
- uid: System.Data.Odbc.OdbcDataReader.GetInt64*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OdbcDataReader.GetInt64
- uid: System.Data.Odbc.OdbcDataReader.GetName*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetName
  nameWithType: OdbcDataReader.GetName
- uid: System.Data.Odbc.OdbcDataReader.GetOrdinal*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OdbcDataReader.GetOrdinal
- uid: System.Data.Odbc.OdbcDataReader.GetSchemaTable*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OdbcDataReader.GetSchemaTable
- uid: System.Data.Odbc.OdbcDataReader.GetString*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetString
  nameWithType: OdbcDataReader.GetString
- uid: System.Data.Odbc.OdbcDataReader.GetTime*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetTime
  nameWithType: OdbcDataReader.GetTime
- uid: System.Data.Odbc.OdbcDataReader.GetValue*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValue
  nameWithType: OdbcDataReader.GetValue
- uid: System.Data.Odbc.OdbcDataReader.GetValues*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: GetValues
  nameWithType: OdbcDataReader.GetValues
- uid: System.Data.Odbc.OdbcDataReader.HasRows*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: HasRows
  nameWithType: OdbcDataReader.HasRows
- uid: System.Data.Odbc.OdbcDataReader.IsClosed*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OdbcDataReader.IsClosed
- uid: System.Data.Odbc.OdbcDataReader.IsDBNull*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OdbcDataReader.IsDBNull
- uid: System.Data.Odbc.OdbcDataReader.Item*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Item
  nameWithType: OdbcDataReader.Item
- uid: System.Data.Odbc.OdbcDataReader.NextResult*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: NextResult
  nameWithType: OdbcDataReader.NextResult
- uid: System.Data.Odbc.OdbcDataReader.Read*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: Read
  nameWithType: OdbcDataReader.Read
- uid: System.Data.Odbc.OdbcDataReader.RecordsAffected*
  parent: System.Data.Odbc.OdbcDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OdbcDataReader.RecordsAffected
