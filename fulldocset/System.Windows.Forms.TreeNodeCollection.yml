### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.TreeNodeCollection
  id: TreeNodeCollection
  children:
  - System.Windows.Forms.TreeNodeCollection.Add(System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  - System.Windows.Forms.TreeNodeCollection.Clear
  - System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Count
  - System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  - System.Windows.Forms.TreeNodeCollection.GetEnumerator
  - System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  - System.Windows.Forms.TreeNodeCollection.IsReadOnly
  - System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.Item(System.String)
  - System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  - System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Windows.Forms.TreeNodeCollection
  type: Class
  summary: "Представляет коллекцию <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> объектов."
  remarks: "<xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, И <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>методы позволяют добавлять и удалять из коллекции конкретные узлы дерева.</xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A>      Настроек [!NOTE] настроек перечисление коллекции и удаление узлов не поддерживается.       Можно также использовать <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>методы для добавления или удаления из коллекции все узлы дерева.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>       Классы не могут наследоваться от класса TreeNodeCollection."
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_6_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/t-system.windows.forms.t_6_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/t-system.windows.forms.t_6_1.cpp)]"
  syntax:
    content: >-
      [System.ComponentModel.Editor("System.Windows.Forms.Design.TreeNodeCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]

      public class TreeNodeCollection : System.Collections.IList
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: TreeNodeCollection.Add(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Добавляет новый узел дерева с заданным текстом метки в конец текущей коллекции узлов дерева."
  remarks: "Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Чтобы удалить <xref:System.Windows.Forms.TreeNode>, добавленный ранее, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_56_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_56_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_56_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string text);
    parameters:
    - id: text
      type: System.String
      description: "Текст метки отображается по <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Объект <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , представляющий узел дерева, добавляемый в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  id: Add(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Добавляет ранее созданный узел дерева в конец коллекции узлов дерева."
  remarks: "Эта версия <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>метод позволяет добавить ранее созданные <xref:System.Windows.Forms.TreeNode>объекты в конец коллекции узлов дерева.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       Чтобы удалить <xref:System.Windows.Forms.TreeNode>, добавленный ранее, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      Настроек [!NOTE] настроек A <xref:System.Windows.Forms.TreeNode>могут назначаться только одному <xref:System.Windows.Forms.TreeView>управления одновременно.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode> Чтобы добавить узел дерева новое дерево, необходимо удалить его из другого представления дерева сначала или создайте его копию."
  example:
  - "The following code example displays customer information in a <xref:System.Windows.Forms.TreeView> control. The root tree nodes display customer names, and the child tree nodes display the order numbers assigned to each customer. In this example, 1,000 customers are displayed with 15 orders each. The repainting of the <xref:System.Windows.Forms.TreeView> is suppressed by using the <xref:System.Windows.Forms.TreeView.BeginUpdate%2A> and <xref:System.Windows.Forms.TreeView.EndUpdate%2A> methods, and a wait <xref:System.Windows.Forms.Cursor> is displayed while the <xref:System.Windows.Forms.TreeView> creates and paints the <xref:System.Windows.Forms.TreeNode> objects. This example requires that you have a `Customer` object that can hold a collection of `Order` objects. It also requires that you have created an instance of a <xref:System.Windows.Forms.TreeView> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-vb[TreeView#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_22_1.vb)]\n [!code-cs[TreeView#1](~/add/codesnippet/csharp/m-system.windows.forms.t_22_1.cs)]\n [!code-cpp[TreeView#1](~/add/codesnippet/cpp/m-system.windows.forms.t_22_1.cpp)]"
  syntax:
    content: public virtual int Add (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Для добавления в коллекцию."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс значение <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> добавлен в коллекцию узлов дерева."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> node </code> Сейчас назначен другой <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  id: Add(System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String)
  nameWithType: TreeNodeCollection.Add(String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает новый узел дерева с указанным ключом и текстом и добавляет его в коллекцию."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text);
    parameters:
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Добавленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  id: Add(System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным ключом, текстом и изображением и добавляет его в коллекцию."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.ImageList%2A>       Узел дерева добавляется в конец коллекции. Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex);
    parameters:
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    - id: imageIndex
      type: System.Int32
      description: "Индекс изображения, которое отображается в узле дерева."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Добавленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным ключом, текстом и изображением и добавляет его в коллекцию."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Узел дерева добавляется в конец коллекции. Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey);
    parameters:
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    - id: imageKey
      type: System.String
      description: "Изображение, которое отображается в узле дерева."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Добавленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  id: Add(System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным ключом, текст и изображения и добавляет его в коллекцию."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Узел дерева добавляется в конец коллекции. Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.ImageList%2A>       `selectedImageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.StateImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    - id: imageIndex
      type: System.Int32
      description: "Индекс изображения, которое отображается в узле дерева."
    - id: selectedImageIndex
      type: System.Int32
      description: "Индекс образа, который отображается в узле дерева, когда он находится в выбранном состоянии."
    return:
      type: System.Windows.Forms.TreeNode
      description: "Узел дерева, который был добавлен в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  id: Add(System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Add(String,String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным ключом, текст и изображения и добавляет его в коллекцию."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       Узел дерева добавляется в конец коллекции. Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNode>       `imageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.ImageList%2A>       `selectedImageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.StateImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Add (string key, string text, string imageKey, string selectedImageKey);
    parameters:
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    - id: imageKey
      type: System.String
      description: "Ключ изображения, отображаемого в узле дерева."
    - id: selectedImageKey
      type: System.String
      description: "Ключ изображения, отображаемого, если узел находится в выбранном состоянии."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Добавленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  id: AddRange(System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: AddRange(TreeNode[])
  nameWithType: TreeNodeCollection.AddRange(TreeNode[])
  fullName: System.Windows.Forms.TreeNodeCollection.AddRange(TreeNode[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Добавляет в коллекцию массив предварительно созданных узлов дерева."
  remarks: "<xref:System.Windows.Forms.TreeNode>Объектов, содержащихся в `nodes` массива добавляются в конец коллекции.</xref:System.Windows.Forms.TreeNode>       Можно использовать метод AddRange для быстрого добавления группы ранее созданных <xref:System.Windows.Forms.TreeNode>объекты в коллекцию вместо вручную добавлять каждый <xref:System.Windows.Forms.TreeNode>в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>метод.</xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode>       Чтобы удалить <xref:System.Windows.Forms.TreeNode>, добавленный ранее, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example copies the <xref:System.Windows.Forms.TreeNodeCollection> from a <xref:System.Windows.Forms.TreeView> to a temporary <xref:System.Array>, and then adds the contents of the array to another <xref:System.Windows.Forms.TreeView> using the AddRange method. The <xref:System.Windows.Forms.TreeNodeCollection> from the source <xref:System.Windows.Forms.TreeView> is cleared using the <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls, one with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-cpp[TreeNodeCollection_Clear#1](~/add/codesnippet/cpp/ef635824-b7a0-4e6a-bbd4-_1.cpp)]\n [!code-vb[TreeNodeCollection_Clear#1](~/add/codesnippet/visualbasic/ef635824-b7a0-4e6a-bbd4-_1.vb)]\n [!code-cs[TreeNodeCollection_Clear#1](~/add/codesnippet/csharp/ef635824-b7a0-4e6a-bbd4-_1.cs)]"
  syntax:
    content: public virtual void AddRange (System.Windows.Forms.TreeNode[] nodes);
    parameters:
    - id: nodes
      type: System.Windows.Forms.TreeNode[]
      description: "Массив <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> объекты, представляющие узлы дерева для добавления в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nodes</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>nodes</code>является дочерним другого <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Clear
  id: Clear
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Windows.Forms.TreeNodeCollection.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет все узлы дерева из коллекции."
  remarks: "Этот метод позволяет очистить всю коллекцию узлов дерева в представлении дерева.       Чтобы удалить узел отдельное дерево из коллекции, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>или <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>       Для добавления новых <xref:System.Windows.Forms.TreeNode>объекты в коллекцию, используют <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example copies the <xref:System.Windows.Forms.TreeNodeCollection> from a <xref:System.Windows.Forms.TreeView> to a temporary <xref:System.Array>, and then adds the contents of the array to another <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> method. The <xref:System.Windows.Forms.TreeNodeCollection> from the source <xref:System.Windows.Forms.TreeView> is cleared using the Clear method. This example requires that you have two <xref:System.Windows.Forms.TreeView> controls, one with a collection of <xref:System.Windows.Forms.TreeNode> objects.  \n  \n [!code-cpp[TreeNodeCollection_Clear#1](~/add/codesnippet/cpp/m-system.windows.forms.t_20_1.cpp)]\n [!code-vb[TreeNodeCollection_Clear#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_20_1.vb)]\n [!code-cs[TreeNodeCollection_Clear#1](~/add/codesnippet/csharp/m-system.windows.forms.t_20_1.cs)]"
  syntax:
    content: public virtual void Clear ();
    parameters: []
  overload: System.Windows.Forms.TreeNodeCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  id: Contains(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Contains(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Определяет, является ли указанный узел дерева членом коллекции."
  remarks: "Этот метод позволяет определить, <xref:System.Windows.Forms.TreeNode>является членом коллекции, прежде чем пытаться выполнять операции над <xref:System.Windows.Forms.TreeNode>.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode> Этот метод можно использовать, чтобы убедиться, что <xref:System.Windows.Forms.TreeNode>был добавлен или все еще является членом коллекции.</xref:System.Windows.Forms.TreeNode>       Количество времени, этот метод принимает пропорционален размеру коллекции узлов, поэтому может потребоваться следует избегать ее использования с большими коллекциями.       Этот метод проверяет равенство ссылок. Его нельзя использовать для определения, выполняется ли эквивалентный другой узел в коллекции.      Настроек [!NOTE] настроек одно требование равенство ссылок показано, что нельзя настраивать поведение данного метода для производных <xref:System.Windows.Forms.TreeNode>типов путем переопределения <xref:System.Object.Equals%2A>метода <xref:System.Windows.Forms.TreeNode>класса.</xref:System.Windows.Forms.TreeNode> </xref:System.Object.Equals%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/cpp/049b6658-8822-4453-9f89-_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/csharp/049b6658-8822-4453-9f89-_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/visualbasic/049b6658-8822-4453-9f89-_1.vb)]"
  syntax:
    content: public bool Contains (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Для поиска в коллекции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> является членом коллекции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  id: ContainsKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: ContainsKey(String)
  nameWithType: TreeNodeCollection.ContainsKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.ContainsKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Определяет, содержит ли коллекция узел дерева с указанным ключом."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>возвращает `false`.</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public virtual bool ContainsKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Имя <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать коллекцию содержит <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> с указанным ключом; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.ContainsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Копирует всю коллекцию в массив, существующие в указанной позиции в массиве."
  remarks: ''
  example:
  - "The following code example displays the number of <xref:System.Windows.Forms.TreeNode> objects in a <xref:System.Windows.Forms.TreeNodeCollection>, copies the contents of the collection to an <xref:System.Object> array, and displays a list of the tree nodes in a <xref:System.Windows.Forms.Label> control. This example requires that you have a <xref:System.Windows.Forms.TreeView> with at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeNodeCollection>, and a <xref:System.Windows.Forms.Label> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/csharp/m-system.windows.forms.t_31_1.cs)]\n [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_31_1.vb)]\n [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/cpp/m-system.windows.forms.t_31_1.cpp)]"
  syntax:
    content: public void CopyTo (Array dest, int index);
    parameters:
    - id: dest
      type: System.Array
      description: "Массив назначения."
    - id: index
      type: System.Int32
      description: "Индекс в целевом массиве, с которого выполняется хранение начинается."
  overload: System.Windows.Forms.TreeNodeCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Count
  id: Count
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Windows.Forms.TreeNodeCollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает общее число <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> объектов в коллекции."
  remarks: "Свойство Count содержит число <xref:System.Windows.Forms.TreeNode>объектами, назначенными для коллекции.</xref:System.Windows.Forms.TreeNode> Значение свойства может служить верхней границы цикла для перебора элементов коллекции.      Настроек [!NOTE] настроек, так как значение индекса в коллекции является отсчитываемый от нуля индекс, необходимо вычесть единицу из переменной цикла. Если это не сделать, будет превышать верхней границы коллекции и throw <xref:System.IndexOutOfRangeException>исключение.</xref:System.IndexOutOfRangeException>"
  example:
  - "The following code example displays the number of <xref:System.Windows.Forms.TreeNode> objects in a <xref:System.Windows.Forms.TreeNodeCollection>, copies the contents of the collection to an <xref:System.Object> array, and displays a list of the tree nodes in a <xref:System.Windows.Forms.Label> control. This example requires that you have a <xref:System.Windows.Forms.TreeView> with at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeNodeCollection>, and a <xref:System.Windows.Forms.Label> control on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/csharp/p-system.windows.forms.t_28_1.cs)]\n [!code-vb[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_28_1.vb)]\n [!code-cpp[TreeNodeCollection_Count_CopyTo#1](~/add/codesnippet/cpp/p-system.windows.forms.t_28_1.cpp)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Общее число <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> объектов в коллекции."
  overload: System.Windows.Forms.TreeNodeCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  id: Find(System.String,System.Boolean)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Find(String,Boolean)
  nameWithType: TreeNodeCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.TreeNodeCollection.Find(String,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Поиск узлов дерева с указанным ключом, при необходимости просматривая вложенные узлы."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой или не найдено совпадений <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>свойство возвращает пустой массив`.` </xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public System.Windows.Forms.TreeNode[] Find (string key, bool searchAllChildren);
    parameters:
    - id: key
      type: System.String
      description: "Имя узла дерева для поиска."
    - id: searchAllChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для поиска дочерних узлов, узлов дерева; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Windows.Forms.TreeNode[]
      description: "Массив <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> объектов которого <xref:System.Windows.Forms.TreeNode.Name*>свойства совпадает с указанным ключом.</xref:System.Windows.Forms.TreeNode.Name*>"
  overload: System.Windows.Forms.TreeNodeCollection.Find*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Windows.Forms.TreeNodeCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает перечислитель, который может использоваться для итерации по коллекции узлов дерева."
  remarks: ''
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/cpp/m-system.windows.forms.t_51_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/csharp/m-system.windows.forms.t_51_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_51_1.vb)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>, Представляющий коллекцию узлов дерева.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.TreeNodeCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  id: IndexOf(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOf(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает индекс указанного узла дерева в коллекции."
  remarks: "Количество времени, этот метод принимает пропорционален размеру коллекции узлов, поэтому может потребоваться следует избегать ее использования с большими коллекциями.       Этот метод проверяет равенство ссылок. Его нельзя использовать для извлечения индекса другого эквивалентного узла в коллекции.      Настроек [!NOTE] настроек одно требование равенство ссылок показано, что нельзя настраивать поведение данного метода для производных <xref:System.Windows.Forms.TreeNode>типов путем переопределения <xref:System.Object.Equals%2A>метода <xref:System.Windows.Forms.TreeNode>класса.</xref:System.Windows.Forms.TreeNode> </xref:System.Object.Equals%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example determines if a specified <xref:System.Windows.Forms.TreeNode> is within a <xref:System.Windows.Forms.TreeNodeCollection>, and then enumerates the collection. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> that has a <xref:System.Windows.Forms.TreeNodeCollection> that contains a <xref:System.Windows.Forms.TreeNode> named `myTreeNode2`.  \n  \n [!code-cpp[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/cpp/m-system.windows.forms.t_27_1.cpp)]\n [!code-cs[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/csharp/m-system.windows.forms.t_27_1.cs)]\n [!code-vb[TreeNodeCollection_Contains_GetEnumerator#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_27_1.vb)]"
  syntax:
    content: public int IndexOf (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Для поиска в коллекции."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс элемента, найденного в коллекции узлов дерева; в противном случае — значение -1."
  overload: System.Windows.Forms.TreeNodeCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  id: IndexOfKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IndexOfKey(String)
  nameWithType: TreeNodeCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOfKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает индекс первого вхождения узла дерева с указанным ключом."
  remarks: "Если IndexOfKey вызывается последовательно, последний возвращается индекс будет проверяться на соответствие ключа сначала, а если нет соответствия, поиск начинается с начала коллекции.       <xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       При сравнении ключей не учитывает регистр. Если `key` — `null` или является пустой строкой, <xref:System.Windows.Forms.TreeNodeCollection.Item%2A>свойство возвращает -1.</xref:System.Windows.Forms.TreeNodeCollection.Item%2A>"
  syntax:
    content: public virtual int IndexOfKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Имя узла дерева для поиска."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс первого вхождения узел дерева с указанным ключом, если он найден; в противном случае — значение -1."
  overload: System.Windows.Forms.TreeNodeCollection.IndexOfKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  id: Insert(System.Int32,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным текстом и вставляет его по указанному индексу."
  remarks: "Если <xref:System.Windows.Forms.TreeView.Sorted%2A>свойству `true`, `index` значение параметра игнорируется.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView>сортируется еще раз.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string text);
    parameters:
    - id: index
      type: System.Int32
      description: "Место в коллекции для вставки узла."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Вставленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  id: Insert(System.Int32,System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,TreeNode)
  nameWithType: TreeNodeCollection.Insert(Int32,TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вставляет существующий узел дерева в коллекции узлов дерева в указанном месте."
  remarks: "Если <xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=fullName>свойству `true`, `index` значение параметра игнорируется.</xref:System.Windows.Forms.TreeView.Sorted%2A?displayProperty=fullName> <xref:System.Windows.Forms.TreeNode>Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView>отсортирована.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       Чтобы удалить <xref:System.Windows.Forms.TreeNode>, добавленный ранее, используйте <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>, <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      Настроек [!NOTE] настроек A <xref:System.Windows.Forms.TreeNode>могут назначаться только одному <xref:System.Windows.Forms.TreeView>управления одновременно.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode> Чтобы добавить узел дерева новое дерево, необходимо удалить его из другого представления дерева сначала или создайте его копию."
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the Insert method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/13281f08-0181-4942-9ff8-_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/13281f08-0181-4942-9ff8-_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/13281f08-0181-4942-9ff8-_1.cs)]"
  syntax:
    content: public virtual void Insert (int index, System.Windows.Forms.TreeNode node);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс в коллекции для вставки узла дерева."
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Вставляемый в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> node </code> Сейчас назначен другой <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным текстом и ключом и вставляет его в коллекцию."
  remarks: "Если <xref:System.Windows.Forms.TreeView.Sorted%2A>свойству `true`, `index` значение параметра игнорируется.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView>сортируется еще раз.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text);
    parameters:
    - id: index
      type: System.Int32
      description: "Место в коллекции для вставки узла."
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Вставленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  id: Insert(System.Int32,System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным ключом, текстом и изображением и вставляет его в коллекцию по указанному индексу."
  remarks: "Если <xref:System.Windows.Forms.TreeView.Sorted%2A>свойству `true`, `index` значение параметра игнорируется.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView>сортируется еще раз.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex);
    parameters:
    - id: index
      type: System.Int32
      description: "Место в коллекции для вставки узла."
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    - id: imageIndex
      type: System.Int32
      description: "Индекс изображения, которое отображается в узле дерева."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Вставленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным ключом, текстом и изображением и вставляет его в коллекцию по указанному индексу."
  remarks: "Если <xref:System.Windows.Forms.TreeView.Sorted%2A>свойству `true`, `index` значение параметра игнорируется.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView>сортируется еще раз.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.ImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey);
    parameters:
    - id: index
      type: System.Int32
      description: "Место в коллекции для вставки узла."
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    - id: imageKey
      type: System.String
      description: "Ключ изображения, отображаемого в узле дерева."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Вставленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  id: Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным ключом, текст и изображения и вставляет его в коллекцию по указанному индексу."
  remarks: "Если <xref:System.Windows.Forms.TreeView.Sorted%2A>свойству `true`, `index` значение параметра игнорируется.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView>сортируется еще раз.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.ImageList%2A>       `selectedimageIndex` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.StateImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, int imageIndex, int selectedImageIndex);
    parameters:
    - id: index
      type: System.Int32
      description: "Место в коллекции для вставки узла."
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    - id: imageIndex
      type: System.Int32
      description: "Индекс изображения, которое отображается в узле дерева."
    - id: selectedImageIndex
      type: System.Int32
      description: "Индекс изображения, которое отображается в узле дерева, когда он находится в выбранном состоянии."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Вставленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  id: Insert(System.Int32,System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Insert(Int32,String,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Создает узел дерева с указанным ключом, текст и изображения и вставляет его в коллекцию по указанному индексу."
  remarks: "Если <xref:System.Windows.Forms.TreeView.Sorted%2A>свойству `true`, `index` значение параметра игнорируется.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Вставляется в представлении в виде дерева и <xref:System.Windows.Forms.TreeView>сортируется еще раз.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeNode>       Кроме того, можно добавить новые <xref:System.Windows.Forms.TreeNode>объекты в коллекцию с помощью <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>или <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>       <xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       `imageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.ImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.ImageList%2A>       `selectedimageKey` Параметр ссылается на изображение в <xref:System.Windows.Forms.TreeView.StateImageList%2A>свойство <xref:System.Windows.Forms.TreeView>.</xref:System.Windows.Forms.TreeView> родительского объекта</xref:System.Windows.Forms.TreeView.StateImageList%2A>"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode Insert (int index, string key, string text, string imageKey, string selectedImageKey);
    parameters:
    - id: index
      type: System.Int32
      description: "Место в коллекции для вставки узла."
    - id: key
      type: System.String
      description: "Имя узла дерева."
    - id: text
      type: System.String
      description: "Текст, отображаемый в узле дерева."
    - id: imageKey
      type: System.String
      description: "Ключ изображения, отображаемого в узле дерева."
    - id: selectedImageKey
      type: System.String
      description: "Ключ изображения, отображаемого в узле дерева, когда он находится в выбранном состоянии."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Вставленный в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
  fullName: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, является ли коллекция только для чтения."
  remarks: ''
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_284_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/p-system.windows.forms.t_284_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/p-system.windows.forms.t_284_1.cs)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если коллекция доступна только для чтения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> по указанному индексу в коллекции."
  remarks: "Чтобы назначить <xref:System.Windows.Forms.TreeNode>в определенное расположение или извлечь их из объектов <xref:System.Windows.Forms.TreeNodeCollection>, могут ссылаться на объект коллекции с заданным значением индекса.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> Значение индекса <xref:System.Windows.Forms.TreeNodeCollection>начинается с нуля.</xref:System.Windows.Forms.TreeNodeCollection>"
  example:
  - "The following code example removes the first <xref:System.Windows.Forms.TreeNode> from a <xref:System.Windows.Forms.TreeView> if its <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> property is set to \"Node0\". When a <xref:System.Windows.Forms.Button> is clicked, the first <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeView> is deleted using the <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> method. This example requires that you have created a <xref:System.Windows.Forms.TreeView> and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>. The first <xref:System.Windows.Forms.TreeNode> in your <xref:System.Windows.Forms.TreeView> should have a text property of \"Node0.\"  \n  \n [!code-vb[TreeNodeCollection#2](~/add/codesnippet/visualbasic/p-system.windows.forms.t_118_1.vb)]\n [!code-cpp[TreeNodeCollection#2](~/add/codesnippet/cpp/p-system.windows.forms.t_118_1.cpp)]\n [!code-cs[TreeNodeCollection#2](~/add/codesnippet/csharp/p-system.windows.forms.t_118_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.TreeNode this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> в коллекции."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> По указанному индексу в коллекции."
  overload: System.Windows.Forms.TreeNodeCollection.Item*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> index </code> Значение меньше 0 или больше, чем число узлов дерева в коллекции."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: TreeNodeCollection.Item(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(String)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает узел дерева с указанным ключом из коллекции."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>       При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, свойство Item возвращает `null`."
  syntax:
    content: public virtual System.Windows.Forms.TreeNode this[string key] { get; }
    parameters:
    - id: key
      type: System.String
      description: "Имя <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> извлекаемого из коллекции."
    return:
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> С указанным ключом."
  overload: System.Windows.Forms.TreeNodeCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  id: Remove(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Remove(TreeNode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет указанный узел дерева из коллекции узлов дерева."
  remarks: "Когда <xref:System.Windows.Forms.TreeNode>удаляется из коллекции узлов дерева, все последующие дерева, узлы, перемещаются вверх на одну позицию в коллекции.</xref:System.Windows.Forms.TreeNode>       Можно также удалить <xref:System.Windows.Forms.TreeNode>, добавленный ранее с помощью <xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.RemoveAt%2A> </xref:System.Windows.Forms.TreeNode>      Настроек [!NOTE] настроек перечисление коллекции и удаление узлов не поддерживается.       Для добавления новых <xref:System.Windows.Forms.TreeNode>объекты в коллекцию, используют <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example removes the selected tree node from one <xref:System.Windows.Forms.TreeView> and adds it to another if both tree node collections are not read-only. When a <xref:System.Windows.Forms.Button> is clicked, the <xref:System.Windows.Forms.TreeNode> represented by the <xref:System.Windows.Forms.TreeView.SelectedNode%2A?displayProperty=fullName> property is deleted from one <xref:System.Windows.Forms.TreeView> using the Remove method and added to the other <xref:System.Windows.Forms.TreeView> using the <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> that contains two <xref:System.Windows.Forms.TreeView> controls and a <xref:System.Windows.Forms.Button>. The <xref:System.Windows.Forms.TreeView> controls should be named `treeView1` and `treeView2`.  \n  \n [!code-vb[TreeNodeCollection#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_35_1.vb)]\n [!code-cpp[TreeNodeCollection#1](~/add/codesnippet/cpp/m-system.windows.forms.t_35_1.cpp)]\n [!code-cs[TreeNodeCollection#1](~/add/codesnippet/csharp/m-system.windows.forms.t_35_1.cs)]"
  syntax:
    content: public void Remove (System.Windows.Forms.TreeNode node);
    parameters:
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Для удаления."
  overload: System.Windows.Forms.TreeNodeCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет узел дерева из коллекции узлов дерева по указанному индексу."
  remarks: "Когда <xref:System.Windows.Forms.TreeNode>удаляется из коллекции узлов дерева, все последующие дерева, узлы, перемещаются вверх на одну позицию в коллекции.</xref:System.Windows.Forms.TreeNode>       Можно также удалить <xref:System.Windows.Forms.TreeNode>, добавленный ранее с помощью <xref:System.Windows.Forms.TreeNodeCollection.Remove%2A>или <xref:System.Windows.Forms.TreeNodeCollection.Clear%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Clear%2A> </xref:System.Windows.Forms.TreeNodeCollection.Remove%2A> </xref:System.Windows.Forms.TreeNode>      Настроек [!NOTE] настроек перечисление коллекции и удаление узлов не поддерживается.       Для добавления новых <xref:System.Windows.Forms.TreeNode>объекты в коллекцию, используют <xref:System.Windows.Forms.TreeNodeCollection.Add%2A>, <xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A>, или <xref:System.Windows.Forms.TreeNodeCollection.Insert%2A>методы.</xref:System.Windows.Forms.TreeNodeCollection.Insert%2A> </xref:System.Windows.Forms.TreeNodeCollection.AddRange%2A> </xref:System.Windows.Forms.TreeNodeCollection.Add%2A> </xref:System.Windows.Forms.TreeNode>"
  example:
  - "The following code example removes the first <xref:System.Windows.Forms.TreeNode> from a <xref:System.Windows.Forms.TreeView> if its <xref:System.Windows.Forms.TreeNode.Text%2A?displayProperty=fullName> property is set to \"Node0\". When a <xref:System.Windows.Forms.Button> is clicked, the first <xref:System.Windows.Forms.TreeNode> in the <xref:System.Windows.Forms.TreeView> is deleted using the RemoveAt method. This example requires that you have created a <xref:System.Windows.Forms.TreeView> and a <xref:System.Windows.Forms.Button> on a <xref:System.Windows.Forms.Form>. The first <xref:System.Windows.Forms.TreeNode> in your <xref:System.Windows.Forms.TreeView> should have a text property of \"Node0.\"  \n  \n [!code-vb[TreeNodeCollection#2](~/add/codesnippet/visualbasic/m-system.windows.forms.t_69_1.vb)]\n [!code-cpp[TreeNodeCollection#2](~/add/codesnippet/cpp/m-system.windows.forms.t_69_1.cpp)]\n [!code-cs[TreeNodeCollection#2](~/add/codesnippet/csharp/m-system.windows.forms.t_69_1.cs)]"
  syntax:
    content: public virtual void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> для удаления."
  overload: System.Windows.Forms.TreeNodeCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  id: RemoveByKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: RemoveByKey(String)
  nameWithType: TreeNodeCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveByKey(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет узел дерева с указанным ключом из коллекции."
  remarks: "<xref:System.Windows.Forms.TreeNode.Name%2A>Свойство соответствует ключу для объекта <xref:System.Windows.Forms.TreeNode>в списке <xref:System.Windows.Forms.TreeNodeCollection>.</xref:System.Windows.Forms.TreeNodeCollection> </xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.Name%2A>"
  syntax:
    content: public virtual void RemoveByKey (string key);
    parameters:
    - id: key
      type: System.String
      description: "Имя узла дерева, чтобы удалить из коллекции."
  overload: System.Windows.Forms.TreeNodeCollection.RemoveByKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным)."
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>во всех случаях."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает объект, который может использоваться для синхронизации доступа к коллекции."
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Объект, который может использоваться для синхронизации доступа к <xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Добавляет объект в конец коллекции узлов дерева."
  remarks: "Если `node` не <xref:System.Windows.Forms.TreeNodeCollection>используется метод IList.Add строку, возвращаемую <xref:System.Windows.Forms.TreeNode.ToString%2A>методом <xref:System.Windows.Forms.TreeNode>класса.</xref:System.Windows.Forms.TreeNode> </xref:System.Windows.Forms.TreeNode.ToString%2A> </xref:System.Windows.Forms.TreeNodeCollection>"
  syntax:
    content: int IList.Add (object node);
    parameters:
    - id: node
      type: System.Object
      description: "Объект, добавляемый в коллекцию узлов дерева."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс значение <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , добавленный в коллекцию узлов дерева."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "<code>node</code>в настоящее время назначен другой <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref> управления."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>node</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Определяет, является ли указанный узел дерева членом коллекции."
  remarks: "Если `node` не <xref:System.Windows.Forms.TreeNode>, метод IList.Contains возвращает `false`.</xref:System.Windows.Forms.TreeNode> Таким образом, невозможно передать ему строку, чтобы определить, содержит ли коллекция узел, который имеет значение строки, как его <xref:System.Windows.Forms.TreeNode.Text%2A>свойство.</xref:System.Windows.Forms.TreeNode.Text%2A>"
  syntax:
    content: bool IList.Contains (object node);
    parameters:
    - id: node
      type: System.Object
      description: "Объект для поиска в коллекции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> node </code> является членом коллекции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает индекс указанного узла дерева в коллекции."
  remarks: "Если `node` не <xref:System.Windows.Forms.TreeNode>, метод IList.IndexOf возвращает -1.</xref:System.Windows.Forms.TreeNode> Таким образом, невозможно передать ему строку для поиска узла, имеющего значение строки в виде его <xref:System.Windows.Forms.TreeNode.Text%2A>свойство.</xref:System.Windows.Forms.TreeNode.Text%2A>"
  syntax:
    content: int IList.IndexOf (object node);
    parameters:
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Для поиска в коллекции."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс элемента, найденного в коллекции узлов дерева; в противном случае — значение -1."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Вставляет существующий узел дерева в коллекции узлов дерева в указанном месте."
  remarks: "Если <xref:System.Windows.Forms.TreeView.Sorted%2A>свойству `true`, `index` параметр учитывается.</xref:System.Windows.Forms.TreeView.Sorted%2A> <xref:System.Windows.Forms.TreeNode>Вставляется в представлении в виде дерева и <xref:System.Web.UI.WebControls.TreeView>сортируется еще раз.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: void IList.Insert (int index, object node);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс в коллекции для вставки узла дерева."
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> , Вставляемый в коллекцию."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>node</code>в настоящее время назначен другой <xref href=&quot;System.Windows.Forms.TreeView&quot;> </xref>.       -or-       <code>node</code> is not a <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает значение, указывающее, имеет ли коллекция узлов дерева фиксированный размер."
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>во всех случаях."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: TreeNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Возвращает или задает узел дерева по указанному индексу в коллекции."
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, по которому требуется получить или задать элемент."
    return:
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> По указанному индексу в <xref href=&quot;System.Windows.Forms.TreeNodeCollection&quot;> </xref>."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Заданное значение не является <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.TreeNodeCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Удаляет указанный узел дерева из коллекции узлов дерева."
  remarks: "Невозможно передать ему строку для удаления узла, имеющего значение строки в виде его <xref:System.Windows.Forms.TreeNode.Text%2A>свойство.</xref:System.Windows.Forms.TreeNode.Text%2A>       Когда <xref:System.Windows.Forms.TreeNode>удаляется из коллекции узлов дерева, все последующие дерева, узлы, перемещаются вверх на одну позицию в коллекции.</xref:System.Windows.Forms.TreeNode>"
  syntax:
    content: void IList.Remove (object node);
    parameters:
    - id: node
      type: System.Object
      description: "<xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> Для удаления из коллекции."
  overload: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String)
  nameWithType: TreeNodeCollection.Add(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String)
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(TreeNode)
  nameWithType: TreeNodeCollection.Add(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(TreeNode)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String)
  nameWithType: TreeNodeCollection.Add(String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Add(String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,Int32,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Add(System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add(String,String,String,String)
  nameWithType: TreeNodeCollection.Add(String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Add(String,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.AddRange(System.Windows.Forms.TreeNode[])
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: AddRange(TreeNode[])
  nameWithType: TreeNodeCollection.AddRange(TreeNode[])
  fullName: System.Windows.Forms.TreeNodeCollection.AddRange(TreeNode[])
- uid: System.Windows.Forms.TreeNode[]
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode[]
  spec.csharp:
  - uid: System.Windows.Forms.TreeNode
    name: TreeNode
    nameWithType: TreeNode
    fullName: TreeNode[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.TreeNodeCollection.Clear
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Clear()
  nameWithType: TreeNodeCollection.Clear()
  fullName: System.Windows.Forms.TreeNodeCollection.Clear()
- uid: System.Windows.Forms.TreeNodeCollection.Contains(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Contains(TreeNode)
  nameWithType: TreeNodeCollection.Contains(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Contains(TreeNode)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: ContainsKey(String)
  nameWithType: TreeNodeCollection.ContainsKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.ContainsKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: TreeNodeCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Forms.TreeNodeCollection.Count
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
  fullName: System.Windows.Forms.TreeNodeCollection.Count
- uid: System.Windows.Forms.TreeNodeCollection.Find(System.String,System.Boolean)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Find(String,Boolean)
  nameWithType: TreeNodeCollection.Find(String,Boolean)
  fullName: System.Windows.Forms.TreeNodeCollection.Find(String,Boolean)
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: TreeNodeCollection.GetEnumerator()
  fullName: System.Windows.Forms.TreeNodeCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOf(TreeNode)
  nameWithType: TreeNodeCollection.IndexOf(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOf(TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOfKey(String)
  nameWithType: TreeNodeCollection.IndexOfKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.IndexOfKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,TreeNode)
  nameWithType: TreeNodeCollection.Insert(Int32,TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.Int32,System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,Int32,Int32)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,Int32,Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Insert(System.Int32,System.String,System.String,System.String,System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert(Int32,String,String,String,String)
  nameWithType: TreeNodeCollection.Insert(Int32,String,String,String,String)
  fullName: System.Windows.Forms.TreeNodeCollection.Insert(Int32,String,String,String,String)
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
  fullName: System.Windows.Forms.TreeNodeCollection.IsReadOnly
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeCollection.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.Item(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item(String)
  nameWithType: TreeNodeCollection.Item(String)
  fullName: System.Windows.Forms.TreeNodeCollection.Item(String)
- uid: System.Windows.Forms.TreeNodeCollection.Remove(System.Windows.Forms.TreeNode)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Remove(TreeNode)
  nameWithType: TreeNodeCollection.Remove(TreeNode)
  fullName: System.Windows.Forms.TreeNodeCollection.Remove(TreeNode)
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeCollection.RemoveAt(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveAt(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey(System.String)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveByKey(String)
  nameWithType: TreeNodeCollection.RemoveByKey(String)
  fullName: System.Windows.Forms.TreeNodeCollection.RemoveByKey(String)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: TreeNodeCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.TreeNodeCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.TreeNodeCollection.Add*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeCollection.Add
- uid: System.Windows.Forms.TreeNodeCollection.AddRange*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: AddRange
  nameWithType: TreeNodeCollection.AddRange
- uid: System.Windows.Forms.TreeNodeCollection.Clear*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Clear
  nameWithType: TreeNodeCollection.Clear
- uid: System.Windows.Forms.TreeNodeCollection.Contains*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeCollection.Contains
- uid: System.Windows.Forms.TreeNodeCollection.ContainsKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: ContainsKey
  nameWithType: TreeNodeCollection.ContainsKey
- uid: System.Windows.Forms.TreeNodeCollection.CopyTo*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeCollection.CopyTo
- uid: System.Windows.Forms.TreeNodeCollection.Count*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Count
  nameWithType: TreeNodeCollection.Count
- uid: System.Windows.Forms.TreeNodeCollection.Find*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Find
  nameWithType: TreeNodeCollection.Find
- uid: System.Windows.Forms.TreeNodeCollection.GetEnumerator*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: TreeNodeCollection.GetEnumerator
- uid: System.Windows.Forms.TreeNodeCollection.IndexOf*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeCollection.IndexOf
- uid: System.Windows.Forms.TreeNodeCollection.IndexOfKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IndexOfKey
  nameWithType: TreeNodeCollection.IndexOfKey
- uid: System.Windows.Forms.TreeNodeCollection.Insert*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Insert
  nameWithType: TreeNodeCollection.Insert
- uid: System.Windows.Forms.TreeNodeCollection.IsReadOnly*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: TreeNodeCollection.IsReadOnly
- uid: System.Windows.Forms.TreeNodeCollection.Item*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeCollection.Item
- uid: System.Windows.Forms.TreeNodeCollection.Remove*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeCollection.Remove
- uid: System.Windows.Forms.TreeNodeCollection.RemoveAt*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeCollection.RemoveAt
- uid: System.Windows.Forms.TreeNodeCollection.RemoveByKey*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: RemoveByKey
  nameWithType: TreeNodeCollection.RemoveByKey
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: TreeNodeCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: TreeNodeCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: TreeNodeCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Contains*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: TreeNodeCollection.System.Collections.IList.Contains
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: TreeNodeCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Insert*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: TreeNodeCollection.System.Collections.IList.Insert
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: TreeNodeCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Item*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: TreeNodeCollection.System.Collections.IList.Item
- uid: System.Windows.Forms.TreeNodeCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.TreeNodeCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: TreeNodeCollection.System.Collections.IList.Remove
