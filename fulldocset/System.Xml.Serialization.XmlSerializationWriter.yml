### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializationWriter
  id: XmlSerializationWriter
  children:
  - System.Xml.Serialization.XmlSerializationWriter.#ctor
  - System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  - System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.EscapeName
  - System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  - System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  - System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  - System.Xml.Serialization.XmlSerializationWriter.Namespaces
  - System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  - System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.Writer
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  - System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  - System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  - System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  - System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  langs:
  - csharp
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter
  fullName: System.Xml.Serialization.XmlSerializationWriter
  type: Class
  summary: "Представляет абстрактный класс, используемый для управления сериализации <xref:System.Xml.Serialization.XmlSerializer>класса.</xref:System.Xml.Serialization.XmlSerializer>"
  remarks: "Во время инициализации инфраструктура сериализации .NET Framework XML динамически создает и компилирует временный класс, производный от абстрактного класса XmlSerializationWriter сериализации. XmlSerializationWriter также реализован в среде .NET Framework для сериализации <xref:System.Web.Services.Discovery.DiscoveryDocument>и <xref:System.Web.Services.Description.ServiceDescription>объектов в XML-документов.</xref:System.Web.Services.Description.ServiceDescription> </xref:System.Web.Services.Discovery.DiscoveryDocument>       Не следует создавать производные классы от XmlSerializationWriter. Вместо этого необходимо вызвать <xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>метод.</xref:System.Xml.Serialization.XmlSerializer.Serialize%2A>"
  syntax:
    content: 'public abstract class XmlSerializationWriter : System.Xml.Serialization.XmlSerializationGeneratedCode'
  inheritance:
  - System.Object
  - System.Xml.Serialization.XmlSerializationGeneratedCode
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: XmlSerializationWriter()
  nameWithType: XmlSerializationWriter.XmlSerializationWriter()
  fullName: System.Xml.Serialization.XmlSerializationWriter.XmlSerializationWriter()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.XmlSerializationWriter&quot;> </xref> класса."
  syntax:
    content: protected XmlSerializationWriter ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  id: AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  nameWithType: XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  fullName: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Сохраняет реализация <xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;> </xref> делегат и тип, он применяется для последующего вызова."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Во время инициализации инфраструктура сериализации .NET Framework XML динамически создает и компилирует временный класс для сериализации, который является производным от <xref:System.Xml.Serialization.XmlSerializationWriter>.</xref:System.Xml.Serialization.XmlSerializationWriter> Во время этого процесса .NET Framework создает методы записи, которые реализуют <xref:System.Xml.Serialization.XmlSerializationWriteCallback>делегировать.</xref:System.Xml.Serialization.XmlSerializationWriteCallback> Данная операция выполняется для определенных сопоставлений между типами .NET Framework и типами данных XML, сериализованы посредством XML с кодировкой SOAP и не являются корневыми элементами. Затем при необходимости во время сериализации вызывается метод записи.       Вам не следует создавать непосредственно экземпляр <xref:System.Xml.Serialization.XmlSerializationWriteCallback>.</xref:System.Xml.Serialization.XmlSerializationWriteCallback>       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void AddWriteCallback (Type type, string typeName, string typeNs, System.Xml.Serialization.XmlSerializationWriteCallback callback);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Сериализуемых объектов.</xref:System.Type>"
    - id: typeName
      type: System.String
      description: "Имя типа сериализуемых объектов."
    - id: typeNs
      type: System.String
      description: "Пространство имен типа сериализуемых объектов."
    - id: callback
      type: System.Xml.Serialization.XmlSerializationWriteCallback
      description: "Экземпляр <xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;> </xref> делегата."
  overload: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  id: CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateChoiceIdentifierValueException(String,String,String,String)
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>указывает непредвиденное имя элемента, который соответствует схеме XML <xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;> </xref> объявление элемента.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateChoiceIdentifierValueException (string value, string identifier, string name, string ns);
    parameters:
    - id: value
      type: System.String
      description: "Имя, которое является недопустимым."
    - id: identifier
      type: System.String
      description: "<xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;> </xref> Объявление элемента, к которому принадлежит имя."
    - id: name
      type: System.String
      description: "Ожидаемое локальное имя элемента."
    - id: ns
      type: System.String
      description: "Ожидаемое пространство имен элемента."
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  id: CreateInvalidAnyTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidAnyTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>указывает <xref:System.Xml.Serialization.XmlAnyElementAttribute>которого был неправильно применен к члену; только члены, которые относятся к типу <xref href=&quot;System.Xml.XmlNode&quot;> </xref>, или производным от <xref href=&quot;System.Xml.XmlNode&quot;> </xref>, являются допустимыми.</xref:System.Xml.Serialization.XmlAnyElementAttribute> </xref:System.InvalidOperationException>"
  syntax:
    content: protected Exception CreateInvalidAnyTypeException (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Объект, представляющий Недопустимый член."
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  id: CreateInvalidAnyTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidAnyTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>указывает <xref:System.Xml.Serialization.XmlAnyElementAttribute>которого был неправильно применен к члену; только члены, которые относятся к типу <xref href=&quot;System.Xml.XmlNode&quot;> </xref>, или производным от <xref href=&quot;System.Xml.XmlNode&quot;> </xref>, являются допустимыми.</xref:System.Xml.Serialization.XmlAnyElementAttribute> </xref:System.InvalidOperationException>"
  syntax:
    content: protected Exception CreateInvalidAnyTypeException (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>, Является недопустимым.</xref:System.Type>"
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  id: CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidChoiceIdentifierValueException(String,String)
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывает на сбой при записи массива, где XML-схемы <xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;> </xref> применяется объявление элемента.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateInvalidChoiceIdentifierValueException (string type, string identifier);
    parameters:
    - id: type
      type: System.String
      description: "Сериализуемый тип."
    - id: identifier
      type: System.String
      description: "Имя <xref uid=&quot;langword_csharp_choice&quot; name=&quot;choice&quot; href=&quot;&quot;> </xref> объявление элемента."
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  id: CreateInvalidEnumValueException(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateInvalidEnumValueException(Object,String)
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>для недопустимого значения перечисления.</xref:System.InvalidOperationException>"
  syntax:
    content: protected Exception CreateInvalidEnumValueException (object value, string typeName);
    parameters:
    - id: value
      type: System.Object
      description: "Объект, представляющий недопустимое перечисление."
    - id: typeName
      type: System.String
      description: "Имя типа XML."
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  id: CreateMismatchChoiceException(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateMismatchChoiceException(String,String,String)
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, что значение для элемента XML не соответствует тип перечисления.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateMismatchChoiceException (string value, string elementName, string enumValue);
    parameters:
    - id: value
      type: System.String
      description: "Недопустимое значение."
    - id: elementName
      type: System.String
      description: "Имя XML-элемента с недопустимым значением."
    - id: enumValue
      type: System.String
      description: "Допустимое значение."
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  id: CreateUnknownAnyElementException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownAnyElementException(String,String)
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывает, что элемент XML, XML-схемы не должны превышать <xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;> </xref> объявление элемента не может обрабатываться.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateUnknownAnyElementException (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "XML-элемент, который не может быть обработан."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  id: CreateUnknownTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, что сериализуемый тип не используется допустимым образом или непредвиденно вызвала.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateUnknownTypeException (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Объект, тип которого не может быть сериализован."
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  id: CreateUnknownTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: CreateUnknownTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает <xref:System.InvalidOperationException>, указывающее, что сериализуемый тип не используется допустимым образом или непредвиденно вызвала.</xref:System.InvalidOperationException>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected Exception CreateUnknownTypeException (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Тип, который не может быть сериализован."
    return:
      type: System.Exception
      description: "Вновь созданного исключения."
  overload: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  id: EscapeName
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
  fullName: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает значение, указывающее, является ли <xref:System.Xml.XmlConvert.EncodeName*>метод используется для корректного XML-кода.</xref:System.Xml.XmlConvert.EncodeName*>"
  remarks: "<xref:System.Xml.XmlConvert.EncodeName%2A>Метод записывает допустимый XML-код из источников недопустимый.</xref:System.Xml.XmlConvert.EncodeName%2A> Например <xref:System.Data.DataColumn.ColumnName%2A>свойство <xref:System.Data.DataColumn>класс может содержать пробелы, которые недопустимы в XML-ФАЙЛЕ.</xref:System.Data.DataColumn> </xref:System.Data.DataColumn.ColumnName%2A> <xref:System.Xml.XmlConvert.DecodeName%2A>Метод считывает закодированный XML и его восстановления в исходное значение.</xref:System.Xml.XmlConvert.DecodeName%2A> Тем не менее <xref:System.Xml.Schema.XmlSchema.Read%2A>метод <xref:System.Xml.Schema.XmlSchema>не удается прочитать, например в кодировке XML.</xref:System.Xml.Schema.XmlSchema> </xref:System.Xml.Schema.XmlSchema.Read%2A> В этом случае свойству EscapeName `false` отключение кодировки XML."
  syntax:
    content: protected bool EscapeName { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*>метод возвращает закодированный именем; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*>"
  overload: System.Xml.Serialization.XmlSerializationWriter.EscapeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  id: FromByteArrayBase64(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromByteArrayBase64(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayBase64(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Обрабатывает массива байтов в base-64."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       А не возвращать строку в качестве другие аналогичные методы «от», статический метод FromByteArrayBase64 возвращает исходный `byte[]` объекта для повышения производительности и экономии памяти."
  syntax:
    content: protected static byte[] FromByteArrayBase64 (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "Base-64 <xref:System.Byte>массива.</xref:System.Byte>"
    return:
      type: System.Byte[]
      description: "Же массив байтов, который был передан в качестве аргумента."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  id: FromByteArrayHex(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromByteArrayHex(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayHex(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает строку из ввода шестнадцатеричного байтового массива."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromByteArrayHex является статическим."
  syntax:
    content: protected static string FromByteArrayHex (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "Массив шестнадцатеричных байтов для преобразования в строку."
    return:
      type: System.String
      description: "Значение массива байтов преобразуется в строку."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  id: FromChar(System.Char)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromChar(Char)
  nameWithType: XmlSerializationWriter.FromChar(Char)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromChar(Char)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает строку из входного <xref:System.Char>.</xref:System.Char>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromChar является статическим."
  syntax:
    content: protected static string FromChar (char value);
    parameters:
    - id: value
      type: System.Char
      description: "Объект <xref:System.Char>для преобразования в строку.</xref:System.Char>"
    return:
      type: System.String
      description: "<xref:System.Char>Значение преобразуется в строку.</xref:System.Char>"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromChar*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  id: FromDate(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromDate(DateTime)
  nameWithType: XmlSerializationWriter.FromDate(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDate(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает строку из <xref:System.DateTime>объекта.</xref:System.DateTime>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromDate является статическим."
  syntax:
    content: protected static string FromDate (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "Объект <xref:System.DateTime>для преобразования в строку.</xref:System.DateTime>"
    return:
      type: System.String
      description: "Строковое представление <xref:System.DateTime>, отображает дату, а не время.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromDate*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  id: FromDateTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromDateTime(DateTime)
  nameWithType: XmlSerializationWriter.FromDateTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает строку из входного <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromDateTime является статическим."
  syntax:
    content: protected static string FromDateTime (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "Объект <xref:System.DateTime>для преобразования в строку.</xref:System.DateTime>"
    return:
      type: System.String
      description: "Строковое представление <xref:System.DateTime>, отображаются дата и время.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  id: FromEnum(System.Int64,System.String[],System.Int64[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromEnum(Int64,String[],Int64[])
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает строку, которая состоит из идентификаторов с разделителями, представляющих члены перечисления, которые были заданы."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromEnum является статическим."
  syntax:
    content: protected static string FromEnum (long value, string[] values, long[] ids);
    parameters:
    - id: value
      type: System.Int64
      description: "Значение перечисления, как ряд побитовое <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;> </xref> операций."
    - id: values
      type: System.String[]
      description: "Имя значения перечисления."
    - id: ids
      type: System.Int64[]
      description: "Значения констант перечисления."
    return:
      type: System.String
      description: "Строка, состоящая из идентификаторов-разделителей, где каждый представляет член из установленного списка перечислителя."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  id: FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromEnum(Int64,String[],Int64[],String)
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Принимает числовое значение перечисления, имена и константы из списка перечислителя для перечисления и возвращает строку, состоящую из идентификаторов-разделителей, представляющих члены перечисления, которые были заданы."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected static string FromEnum (long value, string[] values, long[] ids, string typeName);
    parameters:
    - id: value
      type: System.Int64
      description: "Значение перечисления, как ряд побитовое <xref uid=&quot;langword_csharp_OR&quot; name=&quot;OR&quot; href=&quot;&quot;> </xref> операций."
    - id: values
      type: System.String[]
      description: "Значения перечисления."
    - id: ids
      type: System.Int64[]
      description: "Константы перечисления."
    - id: typeName
      type: System.String
      description: "Имя типа"
    return:
      type: System.String
      description: "Строка, состоящая из идентификаторов-разделителей, где каждый элемент является одним из значений с побитовой операции."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  id: FromTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromTime(DateTime)
  nameWithType: XmlSerializationWriter.FromTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromTime(DateTime)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает строку из <xref:System.DateTime>объекта.</xref:System.DateTime>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromTime является статическим."
  syntax:
    content: protected static string FromTime (DateTime value);
    parameters:
    - id: value
      type: System.DateTime
      description: "Объект <xref:System.DateTime>, преобразуется в строку.</xref:System.DateTime>"
    return:
      type: System.String
      description: "Строковое представление <xref:System.DateTime>объекта, который отображает время, а дата не указана.</xref:System.DateTime>"
  overload: System.Xml.Serialization.XmlSerializationWriter.FromTime*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  id: FromXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlName(String)
  nameWithType: XmlSerializationWriter.FromXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Кодирует допустимое имя XML путем замены символов, которые не могут использоваться в escape-последовательности."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromXmlName является статическим."
  syntax:
    content: protected static string FromXmlName (string name);
    parameters:
    - id: name
      type: System.String
      description: "Строка для использования в качестве имени XML."
    return:
      type: System.String
      description: "Кодируемая строка."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  id: FromXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNCName(String)
  nameWithType: XmlSerializationWriter.FromXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Кодирует допустимое локальное имя XML путем замены символов, которые не могут использоваться в escape-последовательности."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>класс предназначены для использования производными классами, которые используются внутренним образом в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromXmlNCName является статическим."
  syntax:
    content: protected static string FromXmlNCName (string ncName);
    parameters:
    - id: ncName
      type: System.String
      description: "Строка для использования в качестве локального имени XML (неопределенную)."
    return:
      type: System.String
      description: "Кодируемая строка."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  id: FromXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNmToken(String)
  nameWithType: XmlSerializationWriter.FromXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Кодирует имя XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromXmlNmToken является статическим."
  syntax:
    content: protected static string FromXmlNmToken (string nmToken);
    parameters:
    - id: nmToken
      type: System.String
      description: "Имя XML для кодирования."
    return:
      type: System.String
      description: "Кодируемая строка."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  id: FromXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlNmTokens(String)
  nameWithType: XmlSerializationWriter.FromXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Кодирует последовательность разделенных пробелами имен XML в единое имя XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод FromXmlNmTokens является статическим."
  syntax:
    content: protected static string FromXmlNmTokens (string nmTokens);
    parameters:
    - id: nmTokens
      type: System.String
      description: "Последовательность имен XML для кодирования разделяются пробелами."
    return:
      type: System.String
      description: "Кодируемая строка."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  id: FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlQualifiedName(XmlQualifiedName)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает полное имя XML с недопустимым знаками, замещенными escape-последовательности."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected string FromXmlQualifiedName (System.Xml.XmlQualifiedName xmlQualifiedName);
    parameters:
    - id: xmlQualifiedName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>, Представляющий XML, которые требуется записать.</xref:System.Xml.XmlQualifiedName>"
    return:
      type: System.String
      description: "Полное имя XML с недопустимым знаками, замещенными escape-последовательности."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  id: FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: FromXmlQualifiedName(XmlQualifiedName,Boolean)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Создает строку, могут быть написаны как полное имя XML, недопустимые символы заменяются escape-последовательности."
  syntax:
    content: protected string FromXmlQualifiedName (System.Xml.XmlQualifiedName xmlQualifiedName, bool ignoreEmpty);
    parameters:
    - id: xmlQualifiedName
      type: System.Xml.XmlQualifiedName
      description: "<xref:System.Xml.XmlQualifiedName>, Представляющий XML, которые требуется записать.</xref:System.Xml.XmlQualifiedName>"
    - id: ignoreEmpty
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Игнорировать пробелы в строке; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Полное имя XML с недопустимым знаками, замещенными escape-последовательности."
  overload: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  id: InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: InitCallbacks()
  nameWithType: XmlSerializationWriter.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует экземпляр <xref href=&quot;System.Xml.Serialization.XmlSerializationWriteCallback&quot;> </xref> делегат для сериализации XML с кодировкой SOAP."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Во время инициализации инфраструктура сериализации .NET Framework XML динамически создает и компилирует временный класс для сериализации, который является производным от <xref:System.Xml.Serialization.XmlSerializationWriter>.</xref:System.Xml.Serialization.XmlSerializationWriter> Во время этого процесса .NET Framework создает методы записи, которые реализуют <xref:System.Xml.Serialization.XmlSerializationWriteCallback>делегировать.</xref:System.Xml.Serialization.XmlSerializationWriteCallback> Данная операция выполняется для определенных сопоставлений между типами .NET Framework и типами данных XML, сериализуются при помощи XML с кодировкой SOAP и не являются корневыми элементами. Затем при необходимости во время сериализации вызывается метод записи.       Абстрактный InitCallbacks, метод — где временный производный класс создает экземпляр и инициализирует написать методы обратного вызова.       Вам не следует создавать непосредственно экземпляр <xref:System.Xml.Serialization.XmlSerializationWriteCallback>.</xref:System.Xml.Serialization.XmlSerializationWriteCallback>       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected abstract void InitCallbacks ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  id: Namespaces
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
  fullName: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает список уточненные XML-имен объектов, которые содержат пространства имен и префиксы, используемые для производства полных имен в XML-документах."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected System.Collections.ArrayList Namespaces { get; set; }
    return:
      type: System.Collections.ArrayList
      description: "<xref href=&quot;System.Collections.ArrayList&quot;> </xref> , Содержащий пары имен и префиксом."
  overload: System.Xml.Serialization.XmlSerializationWriter.Namespaces*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  id: ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Получает динамически созданную сборку по имени."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод ResolveDynamicAssembly является статическим."
  syntax:
    content: protected static System.Reflection.Assembly ResolveDynamicAssembly (string assemblyFullName);
    parameters:
    - id: assemblyFullName
      type: System.String
      description: "Полное имя сборки."
    return:
      type: System.Reflection.Assembly
      description: "Динамически созданные сборки."
  overload: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  id: TopLevelElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: TopLevelElement()
  nameWithType: XmlSerializationWriter.TopLevelElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует ссылки объекта только при сериализации сообщения SOAP с кодировкой SOAP."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент и должно быть указано любое количество раз, замените элементы. Метод TopLevelElement помогает отслеживать объекты, которые могут быть сериализованы как `multiRef` элементов.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void TopLevelElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  id: WriteAttribute(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlWriter>объект для записи атрибута XML, который не имеет пространства имен для имени.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string localName, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя атрибута XML."
    - id: value
      type: System.Byte[]
      description: "Значение атрибута XML в виде массива байтов."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  id: WriteAttribute(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlWriter>для записи XML-атрибут, не имеет пространства имен для имени.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя атрибута XML."
    - id: value
      type: System.String
      description: "Значение атрибута XML в виде строки."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  id: WriteAttribute(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlWriter>объект для записи XML-атрибут.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string localName, string ns, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя атрибута XML."
    - id: ns
      type: System.String
      description: "Пространство имен XML-атрибута."
    - id: value
      type: System.Byte[]
      description: "Значение атрибута XML в виде массива байтов."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  id: WriteAttribute(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает атрибут XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя атрибута XML."
    - id: ns
      type: System.String
      description: "Пространство имен XML-атрибута."
    - id: value
      type: System.String
      description: "Значение атрибута XML в виде строки."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  id: WriteAttribute(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteAttribute(String,String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает атрибут XML, где префикс пространства имен предоставляется вручную."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteAttribute (string prefix, string localName, string ns, string value);
    parameters:
    - id: prefix
      type: System.String
      description: "Префикс пространства имен для записи."
    - id: localName
      type: System.String
      description: "Локальное имя атрибута XML."
    - id: ns
      type: System.String
      description: "Пространство имен, представленное префиксом."
    - id: value
      type: System.String
      description: "Значение атрибута XML в виде строки."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает объект узла XML в теле именованного элемента XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод WriteElementEncoded вызывается только при создании XML с кодировкой SOAP, как описано в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteElementEncoded (System.Xml.XmlNode node, string name, string ns, bool isNullable, bool any);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "XML-узел для записи дочернего элемента XML."
    - id: name
      type: System.String
      description: "Локальное имя родительского элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен XML родительского элемента для записи."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если объект для сериализации <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: any
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать, что узел, если XML-элемента, соответствует XML-схемы <xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;> </xref> объявление элемента; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref:System.Xml.XmlWriter>объект для записи <xref href=&quot;System.Xml.XmlNode&quot;> </xref> объекта в тексте именованного элемента XML.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Метод WriteElementLiteral вызывается только при записи литерала XML-ФАЙЛ, могут быть определены в документ схемы XML."
  syntax:
    content: protected void WriteElementLiteral (System.Xml.XmlNode node, string name, string ns, bool isNullable, bool any);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "XML-узел для записи дочернего элемента XML."
    - id: name
      type: System.String
      description: "Локальное имя родительского элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен XML родительского элемента для записи."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если объект для сериализации <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: any
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать, что узел, если XML-элемента, соответствует XML-схемы <xref uid=&quot;langword_csharp_any&quot; name=&quot;any&quot; href=&quot;&quot;> </xref> объявление элемента; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML с заданным полным именем в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementQualifiedName (string localName, System.Xml.XmlQualifiedName value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "Имя для записи, используя его префикс, если уточненное пространством имен, в тексте элемента."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML с заданным полным именем в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementQualifiedName (string localName, string ns, System.Xml.XmlQualifiedName value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "Имя для записи, используя его префикс, если уточненное пространством имен, в тексте элемента."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML с заданным полным именем в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementQualifiedName (string localName, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "Имя для записи, используя его префикс, если уточненное пространством имен, в тексте элемента."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML с заданным полным именем в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementQualifiedName (string localName, string ns, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "Имя для записи, используя его префикс, если уточненное пространством имен, в тексте элемента."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  id: WriteElementString(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementString (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя элемента XML для записи без квалификации пространства имен."
    - id: value
      type: System.String
      description: "Текстовое значение элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  id: WriteElementString(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementString (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    - id: value
      type: System.String
      description: "Текстовое значение элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementString (string localName, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: value
      type: System.String
      description: "Текстовое значение элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementString(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementString (string localName, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    - id: value
      type: System.String
      description: "Текстовое значение элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  id: WriteElementStringRaw(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: value
      type: System.Byte[]
      description: "Текстовое значение элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  id: WriteElementStringRaw(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: value
      type: System.String
      description: "Текстовое значение элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: value
      type: System.Byte[]
      description: "Текстовое значение элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  id: WriteElementStringRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, byte[] value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    - id: value
      type: System.Byte[]
      description: "Текстовое значение элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  id: WriteElementStringRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, string value);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    - id: value
      type: System.String
      description: "Текстовое значение элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: value
      type: System.String
      description: "Текстовое значение элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    - id: value
      type: System.Byte[]
      description: "Текстовое значение элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteElementStringRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML-элемента с указанным значением в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteElementStringRaw (string localName, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: localName
      type: System.String
      description: "Локальное имя XML-элемента."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML."
    - id: value
      type: System.String
      description: "Текстовое значение элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  id: WriteEmptyTag(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEmptyTag(String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, тело которого является пустым."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteEmptyTag (string name);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  id: WriteEmptyTag(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEmptyTag(String,String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, тело которого является пустым."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteEmptyTag (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  id: WriteEndElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEndElement()
  nameWithType: XmlSerializationWriter.WriteEndElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает <xref uid=&quot;langword_csharp_&lt;closing&gt;&quot; name=&quot;&lt;closing&gt;&quot; href=&quot;&quot;> </xref> тега элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteEndElement ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  id: WriteEndElement(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteEndElement(Object)
  nameWithType: XmlSerializationWriter.WriteEndElement(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает <xref uid=&quot;langword_csharp_&lt;closing&gt;&quot; name=&quot;&lt;closing&gt;&quot; href=&quot;&quot;> </xref> тега элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteEndElement (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Сериализуемый объект."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  id: WriteId(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteId(Object)
  nameWithType: XmlSerializationWriter.WriteId(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteId(Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает <xref uid=&quot;langword_csharp_id&quot; name=&quot;id&quot; href=&quot;&quot;> </xref> атрибут, который отображается в кодировке SOAP <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемента."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может ссылаться несколько раз `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteId (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Сериализуемый объект."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteId*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  id: WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNamespaceDeclarations(XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает атрибуты объявления пространства имен."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteNamespaceDeclarations (System.Xml.Serialization.XmlSerializerNamespaces xmlns);
    parameters:
    - id: xmlns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "Для объявления пространства имен XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  id: WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, тело которого содержит допустимое полное имя XML. <xref:System.Xml.XmlWriter>Вставляет <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если строковое значение является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullableQualifiedNameEncoded вызывается только при создании XML с кодировкой SOAP, как описано в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteNullableQualifiedNameEncoded (string name, string ns, System.Xml.XmlQualifiedName value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "Полное имя XML для записи в основную часть элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, тело которого содержит допустимое полное имя XML. <xref:System.Xml.XmlWriter>Вставляет <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если строковое значение является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullableQualifiedNameLiteral вызывается только при записи литерала XML-ФАЙЛ, могут быть определены в документ схемы XML."
  syntax:
    content: protected void WriteNullableQualifiedNameLiteral (string name, string ns, System.Xml.XmlQualifiedName value);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: value
      type: System.Xml.XmlQualifiedName
      description: "Полное имя XML для записи в основную часть элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, содержащий строку, как текст. <xref:System.Xml.XmlWriter>Вставляет <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если строковое значение является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullableStringEncoded вызывается только при создании XML с кодировкой SOAP, как описано в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteNullableStringEncoded (string name, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: value
      type: System.String
      description: "Строка для записи в основную часть элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает массив байтов в тексте XML-элемента. <xref:System.Xml.XmlWriter>Вставляет <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если строковое значение является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullableStringEncodedRaw вызывается только при создании XML с кодировкой SOAP, как описано в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteNullableStringEncodedRaw (string name, string ns, byte[] value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: value
      type: System.Byte[]
      description: "Массив байтов для записи в основную часть элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  id: WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, содержащий строку, как текст. <xref:System.Xml.XmlWriter>Вставляет <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если строковое значение является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullableStringEncodedRaw вызывается только при создании XML с кодировкой SOAP, как описано в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteNullableStringEncodedRaw (string name, string ns, string value, System.Xml.XmlQualifiedName xsiType);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: value
      type: System.String
      description: "Строка для записи в основную часть элемента XML."
    - id: xsiType
      type: System.Xml.XmlQualifiedName
      description: "Имя типа данных схемы XML для записи <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибута."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  id: WriteNullableStringLiteral(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteral(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, содержащий строку, как текст. <xref:System.Xml.XmlWriter>Вставляет <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если строковое значение является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullableStringLiteral вызывается только при записи литерала XML-ФАЙЛ, могут быть определены в документ схемы XML."
  syntax:
    content: protected void WriteNullableStringLiteral (string name, string ns, string value);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: value
      type: System.String
      description: "Строка для записи в основную часть элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  id: WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteralRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает массив байтов в тексте XML-элемента. <xref:System.Xml.XmlWriter>Вставляет <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если строковое значение является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullableStringLiteralRaw вызывается только при записи литерала XML-ФАЙЛ, могут быть определены в документ схемы XML."
  syntax:
    content: protected void WriteNullableStringLiteralRaw (string name, string ns, byte[] value);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: value
      type: System.Byte[]
      description: "Массив байтов для записи в основную часть элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  id: WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullableStringLiteralRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, содержащий строку, как текст. <xref:System.Xml.XmlWriter>Вставляет <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если строковое значение является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullableStringLiteralRaw вызывается только при записи литерала XML-ФАЙЛ, могут быть определены в документ схемы XML."
  syntax:
    content: protected void WriteNullableStringLiteralRaw (string name, string ns, string value);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: value
      type: System.String
      description: "Строка для записи в основную часть элемента XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  id: WriteNullTagEncoded(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagEncoded(String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML с <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullTagEncoded вызывается только при создании XML с кодировкой SOAP, как описано в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteNullTagEncoded (string name);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  id: WriteNullTagEncoded(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagEncoded(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML с <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullTagEncoded вызывается только при создании XML с кодировкой SOAP, как описано в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteNullTagEncoded (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  id: WriteNullTagLiteral(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagLiteral(String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML с <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullTagLiteral вызывается только при записи литерала XML-ФАЙЛ, могут быть определены в документ схемы XML."
  syntax:
    content: protected void WriteNullTagLiteral (string name);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  id: WriteNullTagLiteral(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteNullTagLiteral(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML с <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       Если задано значение `true`, `nil` атрибутов из пространства имен экземпляра схемы XML (сокращенное `xsi`) указывает значение null.       Метод WriteNullTagLiteral вызывается только при записи литерала XML-ФАЙЛ, могут быть определены в документ схемы XML."
  syntax:
    content: protected void WriteNullTagLiteral (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML сообщения SOAP, который может содержать ссылку на <xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;> </xref> XML-элемента для данного объекта."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `<multiRef>` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o);
    parameters:
    - id: n
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: o
      type: System.Object
      description: "Объект сериализуемый либо в текущем элементе XML или <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемент, на который ссылается текущий элемент."
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML сообщения SOAP, который может содержать ссылку на <xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;> </xref> XML-элемента для данного объекта."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `<multiRef>` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType);
    parameters:
    - id: n
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: o
      type: System.Object
      description: "Объект сериализуемый либо в текущем элементе XML или <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемент, на которую ссылается текущий элемент."
    - id: ambientType
      type: System.Type
      description: "Тип, хранимый в сопоставлении типа объекта (в отличие от объекта типа найдены напрямую с помощью <xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;> </xref> операции)."
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML сообщения SOAP, который может содержать ссылку на <xref uid=&quot;langword_csharp_&lt;multiRef&gt;&quot; name=&quot;&lt;multiRef&gt;&quot; href=&quot;&quot;> </xref> XML-элемента для данного объекта."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType, bool suppressReference);
    parameters:
    - id: n
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: o
      type: System.Object
      description: "Объект сериализуемый либо в текущем элементе XML или <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемент, на который ссылается текущий элемент."
    - id: ambientType
      type: System.Type
      description: "Тип, хранимый в сопоставлении типа объекта (в отличие от объекта типа найдены напрямую с помощью <xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;> </xref> операции)."
    - id: suppressReference
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для сериализации объекта непосредственно в элемент XML вместо создания ссылки элемент другого элемента, содержащий данные; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  id: WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML сообщения SOAP, который может содержать ссылку на <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML-элемента для данного объекта."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WritePotentiallyReferencingElement (string n, string ns, object o, Type ambientType, bool suppressReference, bool isNullable);
    parameters:
    - id: n
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: o
      type: System.Object
      description: "Объект сериализуемый либо в текущем элементе XML или <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемент, на которую ссылается текущий элемент."
    - id: ambientType
      type: System.Type
      description: "Тип, хранимый в сопоставлении типа объекта (в отличие от объекта типа найдены напрямую с помощью <xref uid=&quot;langword_csharp_typeof&quot; name=&quot;typeof&quot; href=&quot;&quot;> </xref> операции)."
    - id: suppressReference
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для сериализации объекта непосредственно в элемент XML вместо создания ссылки элемент другого элемента, содержащий данные; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если объект для сериализации <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer
  id: Writer
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
  fullName: System.Xml.Serialization.XmlSerializationWriter.Writer
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает или задает <xref:System.Xml.XmlWriter>, который используется с <xref href=&quot;System.Xml.Serialization.XmlSerializationWriter&quot;> </xref>.</xref:System.Xml.XmlWriter>"
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected System.Xml.XmlWriter Writer { get; set; }
    return:
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>Используется экземпляром класса.</xref:System.Xml.XmlWriter>"
  overload: System.Xml.Serialization.XmlSerializationWriter.Writer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  id: WriteReferencedElements
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencedElements()
  nameWithType: XmlSerializationWriter.WriteReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Сериализует объекты в SOAP-кодирования <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> XML-элементов в сообщении SOAP."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteReferencedElements ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  id: WriteReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML сообщения SOAP, содержащий ссылку на <xref uid=&quot;langword_csharp_multiRef &quot; name=&quot;multiRef &quot; href=&quot;&quot;> </xref>элемента для данного объекта."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteReferencingElement (string n, string ns, object o);
    parameters:
    - id: n
      type: System.String
      description: "Локальное имя ссылающегося элемента для записи."
    - id: ns
      type: System.String
      description: "Пространство имен ссылающегося элемента для записи."
    - id: o
      type: System.Object
      description: "Сериализуемый объект."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  id: WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteReferencingElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML сообщения SOAP, содержащий ссылку на <xref uid=&quot;langword_csharp_multiRef&quot; name=&quot;multiRef&quot; href=&quot;&quot;> </xref> элемента для данного объекта."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       SOAP-кодирование позволяет уникальному элементу XML появляться только один раз в рамках сообщения SOAP в качестве `multiRef` элемент, идентифицируемый `id` атрибута. `id` Значение может быть любым количеством ссылок `href` атрибутов (или `ref` атрибутов в SOAP 1.2) в заменить элементы.       Кодирование SOAP описывается в разделе 5 спецификации SOAP 1.1."
  syntax:
    content: protected void WriteReferencingElement (string n, string ns, object o, bool isNullable);
    parameters:
    - id: n
      type: System.String
      description: "Локальное имя ссылающегося элемента для записи."
    - id: ns
      type: System.String
      description: "Пространство имен ссылающегося элемента для записи."
    - id: o
      type: System.Object
      description: "Сериализуемый объект."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> атрибута, если объект для сериализации <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  id: WriteRpcResult(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteRpcResult(String,String)
  nameWithType: XmlSerializationWriter.WriteRpcResult(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает результирующий элемент SOAP 1.2 RPC с заданным полным именем в его тексте."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       `result` Элемент определен в пространстве имен «http://www.w3.org/2002/12/soap-rpc»."
  syntax:
    content: protected void WriteRpcResult (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя результирующей основной части."
    - id: ns
      type: System.String
      description: "Пространство имен результирующей основной части."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  id: WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteSerializable(IXmlSerializable,String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает объект, использующий пользовательское форматирование XML в виде элемента XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteSerializable (System.Xml.Serialization.IXmlSerializable serializable, string name, string ns, bool isNullable);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "Объект, реализующий интерфейс <xref:System.Xml.Serialization.IXmlSerializable>интерфейс, который использует пользовательский формат XML.</xref:System.Xml.Serialization.IXmlSerializable>"
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> Если <xref:System.Xml.Serialization.IXmlSerializable>объект класса <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Serialization.IXmlSerializable>"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  id: WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Указывает, что <xref href=&quot;System.Xml.XmlNode&quot;> </xref> для записи объекта, использующего настраиваемое форматирование XML как элемент XML."
  syntax:
    content: protected void WriteSerializable (System.Xml.Serialization.IXmlSerializable serializable, string name, string ns, bool isNullable, bool wrapped);
    parameters:
    - id: serializable
      type: System.Xml.Serialization.IXmlSerializable
      description: "Объект, реализующий интерфейс <xref:System.Xml.Serialization.IXmlSerializable>интерфейс, который использует пользовательский формат XML.</xref:System.Xml.Serialization.IXmlSerializable>"
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи <xref uid=&quot;langword_csharp_xsi:nil=&quot;true&quot;&quot; name=&quot;xsi:nil=&quot;true&quot;&quot; href=&quot;&quot;> </xref> Если <xref:System.Xml.Serialization.IXmlSerializable>объект <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Xml.Serialization.IXmlSerializable>"
    - id: wrapped
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>игнорировать записи элемента открывающий тег; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для записи открывающего тега элемента."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  id: WriteStartDocument
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartDocument()
  nameWithType: XmlSerializationWriter.WriteStartDocument()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает XML объявление, если модуль записи находится в начале XML-документа."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartDocument ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  id: WriteStartElement(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает открывающий тег элемента, включая все атрибуты."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  id: WriteStartElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает открывающий тег элемента, включая все атрибуты."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  id: WriteStartElement(System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает открывающий тег элемента, включая все атрибуты."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name, string ns, bool writePrefixed);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи имени элемента с префиксом, если нет доступных для указанного пространства имен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  id: WriteStartElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает открывающий тег элемента, включая все атрибуты."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: o
      type: System.Object
      description: "Объект, который сериализуется как элемент XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  id: WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает открывающий тег элемента, включая все атрибуты."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o, bool writePrefixed);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: o
      type: System.Object
      description: "Объект, который сериализуется как элемент XML."
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи имени элемента с префиксом, если нет доступных для указанного пространства имен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  id: WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает открывающий тег элемента, включая все атрибуты."
  syntax:
    content: protected void WriteStartElement (string name, string ns, object o, bool writePrefixed, System.Xml.Serialization.XmlSerializerNamespaces xmlns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента XML для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента XML для записи."
    - id: o
      type: System.Object
      description: "Объект, который сериализуется как элемент XML."
    - id: writePrefixed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи имени элемента с префиксом, если нет доступных для указанного пространства имен; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: xmlns
      type: System.Xml.Serialization.XmlSerializerNamespaces
      description: "Экземпляр <xref:System.Xml.Serialization.XmlSerializerNamespaces>класс, который содержит пары префиксов и пространств имен для использования в созданный код XML.</xref:System.Xml.Serialization.XmlSerializerNamespaces>"
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  id: WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteTypedPrimitive(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает элемент XML, в которых текст используется значение простого типа данных XML-схемы."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       `xsi:type` Атрибут явно указывает тип данных схемы XML. Префикс `xsi` ссылается на пространство имен экземпляра схемы XML."
  syntax:
    content: protected void WriteTypedPrimitive (string name, string ns, object o, bool xsiType);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя элемента для записи."
    - id: ns
      type: System.String
      description: "Пространство имен элемента для записи."
    - id: o
      type: System.Object
      description: "Объект для сериализации в тексте элемента."
    - id: xsiType
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если XML-элемент явно указывает текстовое значение типа с помощью <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибут; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  id: WriteValue(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteValue(Byte[])
  nameWithType: XmlSerializationWriter.WriteValue(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(Byte[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает массив байтов в base-64."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteValue (byte[] value);
    parameters:
    - id: value
      type: System.Byte[]
      description: "Массив байтов для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  id: WriteValue(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteValue(String)
  nameWithType: XmlSerializationWriter.WriteValue(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает заданное строковое значение."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "Значение строки для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  id: WriteXmlAttribute(System.Xml.XmlNode)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXmlAttribute(XmlNode)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает указанный <xref href=&quot;System.Xml.XmlNode&quot;> </xref> как атрибут XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteXmlAttribute (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "Узел XML для записи."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  id: WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXmlAttribute(XmlNode,Object)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает указанный <xref href=&quot;System.Xml.XmlNode&quot;> </xref> объект как атрибут XML."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>"
  syntax:
    content: protected void WriteXmlAttribute (System.Xml.XmlNode node, object container);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "Узел XML для записи."
    - id: container
      type: System.Object
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaObject&quot;> </xref> Объекта (или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>) используется для создания значения для полного имени <xref uid=&quot;langword_csharp_arrayType&quot; name=&quot;arrayType&quot; href=&quot;&quot;> </xref> атрибут из пространства имен языка описания веб-служб (WSDL) («http://schemas.xmlsoap.org/wsdl/»)."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  id: WriteXsiType(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  langs:
  - csharp
  name: WriteXsiType(String,String)
  nameWithType: XmlSerializationWriter.WriteXsiType(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Записывает <xref uid=&quot;langword_csharp_xsi:type&quot; name=&quot;xsi:type&quot; href=&quot;&quot;> </xref> атрибут для элемента XML, который сериализуется в документ."
  remarks: "Защищенные члены <xref:System.Xml.Serialization.XmlSerializationWriter>предназначены для использования только производными классами для внутреннего использования в рамках инфраструктуры сериализации .NET Framework XML.</xref:System.Xml.Serialization.XmlSerializationWriter>       `xsi:type` Атрибут явно указывает тип данных схемы XML. Префикс `xsi` ссылается на пространство имен экземпляра схемы XML."
  syntax:
    content: protected void WriteXsiType (string name, string ns);
    parameters:
    - id: name
      type: System.String
      description: "Локальное имя типа данных схемы XML."
    - id: ns
      type: System.String
      description: "Пространство имен типа данных схемы XML."
  overload: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Serialization.XmlSerializationGeneratedCode
  isExternal: false
  name: System.Xml.Serialization.XmlSerializationGeneratedCode
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: XmlSerializationWriter()
  nameWithType: XmlSerializationWriter.XmlSerializationWriter()
  fullName: System.Xml.Serialization.XmlSerializationWriter.XmlSerializationWriter()
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(System.Type,System.String,System.String,System.Xml.Serialization.XmlSerializationWriteCallback)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  nameWithType: XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
  fullName: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback(Type,String,String,XmlSerializationWriteCallback)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializationWriteCallback
  parent: System.Xml.Serialization
  isExternal: false
  name: XmlSerializationWriteCallback
  nameWithType: XmlSerializationWriteCallback
  fullName: System.Xml.Serialization.XmlSerializationWriteCallback
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateChoiceIdentifierValueException(String,String,String,String)
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException(String,String,String,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException(Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidChoiceIdentifierValueException(String,String)
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(System.Object,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidEnumValueException(Object,String)
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException(Object,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateMismatchChoiceException(String,String,String)
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownAnyElementException(String,String)
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException(Object)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException(Type)
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException(Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException(Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
  fullName: System.Xml.Serialization.XmlSerializationWriter.EscapeName
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayBase64(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayBase64(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayHex(Byte[])
  nameWithType: XmlSerializationWriter.FromByteArrayHex(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex(Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar(System.Char)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromChar(Char)
  nameWithType: XmlSerializationWriter.FromChar(Char)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDate(DateTime)
  nameWithType: XmlSerializationWriter.FromDate(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDate(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDateTime(DateTime)
  nameWithType: XmlSerializationWriter.FromDateTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromDateTime(DateTime)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum(Int64,String[],Int64[])
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[])
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int64[]
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64[]
  spec.csharp:
  - uid: System.Int64
    name: Int64
    nameWithType: Int64
    fullName: Int64[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum(System.Int64,System.String[],System.Int64[],System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum(Int64,String[],Int64[],String)
  nameWithType: XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromEnum(Int64,String[],Int64[],String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime(System.DateTime)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromTime(DateTime)
  nameWithType: XmlSerializationWriter.FromTime(DateTime)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromTime(DateTime)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlName(String)
  nameWithType: XmlSerializationWriter.FromXmlName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlName(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNCName(String)
  nameWithType: XmlSerializationWriter.FromXmlNCName(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmToken(String)
  nameWithType: XmlSerializationWriter.FromXmlNmToken(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmTokens(String)
  nameWithType: XmlSerializationWriter.FromXmlNmTokens(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName(XmlQualifiedName)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName)
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(System.Xml.XmlQualifiedName,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName(XmlQualifiedName,Boolean)
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName(XmlQualifiedName,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: InitCallbacks()
  nameWithType: XmlSerializationWriter.InitCallbacks()
  fullName: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks()
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
  fullName: System.Xml.Serialization.XmlSerializationWriter.Namespaces
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: ResolveDynamicAssembly(String)
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly(String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: TopLevelElement()
  nameWithType: XmlSerializationWriter.TopLevelElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(System.String,System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute(String,String,String,String)
  nameWithType: XmlSerializationWriter.WriteAttribute(String,String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute(String,String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded(XmlNode,String,String,Boolean,Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(System.Xml.XmlNode,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral(XmlNode,String,String,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName(String,String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementString(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag(String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag(String,String)
  nameWithType: XmlSerializationWriter.WriteEmptyTag(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement()
  nameWithType: XmlSerializationWriter.WriteEndElement()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement(Object)
  nameWithType: XmlSerializationWriter.WriteEndElement(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId(System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteId(Object)
  nameWithType: XmlSerializationWriter.WriteId(Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteId(Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNamespaceDeclarations(XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations(XmlSerializerNamespaces)
- uid: System.Xml.Serialization.XmlSerializerNamespaces
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializerNamespaces
  nameWithType: XmlSerializerNamespaces
  fullName: System.Xml.Serialization.XmlSerializerNamespaces
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(System.String,System.String,System.Xml.XmlQualifiedName,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded(String,String,XmlQualifiedName,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral(String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.Byte[],System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,Byte[],XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(System.String,System.String,System.String,System.Xml.XmlQualifiedName)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw(String,String,String,XmlQualifiedName)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteral(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw(String,String,Byte[])
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(System.String,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw(String,String,String)
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw(String,String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded(String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral(String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral(String,String)
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(System.String,System.String,System.Object,System.Type,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement(String,String,Object,Type,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
  fullName: System.Xml.Serialization.XmlSerializationWriter.Writer
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencedElements()
  nameWithType: XmlSerializationWriter.WriteReferencedElements()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteRpcResult(String,String)
  nameWithType: XmlSerializationWriter.WriteRpcResult(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable(IXmlSerializable,String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean)
- uid: System.Xml.Serialization.IXmlSerializable
  parent: System.Xml.Serialization
  isExternal: true
  name: IXmlSerializable
  nameWithType: IXmlSerializable
  fullName: System.Xml.Serialization.IXmlSerializable
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(System.Xml.Serialization.IXmlSerializable,System.String,System.String,System.Boolean,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  nameWithType: XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable(IXmlSerializable,String,String,Boolean,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartDocument()
  nameWithType: XmlSerializationWriter.WriteStartDocument()
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument()
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(System.String,System.String,System.Object,System.Boolean,System.Xml.Serialization.XmlSerializerNamespaces)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  nameWithType: XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement(String,String,Object,Boolean,XmlSerializerNamespaces)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(System.String,System.String,System.Object,System.Boolean)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteTypedPrimitive(String,String,Object,Boolean)
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive(String,String,Object,Boolean)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.Byte[])
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue(Byte[])
  nameWithType: XmlSerializationWriter.WriteValue(Byte[])
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(Byte[])
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue(System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue(String)
  nameWithType: XmlSerializationWriter.WriteValue(String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteValue(String)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute(XmlNode)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(System.Xml.XmlNode,System.Object)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute(XmlNode,Object)
  nameWithType: XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute(XmlNode,Object)
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXsiType(String,String)
  nameWithType: XmlSerializationWriter.WriteXsiType(String,String)
  fullName: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType(String,String)
- uid: System.Xml.Serialization.XmlSerializationWriter.#ctor*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: XmlSerializationWriter
  nameWithType: XmlSerializationWriter.XmlSerializationWriter
- uid: System.Xml.Serialization.XmlSerializationWriter.AddWriteCallback*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: AddWriteCallback
  nameWithType: XmlSerializationWriter.AddWriteCallback
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateChoiceIdentifierValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateChoiceIdentifierValueException
  nameWithType: XmlSerializationWriter.CreateChoiceIdentifierValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidAnyTypeException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidAnyTypeException
  nameWithType: XmlSerializationWriter.CreateInvalidAnyTypeException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidChoiceIdentifierValueException
  nameWithType: XmlSerializationWriter.CreateInvalidChoiceIdentifierValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateInvalidEnumValueException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateInvalidEnumValueException
  nameWithType: XmlSerializationWriter.CreateInvalidEnumValueException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateMismatchChoiceException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateMismatchChoiceException
  nameWithType: XmlSerializationWriter.CreateMismatchChoiceException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownAnyElementException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownAnyElementException
  nameWithType: XmlSerializationWriter.CreateUnknownAnyElementException
- uid: System.Xml.Serialization.XmlSerializationWriter.CreateUnknownTypeException*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: CreateUnknownTypeException
  nameWithType: XmlSerializationWriter.CreateUnknownTypeException
- uid: System.Xml.Serialization.XmlSerializationWriter.EscapeName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: EscapeName
  nameWithType: XmlSerializationWriter.EscapeName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayBase64*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayBase64
  nameWithType: XmlSerializationWriter.FromByteArrayBase64
- uid: System.Xml.Serialization.XmlSerializationWriter.FromByteArrayHex*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromByteArrayHex
  nameWithType: XmlSerializationWriter.FromByteArrayHex
- uid: System.Xml.Serialization.XmlSerializationWriter.FromChar*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromChar
  nameWithType: XmlSerializationWriter.FromChar
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDate*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDate
  nameWithType: XmlSerializationWriter.FromDate
- uid: System.Xml.Serialization.XmlSerializationWriter.FromDateTime*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromDateTime
  nameWithType: XmlSerializationWriter.FromDateTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromEnum*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromEnum
  nameWithType: XmlSerializationWriter.FromEnum
- uid: System.Xml.Serialization.XmlSerializationWriter.FromTime*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromTime
  nameWithType: XmlSerializationWriter.FromTime
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlName
  nameWithType: XmlSerializationWriter.FromXmlName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNCName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNCName
  nameWithType: XmlSerializationWriter.FromXmlNCName
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmToken*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmToken
  nameWithType: XmlSerializationWriter.FromXmlNmToken
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlNmTokens*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlNmTokens
  nameWithType: XmlSerializationWriter.FromXmlNmTokens
- uid: System.Xml.Serialization.XmlSerializationWriter.FromXmlQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: FromXmlQualifiedName
  nameWithType: XmlSerializationWriter.FromXmlQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.InitCallbacks*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: InitCallbacks
  nameWithType: XmlSerializationWriter.InitCallbacks
- uid: System.Xml.Serialization.XmlSerializationWriter.Namespaces*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Namespaces
  nameWithType: XmlSerializationWriter.Namespaces
- uid: System.Xml.Serialization.XmlSerializationWriter.ResolveDynamicAssembly*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: ResolveDynamicAssembly
  nameWithType: XmlSerializationWriter.ResolveDynamicAssembly
- uid: System.Xml.Serialization.XmlSerializationWriter.TopLevelElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: TopLevelElement
  nameWithType: XmlSerializationWriter.TopLevelElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteAttribute*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteAttribute
  nameWithType: XmlSerializationWriter.WriteAttribute
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementEncoded
  nameWithType: XmlSerializationWriter.WriteElementEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementLiteral
  nameWithType: XmlSerializationWriter.WriteElementLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementQualifiedName*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementQualifiedName
  nameWithType: XmlSerializationWriter.WriteElementQualifiedName
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementString*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementString
  nameWithType: XmlSerializationWriter.WriteElementString
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteElementStringRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteElementStringRaw
  nameWithType: XmlSerializationWriter.WriteElementStringRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEmptyTag*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEmptyTag
  nameWithType: XmlSerializationWriter.WriteEmptyTag
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteEndElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteEndElement
  nameWithType: XmlSerializationWriter.WriteEndElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteId*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteId
  nameWithType: XmlSerializationWriter.WriteId
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNamespaceDeclarations*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNamespaceDeclarations
  nameWithType: XmlSerializationWriter.WriteNamespaceDeclarations
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameEncoded
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableQualifiedNameLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableQualifiedNameLiteral
  nameWithType: XmlSerializationWriter.WriteNullableQualifiedNameLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncoded
  nameWithType: XmlSerializationWriter.WriteNullableStringEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringEncodedRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringEncodedRaw
  nameWithType: XmlSerializationWriter.WriteNullableStringEncodedRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteral
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullableStringLiteralRaw*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullableStringLiteralRaw
  nameWithType: XmlSerializationWriter.WriteNullableStringLiteralRaw
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagEncoded*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagEncoded
  nameWithType: XmlSerializationWriter.WriteNullTagEncoded
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteNullTagLiteral*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteNullTagLiteral
  nameWithType: XmlSerializationWriter.WriteNullTagLiteral
- uid: System.Xml.Serialization.XmlSerializationWriter.WritePotentiallyReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WritePotentiallyReferencingElement
  nameWithType: XmlSerializationWriter.WritePotentiallyReferencingElement
- uid: System.Xml.Serialization.XmlSerializationWriter.Writer*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: Writer
  nameWithType: XmlSerializationWriter.Writer
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencedElements*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencedElements
  nameWithType: XmlSerializationWriter.WriteReferencedElements
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteReferencingElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteReferencingElement
  nameWithType: XmlSerializationWriter.WriteReferencingElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteRpcResult*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteRpcResult
  nameWithType: XmlSerializationWriter.WriteRpcResult
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteSerializable*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteSerializable
  nameWithType: XmlSerializationWriter.WriteSerializable
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartDocument*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartDocument
  nameWithType: XmlSerializationWriter.WriteStartDocument
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteStartElement*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteStartElement
  nameWithType: XmlSerializationWriter.WriteStartElement
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteTypedPrimitive*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteTypedPrimitive
  nameWithType: XmlSerializationWriter.WriteTypedPrimitive
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteValue*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteValue
  nameWithType: XmlSerializationWriter.WriteValue
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXmlAttribute*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXmlAttribute
  nameWithType: XmlSerializationWriter.WriteXmlAttribute
- uid: System.Xml.Serialization.XmlSerializationWriter.WriteXsiType*
  parent: System.Xml.Serialization.XmlSerializationWriter
  isExternal: false
  name: WriteXsiType
  nameWithType: XmlSerializationWriter.WriteXsiType
