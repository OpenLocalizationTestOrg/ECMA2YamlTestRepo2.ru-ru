### YamlMime:ManagedReference
items:
- uid: System.Data.SqlClient.SqlDataAdapter
  id: SqlDataAdapter
  children:
  - System.Data.SqlClient.SqlDataAdapter.#ctor
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  - System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  - System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  - System.Data.SqlClient.SqlDataAdapter.ClearBatch
  - System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  - System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  - System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  - System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  - System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  - System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  - System.Data.SqlClient.SqlDataAdapter.InsertCommand
  - System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  - System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.SqlClient.SqlDataAdapter.RowUpdated
  - System.Data.SqlClient.SqlDataAdapter.RowUpdating
  - System.Data.SqlClient.SqlDataAdapter.SelectCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  - System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  - System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  - System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  - System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  - System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  langs:
  - csharp
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter
  fullName: System.Data.SqlClient.SqlDataAdapter
  type: Class
  summary: "Представляет набор команд данных и подключение к базе данных, которые используются для заполнения <xref href=&quot;System.Data.DataSet&quot;> </xref> и обновления базы данных SQL Server. Этот класс не наследуется."
  remarks: "Метод SqlDataAdapter выступает в качестве моста между <xref:System.Data.DataSet>и SQL Server для получения и сохранения данных.</xref:System.Data.DataSet> SqlDataAdapter предоставляет этот мост, сопоставление <xref:System.Data.Common.DbDataAdapter.Fill%2A>, который изменяет данные в <xref:System.Data.DataSet>в соответствии с данными в источнике данных и <xref:System.Data.Common.DbDataAdapter.Update%2A>, какие изменения данных в источнике данных в соответствии с данными в <xref:System.Data.DataSet>, с помощью соответствующих инструкций Transact-SQL в источнике данных.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Обновление выполняется по принципу по строкам. Для каждой вставленной, измененные и удаленные строки <xref:System.Data.Common.DbDataAdapter.Update%2A>метод определяет тип изменения, которое было выполнено на нем (`Insert`, `Update`, или `Delete`).</xref:System.Data.Common.DbDataAdapter.Update%2A> В зависимости от типа изменений `Insert`, `Update`, или `Delete` шаблон команды выполняется для распространения измененной строки в источнике данных. Когда заполняет SqlDataAdapter <xref:System.Data.DataSet>, он создает необходимые таблицы и столбцы для возвращаемых данных, если они еще не существует.</xref:System.Data.DataSet> Однако сведения о первичном ключе отсутствует в схеме неявно созданных <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>свойству <xref:System.Data.MissingSchemaAction>.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> Возможно также создание схемы SqlDataAdapter <xref:System.Data.DataSet>, включая сведения о первичном ключе, перед заполнением ее данными с помощью `FillSchema`.</xref:System.Data.DataSet> Дополнительные сведения см. в разделе [Добавление существующих ограничений к набору данных](~/add/includes/ajax-current-ext-md.md).       SqlDataAdapter используется в сочетании с <xref:System.Data.SqlClient.SqlConnection>и <xref:System.Data.SqlClient.SqlCommand>для увеличения производительности при подключении к базе данных SQL Server.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlConnection>      Настроек [!NOTE] настроек при использовании хранимых процедур SQL Server для изменения или удаления данных с помощью `DataAdapter`, убедитесь, что не инструкция SET NOCOUNT ON в определении хранимой процедуры. В результате должно быть равно нулю, возвращается число затронутых строк которой `DataAdapter` интерпретирует как конфликт параллелизма. В этом случае <xref:System.Data.DBConcurrencyException>будет создано.</xref:System.Data.DBConcurrencyException>       Также включает SqlDataAdapter <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, и <xref:System.Data.Common.DataAdapter.TableMappings%2A>для облегчения загрузки и обновления данных.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>       При создании экземпляра SqlDataAdapter свойства чтения/записи устанавливаются в исходные значения. Список этих значений см. в разделе SqlDataAdapter конструктор.       <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A>, И <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>являются универсальные шаблоны, которые автоматически заполняются отдельных значений из каждой измененной строки через механизм параметров.</xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>       Для каждого столбца, который распространяется с источником данных на <xref:System.Data.Common.DbDataAdapter.Update%2A>, следует добавить параметр `InsertCommand`, `UpdateCommand`, или `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> <xref:System.Data.Common.DbParameter.SourceColumn%2A>Свойство <xref:System.Data.Common.DbParameter>объекта должно быть присвоено имя столбца.</xref:System.Data.Common.DbParameter> </xref:System.Data.Common.DbParameter.SourceColumn%2A> Этот параметр указывает, что значение параметра устанавливается не вручную, но берется из конкретного столбца в настоящее время в обрабатываемой в строке.      Настроек [!NOTE] настроек <xref:System.InvalidOperationException>будет возникать, если <xref:System.Data.Common.DbDataAdapter.Fill%2A>будет вызван, а таблица содержит определяемый пользователем тип, который доступен не на клиентском компьютере.</xref:System.Data.Common.DbDataAdapter.Fill%2A> </xref:System.InvalidOperationException> Дополнительные сведения см. в разделе [Создание и типы Using User-Defined](http://go.microsoft.com/fwlink/?LinkId=139492) в электронной документации по SQL Server."
  example:
  - "The following example uses the <xref:System.Data.SqlClient.SqlCommand>, SqlDataAdapter, and <xref:System.Data.SqlClient.SqlConnection> to select records from a database and populate a <xref:System.Data.DataSet> with the selected rows. The filled <xref:System.Data.DataSet> is then returned. To accomplish this, the method is passed an initialized <xref:System.Data.DataSet>, a connection string, and a query string that is a Transact-SQL SELECT statement.  \n  \n [!code-vb[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/t-system.data.sqlclient._14_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter Example#1](~/add/codesnippet/csharp/t-system.data.sqlclient._14_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("RowUpdated")]

      [System.ComponentModel.Designer("Microsoft.VSDesigner.Data.VS.SqlDataAdapterDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItem("Microsoft.VSDesigner.Data.VS.SqlDataAdapterToolboxItem, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class SqlDataAdapter : System.Data.Common.DbDataAdapter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Data.Common.DataAdapter
  - System.Data.Common.DbDataAdapter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DbDataAdapter.DefaultSourceTableName
  - System.Data.Common.DbDataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.Int32,System.Int32,System.String,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Data.DataTable[],System.Int32,System.Int32,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.Fill(System.Int32,System.Int32,System.Data.DataTable[])
  - System.Data.Common.DbDataAdapter.FillCommandBehavior
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.Data.IDbCommand,System.String,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType)
  - System.Data.Common.DbDataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDbCommand,System.Data.CommandBehavior)
  - System.Data.Common.DbDataAdapter.GetFillParameters
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[])
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataRow[],System.Data.Common.DataTableMapping)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataSet,System.String)
  - System.Data.Common.DbDataAdapter.Update(System.Data.DataTable)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter()
  nameWithType: SqlDataAdapter.SqlDataAdapter()
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> класса."
  remarks: "При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter>создается следующее чтения и записи свойствам присваиваются следующие начальные значения.</xref:System.Data.SqlClient.SqlDataAdapter>      | Свойства | Начальное значение |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Можно изменить значение любого из этих свойств, вызвав его отдельно.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._37_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._37_1.cs)]"
  syntax:
    content: public SqlDataAdapter ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  id: '#ctor(System.Data.SqlClient.SqlCommand)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(SqlCommand)
  nameWithType: SqlDataAdapter.SqlDataAdapter(SqlCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(SqlCommand)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> класса с заданным <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> как <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>свойство.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Эта реализация <xref:System.Data.SqlClient.SqlDataAdapter>конструктора задает <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>Свойства, значение, указанное в `selectCommand` параметр.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter>       При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter>создается следующее чтения и записи свойствам присваиваются следующие начальные значения.</xref:System.Data.SqlClient.SqlDataAdapter>      | Свойства | Начальное значение |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Можно изменить значение любого из этих свойств, вызвав его отдельно.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>       При <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>(или любые другие свойства команды) назначается для ранее созданной <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>не клонируются.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>Сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand>объекта.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/add/codesnippet/csharp/9d168a15-4587-40fd-a80e-_1.cs)]\n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter1 Example#1](~/add/codesnippet/visualbasic/9d168a15-4587-40fd-a80e-_1.vb)]"
  syntax:
    content: public SqlDataAdapter (System.Data.SqlClient.SqlCommand selectCommand);
    parameters:
    - id: selectCommand
      type: System.Data.SqlClient.SqlCommand
      description: "Объект <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> , инструкции Transact-SQL SELECT или хранимой процедуры, которое задается как <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>свойство <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  id: '#ctor(System.String,System.Data.SqlClient.SqlConnection)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(String,SqlConnection)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> класса <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>и <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> объекта.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Эта реализация <xref:System.Data.SqlClient.SqlDataAdapter>открывает и закрывает <xref:System.Data.SqlClient.SqlConnection>, если он еще не открыт.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlDataAdapter> Это может быть полезно в приложении, необходимо вызвать метод <xref:System.Data.Common.DbDataAdapter.Fill%2A>метод для двух или более <xref:System.Data.SqlClient.SqlDataAdapter>объектов.</xref:System.Data.SqlClient.SqlDataAdapter> </xref:System.Data.Common.DbDataAdapter.Fill%2A> Если <xref:System.Data.SqlClient.SqlConnection>является уже открыт, необходимо явно вызвать **закрыть** или **Dispose** закрыть его</xref:System.Data.SqlClient.SqlConnection>       При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter>создается следующее чтения и записи свойствам присваиваются следующие начальные значения.</xref:System.Data.SqlClient.SqlDataAdapter>      | Свойства | Начальное значение |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Можно изменить значение любого из этих свойств, вызвав его отдельно.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/add/codesnippet/visualbasic/fa8f1b27-cd12-4c35-bbde-_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter3 Example#1](~/add/codesnippet/csharp/fa8f1b27-cd12-4c35-bbde-_1.cs)]"
  syntax:
    content: public SqlDataAdapter (string selectCommandText, System.Data.SqlClient.SqlConnection selectConnection);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Объект <xref:System.String>, инструкции Transact-SQL SELECT или хранимой процедуры, используемые <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>свойство <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*> </xref:System.String>"
    - id: selectConnection
      type: System.Data.SqlClient.SqlConnection
      description: "Объект <xref href=&quot;System.Data.SqlClient.SqlConnection&quot;> </xref> , представляющий подключение. Если строка подключения не использует <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, можно использовать <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> для передачи идентификатора пользователя и пароля, более безопасно, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения."
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SqlDataAdapter(String,String)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,String)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> класса <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>и строку соединения.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>"
  remarks: "Эта перегрузка <xref:System.Data.SqlClient.SqlDataAdapter>конструктор использует `selectCommandText` параметра <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>свойство.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.SqlClient.SqlDataAdapter> <xref:System.Data.SqlClient.SqlDataAdapter>Будет создавать и поддерживать соединение, созданное с помощью `selectConnectionString` параметр.</xref:System.Data.SqlClient.SqlDataAdapter>       При создании экземпляра <xref:System.Data.SqlClient.SqlDataAdapter>создается следующее чтения и записи свойствам присваиваются следующие начальные значения.</xref:System.Data.SqlClient.SqlDataAdapter>      | Свойства | Начальное значение |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|       Можно изменить значение любого из этих свойств, вызвав его отдельно.</xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/add/codesnippet/visualbasic/m-system.data.sqlclient._6_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.SqlDataAdapter2 Example#1](~/add/codesnippet/csharp/m-system.data.sqlclient._6_1.cs)]"
  syntax:
    content: public SqlDataAdapter (string selectCommandText, string selectConnectionString);
    parameters:
    - id: selectCommandText
      type: System.String
      description: "Объект <xref:System.String>, инструкции Transact-SQL SELECT или хранимой процедуры, используемые <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*>свойство <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref>.</xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand*> </xref:System.String>"
    - id: selectConnectionString
      type: System.String
      description: "Строка подключения. Если строка подключения не использует <xref uid=&quot;langword_csharp_Integrated Security = true&quot; name=&quot;Integrated Security = true&quot; href=&quot;&quot;> </xref>, можно использовать &lt;xref:System.Data.SqlClient.SqlDataAdapter.%23ctor%2A&gt; и <xref href=&quot;System.Data.SqlClient.SqlCredential&quot;> </xref> для передачи идентификатора пользователя и пароля, более безопасно, чем при указании идентификатора пользователя и пароля в виде текста в строке подключения."
  overload: System.Data.SqlClient.SqlDataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  id: AddToBatch(System.Data.IDbCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: AddToBatch(IDbCommand)
  nameWithType: SqlDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.AddToBatch(IDbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override int AddToBatch (System.Data.IDbCommand command);
    parameters:
    - id: command
      type: System.Data.IDbCommand
      description: "Для добавления."
    return:
      type: System.Int32
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataAdapter.AddToBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch
  id: ClearBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: ClearBatch()
  nameWithType: SqlDataAdapter.ClearBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ClearBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void ClearBatch ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.ClearBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.RowUpdatedEventArgs CreateRowUpdatedEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Для добавления."
    - id: command
      type: System.Data.IDbCommand
      description: "Для добавления."
    - id: statementType
      type: System.Data.StatementType
      description: "Для добавления."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Для добавления."
    return:
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  id: CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.Common.RowUpdatingEventArgs CreateRowUpdatingEvent (System.Data.DataRow dataRow, System.Data.IDbCommand command, System.Data.StatementType statementType, System.Data.Common.DataTableMapping tableMapping);
    parameters:
    - id: dataRow
      type: System.Data.DataRow
      description: "Для добавления."
    - id: command
      type: System.Data.IDbCommand
      description: "Для добавления."
    - id: statementType
      type: System.Data.StatementType
      description: "Для добавления."
    - id: tableMapping
      type: System.Data.Common.DataTableMapping
      description: "Для добавления."
    return:
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  id: DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает инструкцию Transact-SQL или хранимую процедуру для удаления записей из набора данных."
  remarks: "Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>DeleteCommand может формировать автоматически, если вы установите <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>и используйте <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Затем создаются любые дополнительные команды, не устанавливайте <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Эта логика создания требует сведения о ключевом столбце должны присутствовать в списке <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Дополнительные сведения см. в разделе [создание команд с помощью построителей команд](~/add/includes/ajax-current-ext-md.md).       При назначении DeleteCommand ранее созданный <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>не клонируются.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> Свойство DeleteCommand сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand>объекта.</xref:System.Data.SqlClient.SqlCommand>       Для каждого столбца, который распространяется с источником данных на <xref:System.Data.Common.DbDataAdapter.Update%2A>, следует добавить параметр `InsertCommand`, `UpdateCommand`, или `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> `SourceColumn` Свойства параметра должно быть присвоено имя столбца. Это означает, что значение параметра устанавливается не вручную, но берется из конкретного столбца в настоящее время в обрабатываемой в строке."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and DeleteCommand properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._16_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._16_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand DeleteCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Объект <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> во время <xref:System.Data.Common.DbDataAdapter.Update*>для удаления записей в базе данных, соответствующих удаленным строкам в <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  id: ExecuteBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: ExecuteBatch()
  nameWithType: SqlDataAdapter.ExecuteBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override int ExecuteBatch ();
    parameters: []
    return:
      type: System.Int32
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  id: GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override System.Data.IDataParameter GetBatchedParameter (int commandIdentifier, int parameterIndex);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Для добавления."
    - id: parameterIndex
      type: System.Int32
      description: "Для добавления."
    return:
      type: System.Data.IDataParameter
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  id: GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override bool GetBatchedRecordsAffected (int commandIdentifier, out int recordsAffected, out Exception error);
    parameters:
    - id: commandIdentifier
      type: System.Int32
      description: "Для добавления."
    - id: recordsAffected
      type: System.Int32
      description: "Для добавления."
    - id: error
      type: System.Exception
      description: "Для добавления."
    return:
      type: System.Boolean
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  id: InitializeBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: InitializeBatching()
  nameWithType: SqlDataAdapter.InitializeBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.InitializeBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void InitializeBatching ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.InitializeBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  id: InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает инструкцию Transact-SQL или хранимую процедуру для вставки новых записей в источнике данных."
  remarks: "Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>InsertCommand может формировать автоматически, если вы установите <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>и используйте <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Затем создаются любые дополнительные команды, не устанавливайте <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Эта логика создания требует сведения о ключевом столбце должны присутствовать в списке <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Дополнительные сведения см. в разделе [создание команд с помощью построителей команд](~/add/includes/ajax-current-ext-md.md).       При назначении InsertCommand ранее созданный <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>не клонируются.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> InsertCommand сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand>объекта.</xref:System.Data.SqlClient.SqlCommand>       При выполнении этой команды возвращаются строки, эти строки добавляются в <xref:System.Data.DataSet>в зависимости от того, как задать **UpdatedRowSource** свойство <xref:System.Data.SqlClient.SqlCommand>объекта.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.DataSet>       Для каждого столбца, который распространяется с источником данных на <xref:System.Data.Common.DbDataAdapter.Update%2A>, следует добавить параметр `InsertCommand`, `UpdateCommand`, или `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A> `SourceColumn` Свойства параметра должно быть присвоено имя столбца. Это означает, что значение параметра устанавливается не вручную, но берется из конкретного столбца в настоящее время в обрабатываемой в строке."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, InsertCommand, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._33_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._33_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand InsertCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Объект <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> во время <xref:System.Data.Common.DbDataAdapter.Update*>для вставки записей в базе данных, соответствующих новым строкам в <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  id: OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void OnRowUpdated (System.Data.Common.RowUpdatedEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatedEventArgs
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  id: OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void OnRowUpdating (System.Data.Common.RowUpdatingEventArgs value);
    parameters:
    - id: value
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Для добавления."
  overload: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  id: RowUpdated
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: RowUpdated
  nameWithType: SqlDataAdapter.RowUpdated
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Имеет место в процессе <xref:System.Data.Common.DbDataAdapter.Update*>после выполнения команды в источнике данных.</xref:System.Data.Common.DbDataAdapter.Update*> Выполняется попытка обновления, поэтому создается событие."
  remarks: "При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, два события, возникающие в каждой обновленной строки данных.</xref:System.Data.Common.DbDataAdapter.Update%2A> Порядок выполнения является следующим образом: 1.  Значения в <xref:System.Data.DataRow>перемещаются в значения параметров.</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>События.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Выполняется команда.      4.  Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>События.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>вызывается.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows how to use both the <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> and RowUpdated events.  \n  \n The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdating> event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  \n  \n The RowUpdated event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  \n  \n [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._0_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.sqlclient._0_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowUpdatedEventHandler RowUpdated;
    return:
      type: System.Data.SqlClient.SqlRowUpdatedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  id: RowUpdating
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: RowUpdating
  nameWithType: SqlDataAdapter.RowUpdating
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Имеет место в процессе <xref:System.Data.Common.DbDataAdapter.Update*>перед выполнением команды в источнике данных.</xref:System.Data.Common.DbDataAdapter.Update*> Выполняется попытка обновления, поэтому создается событие."
  remarks: "При использовании <xref:System.Data.Common.DbDataAdapter.Update%2A>, два события, возникающие в каждой обновленной строки данных.</xref:System.Data.Common.DbDataAdapter.Update%2A> Порядок выполнения является следующим образом: 1.  Значения в <xref:System.Data.DataRow>перемещаются в значения параметров.</xref:System.Data.DataRow>      2.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>События.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  Выполняется команда.      4.  Если команда имеет значение `FirstReturnedRecord`, первый возвращенный результат помещается в <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Если имеются выходные параметры, они помещаются в <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>События.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A>вызывается.</xref:System.Data.DataRow.AcceptChanges%2A>"
  example:
  - "The following example shows how to use both the RowUpdating and <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> events.  \n  \n The RowUpdating event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 status=0)  \n  \n The <xref:System.Data.SqlClient.SqlDataAdapter.RowUpdated> event returns this output:  \n  \n event args: (command=System.Data.SqlClient.SqlCommand commandType=2 recordsAffected=1 row=System.Data.DataRow[37] status=0)  \n  \n [!code-vb[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/visualbasic/e-system.data.sqlclient._1_1.vb)]\n [!code-cs[Classic WebData SqlDataAdapter.RowUpdated Example#1](~/add/codesnippet/csharp/e-system.data.sqlclient._1_1.cs)]"
  syntax:
    content: public event System.Data.SqlClient.SqlRowUpdatingEventHandler RowUpdating;
    return:
      type: System.Data.SqlClient.SqlRowUpdatingEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  id: SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для выбора записей в источнике данных."
  remarks: "При назначении SelectCommand ранее созданный <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>не клонируются.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> SelectCommand сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand>объекта.</xref:System.Data.SqlClient.SqlCommand>       Если SelectCommand, не возвращает строк, таблицы не будут добавлены <xref:System.Data.DataSet>, и исключение не вызывается.</xref:System.Data.DataSet>"
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the SelectCommand, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.UpdateCommand%2A>, and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._23_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._23_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand SelectCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Объект <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> во время <xref:System.Data.Common.DbDataAdapter.Fill*>для выбора записей из базы данных для размещения в <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Fill*>"
  overload: System.Data.SqlClient.SqlDataAdapter.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  id: System#Data#IDbDataAdapter#DeleteCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Описание этого члена см. в разделе <xref:System.Data.IDbDataAdapter.DeleteCommand*>.</xref:System.Data.IDbDataAdapter.DeleteCommand*>"
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Data.SqlClient.SqlDataAdapter>экземпляр приводится к <xref:System.Data.IDbDataAdapter>интерфейс.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.DeleteCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> , Используемый при <xref:System.Data.Common.DbDataAdapter.Update*>для удаления записей в источнике данных для удаленных строк в наборе данных.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  id: System#Data#IDbDataAdapter#InsertCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Описание этого члена см. в разделе <xref:System.Data.IDbDataAdapter.InsertCommand*>.</xref:System.Data.IDbDataAdapter.InsertCommand*>"
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Data.SqlClient.SqlDataAdapter>экземпляр приводится к <xref:System.Data.IDbDataAdapter>интерфейс.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.InsertCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> , Используемый при <xref:System.Data.Common.DbDataAdapter.Update*>для вставки записей в источнике данных для новых строк в наборе данных.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  id: System#Data#IDbDataAdapter#SelectCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Описание этого члена см. в разделе <xref:System.Data.IDbDataAdapter.SelectCommand*>.</xref:System.Data.IDbDataAdapter.SelectCommand*>"
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Data.SqlClient.SqlDataAdapter>экземпляр приводится к <xref:System.Data.IDbDataAdapter>интерфейс.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.SelectCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref href=&quot;System.Data.IDbCommand&quot;> </xref> , Используемый при <xref:System.Data.Common.DbDataAdapter.Update*>для выбора записей из источника данных для размещения в наборе данных.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  id: System#Data#IDbDataAdapter#UpdateCommand
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Описание этого члена см. в разделе <xref:System.Data.IDbDataAdapter.UpdateCommand*>.</xref:System.Data.IDbDataAdapter.UpdateCommand*>"
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Data.SqlClient.SqlDataAdapter>экземпляр приводится к <xref:System.Data.IDbDataAdapter>интерфейс.</xref:System.Data.IDbDataAdapter> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: System.Data.IDbCommand System.Data.IDbDataAdapter.UpdateCommand { get; set; }
    return:
      type: System.Data.IDbCommand
      description: "<xref:System.Data.IdbCommand>, Используемый при <xref:System.Data.Common.DbDataAdapter.Update*>для обновления записей в источнике данных для измененных строк в наборе данных.</xref:System.Data.Common.DbDataAdapter.Update*> </xref:System.Data.IdbCommand>"
  overload: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: SqlDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlDataAdapter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Описание этого члена см. в разделе <xref:System.ICloneable.Clone*>.</xref:System.ICloneable.Clone*>"
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Data.SqlClient.SqlDataAdapter>экземпляр приводится к <xref:System.ICloneable>интерфейс.</xref:System.ICloneable> </xref:System.Data.SqlClient.SqlDataAdapter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Новый объект, являющийся копией текущего экземпляра."
  overload: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  id: TerminateBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: TerminateBatching()
  nameWithType: SqlDataAdapter.TerminateBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.TerminateBatching()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  syntax:
    content: protected override void TerminateBatching ();
    parameters: []
  overload: System.Data.SqlClient.SqlDataAdapter.TerminateBatching*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  id: UpdateBatchSize
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает количество строк, обработанных при каждом обращении к серверу."
  remarks: "Возвращает или задает значение, которое включает или отключает поддержку пакетной обработки и задает количество команд, которые могут быть выполнены в пакете.       Используйте свойство UpdateBatchSize для обновления источника данных с изменениями из <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Это может повысить производительность приложения путем сокращения числа циклов приема-передачи на сервер.       Выполнение очень больших пакетов может снизить производительность. Таким образом следует проверить параметр размера оптимальный пакета перед реализацией приложения.       <xref:System.ArgumentOutOfRangeException>Возникает исключение, если число имеет значение меньше нуля.</xref:System.ArgumentOutOfRangeException>"
  syntax:
    content: public override int UpdateBatchSize { get; set; }
    return:
      type: System.Int32
      description: "Число строк для обработки каждого пакета.       <table><thead><tr><th> Значение       </th><th> Эффект       </th></tr></thead><tbody><tr><td> 0       </td><td> Нет ограничений на размер пакета...       </td></tr><tr><td> 1       </td><td> Обновление пакета отключено.       </td></tr><tr><td> &gt;1       </td><td> Изменения отправляются с помощью пакетов UpdateBatchSize операций одновременно.       </td></tr></tbody></table>       Этому параметру присвоено значение, отличное от 1, все команды, связанное с <xref href=&quot;System.Data.SqlClient.SqlDataAdapter&quot;> </xref> должны иметь их **UpdatedRowSource** свойство <xref uid=&quot;langword_csharp_None&quot; name=&quot;None&quot; href=&quot;&quot;> </xref> или <xref uid=&quot;langword_csharp_OutputParameters&quot; name=&quot;OutputParameters&quot; href=&quot;&quot;> </xref>. В противном случае возникает исключение."
  overload: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  id: UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlClient
  summary: "Возвращает или задает инструкцию Transact-SQL или хранимую процедуру, используемую для обновления записей в источнике данных."
  remarks: "Во время <xref:System.Data.Common.DbDataAdapter.Update%2A>, если это свойство не задано и сведения о первичном ключе присутствует в <xref:System.Data.DataSet>UpdateCommand может формировать автоматически, если вы установите <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>и используйте <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> </xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.Update%2A> Затем создаются любые дополнительные команды, не устанавливайте <xref:System.Data.SqlClient.SqlCommandBuilder>.</xref:System.Data.SqlClient.SqlCommandBuilder> Эта логика создания требует сведения о ключевом столбце должны присутствовать в списке <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Дополнительные сведения см. в разделе [создание команд с помощью построителей команд](~/add/includes/ajax-current-ext-md.md).       При назначении UpdateCommand ранее созданный <xref:System.Data.SqlClient.SqlCommand>, <xref:System.Data.SqlClient.SqlCommand>не клонируются.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlCommand> UpdateCommand сохраняет ссылку на ранее созданный <xref:System.Data.SqlClient.SqlCommand>объекта.</xref:System.Data.SqlClient.SqlCommand>      Настроек [!NOTE] настроек при выполнении этой команды возвращаются строки, обновленные строки могут быть объединены с <xref:System.Data.DataSet>в зависимости от того, как задать **UpdatedRowSource** свойство <xref:System.Data.SqlClient.SqlCommand>объекта.</xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.DataSet>       Для каждого столбца, который распространяется с источником данных на <xref:System.Data.Common.DbDataAdapter.Update%2A>, следует добавить параметр `InsertCommand`, `UpdateCommand`, или `DeleteCommand`.</xref:System.Data.Common.DbDataAdapter.Update%2A>       `SourceColumn` Свойства параметра должно быть присвоено имя столбца. Это означает, что значение параметра не вручную, а берется из конкретного столбца в настоящее время в обрабатываемой в строке."
  example:
  - "The following example creates a <xref:System.Data.SqlClient.SqlDataAdapter> and sets the <xref:System.Data.SqlClient.SqlDataAdapter.SelectCommand%2A>, <xref:System.Data.SqlClient.SqlDataAdapter.InsertCommand%2A>, UpdateCommand and <xref:System.Data.SqlClient.SqlDataAdapter.DeleteCommand%2A> properties. It assumes you have already created a <xref:System.Data.SqlClient.SqlConnection> object.  \n  \n [!code-vb[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/visualbasic/p-system.data.sqlclient._31_1.vb)]\n [!code-cs[DataWorks SqlDataAdapter.Command#1](~/add/codesnippet/csharp/p-system.data.sqlclient._31_1.cs)]"
  syntax:
    content: public System.Data.SqlClient.SqlCommand UpdateCommand { get; set; }
    return:
      type: System.Data.SqlClient.SqlCommand
      description: "Объект <xref href=&quot;System.Data.SqlClient.SqlCommand&quot;> </xref> во время <xref:System.Data.Common.DbDataAdapter.Update*>для обновления записей в базе данных, соответствующих измененным строкам в <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Data.Common.DbDataAdapter.Update*>"
  overload: System.Data.SqlClient.SqlDataAdapter.UpdateCommand*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataAdapter
  isExternal: false
  name: System.Data.Common.DbDataAdapter
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter()
  nameWithType: SqlDataAdapter.SqlDataAdapter()
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter()
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.Data.SqlClient.SqlCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(SqlCommand)
  nameWithType: SqlDataAdapter.SqlDataAdapter(SqlCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(SqlCommand)
- uid: System.Data.SqlClient.SqlCommand
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlCommand
  nameWithType: SqlCommand
  fullName: System.Data.SqlClient.SqlCommand
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.Data.SqlClient.SqlConnection)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(String,SqlConnection)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,SqlConnection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.SqlClient.SqlConnection
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlConnection
  nameWithType: SqlConnection
  fullName: System.Data.SqlClient.SqlConnection
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor(System.String,System.String)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter(String,String)
  nameWithType: SqlDataAdapter.SqlDataAdapter(String,String)
  fullName: System.Data.SqlClient.SqlDataAdapter.SqlDataAdapter(String,String)
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch(System.Data.IDbCommand)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: AddToBatch(IDbCommand)
  nameWithType: SqlDataAdapter.AddToBatch(IDbCommand)
  fullName: System.Data.SqlClient.SqlDataAdapter.AddToBatch(IDbCommand)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.IDbCommand
  parent: System.Data
  isExternal: false
  name: IDbCommand
  nameWithType: IDbCommand
  fullName: System.Data.IDbCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ClearBatch()
  nameWithType: SqlDataAdapter.ClearBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ClearBatch()
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatedEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatedEventArgs
  nameWithType: RowUpdatedEventArgs
  fullName: System.Data.Common.RowUpdatedEventArgs
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Data.Common.DataTableMapping
  parent: System.Data.Common
  isExternal: false
  name: DataTableMapping
  nameWithType: DataTableMapping
  fullName: System.Data.Common.DataTableMapping
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(System.Data.DataRow,System.Data.IDbCommand,System.Data.StatementType,System.Data.Common.DataTableMapping)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
  fullName: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent(DataRow,IDbCommand,StatementType,DataTableMapping)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ExecuteBatch()
  nameWithType: SqlDataAdapter.ExecuteBatch()
  fullName: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch()
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(System.Int32,System.Int32)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedParameter(Int32,Int32)
  nameWithType: SqlDataAdapter.GetBatchedParameter(Int32,Int32)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter(Int32,Int32)
- uid: System.Data.IDataParameter
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(System.Int32,System.Int32@,System.Exception@)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected(Int32,Int32,Exception)
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
  fullName: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected(Int32,Int32,Exception)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InitializeBatching()
  nameWithType: SqlDataAdapter.InitializeBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.InitializeBatching()
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(System.Data.Common.RowUpdatedEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdated(RowUpdatedEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated(RowUpdatedEventArgs)
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdating(RowUpdatingEventArgs)
  nameWithType: SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
  fullName: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating(RowUpdatingEventArgs)
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdated
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: RowUpdated
  nameWithType: SqlDataAdapter.RowUpdated
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdated
- uid: System.Data.SqlClient.SqlRowUpdatedEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowUpdatedEventHandler
  nameWithType: SqlRowUpdatedEventHandler
  fullName: System.Data.SqlClient.SqlRowUpdatedEventHandler
- uid: System.Data.SqlClient.SqlDataAdapter.RowUpdating
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: RowUpdating
  nameWithType: SqlDataAdapter.RowUpdating
  fullName: System.Data.SqlClient.SqlDataAdapter.RowUpdating
- uid: System.Data.SqlClient.SqlRowUpdatingEventHandler
  parent: System.Data.SqlClient
  isExternal: false
  name: SqlRowUpdatingEventHandler
  nameWithType: SqlRowUpdatingEventHandler
  fullName: System.Data.SqlClient.SqlRowUpdatingEventHandler
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: SqlDataAdapter.System.ICloneable.Clone()
  fullName: System.Data.SqlClient.SqlDataAdapter.System.ICloneable.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: TerminateBatching()
  nameWithType: SqlDataAdapter.TerminateBatching()
  fullName: System.Data.SqlClient.SqlDataAdapter.TerminateBatching()
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
  fullName: System.Data.SqlClient.SqlDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.#ctor*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SqlDataAdapter
  nameWithType: SqlDataAdapter.SqlDataAdapter
- uid: System.Data.SqlClient.SqlDataAdapter.AddToBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: AddToBatch
  nameWithType: SqlDataAdapter.AddToBatch
- uid: System.Data.SqlClient.SqlDataAdapter.ClearBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ClearBatch
  nameWithType: SqlDataAdapter.ClearBatch
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatedEvent*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatedEvent
  nameWithType: SqlDataAdapter.CreateRowUpdatedEvent
- uid: System.Data.SqlClient.SqlDataAdapter.CreateRowUpdatingEvent*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: CreateRowUpdatingEvent
  nameWithType: SqlDataAdapter.CreateRowUpdatingEvent
- uid: System.Data.SqlClient.SqlDataAdapter.DeleteCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.ExecuteBatch*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: ExecuteBatch
  nameWithType: SqlDataAdapter.ExecuteBatch
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedParameter*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedParameter
  nameWithType: SqlDataAdapter.GetBatchedParameter
- uid: System.Data.SqlClient.SqlDataAdapter.GetBatchedRecordsAffected*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: GetBatchedRecordsAffected
  nameWithType: SqlDataAdapter.GetBatchedRecordsAffected
- uid: System.Data.SqlClient.SqlDataAdapter.InitializeBatching*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InitializeBatching
  nameWithType: SqlDataAdapter.InitializeBatching
- uid: System.Data.SqlClient.SqlDataAdapter.InsertCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdated*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdated
  nameWithType: SqlDataAdapter.OnRowUpdated
- uid: System.Data.SqlClient.SqlDataAdapter.OnRowUpdating*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: OnRowUpdating
  nameWithType: SqlDataAdapter.OnRowUpdating
- uid: System.Data.SqlClient.SqlDataAdapter.SelectCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#DeleteCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.DeleteCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.DeleteCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#InsertCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.InsertCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.InsertCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#SelectCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.SelectCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.SelectCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#Data#IDbDataAdapter#UpdateCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.Data.IDbDataAdapter.UpdateCommand
  nameWithType: SqlDataAdapter.System.Data.IDbDataAdapter.UpdateCommand
- uid: System.Data.SqlClient.SqlDataAdapter.System#ICloneable#Clone*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: SqlDataAdapter.System.ICloneable.Clone
- uid: System.Data.SqlClient.SqlDataAdapter.TerminateBatching*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: TerminateBatching
  nameWithType: SqlDataAdapter.TerminateBatching
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateBatchSize*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateBatchSize
  nameWithType: SqlDataAdapter.UpdateBatchSize
- uid: System.Data.SqlClient.SqlDataAdapter.UpdateCommand*
  parent: System.Data.SqlClient.SqlDataAdapter
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataAdapter.UpdateCommand
