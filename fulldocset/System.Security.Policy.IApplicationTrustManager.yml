### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.IApplicationTrustManager
  id: IApplicationTrustManager
  children:
  - System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  langs:
  - csharp
  name: IApplicationTrustManager
  nameWithType: IApplicationTrustManager
  fullName: System.Security.Policy.IApplicationTrustManager
  type: Interface
  summary: "Определяет, должна ли выполняться приложение и какой набор разрешений должен быть предоставлен к нему."
  remarks: "Диспетчеры доверия должен реализовывать интерфейс IApplicationTrustManager. Узел вызывает метод <xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>метод, чтобы определить, следует ли выполнять приложения и какие разрешения должны предоставляться в приложение.</xref:System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust%2A?displayProperty=fullName>       В [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)] и более поздней версии, имеется только один диспетчер доверия, который может быть пользовательской реализации интерфейса IApplicationTrustManager. Реализация диспетчера доверия по умолчанию запрашивает у пользователя разрешение на установку приложения и повысить уровень разрешений, предоставленных приложению. Другие реализации диспетчера доверия могут предоставлять различные пользовательским интерфейсом. Например реализация может проверять список предприятий для доверенных приложений вместо запроса сведений пользователя."
  example:
  - "The following example shows a simple implementation of IApplicationTrustManager.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/csharp/t-system.security.policy_3_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#1](~/add/codesnippet/visualbasic/t-system.security.policy_3_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IApplicationTrustManager : System.Security.ISecurityEncodable
  implements:
  - System.Security.ISecurityEncodable
  platform:
  - net462
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  langs:
  - csharp
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Определяет, должна ли выполняться приложение и какой набор разрешений должен быть предоставлен к нему."
  remarks: "Метод DetermineApplicationTrust вызывается узлом для определения приложения должны быть выполнены и какой набор разрешений должен быть предоставлен. Возвращает DetermineApplicationTrust <xref:System.Security.Policy.ApplicationTrust>объекта с <xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A>свойство, содержащее разрешение набор, представляющий разрешения, предоставляемые для каждой сборки, на выполнение в контексте приложения.</xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A> </xref:System.Security.Policy.ApplicationTrust> Предоставленные разрешения не применяются к сборкам в глобальном кэше сборок. <xref:System.Security.Policy.ApplicationTrust>Также имеет <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>свойство, которое задает диспетчер доверия, чтобы указать, должно ли приложение доверенных.</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> </xref:System.Security.Policy.ApplicationTrust> Если диспетчер доверия указывает, что приложение может быть доверенным, узел активирует приложение и предоставляет его сборкам набор разрешений, предоставленных в <xref:System.Security.Policy.ApplicationTrust>коллекции.</xref:System.Security.Policy.ApplicationTrust>"
  example:
  - "The following example shows an implementation of the DetermineApplicationTrust method for a custom trust manager. This code example is part of a larger example provided for the <xref:System.Security.Policy.IApplicationTrustManager> interface.  \n  \n [!code-cs[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/csharp/24b6db65-f82b-47e4-ac93-_1.cs)]\n [!code-vb[System.Security.Policy.IApplicationTrustManager#2](~/add/codesnippet/visualbasic/24b6db65-f82b-47e4-ac93-_1.vb)]"
  syntax:
    content: public System.Security.Policy.ApplicationTrust DetermineApplicationTrust (ActivationContext activationContext, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Контекст активации для приложения."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "Контекст диспетчер доверия для приложения."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Объект, содержащий точки зрения безопасности приложения."
  overload: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(System.ActivationContext,System.Security.Policy.TrustManagerContext)
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
  fullName: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust(ActivationContext,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.Policy.IApplicationTrustManager.DetermineApplicationTrust*
  parent: System.Security.Policy.IApplicationTrustManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: IApplicationTrustManager.DetermineApplicationTrust
