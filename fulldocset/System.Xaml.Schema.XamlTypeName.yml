### YamlMime:ManagedReference
items:
- uid: System.Xaml.Schema.XamlTypeName
  id: XamlTypeName
  children:
  - System.Xaml.Schema.XamlTypeName.#ctor
  - System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  - System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  - System.Xaml.Schema.XamlTypeName.Name
  - System.Xaml.Schema.XamlTypeName.Namespace
  - System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  - System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  - System.Xaml.Schema.XamlTypeName.ToString
  - System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  - System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  - System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  - System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  - System.Xaml.Schema.XamlTypeName.TypeArguments
  langs:
  - csharp
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
  type: Class
  summary: "Позволяет указать тип с точки зрения имени и пространства имен XAML."
  remarks: "<xref:System.Xaml.XamlType>является классом сведения типа в системе типов XAML, в то время как XamlTypeName больше структуры данных, который предоставляет различные способы указания этого типа.</xref:System.Xaml.XamlType> XamlTypeName также предоставляет статические вспомогательные методы для создания XamlTypeName, разрешая идентификатор типа в пространстве имен XAML."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{{{Namespace}}}{Name}{TypeArgStringForDebugger}")]

      public class XamlTypeName
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor
  id: '#ctor'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName()
  nameWithType: XamlTypeName.XamlTypeName()
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> класса."
  syntax:
    content: public XamlTypeName ();
    parameters: []
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  id: '#ctor(System.Xaml.XamlType)'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(XamlType)
  nameWithType: XamlTypeName.XamlTypeName(XamlType)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(XamlType)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> класс, который основан на существующем <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  syntax:
    content: public XamlTypeName (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "Существующий <xref href=&quot;System.Xaml.XamlType&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(String,String)
  nameWithType: XamlTypeName.XamlTypeName(String,String)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> класса, на основе строк имени и пространства имен."
  syntax:
    content: public XamlTypeName (string xamlNamespace, string name);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "Пространство имен, содержащее имя."
    - id: name
      type: System.String
      description: "Имя создаваемого типа <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> для."
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  id: '#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})'
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  nameWithType: XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> на основе строк имени и пространства имен, а также массив аргументов типа класса."
  remarks: "Это сигнатура для использования при указании универсального типа и аргументов типа для этого типа."
  syntax:
    content: public XamlTypeName (string xamlNamespace, string name, System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName> typeArguments);
    parameters:
    - id: xamlNamespace
      type: System.String
      description: "Пространство имен XAML, содержащее `name`."
    - id: name
      type: System.String
      description: "Имя создаваемого типа <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> для."
    - id: typeArguments
      type: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
      description: "Массив аргументов-типов, каждый из которых должен быть <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeName.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Name
  id: Name
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Name
  nameWithType: XamlTypeName.Name
  fullName: System.Xaml.Schema.XamlTypeName.Name
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Возвращает имя, используемое для создания <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>."
  remarks: "Если <xref:System.Xaml.XamlType>использовался для создания этой <xref:System.Xaml.Schema.XamlTypeName>то значение имени <xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName>.</xref:System.Xaml.XamlType.Name%2A?displayProperty=fullName> </xref:System.Xaml.Schema.XamlTypeName> </xref:System.Xaml.XamlType>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Имя типа."
  overload: System.Xaml.Schema.XamlTypeName.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Namespace
  id: Namespace
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Namespace
  nameWithType: XamlTypeName.Namespace
  fullName: System.Xaml.Schema.XamlTypeName.Namespace
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Получает идентификатор пространства имен XAML, используемый для создания <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>."
  remarks: "Если <xref:System.Xaml.XamlType>был использован для создания <xref:System.Xaml.Schema.XamlTypeName>, имеет значение пространства имен `xamlType.GetXamlNamespaces()[0]`.</xref:System.Xaml.Schema.XamlTypeName> </xref:System.Xaml.XamlType>"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "Идентификатор пространства имен XAML."
  overload: System.Xaml.Schema.XamlTypeName.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  id: Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: Parse(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.Parse(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.Parse(String,IXamlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Предоставляет <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> значение на основе имени типа и объект, который может разрешить префикс разметки в пространство имен."
  syntax:
    content: public static System.Xaml.Schema.XamlTypeName Parse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver);
    parameters:
    - id: typeName
      type: System.String
      description: "Имя типа, чтобы создать <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> значения."
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "Поставщик объекта или службы, реализующий <xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;> </xref>."
    return:
      type: System.Xaml.Schema.XamlTypeName
      description: "Созданный <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeName.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeName</code>or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Не удается обработать строку."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  id: ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ParseList(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Предоставляет <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> значение на основе строку, можно указать несколько имен типов и объект, который может разрешить префикс разметки в пространство имен."
  remarks: "Ниже приведен квази BNF имя вложенного типа или нескольких типов имя синтаксического анализа включена с помощью данного метода.```   NestedTypeName = Name | Name &quot;+&quot; NestedTypeName   TypeName = NestedTypeName | NestedTypeName ‘[]’   XamlTypeName = Prefix ‘:’ TypeName TypeArgs  | TypeName TypeArgs   TypeArgs = empty | ‘(‘ XamlTypeNameList ‘)’   XamlTypeNameList = XamlTypeName XamlTypeNameList1   XamlTypeNameList1 = empty | ‘,’ XamlTypeNameList   ```"
  syntax:
    content: public static System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> ParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver);
    parameters:
    - id: typeNameList
      type: System.String
      description: "Строка, содержащая несколько типов. См. заметки."
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "Поставщик объекта или службы, реализующий <xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;> </xref>."
    return:
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "Созданный <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeName.ParseList*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeNameList</code>or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Не удается обработать строку."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString
  id: ToString
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString()
  nameWithType: XamlTypeName.ToString()
  fullName: System.Xaml.Schema.XamlTypeName.ToString()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Преобразует значение этого аргумента <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> в его эквивалентное строковое представление."
  remarks: "Эта подпись эквивалентно вызову метода <xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29>, передав `null` для `prefixLookup`.</xref:System.Xaml.Schema.XamlTypeName.ToString%28System.Xaml.INamespacePrefixLookup%29> s"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Эквивалентное строковое представление данного объекта <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> ."
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  id: ToString(System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString(INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(INamespacePrefixLookup)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Преобразует значение этого аргумента <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> в эквивалентное ему строковое представление, который может использоваться в синтаксисе разметки для использования элемента объекта типа."
  syntax:
    content: public string ToString (System.Xaml.INamespacePrefixLookup prefixLookup);
    parameters:
    - id: prefixLookup
      type: System.Xaml.INamespacePrefixLookup
      description: "Ссылки на службу для поиска префикса."
    return:
      type: System.String
      description: "Строка с использованием префикса."
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<>*> for this <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <> </> *настроек является недопустимым.       - или - не удалось найти префикс."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  id: ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Преобразует значение этого аргумента <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> в его эквивалентное строковое представление которого может использоваться в синтаксисе разметки для использования элементов объектов нескольких типов."
  syntax:
    content: public static string ToString (System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> typeNameList, System.Xaml.INamespacePrefixLookup prefixLookup);
    parameters:
    - id: typeNameList
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "Список типов."
    - id: prefixLookup
      type: System.Xaml.INamespacePrefixLookup
      description: "Ссылки на службу для поиска префикса."
    return:
      type: System.String
      description: "Объединенная строка все результаты типа."
  overload: System.Xaml.Schema.XamlTypeName.ToString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>prefixLookup</code>or <code>typeNameList</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  id: TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  nameWithType: XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  fullName: System.Xaml.Schema.XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Предоставляет <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> значение на основе имени типа и объект, который может разрешить префикс разметки в пространство имен."
  syntax:
    content: public static bool TryParse (string typeName, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Xaml.Schema.XamlTypeName result);
    parameters:
    - id: typeName
      type: System.String
      description: "Имя типа, чтобы создать <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> значения."
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "Поставщик объекта или службы, реализующий <xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;> </xref>."
    - id: result
      type: System.Xaml.Schema.XamlTypeName
      description: "Выходной параметр, содержащий созданный <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> Если возвращается значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>При успешном выполнении синтаксического анализа и <code> result </code> содержит полезное значение; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeName.TryParse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeName</code>or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  id: TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  nameWithType: XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Предоставляет <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> значение на основе строку, можно указать несколько имен типов и объект, который может разрешить префикс разметки в пространство имен."
  syntax:
    content: public static bool TryParseList (string typeNameList, System.Xaml.IXamlNamespaceResolver namespaceResolver, out System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> result);
    parameters:
    - id: typeNameList
      type: System.String
      description: "Строка, содержащая несколько типов. См. заметки."
    - id: namespaceResolver
      type: System.Xaml.IXamlNamespaceResolver
      description: "Поставщик объекта или службы, реализующий <xref href=&quot;System.Xaml.IXamlNamespaceResolver&quot;> </xref>."
    - id: result
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "Выходной параметр, содержащий созданный <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref> Если возвращается значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>При успешном выполнении синтаксического анализа и <code> result </code> содержит полезное значение; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.Schema.XamlTypeName.TryParseList*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeNameList</code>or <code>namespaceResolver</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments
  id: TypeArguments
  parent: System.Xaml.Schema.XamlTypeName
  langs:
  - csharp
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml.Schema
  summary: "Получает аргументы типа, используемый для создания <xref href=&quot;System.Xaml.Schema.XamlTypeName&quot;> </xref>."
  remarks: "Если <xref:System.Xaml.XamlType>использовался для создания этой <xref:System.Xaml.Schema.XamlTypeName>значение TypeArguments формируется на основе <xref:System.Xaml.XamlType.TypeArguments%2A>.</xref:System.Xaml.XamlType.TypeArguments%2A> </xref:System.Xaml.Schema.XamlTypeName> </xref:System.Xaml.XamlType>"
  syntax:
    content: public System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName> TypeArguments { get; }
    return:
      type: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
      description: "Аргументы типа, если таковые имеются. Может принимать значение null."
  overload: System.Xaml.Schema.XamlTypeName.TypeArguments*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xaml.Schema.XamlTypeName.#ctor
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName()
  nameWithType: XamlTypeName.XamlTypeName()
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName()
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.Xaml.XamlType)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(XamlType)
  nameWithType: XamlTypeName.XamlTypeName(XamlType)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(String,String)
  nameWithType: XamlTypeName.XamlTypeName(String,String)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xaml.Schema.XamlTypeName.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName})
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  nameWithType: XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.XamlTypeName(String,String,IEnumerable<XamlTypeName>)
- uid: System.Collections.Generic.IEnumerable{System.Xaml.Schema.XamlTypeName}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<XamlTypeName>
  nameWithType: IEnumerable<XamlTypeName>
  fullName: System.Collections.Generic.IEnumerable<System.Xaml.Schema.XamlTypeName>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Xaml.Schema.XamlTypeName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: XamlTypeName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeName.Name
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Name
  nameWithType: XamlTypeName.Name
  fullName: System.Xaml.Schema.XamlTypeName.Name
- uid: System.Xaml.Schema.XamlTypeName.Namespace
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Namespace
  nameWithType: XamlTypeName.Namespace
  fullName: System.Xaml.Schema.XamlTypeName.Namespace
- uid: System.Xaml.Schema.XamlTypeName.Parse(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Parse(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.Parse(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.Parse(String,IXamlNamespaceResolver)
- uid: System.Xaml.Schema.XamlTypeName
  parent: System.Xaml.Schema
  isExternal: false
  name: XamlTypeName
  nameWithType: XamlTypeName
  fullName: System.Xaml.Schema.XamlTypeName
- uid: System.Xaml.IXamlNamespaceResolver
  parent: System.Xaml
  isExternal: false
  name: IXamlNamespaceResolver
  nameWithType: IXamlNamespaceResolver
  fullName: System.Xaml.IXamlNamespaceResolver
- uid: System.Xaml.Schema.XamlTypeName.ParseList(System.String,System.Xaml.IXamlNamespaceResolver)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ParseList(String,IXamlNamespaceResolver)
  nameWithType: XamlTypeName.ParseList(String,IXamlNamespaceResolver)
  fullName: System.Xaml.Schema.XamlTypeName.ParseList(String,IXamlNamespaceResolver)
- uid: System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<XamlTypeName>
  nameWithType: IList<XamlTypeName>
  fullName: System.Collections.Generic.IList<System.Xaml.Schema.XamlTypeName>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Xaml.Schema.XamlTypeName>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Xaml.Schema.XamlTypeName
    name: XamlTypeName
    nameWithType: XamlTypeName
    fullName: XamlTypeName
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xaml.Schema.XamlTypeName.ToString
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString()
  nameWithType: XamlTypeName.ToString()
  fullName: System.Xaml.Schema.XamlTypeName.ToString()
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString(INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(INamespacePrefixLookup)
- uid: System.Xaml.INamespacePrefixLookup
  parent: System.Xaml
  isExternal: false
  name: INamespacePrefixLookup
  nameWithType: INamespacePrefixLookup
  fullName: System.Xaml.INamespacePrefixLookup
- uid: System.Xaml.Schema.XamlTypeName.ToString(System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName},System.Xaml.INamespacePrefixLookup)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  nameWithType: XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
  fullName: System.Xaml.Schema.XamlTypeName.ToString(IList<XamlTypeName>,INamespacePrefixLookup)
- uid: System.Xaml.Schema.XamlTypeName.TryParse(System.String,System.Xaml.IXamlNamespaceResolver,System.Xaml.Schema.XamlTypeName@)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  nameWithType: XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
  fullName: System.Xaml.Schema.XamlTypeName.TryParse(String,IXamlNamespaceResolver,XamlTypeName)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.Schema.XamlTypeName.TryParseList(System.String,System.Xaml.IXamlNamespaceResolver,System.Collections.Generic.IList{System.Xaml.Schema.XamlTypeName}@)
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  nameWithType: XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
  fullName: System.Xaml.Schema.XamlTypeName.TryParseList(String,IXamlNamespaceResolver,IList<XamlTypeName>)
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
  fullName: System.Xaml.Schema.XamlTypeName.TypeArguments
- uid: System.Xaml.Schema.XamlTypeName.#ctor*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: XamlTypeName
  nameWithType: XamlTypeName.XamlTypeName
- uid: System.Xaml.Schema.XamlTypeName.Name*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Name
  nameWithType: XamlTypeName.Name
- uid: System.Xaml.Schema.XamlTypeName.Namespace*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Namespace
  nameWithType: XamlTypeName.Namespace
- uid: System.Xaml.Schema.XamlTypeName.Parse*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: Parse
  nameWithType: XamlTypeName.Parse
- uid: System.Xaml.Schema.XamlTypeName.ParseList*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ParseList
  nameWithType: XamlTypeName.ParseList
- uid: System.Xaml.Schema.XamlTypeName.ToString*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: ToString
  nameWithType: XamlTypeName.ToString
- uid: System.Xaml.Schema.XamlTypeName.TryParse*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParse
  nameWithType: XamlTypeName.TryParse
- uid: System.Xaml.Schema.XamlTypeName.TryParseList*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TryParseList
  nameWithType: XamlTypeName.TryParseList
- uid: System.Xaml.Schema.XamlTypeName.TypeArguments*
  parent: System.Xaml.Schema.XamlTypeName
  isExternal: false
  name: TypeArguments
  nameWithType: XamlTypeName.TypeArguments
