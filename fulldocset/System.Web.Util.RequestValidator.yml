### YamlMime:ManagedReference
items:
- uid: System.Web.Util.RequestValidator
  id: RequestValidator
  children:
  - System.Web.Util.RequestValidator.#ctor
  - System.Web.Util.RequestValidator.Current
  - System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  - System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  langs:
  - csharp
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
  type: Class
  summary: "Определяет основные методы проверки пользовательского запроса."
  remarks: "По умолчанию ASP.NET не проверяет запросы, пока код явно не запросит значение из запроса. Например, ASP.NET не проверяет значения строки запроса, пока код обращается к <xref:System.Web.HttpRequest.QueryString%2A>коллекции.</xref:System.Web.HttpRequest.QueryString%2A> По умолчанию ASP.NET также не проверяет некоторые типы данных запроса, такие как значения формы, файлы cookie, имена файлов, которые были переданы с помощью HTTP и значение <xref:System.Web.HttpRequest.RawUrl%2A>Свойства.</xref:System.Web.HttpRequest.RawUrl%2A>       Класс RequestValidator является базовым классом, который можно реализовать, чтобы обеспечить проверку пользовательских запросов. При реализации этого класса, можно определить, когда происходит проверка и какого рода данные запроса для выполнения проверки.       По умолчанию ASP.NET предоставляет межсайтовых сценариев (XSS) проверки. Однако можно дополнить или заменить логику проверки запроса, которая предоставляется в ASP.NET, создав пользовательскую реализацию XSS. Например можно написать реализацию проверки пользовательского запроса, которое проверяет для атак путем внедрения кода SQL в дополнение к проверке для атак с XSS.       Для создания настраиваемой проверки запросов, необходимо написать пользовательский класс, производный от базового класса RequestValidator. После этого настроить ASP.NET для использования пользовательского запроса проверяющий элемент управления в файле Web.config уровня приложения. Пользовательский класс можно поместить в папку App_Code, в скомпилированную библиотеку классов в папке Bin или в скомпилированную библиотеку классов в глобальном кэше СБОРОК.      Настроек [!NOTE] настроек для приложения можно настроить только один тип проверки пользовательского запроса. Настройка типа проверки других запросов для отдельных виртуальных путей или страниц невозможна."
  example:
  - "The following example shows how to create a custom request validator that allows only a specific string to be used for query-string values.  \n  \n [!code-cs[System.Web.Util.RequestValidator#1](~/add/codesnippet/csharp/t-system.web.util.reques_1.cs)]\n [!code-vb[System.Web.Util.RequestValidator#1](~/add/codesnippet/visualbasic/t-system.web.util.reques_1.vb)]  \n  \n The following example shows how to configure ASP.NET to use the custom validator in the Web.config file for an application.  \n  \n```  \n<system.web>  \n  <httpRuntime requestValidationType=\"CustomRequestValidation\" />  \n</system.web>  \n```"
  syntax:
    content: public class RequestValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.#ctor
  id: '#ctor'
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> класса."
  remarks: "<xref:System.Web.Util.RequestValidator>Класс имеет конструктор по умолчанию.</xref:System.Web.Util.RequestValidator> При инициализации нового экземпляра класса внутренний метод извлекает сведения настраиваемой проверки из данных конфигурации. Сведения о конфигурации находятся в <xref:System.Web.Configuration.HttpRuntimeSection>раздела.</xref:System.Web.Configuration.HttpRuntimeSection> Дополнительные сведения см. в разделе [httpRuntime (схема параметров ASP.NET) элемент](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) и <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>атрибут.</xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>       Во время инициализации, один экземпляр <xref:System.Web.Util.RequestValidator>создается класс, и ссылку на экземпляр сохраняется в <xref:System.Web.Util.RequestValidator.Current%2A>свойство.</xref:System.Web.Util.RequestValidator.Current%2A> </xref:System.Web.Util.RequestValidator> ASP.NET не создает новый экземпляр средства проверки запроса на запрос. Таким образом пользовательские реализации <xref:System.Web.Util.RequestValidator>класс должен быть поточно ориентированного.</xref:System.Web.Util.RequestValidator>"
  syntax:
    content: public RequestValidator ();
    parameters: []
  overload: System.Web.Util.RequestValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.Current
  id: Current
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Возвращает или задает ссылку на текущий <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> экземпляр, который будет использоваться в приложении."
  remarks: "Сохраняет текущее свойство ссылку единственный допустимый экземпляр <xref:System.Web.Util.RequestValidator>класса.</xref:System.Web.Util.RequestValidator> Если экземпляр не существует, создается новый. Если экземпляр уже существует, возвращается текущий экземпляр.       Во время инициализации, один экземпляр <xref:System.Web.Util.RequestValidator>создается класс, и ссылку на экземпляр становится доступным в текущее свойство.</xref:System.Web.Util.RequestValidator> ASP.NET не создает новый экземпляр средства проверки запроса на запрос. Таким образом пользовательские реализации <xref:System.Web.Util.RequestValidator>класс должен быть поточно ориентированного.</xref:System.Web.Util.RequestValidator>      Настроек [!NOTE] настроек текущее свойство не является потокобезопасным, пока свойство устанавливает ссылку на текущий <xref:System.Web.Util.RequestValidator>класс.</xref:System.Web.Util.RequestValidator>"
  syntax:
    content: public static System.Web.Util.RequestValidator Current { get; set; }
    return:
      type: System.Web.Util.RequestValidator
      description: "Экземпляр <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> класса."
  overload: System.Web.Util.RequestValidator.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Предоставляет открытый метод, который вызывает защищенный <xref:System.Web.Util.RequestValidator.IsValidRequestString*>метод, чтобы проверить данные HTTP-запроса.</xref:System.Web.Util.RequestValidator.IsValidRequestString*>"
  remarks: "Метод InvokeIsValidRequestString предоставляет общий доступ к защищаемым <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>метод.</xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Это позволяет создавать класс пользовательскую программу-оболочку для <xref:System.Web.Util.RequestValidator>класса и вызовите <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>метод без необходимости наследования от <xref:System.Web.Util.RequestValidator>класса.</xref:System.Web.Util.RequestValidator> </xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> </xref:System.Web.Util.RequestValidator>       Сведения о проверке запроса см. в разделе <xref:System.Web.UnvalidatedRequestValues>.</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: public bool InvokeIsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Контекст запроса HTTP."
    - id: value
      type: System.String
      description: "Данные HTTP-запроса для проверки."
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "Перечисление, представляющее источник данных запроса, который проверяется. Ниже приведены возможные значения перечисления:-<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "(Необязательно) Ключ в коллекции запроса элемента для проверки. Этот параметр используется в том случае, если данные для проверки, получены из коллекции. Если данные для проверки не из коллекции, этот параметр может иметь <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: validationFailureIndex
      type: System.Int32
      description: "По возвращении из этого метода указывает проблемного или недопустимого текста в коллекции запроса (с нуля) начальной точки. Этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если строка для проверки не содержит без кодировки символов, которые могут использоваться во вредоносных сценариев атаки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Проверяет строку, содержащую данные HTTP-запроса."
  remarks: "Можно реализовать этот метод для выполнения пользовательской проверки данных запроса. Базовый метод IsValidRequestString поведение аналогично поведения, который реализуется ASP.NET, внутренне проверьте опасных строк в проверка межсайтовых скриптов. Дополнительные сведения см. в разделе [How To: предотвращения межсайтовых сценариев в ASP.NET](http://go.microsoft.com/fwlink/?LinkID=178708).       Если пользовательскую логику проверки обнаруживает ошибку, этот метод должен возвращать `false` и ввести значение в `validationFailureIndex` для указания начальной точки текста, который вызвал ошибку. Значение `validationFailureIndex` должно быть 0 или положительным целым числом.       Логика в проверке запроса происходит следующим образом: - <xref:System.Web.HttpRequest>класс выполняет проверку удаления нуль символа для входящих данных.</xref:System.Web.HttpRequest>      - <xref:System.Web.HttpRequest>Класса вызывает IsValidRequestString метод (по умолчанию реализация метода базового класса) или вызывает производной версии этого метода.</xref:System.Web.HttpRequest>      -Если метод IsValidRequestString возвращает `false` для сигнализации об ошибке проверки ASP.NET создает строку об ошибке (при необходимости) и создает исключение <xref:System.Web.HttpRequestValidationException>исключение.</xref:System.Web.HttpRequestValidationException>"
  syntax:
    content: protected virtual bool IsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Контекст текущего запроса."
    - id: value
      type: System.String
      description: "Данные HTTP-запроса для проверки."
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "Перечисление, представляющее источник данных запроса, который проверяется. Ниже приведены возможные значения для перечисления.<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_RawUrl&quot; name=&quot;RawUrl&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "Ключ в коллекции запроса элемента для проверки. Этот параметр является необязательным. Этот параметр используется в том случае, если данные для проверки, получены из коллекции. Если данные для проверки из коллекции, `collectionKey` может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: validationFailureIndex
      type: System.Int32
      description: "По возвращении из этого метода указывает проблемного или недопустимого текста в коллекции запроса (с нуля) начальной точки. Этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если строка для проверки допустима; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Util.RequestValidator.IsValidRequestString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Util.RequestValidator.#ctor
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
- uid: System.Web.Util.RequestValidator.Current
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
- uid: System.Web.Util.RequestValidator
  parent: System.Web.Util
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.RequestValidationSource
  parent: System.Web.Util
  isExternal: false
  name: RequestValidationSource
  nameWithType: RequestValidationSource
  fullName: System.Web.Util.RequestValidationSource
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Web.Util.RequestValidator.#ctor*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator.RequestValidator
- uid: System.Web.Util.RequestValidator.Current*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString
  nameWithType: RequestValidator.InvokeIsValidRequestString
- uid: System.Web.Util.RequestValidator.IsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString
  nameWithType: RequestValidator.IsValidRequestString
