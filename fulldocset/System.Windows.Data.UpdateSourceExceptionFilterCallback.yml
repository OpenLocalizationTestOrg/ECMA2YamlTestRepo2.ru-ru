### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  id: UpdateSourceExceptionFilterCallback
  langs:
  - csharp
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
  type: Delegate
  summary: "Представляет метод, который обрабатывает исключения, возникающие во время обновления значения источника привязки. Он должен использоваться с <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>."
  remarks: "Если была связана <xref:System.Windows.Controls.ExceptionValidationRule>с вашей <xref:System.Windows.Data.Binding>объекта, у вас есть возможность использовать <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>свойство, чтобы задать этот обратный вызов для предоставления пользовательской логики для обработки исключений.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> </xref:System.Windows.Data.Binding> </xref:System.Windows.Controls.ExceptionValidationRule> Этот обратный вызов при обнаружении любое исключение, что механизму привязки при обновлении значения источника привязки.       Если <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>не указан в <xref:System.Windows.Data.Binding>, обработчик привязки создает <xref:System.Windows.Controls.ValidationError>с исключением и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>коллекции связанного элемента.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A>"
  example:
  - "The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`. The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).  \n  \n [!code-xml[BindValidation#tbExceptionFilter](~/add/codesnippet/xaml/BindingValidation/Window1.xaml#tbexceptionfilter)]  \n  \n You have the option to provide custom logic to handle those exceptions. The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an UpdateSourceExceptionFilterCallback:  \n  \n [!code-cs[BindValidation#filtercallback](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#filtercallback)]  \n  \n The following is an example implementation of an UpdateSourceExceptionFilterCallback:  \n  \n [!code-cs[BindValidation#Handler](~/add/codesnippet/csharp/BindingValidation/Window1.xaml.cs#handler)]  \n  \n For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972)."
  syntax:
    content: public delegate object UpdateSourceExceptionFilterCallback(object bindExpression, Exception exception);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
