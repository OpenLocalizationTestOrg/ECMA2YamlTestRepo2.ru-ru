### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.MimeFormatter
  id: MimeFormatter
  children:
  - System.Web.Services.Protocols.MimeFormatter.#ctor
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  langs:
  - csharp
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
  type: Class
  summary: "Предоставляет абстрактный базовый класс для всех средств чтения и записи для веб-служб и клиентов, реализуемых с помощью HTTP, но без SOAP."
  remarks: "Записи веб-службы и читатели, сериализации и десериализации, соответственно, между объектами параметра или возвращаемого веб-методов и потоками запросов или ответов HTTP. Класс MimeFormatter задает общий интерфейс и функциональные возможности для чтения и записи классов в клиента и стороне службы.       Класс MimeFormatter поддерживает .NET Framework реализация веб-служб посредством операций HTTP-GET и HTTP POST. В операциях HTTP-GET параметры запроса шифруются в HTTP-запроса унифицированный указатель ресурса (URL). В операциях HTTP POST параметры запроса шифруются в тексте HTTP-запроса с помощью HTML-формы. В обеих реализациях возвращаемое значение отображается в тексте ответа HTTP как протокол SOAP XML-документ.       Разработчик обычно не требуется напрямую использовать MimeFormatter или его вложенные классы. Вместо этого средства Wsdl.exe для создания кода прокси клиента согласно реализаций HTTP-GET или HTTP POST, применяется <xref:System.Web.Services.Protocols.HttpMethodAttribute>для каждого веб-метода и устанавливает для атрибута <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A>и <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>Свойства для соответствующего типа, производного от класса MimeFormatter</xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute> На сервере подходящие производные типы используются в соответствии с параметрами в файле конфигурации ASP.NET (Web.config). На клиенте подходящие производные типы определяются из WSDL."
  syntax:
    content: public abstract class MimeFormatter
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref> класса."
  syntax:
    content: protected MimeFormatter ();
    parameters: []
  overload: System.Web.Services.Protocols.MimeFormatter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  id: CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Создает и инициализирует новый экземпляр класса конкретный класс, производный от <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "CreateInstance-метод создает экземпляр производного класса и вызывает реализацию абстрактного производного класса <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> CreateInstance-метод вызывается во время обработки запроса или ответа.       Инициализатор — это объект, передаваемый в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Инициализатор, передается как параметр методу CreateInstance получается из другого экземпляра производного класса путем вызова <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>метод во время инициализации службы или клиента.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);
    parameters:
    - id: type
      type: System.Type
      description: "Тип, производный от <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, для которого необходимо создать экземпляр."
    - id: initializer
      type: System.Object
      description: "Объект, используемый для инициализации экземпляра, полученный ранее через реализацию производного класса <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>метод.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer*>"
    return:
      type: System.Web.Services.Protocols.MimeFormatter
      description: "A <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;></xref> object."
  overload: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "При переопределении в производном классе, возвращает инициализатор для указанного метода."
  remarks: "Инициализатор — это объект, передаваемый в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Реализация производного класса экземпляра метод вызывается во время инициализации службы или клиента. Позже во время обработки запроса или ответа, инициализатор объект передается в статический <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A>метод, который создает экземпляр другого объекта производного класса, а затем в <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод, чтобы инициализировать его.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> </xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> Другой объект выполняет фактическое чтения или записи."
  syntax:
    content: public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "Объект <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> , указывающий веб-метода, для которого получается инициализатора."
    return:
      type: System.Object
      description: "<xref:System.Object>, Содержащий инициализатор для указанного метода.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает инициализатор для указанного метода."
  remarks: "Инициализатор — это объект, передаваемый в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Статический метод вызывает производного класса <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>метода, неявно при создании экземпляра производного класса.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Во время обработки запроса или ответа инициализатор объекта передается в <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод другого экземпляра производного класса.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Этим последним объектом выполняется фактическая операция чтения или записи."
  syntax:
    content: public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: type
      type: System.Type
      description: "Тип, производный от <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, — для получения инициализатора."
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "Объект <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> , указывающий веб-метода, для которого получается инициализатора."
    return:
      type: System.Object
      description: "Объект <xref:System.Object>, содержащий инициализатор для указанного метода.</xref:System.Object>"
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "При переопределении в производном классе возвращает массив инициализатора объектов, соответствующих входному массиву определений методов."
  remarks: "Инициализатор — это объект, передаваемый в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Вызывает метод экземпляра GetInitializers <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>метод экземпляра для каждого входного веб-метода.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> Это значит, экземпляр класса, производного от <xref:System.Web.Services.Protocols.MimeFormatter>уже создан.</xref:System.Web.Services.Protocols.MimeFormatter> Во время обработки запроса или ответа инициализатор передается в <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод другого экземпляра производного класса.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> Этим последним объектом выполняется фактическая операция чтения или записи."
  syntax:
    content: public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Массив веб-методов, где для каждого метода получается объект соответствующего индекса в возвращаемом массиве инициализаторов."
    return:
      type: System.Object[]
      description: "Массив объектов инициализаторов, соответствующий входному массиву определений методов."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  id: GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает массив инициализатора объектов, соответствующий входному массиву определений методов для заданного класса, производного от <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  remarks: "Инициализатор — это объект, передаваемый в качестве параметра для <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>метод.</xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A>       Статические GetInitializersmethod приводит вызов <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>метод, принадлежащий производного класса, указанного параметром `type` параметр.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);
    parameters:
    - id: type
      type: System.Type
      description: "Тип, производный от <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>, для которых инициализаторов получаются."
    - id: methodInfos
      type: System.Web.Services.Protocols.LogicalMethodInfo[]
      description: "Массив объектов типа <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> , указывающий веб-методов, для которых извлекаются инициализаторы."
    return:
      type: System.Object[]
      description: "Массив объектов инициализаторов, соответствующий входному массиву определений методов для заданного класса, производного от <xref href=&quot;System.Web.Services.Protocols.MimeFormatter&quot;> </xref>."
  overload: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "При переопределении в производном классе инициализирует новый экземпляр."
  remarks: "Метод Initialize вызывается во время обработки запроса или ответа; Тем не менее, инициализатор получается путем вызова метода <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>метод на другом экземпляре во время инициализации службы или клиента.</xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A>"
  syntax:
    content: public abstract void Initialize (object initializer);
    parameters:
    - id: initializer
      type: System.Object
      description: "Объект типа, подходящие для конкретного класса, реализующего метод."
  overload: System.Web.Services.Protocols.MimeFormatter.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter()
  nameWithType: MimeFormatter.MimeFormatter()
  fullName: System.Web.Services.Protocols.MimeFormatter.MimeFormatter()
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance(Type,Object)
  nameWithType: MimeFormatter.CreateInstance(Type,Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.CreateInstance(Type,Object)
- uid: System.Web.Services.Protocols.MimeFormatter
  parent: System.Web.Services.Protocols
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter
  fullName: System.Web.Services.Protocols.MimeFormatter
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(LogicalMethodInfo)
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer(Type,LogicalMethodInfo)
  nameWithType: MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializer(Type,LogicalMethodInfo)
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(LogicalMethodInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.LogicalMethodInfo[]
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo[]
  spec.csharp:
  - uid: System.Web.Services.Protocols.LogicalMethodInfo
    name: LogicalMethodInfo
    nameWithType: LogicalMethodInfo
    fullName: LogicalMethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers(Type,LogicalMethodInfo[])
  nameWithType: MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
  fullName: System.Web.Services.Protocols.MimeFormatter.GetInitializers(Type,LogicalMethodInfo[])
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize(Object)
  nameWithType: MimeFormatter.Initialize(Object)
  fullName: System.Web.Services.Protocols.MimeFormatter.Initialize(Object)
- uid: System.Web.Services.Protocols.MimeFormatter.#ctor*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: MimeFormatter
  nameWithType: MimeFormatter.MimeFormatter
- uid: System.Web.Services.Protocols.MimeFormatter.CreateInstance*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: CreateInstance
  nameWithType: MimeFormatter.CreateInstance
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializer*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializer
  nameWithType: MimeFormatter.GetInitializer
- uid: System.Web.Services.Protocols.MimeFormatter.GetInitializers*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: GetInitializers
  nameWithType: MimeFormatter.GetInitializers
- uid: System.Web.Services.Protocols.MimeFormatter.Initialize*
  parent: System.Web.Services.Protocols.MimeFormatter
  isExternal: false
  name: Initialize
  nameWithType: MimeFormatter.Initialize
