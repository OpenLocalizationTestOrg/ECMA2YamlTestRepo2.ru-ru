### YamlMime:ManagedReference
items:
- uid: System.Configuration.UriSection
  id: UriSection
  children:
  - System.Configuration.UriSection.#ctor
  - System.Configuration.UriSection.Idn
  - System.Configuration.UriSection.IriParsing
  - System.Configuration.UriSection.Properties
  - System.Configuration.UriSection.SchemeSettings
  langs:
  - csharp
  name: UriSection
  nameWithType: UriSection
  fullName: System.Configuration.UriSection
  type: Class
  summary: "Представляет раздел Uri в файле конфигурации."
  remarks: "Существующий <xref:System.Uri?displayProperty=fullName>класс был расширен, чтобы обеспечить поддержку международных идентификаторов ресурсов (IRI) и международных доменных имен.</xref:System.Uri?displayProperty=fullName> Текущие пользователи не увидят любые изменения в работе платформы .NET Framework 2.0, пока они не запустят IRI и IDN. Это обеспечивает совместимость приложений с предыдущими версиями платформы .NET Framework.       Параметры конфигурации для IRI и IDN можно получить с помощью класса UriSection."
  syntax:
    content: 'public sealed class UriSection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Configuration.UriSection.#ctor
  id: '#ctor'
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Configuration.UriSection&quot;> </xref> класса."
  remarks: "Существующий <xref:System.Uri?displayProperty=fullName>класс был расширен, чтобы обеспечить поддержку международных идентификаторов ресурсов (IRI) и международных доменных имен.</xref:System.Uri?displayProperty=fullName> Текущие пользователи не увидят любые изменения в работе платформы .NET Framework 2.0, пока они не запустят IRI и IDN. Это обеспечивает совместимость приложений с предыдущими версиями платформы .NET Framework.       Параметры конфигурации для IRI и IDN можно получить с помощью <xref:System.Configuration.UriSection>класса.</xref:System.Configuration.UriSection>       Дополнительные сведения о поддержке IRI см. в разделе «Примечания» для <xref:System.Uri?displayProperty=fullName>класса.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public UriSection ();
    parameters: []
  overload: System.Configuration.UriSection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Idn
  id: Idn
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает <xref href=&quot;System.Configuration.IdnElement&quot;> </xref> , содержащий параметр конфигурации для международного доменного имени (IDN) в обработке &lt;xref:System.Uri?displayProperty=fullName&gt; класса."
  remarks: "Существующий <xref:System.Uri?displayProperty=fullName>класс был расширен, чтобы обеспечить поддержку международных идентификаторов ресурсов (IRI) и международных доменных имен.</xref:System.Uri?displayProperty=fullName> Текущие пользователи не увидят любые изменения в работе платформы .NET Framework 2.0, пока они не запустят IRI и IDN. Это обеспечивает совместимость приложений с предыдущими версиями платформы .NET Framework.       Параметры конфигурации для IRI и IDN можно получить с помощью <xref:System.Configuration.UriSection>класса.</xref:System.Configuration.UriSection> Свойство Idn возвращает параметр конфигурации для IDN обработку в <xref:System.Uri?displayProperty=fullName>классе.</xref:System.Uri?displayProperty=fullName>       Обработка IRI должна быть включена для обработки возможна IDN. При отключении IRI система обработки IDN значение по умолчанию, где используется поведение платформы .NET Framework 2.0 для обеспечения совместимости и не используются имена IDN.       Только атрибут международного доменного имени (IDN) управляет работой. Все другие операции по обработке IRI (например, нормализация знаков) выполняются по умолчанию.       Параметр конфигурации для <xref:System.Configuration.IdnElement>будет считываться один раз при первой <xref:System.Uri?displayProperty=fullName>создается класс.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IdnElement> Изменения в параметрах конфигурации после этого игнорируются.       Дополнительные сведения о поддержке IRI см. в разделе «Примечания» для <xref:System.Uri?displayProperty=fullName>класса.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IdnElement Idn { get; }
    return:
      type: System.Configuration.IdnElement
      description: "Параметр конфигурации для международного доменного имени (IDN) в обработке &lt;xref:System.Uri?displayProperty=fullName&gt; класса."
  overload: System.Configuration.UriSection.Idn*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.IriParsing
  id: IriParsing
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает <xref href=&quot;System.Configuration.IriParsingElement&quot;> </xref> , содержащий параметр конфигурации для синтаксического анализа международных идентификаторов ресурсов (IRI) в &lt;xref:System.Uri?displayProperty=fullName&gt; класса."
  remarks: "Существующий <xref:System.Uri?displayProperty=fullName>класс был расширен, чтобы обеспечить поддержку международных идентификаторов ресурсов (IRI) и международных доменных имен.</xref:System.Uri?displayProperty=fullName> Текущие пользователи не увидят любые изменения в работе платформы .NET Framework 2.0, пока они не запустят IRI и IDN. Это обеспечивает совместимость приложений с предыдущими версиями платформы .NET Framework.       Параметры конфигурации для IRI и IDN можно получить с помощью <xref:System.Configuration.UriSection>класса.</xref:System.Configuration.UriSection> Свойство IriParsing возвращает параметр конфигурации для синтаксического анализа IRI в <xref:System.Uri?displayProperty=fullName>классе.</xref:System.Uri?displayProperty=fullName>       Обработка IRI должна быть включена для обработки возможна IDN. При отключении IRI система обработки IDN значение по умолчанию, где используется поведение платформы .NET Framework 2.0 для обеспечения совместимости и не используются имена IDN.       Только атрибут международного доменного имени (IDN) управляет работой. Все другие операции по обработке IRI (например, нормализация знаков) выполняются по умолчанию.       Параметр конфигурации для <xref:System.Configuration.IriParsingElement>будет считываться один раз при первой <xref:System.Uri?displayProperty=fullName>создается класс.</xref:System.Uri?displayProperty=fullName> </xref:System.Configuration.IriParsingElement> Изменения в параметрах конфигурации после этого игнорируются.       Дополнительные сведения о поддержке IRI см. в разделе «Примечания» для <xref:System.Uri?displayProperty=fullName>класса.</xref:System.Uri?displayProperty=fullName>"
  syntax:
    content: public System.Configuration.IriParsingElement IriParsing { get; }
    return:
      type: System.Configuration.IriParsingElement
      description: "Параметр конфигурации для синтаксического анализа международных идентификаторов ресурсов (IRI) в &lt;xref:System.Uri?displayProperty=fullName&gt; класса."
  overload: System.Configuration.UriSection.IriParsing*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.Properties
  id: Properties
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Для добавления."
  overload: System.Configuration.UriSection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.UriSection.SchemeSettings
  id: SchemeSettings
  parent: System.Configuration.UriSection
  langs:
  - csharp
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает <xref href=&quot;System.Configuration.SchemeSettingElementCollection&quot;> </xref> объект, который содержит параметры конфигурации для разбора схем в &lt;xref:System.Uri?displayProperty=fullName&gt; класса."
  remarks: "Свойство SchemeSettings не является универсальным. Только genericUriParserOptions = параметр конфигурации «DontUnescapePathDotsAndSlashes» для поддерживаются схемы HTTP и HTTPS. Все остальные параметры игнорируются."
  syntax:
    content: public System.Configuration.SchemeSettingElementCollection SchemeSettings { get; }
    return:
      type: System.Configuration.SchemeSettingElementCollection
      description: "Параметры конфигурации для разбора схем в &lt;xref:System.Uri?displayProperty=fullName&gt; класса"
  overload: System.Configuration.UriSection.SchemeSettings*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Configuration.UriSection.#ctor
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection()
  nameWithType: UriSection.UriSection()
  fullName: System.Configuration.UriSection.UriSection()
- uid: System.Configuration.UriSection.Idn
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
  fullName: System.Configuration.UriSection.Idn
- uid: System.Configuration.IdnElement
  parent: System.Configuration
  isExternal: false
  name: IdnElement
  nameWithType: IdnElement
  fullName: System.Configuration.IdnElement
- uid: System.Configuration.UriSection.IriParsing
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
  fullName: System.Configuration.UriSection.IriParsing
- uid: System.Configuration.IriParsingElement
  parent: System.Configuration
  isExternal: false
  name: IriParsingElement
  nameWithType: IriParsingElement
  fullName: System.Configuration.IriParsingElement
- uid: System.Configuration.UriSection.Properties
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
  fullName: System.Configuration.UriSection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Configuration.UriSection.SchemeSettings
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
  fullName: System.Configuration.UriSection.SchemeSettings
- uid: System.Configuration.SchemeSettingElementCollection
  parent: System.Configuration
  isExternal: false
  name: SchemeSettingElementCollection
  nameWithType: SchemeSettingElementCollection
  fullName: System.Configuration.SchemeSettingElementCollection
- uid: System.Configuration.UriSection.#ctor*
  parent: System.Configuration.UriSection
  isExternal: false
  name: UriSection
  nameWithType: UriSection.UriSection
- uid: System.Configuration.UriSection.Idn*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Idn
  nameWithType: UriSection.Idn
- uid: System.Configuration.UriSection.IriParsing*
  parent: System.Configuration.UriSection
  isExternal: false
  name: IriParsing
  nameWithType: UriSection.IriParsing
- uid: System.Configuration.UriSection.Properties*
  parent: System.Configuration.UriSection
  isExternal: false
  name: Properties
  nameWithType: UriSection.Properties
- uid: System.Configuration.UriSection.SchemeSettings*
  parent: System.Configuration.UriSection
  isExternal: false
  name: SchemeSettings
  nameWithType: UriSection.SchemeSettings
