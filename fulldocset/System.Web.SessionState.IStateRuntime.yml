### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.IStateRuntime
  id: IStateRuntime
  children:
  - System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  - System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  - System.Web.SessionState.IStateRuntime.StopProcessing
  langs:
  - csharp
  name: IStateRuntime
  nameWithType: IStateRuntime
  fullName: System.Web.SessionState.IStateRuntime
  type: Interface
  summary: "Определяет интерфейс, используемый службой состояний ASP.NET для управления данными сеанса."
  remarks: "ASP.NET можно управлять состояния сеанса вне процесса с помощью службы Windows, вызывает службу состояний ASP.NET. <xref:System.Web.SessionState.StateRuntime>Класс используется неуправляемый код в этой службе для управления данными сеанса.</xref:System.Web.SessionState.StateRuntime> Этот класс поддерживает инфраструктуру .NET Framework реализацию служба состояния ASP.NET и не непосредственного использования из кода.       Использование служба состояния ASP.NET не метод по умолчанию управления sessionstate в ASP.NET; По умолчанию ASP.NET поддерживает управление состоянием сеанса в процессе. Она также поддерживает второй параметр out of process, который управляет состоянием сеанса в базе данных Microsoft SQL Server и позволяет пользовательских состояний сеанса решений для управления. Дополнительные сведения о параметрах хранения состояния сеанса см. в разделе [режимы состояния сеанса](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("7297744b-e188-40bf-b7e9-56698d25cf44")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IStateRuntime
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  id: ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Используется сервером состояний ASP.NET для обработки данных сеанса."
  remarks: "ASP.NET можно управлять состояния сеанса вне процесса с помощью службы Windows, вызывает службу состояний ASP.NET. <xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A>Метод используется неуправляемый код в этой службе для управления данными сеанса.</xref:System.Web.SessionState.IStateRuntime.ProcessRequest%2A>       Этот член поддерживает инфраструктуру .NET Framework реализацию служба состояния ASP.NET и не непосредственного использования из кода. Дополнительные сведения о параметрах хранения состояния сеанса см. в разделе [режимы состояния сеанса](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);
    parameters:
    - id: tracker
      type: System.IntPtr
      description: "<xref:System.IntPtr>Указатель на объект, сохраненный в неуправляемом сервере состояний ASP.NET.</xref:System.IntPtr>"
    - id: verb
      type: System.Int32
      description: "Действие, выполняемое в объекте."
    - id: uri
      type: System.String
      description: "Идентификатор сеанса."
    - id: exclusive
      type: System.Int32
      description: "Тип доступа к объектам в хранилище."
    - id: timeout
      type: System.Int32
      description: "Количество минут, в котором хранятся данные сеанса."
    - id: lockCookieExists
      type: System.Int32
      description: "Значение, указывающее, существует ли файл cookie блокировки в исходном запросе ASP.NET веб-сервера к серверу состояний ASP.NET."
    - id: lockCookie
      type: System.Int32
      description: "Владелец блокировки для состояния сеанса."
    - id: contentLength
      type: System.Int32
      description: "Длина в байтах данных, хранящихся в сеансе."
    - id: content
      type: System.IntPtr
      description: "<xref:System.IntPtr>Указатель на содержимое, сохраненное для сеанса в неуправляемом сервере состояний ASP.NET.</xref:System.IntPtr>"
  overload: System.Web.SessionState.IStateRuntime.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  id: ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Используется сервером состояний ASP.NET для обработки данных сеанса."
  remarks: "ASP.NET можно управлять состояния сеанса вне процесса с помощью службы Windows, вызывает службу состояний ASP.NET. Метод ProcessRequest используется неуправляемый код в этой службе для управления данными сеанса.       Этот член поддерживает инфраструктуру .NET Framework реализацию служба состояния ASP.NET и не непосредственного использования из кода. Дополнительные сведения о параметрах хранения состояния сеанса см. в разделе [режимы состояния сеанса](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void ProcessRequest (IntPtr tracker, int verb, string uri, int exclusive, int extraFlags, int timeout, int lockCookieExists, int lockCookie, int contentLength, IntPtr content);
    parameters:
    - id: tracker
      type: System.IntPtr
      description: "<xref:System.IntPtr>Указатель на объект, сохраненный в неуправляемом сервере состояний ASP.NET.</xref:System.IntPtr>"
    - id: verb
      type: System.Int32
      description: "Действие, выполняемое в объекте."
    - id: uri
      type: System.String
      description: "Идентификатор сеанса."
    - id: exclusive
      type: System.Int32
      description: "Тип доступа к объектам в хранилище."
    - id: extraFlags
      type: System.Int32
      description: "Значение, указывающее, является ли текущий сеанс неинициализированным, без поддержки файлов cookie сеанса."
    - id: timeout
      type: System.Int32
      description: "Количество минут, в котором хранятся данные сеанса."
    - id: lockCookieExists
      type: System.Int32
      description: "Значение, указывающее, существует ли файл cookie блокировки в исходном запросе ASP.NET веб-сервера к серверу состояний ASP.NET."
    - id: lockCookie
      type: System.Int32
      description: "Владелец блокировки для состояния сеанса."
    - id: contentLength
      type: System.Int32
      description: "Длина в байтах данных, хранящихся в сеансе."
    - id: content
      type: System.IntPtr
      description: "<xref:System.IntPtr>Указатель на содержимое, сохраненное для сеанса в неуправляемом сервере состояний ASP.NET.</xref:System.IntPtr>"
  overload: System.Web.SessionState.IStateRuntime.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.IStateRuntime.StopProcessing
  id: StopProcessing
  parent: System.Web.SessionState.IStateRuntime
  langs:
  - csharp
  name: StopProcessing()
  nameWithType: IStateRuntime.StopProcessing()
  fullName: System.Web.SessionState.IStateRuntime.StopProcessing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Прекращает обработку данных сеанса, хранящихся на сервере состояний ASP.NET."
  remarks: "ASP.NET можно управлять состояния сеанса вне процесса с помощью службы Windows, вызывает службу состояний ASP.NET. <xref:System.Web.SessionState.StateRuntime.StopProcessing%2A>Метод используется в неуправляемом коде в эту службу остановить обработку данных сеанса.</xref:System.Web.SessionState.StateRuntime.StopProcessing%2A> Данный член предназначен для поддержки реализации инфраструктуры .NET Framework в службе состояний ASP.NET и не непосредственного использования из кода. Дополнительные сведения о параметрах хранения состояния сеанса см. в разделе [режимы состояния сеанса](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void StopProcessing ();
    parameters: []
  overload: System.Web.SessionState.IStateRuntime.StopProcessing*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest(System.IntPtr,System.Int32,System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.IntPtr)
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  nameWithType: IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
  fullName: System.Web.SessionState.IStateRuntime.ProcessRequest(IntPtr,Int32,String,Int32,Int32,Int32,Int32,Int32,Int32,IntPtr)
- uid: System.Web.SessionState.IStateRuntime.StopProcessing
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: StopProcessing()
  nameWithType: IStateRuntime.StopProcessing()
  fullName: System.Web.SessionState.IStateRuntime.StopProcessing()
- uid: System.Web.SessionState.IStateRuntime.ProcessRequest*
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: ProcessRequest
  nameWithType: IStateRuntime.ProcessRequest
- uid: System.Web.SessionState.IStateRuntime.StopProcessing*
  parent: System.Web.SessionState.IStateRuntime
  isExternal: false
  name: StopProcessing
  nameWithType: IStateRuntime.StopProcessing
