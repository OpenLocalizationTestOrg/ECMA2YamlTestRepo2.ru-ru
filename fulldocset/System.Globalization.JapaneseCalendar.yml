### YamlMime:ManagedReference
items:
- uid: System.Globalization.JapaneseCalendar
  id: JapaneseCalendar
  children:
  - System.Globalization.JapaneseCalendar.#ctor
  - System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.JapaneseCalendar.AlgorithmType
  - System.Globalization.JapaneseCalendar.Eras
  - System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  - System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  - System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  - System.Globalization.JapaneseCalendar.MinSupportedDateTime
  - System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.JapaneseCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: JapaneseCalendar
  nameWithType: JapaneseCalendar
  fullName: System.Globalization.JapaneseCalendar
  type: Class
  summary: "Представляет японский календарь."
  remarks: "Японский календарь, который также называется Wareki календаря, функционирует в так же, как и григорианский, за исключением года и эры.      Настроек [!NOTE] настроек сведения об использовании JapaneseCalendar классов и классов календарей в платформе .NET Framework см. в разделе [работа с календарями](~/add/includes/ajax-current-ext-md.md).       Одна эра для каждого императора reign японский календарь. Текущая эра хранится эра Хэйсэй, которая началась в 1989 год григорианского календаря. Название эры обычно отображается перед годом. Например 2001 года григорианского календаря — Японский Хэйсэй календарного года. Обратите внимание, что первый год эры называется «Ганнэн». Таким образом год по григорианскому календарю 1989 был японский Хэйсэй Ганнэн календарного года.       Этот класс назначает номера эры следующим образом: | Значение GetEra | Название эры | Аббревиатура эры | Даты григорианского календаря |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Хэйсэй) | 平 (H, h) | 8 января 1989 г. для представления |   | 3 | 昭和 (Шова) | 昭 (&quot;S&quot;, &quot;s&quot;) | 25 декабрь, 1926 г. — 7 января 1989 г. |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 июля 1912 24 декабря, 1926 г. — |   | 1 | 明治 (Meiji) | 明 (&quot;M&quot;, &quot;m&quot;) | 8 сентября 1868 29 июля 1912 |       Этот класс обрабатывает даты с 8 сентября Мэйдзи года (по григорианскому календарю, 8 сентября 1868). Несмотря на то, что по японскому календарю была переключена с лунным солнечного календаря в году Мэйдзи (1873 г. по григорианскому календарю), эта реализация зависит только солнечного календаря.       Високосного года по японскому календарю соответствуют же високосного года по григорианскому календарю. Високосный год по григорианскому календарю определяется как год, число которого делится на 4, за исключением того, если оно делится на 100. Тем не менее число года делится на 400, год является високосным. Общие году 365 дней, в високосном году 366 дней.       Японский календарь имеет 12 месяцев с 28 до 31 дня: | Значение GetMonth | Месяц | Английский | Дней в обычных годах | Дни в високосного года |   |--------------------|-----------|-------------|--------------------------|------------------------|   | 1 | 1月 (Итигацу) | Январь | 31 | 31 |   | 2 | 2月 (нигацу) | Февраль | 28 | 29 |   | 3 | 3月 (Sangatsu) | Март | 31 | 31 |   | 4 | 4月 (сигасу) | Апрель | 30 | 30 |   | 5 | 5月 (Гогацу) | Может | 31 | 31 |   | 6 | 6月 (Рокугацу) | Июнь | 30 | 30 |   | 7 | 7月 (Ситигацу) | Июль | 31 | 31 |   | 8 | 8月 (Хатигацу) | Август | 31 | 31 |   | 9 | 9月 (Кугацу) | Сентябрь | 30 | 30 |   | 10 | 10月 (дзюгацу) | Октябрь | 31 | 31 |   | 11 | 11月 (Дзюитигацу) | Ноябрь | 30 | 30 |   | 12 | 12月 (Дзюнигацу) | Декабрь | 31 | 31 |       Нигацу, что эквивалентно в месяце григорианского календаря, имеет 29 дней високосного года и 28 обычные годы.       Дата 1 января 2001 г. н. э. по григорианскому календарю соответствует первому дню месяца итигацу года Хэйсэй по японскому календарю.       Если приложение использует класс JapaneseCalendar <xref:System.DateTime.Parse%2A?displayProperty=fullName>распознает сокращение названия эры перед года.</xref:System.DateTime.Parse%2A?displayProperty=fullName> Сокращение может одного символа без учета регистра латинского алфавита либо канджи одного символа.       Каждый <xref:System.Globalization.CultureInfo>объект поддерживает несколько календарей.</xref:System.Globalization.CultureInfo> <xref:System.Globalization.CultureInfo.Calendar%2A>Свойство возвращает календарь по умолчанию для языка и региональных параметров и <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>свойство возвращает массив, содержащий все календари, поддерживаемые языком и региональными параметрами.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Чтобы изменить используемый календарь <xref:System.Globalization.CultureInfo>приложение должно задать <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>Свойства <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>для нового <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class JapaneseCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: JapaneseCalendar()
  nameWithType: JapaneseCalendar.JapaneseCalendar()
  fullName: System.Globalization.JapaneseCalendar.JapaneseCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> класса."
  syntax:
    content: public JapaneseCalendar ();
    parameters: []
  overload: System.Globalization.JapaneseCalendar.#ctor*
  exceptions:
  - type: System.TypeInitializationException
    commentId: T:System.TypeInitializationException
    description: "Не удалось инициализировать <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> объекта из-за отсутствия сведения о культуре."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает <xref:System.DateTime>указанный количество месяцев от указанной <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Компонент дня <xref:System.DateTime>изменяется, если конечный день не является допустимым днем месяца и года.</xref:System.DateTime> Он заменяется последним допустимым днем месяца и года. Часть года полученный <xref:System.DateTime>изменяется, если конечный месяц находится вне диапазона года заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Полученный <xref:System.DateTime>изменяется, если год результата находится за пределами эры заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> составляющая эры Часть времени суток полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Например, если указанный месяц дзюгасу (октябрь), который содержит 31 день, указанный день — 31 день этого месяца и `months` равно 6, год результата — на один больше указанного, месяц — сигасу (апрель), день — 30-й день, что последний день месяца (апрель).       Если `months` отрицательное, полученный <xref:System.DateTime>более ранняя, чем указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Возвращаемое <xref:System.DateTime>значение всегда равно <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> свойство</xref:System.DateTime.Kind%2A> Можно сохранить <xref:System.DateTime.Kind%2A>свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>метода, как показано в следующем примере.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.j_17_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.j_17_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_17_2.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_17_2.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_17_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>К которому добавляются месяцы.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Число месяцев для добавления."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Который является результатом добавления указанное число месяцев до указанного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Итоговый <xref:System.DateTime>находится за пределами поддерживаемого диапазона.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>— меньше -120000.       - или - <code>months</code> больше 120000."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает, <xref:System.DateTime>то есть указанное число лет от указанного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Компонент дня <xref:System.DateTime>изменяется, если конечный день не является допустимым днем месяца и года.</xref:System.DateTime> Он заменяется последним допустимым днем месяца и года. Полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> компонент месяца Полученный <xref:System.DateTime>изменяется, если год результата находится за пределами эры заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> составляющая эры Часть времени суток полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Например нигасу имеет 28 дней, за исключением високосного года, когда 29 дней. Если указанной даты 29 нигасу день високосным годом и значение `years` равно 1, результате получится дата 28 нигасу следующего года.       Если `years` отрицательное, полученный <xref:System.DateTime>более ранняя, чем указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Возвращаемое <xref:System.DateTime>значение всегда равно <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> свойство</xref:System.DateTime.Kind%2A> Можно сохранить <xref:System.DateTime.Kind%2A>свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>метода, как показано в следующем примере.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.j_14_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.j_14_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_14_2.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_14_2.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_14_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>К которому добавляются годы.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Число лет для добавления."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Который является результатом сложения указанного числа лет на указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Итоговый <xref:System.DateTime>находится за пределами поддерживаемого диапазона.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>находится за пределами поддерживаемого диапазона <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> типа.       - или - <code>years</code> меньше параметр больше или равно 10 000."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
  fullName: System.Globalization.JapaneseCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение, указывающее, является ли текущий календарь солнечным, лунным или их сочетание."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.j_5_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.j_5_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Всегда возвращает <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.Eras
  id: Eras
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: JapaneseCalendar.Eras
  fullName: System.Globalization.JapaneseCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает список эр в <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref>."
  remarks: "Одна эра для каждого императора reign японский календарь. Текущая эра хранится эра Хэйсэй, которая началась в 1989 год григорианского календаря. Название эры обычно отображается перед годом. Например 2001 года григорианского календаря — Японский Хэйсэй календарного года. Обратите внимание, что первый год эры называется «Ганнэн». Таким образом год по григорианскому календарю 1989 был японский Хэйсэй Ганнэн календарного года.       Этот класс назначает номера эры следующим образом: | Значение GetEra | Название эры | Аббревиатура эры | Даты григорианского календаря |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Хэйсэй) | 平 (H, h) | 8 января 1989 г. для представления |   | 3 | 昭和 (Шова) | 昭 (&quot;S&quot;, &quot;s&quot;) | 25 декабрь, 1926 г. — 7 января 1989 г. |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 июля 1912 24 декабря, 1926 г. — |   | 1 | 明治 (Meiji) | 明 (&quot;M&quot;, &quot;m&quot;) | 8 сентября 1868 29 июля 1912 |       Этот класс обрабатывает даты с 8 сентября в году Мэйдзи (1 января 1868 г. по григорианскому календарю). Несмотря на то, что по японскому календарю была переключена с лунным солнечного календаря в году Мэйдзи (1873 г. по григорианскому календарю), эта реализация зависит только солнечного календаря.      Настроек [!NOTE] настроек следует добавлении дополнительных эр в будущем, приложения могут возникнуть более ожидаемых четырех эр для японского календаря. Приложения следует тестировать, чтобы убедиться, что они продолжают работать в таких случаях; в разделе [эры обработки для японского календаря](http://go.microsoft.com/fwlink/p/?LinkId=239618)."
  example:
  - "The following example displays the values contained in the Eras property.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/csharp/p-system.globalization.j_4_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/visualbasic/p-system.globalization.j_4_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.Eras#1](~/add/codesnippet/cpp/p-system.globalization.j_4_1.cpp)]"
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Массив целых чисел, представляющий эры в <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_13_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_13_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_13_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 31, представляющее день месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день недели в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Ниже приведены значения <xref:System.DayOfWeek>: | Значение DayOfWeek | указывающая |   |---------------------|---------------------|   | Воскресенье | 日曜日 (Nichiyoubi) |   | Понедельник | 月曜日 (Getsuyoubi) |   | Вторник | 火曜日 (Kayoubi) |   | Среда | 水曜日 (Suiyoubi) |   | Четверг | 木曜日 (Mokuyoubi) |   | Пятница | 金曜日 (Kinyoubi) |   | Суббота | 土曜日 (Doyoubi) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_9_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_9_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_9_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "<xref:System.DayOfWeek>Значение, представляющее день недели в указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.JapaneseCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день года в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "День года определяется как число дней с первого дня года. Например GetDayOfYear за первый день первого месяца возвращает 1, а GetDayOfYear за последний день за последний месяц возвращает общее количество дней, в этом году, то же значение, что возвращают <xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>.</xref:System.Globalization.JapaneseCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_5_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_5_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_5_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 366, обозначающее день года в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число дней в указанном месяце указанных года и эры."
  remarks: "Например, этот метод возвращает 28 или 29 нигацу (февраль, `month` = 2), в зависимости от ли `year` является високосным годом."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/50a0d95d-a5e5-49bd-9864-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/50a0d95d-a5e5-49bd-9864-_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/50a0d95d-a5e5-49bd-9864-_1.cs)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Int32
      description: "Число дней в указанном месяце указанных года и эры."
  overload: System.Globalization.JapaneseCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>month</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число дней в указанном году указанной эры."
  remarks: "Например, этот метод возвращает 365 или 366, в зависимости от того, следует ли `year` является високосным годом."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.j_4_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.j_4_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_4_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Int32
      description: "Число дней в указанном году указанной эры."
  overload: System.Globalization.JapaneseCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: JapaneseCalendar.GetEra(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение эры в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Одна эра для каждого императора reign японский календарь. Текущая эра хранится эра Хэйсэй, которая началась в 1989 год григорианского календаря. Название эры обычно отображается перед годом. Например 2001 года григорианского календаря — Японский Хэйсэй календарного года. Обратите внимание, что первый год эры называется «Ганнэн». Таким образом год по григорианскому календарю 1989 был японский Хэйсэй Ганнэн календарного года.       Этот класс назначает номера эры следующим образом: | Значение GetEra | Название эры | Аббревиатура эры | Даты григорианского календаря |   |------------------|--------------|----------------------|---------------------|   | 4 | 平成 (Хэйсэй) | 平 (H, h) | 8 января 1989 г. для представления |   | 3 | 昭和 (Шова) | 昭 (&quot;S&quot;, &quot;s&quot;) | 25 декабрь, 1926 г. — 7 января 1989 г. |   | 2 | 大正 (Taisho) | 大 (T, t) | 30 июля 1912 24 декабря, 1926 г. — |   | 1 | 明治 (Meiji) | 明 (&quot;M&quot;, &quot;m&quot;) | 8 сентября 1868 29 июля 1912 |       Как правило <xref:System.Globalization.JapaneseCalendar>класс поддерживает даты из 8 сентября в году Мэйдзи (8 сентября 1868 григорианского календаря), которое является значением из <xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A>свойство.</xref:System.Globalization.JapaneseCalendar.MinSupportedDateTime%2A> </xref:System.Globalization.JapaneseCalendar> Однако метод GetEra успешно возвращает эра для дат с 1 января по 7 сентября Мэйдзи года (1 января 1868 через 7 сентября 1868 по григорианскому календарю). Для дат ранее 1 января 1868 по григорианскому календарю, метод создает <xref:System.ArgumentOutOfRangeException>исключение.</xref:System.ArgumentOutOfRangeException>"
  example:
  - "The following example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_10_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_10_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_10_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число, представляющее эру в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Итоговый <xref:System.DateTime>находится за пределами поддерживаемого диапазона.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JapaneseCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет високосный месяц для заданных года и эры."
  remarks: "В календарях, поддерживает понятие високосного года високосный месяц может возникнуть после определенного месяца или после любого месяца в году. Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>метод возвращает число от 1 до 13, указывающее месяц, связанные с указанной даты.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Если между восьмой и девятый месяцы года, високосным месяцем <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>метод возвращает значение 8 для восьмой месяц, 9 для високосный месяц восьмой и 10 за девятый месяц.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: era
      type: System.Int32
      description: "Эра."
    return:
      type: System.Int32
      description: "Возвращаемое значение всегда равно 0 из-за <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> тип не поддерживает понятие високосного года."
  overload: System.Globalization.JapaneseCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>или <code>era</code> находится за пределами диапазона, поддерживаемого <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> типа."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: JapaneseCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_18_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_18_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_18_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число месяцев в указанном году указанной эры."
  remarks: ''
  example:
  - "The following code example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/0687c0ba-842c-4e70-872b-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/0687c0ba-842c-4e70-872b-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/0687c0ba-842c-4e70-872b-_1.cpp)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Int32
      description: "Возвращаемое значение всегда равно 12."
  overload: System.Globalization.JapaneseCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает неделю года, который включает дату в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Этот метод можно использовать для определения количества недель в году, задав `time` параметра до последнего дня года.       <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>Свойство содержит значения конкретного языка и региональных параметров, которые можно использовать для `rule` и `firstDayOfWeek` параметров.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>Свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>содержит <xref:System.DayOfWeek>значение, представляющее первый день недели для определенной культуры, с помощью календаря, указанное в <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>свойстве <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.DayOfWeek> по умолчанию</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>Свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>содержит <xref:System.Globalization.CalendarWeekRule>значение, которое определяет календарной недели для определенной культуры, с помощью календаря задано <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CalendarWeekRule> по умолчанию</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       Например, в <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A>метод для 1 января возвращает 1.</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/ef15d25f-af8b-4734-b15e-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/ef15d25f-af8b-4734-b15e-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/ef15d25f-af8b-4734-b15e-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "Один из <xref:System.Globalization.CalendarWeekRule>значений, определяющее календарную неделю.</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "Один из <xref:System.DayOfWeek>значения, представляющее первый день недели.</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "От 1 целое число, представляющее неделю года, который включает дату в <code> time </code> параметра."
  overload: System.Globalization.JapaneseCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>или <code>firstDayOfWeek</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>rule</code> не является допустимым <xref:System.Globalization.CalendarWeekRule> значение."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: JapaneseCalendar.GetYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает год в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Japanese calendar.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.j_16_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.j_16_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.j_16_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число, представляющее год в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанная дата указанной эры високосным днем."
  remarks: "Високосного года по японскому календарю соответствуют же високосного года по григорианскому календарю. Високосный год по григорианскому календарю определяется как год, число которого делится на 4, за исключением того, если оно делится на 100. Тем не менее число года делится на 400, год является високосным. Общие году 365 дней, в високосном году 366 дней.       День високосным является день, который возникает только в високосном году. Например нигасу — 29 только день високосным."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/csharp/98bd79da-f987-41c7-8e4e-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/98bd79da-f987-41c7-8e4e-_1.vb)]\n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapDay#1](~/add/codesnippet/cpp/98bd79da-f987-41c7-8e4e-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: day
      type: System.Int32
      description: "Целое число от 1 до 31, представляющее день."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, если указанный день — високосный день; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>month</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>day</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанный месяц указанных года и эры високосным месяцем."
  remarks: "Високосного года по японскому календарю соответствуют же високосного года по григорианскому календарю. Високосный год по григорианскому календарю определяется как год, число которого делится на 4, за исключением того, если оно делится на 100. Тем не менее число года делится на 400, год является високосным. Общие году 365 дней, в високосном году 366 дней.       Високосный месяц — целый месяц, происходит только в високосном году. Японский календарь не поддерживает все месяцы високосным."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/6e9c4cc5-e550-476d-bf72-_1.cpp)]\n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/6e9c4cc5-e550-476d-bf72-_1.cs)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/6e9c4cc5-e550-476d-bf72-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Boolean
      description: "Этот метод всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, если не переопределено в производном классе."
  overload: System.Globalization.JapaneseCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>month</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанный год указанной эры високосным годом."
  remarks: "Високосного года по японскому календарю соответствуют же високосного года по григорианскому календарю. Високосный год по григорианскому календарю определяется как год, число которого делится на 4, за исключением того, если оно делится на 100. Тем не менее число года делится на 400, год является високосным. Общие году 365 дней, в високосном году 366 дней."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.j_2_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.j_2_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.j_2_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, если указанный год — високосный; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.JapaneseCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает последние дату и время, поддерживаемые текущим <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> объекта."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_0_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_0_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_0_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Самые последние дату и время, поддерживаемые <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> тип, который эквивалентен последнему мгновению 31 декабря 9999 года нашей эры по григорианскому календарю."
  overload: System.Globalization.JapaneseCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает самые ранние дату и время, поддерживаемые текущим <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> объекта."
  remarks: "Самая ранняя дата, поддерживаемых <xref:System.Globalization.JapaneseCalendar>класс — 8 сентября 1868 года нашей эры, первого года нашей эры Meiji.</xref:System.Globalization.JapaneseCalendar> Как правило, Дата и время операции, использующие <xref:System.Globalization.JapaneseCalendar>классом исключения <xref:System.ArgumentOutOfRangeException>исключения для дат ранее этой даты.</xref:System.ArgumentOutOfRangeException> </xref:System.Globalization.JapaneseCalendar> Тем не менее некоторые элементы, такие как <xref:System.Globalization.JapaneseCalendar.GetEra%2A>метода, поддерживают даты с 1 января 1868 года по 7 сентября в году Мэйдзи.</xref:System.Globalization.JapaneseCalendar.GetEra%2A>"
  example:
  - "The following example gets the earliest and latest dates supported by the calendar.  \n  \n [!code-cs[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.j_1_1.cs)]\n [!code-cpp[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.j_1_1.cpp)]\n [!code-vb[System.Globalization.JapaneseCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.j_1_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Минимальное значение даты и времени, поддерживаемое <xref href=&quot;System.Globalization.JapaneseCalendar&quot;> </xref> типа, что эквивалентно первому мгновению 8 сентября 1868 года нашей эры по григорианскому календарю."
  overload: System.Globalization.JapaneseCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает <xref:System.DateTime>, имеет значение указанной даты и времени в заданной эре.</xref:System.DateTime>"
  remarks: "Метод ToDateTime является полезным, поскольку он может преобразовать любую дату в текущем календаре Дата по григорианскому календарю. Дата по григорианскому календарю впоследствии можно, например, для сравнения дат в различных календарях или создания эквивалентной даты в определенном календаре."
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: day
      type: System.Int32
      description: "Целое число от 1 до 31, представляющее день."
    - id: hour
      type: System.Int32
      description: "Целое число от 0 до 23, представляющее час."
    - id: minute
      type: System.Int32
      description: "Целое число от 0 до 59, представляющее минуту."
    - id: second
      type: System.Int32
      description: "Целое число от 0 до 59, представляющее секунду."
    - id: millisecond
      type: System.Int32
      description: "Целое число от 0 до 999, представляющее миллисекунду."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>, Равным указанной даты и времени в текущей эре.</xref:System.DateTime>"
  overload: System.Globalization.JapaneseCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>month</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>day</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>hour</code> меньше нуля или больше 23.       - или - <code>minute</code> меньше нуля или больше 59.       - или - <code>second</code> меньше нуля или больше 59.       - или - <code>millisecond</code> меньше нуля или больше 999.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: JapaneseCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JapaneseCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Преобразует указанный год в четырехзначный год с помощью <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax*>для выбора века.</xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax*>"
  remarks: "Этот метод реализует <xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.ToFourDigitYear%2A?displayProperty=fullName>       Поскольку года по японскому календарю обычно меньше четырех цифр, данная реализация всегда возвращает значение `year` параметра.       ToFourDigitYear поддерживает двузначный год или год из четырех цифр. Однако допустимый год обычно представлены в виде двух цифр (не более 100). При передаче значения двузначный год вызывает метод для преобразования значения из четырех цифр значение в соответствии с <xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A>значение, представляющее века.</xref:System.Globalization.JapaneseCalendar.TwoDigitYearMax%2A> Если приложение предоставляет значение из четырех цифр, или он передает ноль или отрицательное значение, ToFourDigitYear вызывает исключение."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число (как правило, две цифры), представляющее год для преобразования."
    return:
      type: System.Int32
      description: "Значение integer, содержащее четырехразрядное представление из <code> year </code>."
  overload: System.Globalization.JapaneseCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.JapaneseCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
  fullName: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает или задает последний год в диапазоне ста лет, который может быть представлен существует двузначное представление года."
  remarks: "Это свойство реализует свойство <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>.</xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=fullName>       Поскольку года по японскому календарю обычно меньше четырех цифр, данная реализация по умолчанию возвращает 99 и влияет на возвращаемое значение <xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>.</xref:System.Globalization.JapaneseCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Последний год в диапазоне ста лет, который может быть представлен существует двузначное представление года."
  overload: System.Globalization.JapaneseCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "В операции задания указано значение меньше, чем 99.       - или - значение, указанное в операции задания больше, чем 8011 (или <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "В операции задания текущего экземпляра только для чтения."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.TypeInitializationException
  isExternal: true
  name: System.TypeInitializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.JapaneseCalendar.#ctor
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: JapaneseCalendar()
  nameWithType: JapaneseCalendar.JapaneseCalendar()
  fullName: System.Globalization.JapaneseCalendar.JapaneseCalendar()
- uid: System.Globalization.JapaneseCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.JapaneseCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: JapaneseCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.JapaneseCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.JapaneseCalendar.AlgorithmType
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
  fullName: System.Globalization.JapaneseCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.JapaneseCalendar.Eras
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: Eras
  nameWithType: JapaneseCalendar.Eras
  fullName: System.Globalization.JapaneseCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: JapaneseCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetEra(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: JapaneseCalendar.GetEra(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetEra(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: JapaneseCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: JapaneseCalendar.GetMonth(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetMonth(DateTime)
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: JapaneseCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.JapaneseCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.JapaneseCalendar.GetYear(System.DateTime)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: JapaneseCalendar.GetYear(DateTime)
  fullName: System.Globalization.JapaneseCalendar.GetYear(DateTime)
- uid: System.Globalization.JapaneseCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: JapaneseCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MaxSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
  fullName: System.Globalization.JapaneseCalendar.MinSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.JapaneseCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: JapaneseCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.JapaneseCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
  fullName: System.Globalization.JapaneseCalendar.TwoDigitYearMax
- uid: System.Globalization.JapaneseCalendar.#ctor*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: JapaneseCalendar
  nameWithType: JapaneseCalendar.JapaneseCalendar
- uid: System.Globalization.JapaneseCalendar.AddMonths*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddMonths
  nameWithType: JapaneseCalendar.AddMonths
- uid: System.Globalization.JapaneseCalendar.AddYears*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AddYears
  nameWithType: JapaneseCalendar.AddYears
- uid: System.Globalization.JapaneseCalendar.AlgorithmType*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: JapaneseCalendar.AlgorithmType
- uid: System.Globalization.JapaneseCalendar.Eras*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: Eras
  nameWithType: JapaneseCalendar.Eras
- uid: System.Globalization.JapaneseCalendar.GetDayOfMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: JapaneseCalendar.GetDayOfMonth
- uid: System.Globalization.JapaneseCalendar.GetDayOfWeek*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: JapaneseCalendar.GetDayOfWeek
- uid: System.Globalization.JapaneseCalendar.GetDayOfYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: JapaneseCalendar.GetDayOfYear
- uid: System.Globalization.JapaneseCalendar.GetDaysInMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: JapaneseCalendar.GetDaysInMonth
- uid: System.Globalization.JapaneseCalendar.GetDaysInYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: JapaneseCalendar.GetDaysInYear
- uid: System.Globalization.JapaneseCalendar.GetEra*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetEra
  nameWithType: JapaneseCalendar.GetEra
- uid: System.Globalization.JapaneseCalendar.GetLeapMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: JapaneseCalendar.GetLeapMonth
- uid: System.Globalization.JapaneseCalendar.GetMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonth
  nameWithType: JapaneseCalendar.GetMonth
- uid: System.Globalization.JapaneseCalendar.GetMonthsInYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: JapaneseCalendar.GetMonthsInYear
- uid: System.Globalization.JapaneseCalendar.GetWeekOfYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: JapaneseCalendar.GetWeekOfYear
- uid: System.Globalization.JapaneseCalendar.GetYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: GetYear
  nameWithType: JapaneseCalendar.GetYear
- uid: System.Globalization.JapaneseCalendar.IsLeapDay*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: JapaneseCalendar.IsLeapDay
- uid: System.Globalization.JapaneseCalendar.IsLeapMonth*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: JapaneseCalendar.IsLeapMonth
- uid: System.Globalization.JapaneseCalendar.IsLeapYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: JapaneseCalendar.IsLeapYear
- uid: System.Globalization.JapaneseCalendar.MaxSupportedDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: JapaneseCalendar.MaxSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.MinSupportedDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: JapaneseCalendar.MinSupportedDateTime
- uid: System.Globalization.JapaneseCalendar.ToDateTime*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: JapaneseCalendar.ToDateTime
- uid: System.Globalization.JapaneseCalendar.ToFourDigitYear*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: JapaneseCalendar.ToFourDigitYear
- uid: System.Globalization.JapaneseCalendar.TwoDigitYearMax*
  parent: System.Globalization.JapaneseCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: JapaneseCalendar.TwoDigitYearMax
