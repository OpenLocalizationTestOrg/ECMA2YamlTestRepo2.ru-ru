### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase
  id: ServiceHostFactoryBase
  children:
  - System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor
  - System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])
  langs:
  - csharp
  name: ServiceHostFactoryBase
  nameWithType: ServiceHostFactoryBase
  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase
  type: Class
  summary: "Предоставляет базовую реализацию фабрики, благодаря которой код приложения участвовать в создании узлов служб в управляемых средах размещения которых экземпляр узла создается динамически в ответ на входящие сообщения."
  remarks: "Управляемые среды размещения, поддерживающие этот интерфейс, Internet Information Services (IIS) или службы активации Windows (WAS). Реализуйте фабрику, наследуемую от этого класса, когда реализован пользовательский унаследованный <xref:System.ServiceModel.ServiceHostBase>в этих средах размещения.</xref:System.ServiceModel.ServiceHostBase> Если реализован пользовательский унаследованный <xref:System.ServiceModel.ServiceHost>, рассмотрите возможность наследования от <xref:System.ServiceModel.Activation.ServiceHostFactory>вместо.</xref:System.ServiceModel.Activation.ServiceHostFactory> </xref:System.ServiceModel.ServiceHost>"
  syntax:
    content: public abstract class ServiceHostFactoryBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.ServiceHostFactoryBase
  langs:
  - csharp
  name: ServiceHostFactoryBase()
  nameWithType: ServiceHostFactoryBase.ServiceHostFactoryBase()
  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase.ServiceHostFactoryBase()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Activation
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Activation.ServiceHostFactoryBase&quot;> </xref> класса."
  syntax:
    content: protected ServiceHostFactoryBase ();
    parameters: []
  overload: System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])
  id: CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.ServiceHostFactoryBase
  langs:
  - csharp
  name: CreateServiceHost(String,Uri[])
  nameWithType: ServiceHostFactoryBase.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(String,Uri[])
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Activation
  summary: "При переопределении в производном классе создает <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> с заданным базовым адресом, с помощью пользовательских данных инициации."
  syntax:
    content: public abstract System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);
    parameters:
    - id: constructorString
      type: System.String
      description: "Данные инициации, передаваемые <xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> экземпляр, создаваемый фабрикой."
    - id: baseAddresses
      type: System.Uri[]
      description: "<xref:System.Array>Типа <xref:System.Uri>, содержащий базовые адреса узла.</xref:System.Uri> </xref:System.Array>"
    return:
      type: System.ServiceModel.ServiceHostBase
      description: "<xref href=&quot;System.ServiceModel.ServiceHostBase&quot;> </xref> Объект с указанными базовыми адресами, инициализированный с помощью пользовательских данных инициации."
  overload: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor
  parent: System.ServiceModel.Activation.ServiceHostFactoryBase
  isExternal: false
  name: ServiceHostFactoryBase()
  nameWithType: ServiceHostFactoryBase.ServiceHostFactoryBase()
  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase.ServiceHostFactoryBase()
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.ServiceHostFactoryBase
  isExternal: false
  name: CreateServiceHost(String,Uri[])
  nameWithType: ServiceHostFactoryBase.CreateServiceHost(String,Uri[])
  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost(String,Uri[])
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.#ctor*
  parent: System.ServiceModel.Activation.ServiceHostFactoryBase
  isExternal: false
  name: ServiceHostFactoryBase
  nameWithType: ServiceHostFactoryBase.ServiceHostFactoryBase
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase.CreateServiceHost*
  parent: System.ServiceModel.Activation.ServiceHostFactoryBase
  isExternal: false
  name: CreateServiceHost
  nameWithType: ServiceHostFactoryBase.CreateServiceHost
