### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlResolver
  id: XmlResolver
  children:
  - System.Xml.XmlResolver.#ctor
  - System.Xml.XmlResolver.Credentials
  - System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  - System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  - System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  langs:
  - csharp
  name: XmlResolver
  nameWithType: XmlResolver
  fullName: System.Xml.XmlResolver
  type: Class
  summary: "Разрешает внешние ресурсы XML, с именем универсальный код ресурса (URI)."
  remarks: "Тип XmlResolver используется для разрешения внешних ресурсов XML, таких как сущности, определения типа документа (DTD) или схемы. Он также используется для обработки, добавления и импорта элементов, найденных в таблицы стилей Extensible Stylesheet Language (XSL) или параметров (XSD) языка определения схемы XML.       XmlResolver обрабатывает все аспекты согласования подключения к ресурсам, включая обработку учетных данных безопасности, открытие подключения к источнику данных и возврат ресурса в форме потока или другого типа объектов. Объект, который вызывает XmlResolver имеет интерпретацию потока.       <xref:System.Xml>Пространство имен включает два конкретных реализаций класса XmlResolver:- <xref:System.Xml.XmlUrlResolver>является арбитром по умолчанию для всех классов в <xref:System.Xml>пространства имен.</xref:System.Xml> </xref:System.Xml.XmlUrlResolver> </xref:System.Xml> Он поддерживает `file://` и `http://` протоколы и запросы из <xref:System.Net.WebRequest?displayProperty=fullName>класса.</xref:System.Net.WebRequest?displayProperty=fullName> Примеры расширения класса для повышения производительности, в разделе <xref:System.Xml.XmlUrlResolver>справочной странице.</xref:System.Xml.XmlUrlResolver>      - <xref:System.Xml.XmlSecureResolver>помогает защитить другого объекта XmlResolver, упаковки объект object и ограничения ресурсов, которые могут обращаться к.</xref:System.Xml.XmlSecureResolver> Например <xref:System.Xml.XmlSecureResolver>можно запретить доступ к конкретным узлам Интернета или зонам.</xref:System.Xml.XmlSecureResolver>       Можно создать и указать собственное средство разрешения. Если не указать Сопоставитель, средство чтения использует значение по умолчанию <xref:System.Xml.XmlUrlResolver>без учетных данных пользователя.</xref:System.Xml.XmlUrlResolver>       Укажите класс XmlResolver с помощью параметра <xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>и передачу <xref:System.Xml.XmlReaderSettings>объект <xref:System.Xml.XmlReader.Create%2A>метод.</xref:System.Xml.XmlReader.Create%2A> </xref:System.Xml.XmlReaderSettings> </xref:System.Xml.XmlReaderSettings.XmlResolver%2A?displayProperty=fullName>       Если ресурс хранится в системе, которая требует проверки подлинности, используйте <xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>свойство, чтобы указать необходимые учетные данные.</xref:System.Xml.XmlResolver.Credentials%2A?displayProperty=fullName>      ## Передачи учетных данных проверки подлинности файл, содержащий считываемые XML-данные могут иметь доступ ограничен. Если для доступа к сетевому ресурсу требуется проверка подлинности, используйте <xref:System.Xml.XmlResolver.Credentials%2A>свойство, чтобы указать необходимые учетные данные.</xref:System.Xml.XmlResolver.Credentials%2A> Если <xref:System.Xml.XmlResolver.Credentials%2A>свойство не задано, учетные данные будут `null`.</xref:System.Xml.XmlResolver.Credentials%2A>       Например предположим, что учетные данные требуются при запросе данных из Интернета для проверки подлинности. Если виртуальный веб-каталог не разрешает анонимный доступ, необходимо задать <xref:System.Xml.XmlResolver.Credentials%2A>Свойства, чтобы ввести учетные данные.</xref:System.Xml.XmlResolver.Credentials%2A> В следующем примере создается <xref:System.Xml.XmlReader>объект, который использует <xref:System.Xml.XmlUrlResolver>с учетными данными по умолчанию для доступа к сайту http://localhost/bookstore/inventory.xml.</xref:System.Xml.XmlUrlResolver> </xref:System.Xml.XmlReader>       [!code-cpp[XmlReaderSettings.cctor#2](~/add/codesnippet/cpp/t-system.xml.xmlresolver_1.cpp)][!code-cs[XmlReaderSettings.cctor#2](~/add/codesnippet/csharp/t-system.xml.xmlresolver_1.cs)][!code-vb[XmlReaderSettings.cctor#2](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_1.vb) ] можно указать другие учетные данные для разных URI и добавление их в кэш.     Эти учетные данные используются для проверки подлинности для различных URI независимо от исходного источника XML. Следующий пример демонстрирует добавление учетных данных в кэш.       [!code-vb[XslCompiledTransform.Load#11](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_2.vb)][!code-cs[XslCompiledTransform.Load#11](~/add/codesnippet/csharp/t-system.xml.xmlresolver_2.cs) ] ## вопросы безопасности рассмотрите следующие элементы, при работе с класс XmlResolver.        -XmlResolver объекты могут содержать конфиденциальные сведения, например учетные данные пользователя. Следует соблюдать осторожность при кэшировании XmlResolver объектов и не следует передавать объект XmlResolver недоверенному компоненту.      -При разработке свойства класса, которое используется класс XmlResolver, свойство должен быть определен как свойство только для записи. Свойство может использоваться для указания используемого XmlResolver, но не может использоваться для возвращения объекта XmlResolver.      — Если приложение принимает объекты XmlResolver от ненадежного кода, нельзя предполагать, что URI, переданный в <xref:System.Xml.XmlResolver.GetEntity%2A>метод будет таким же, как возвращаемые <xref:System.Xml.XmlResolver.ResolveUri%2A>метод.</xref:System.Xml.XmlResolver.ResolveUri%2A> </xref:System.Xml.XmlResolver.GetEntity%2A> Классы, производные от класса XmlResolver можно переопределить <xref:System.Xml.XmlResolver.GetEntity%2A>метод и возвращать данные, отличается от тех, которые содержались в исходном URI.</xref:System.Xml.XmlResolver.GetEntity%2A>      -Приложение может уменьшить память отказ службы угроз для <xref:System.Xml.XmlResolver.GetEntity%2A>метод путем реализации <xref:System.Runtime.InteropServices.ComTypes.IStream>, ограничивающее число считанных байтов.</xref:System.Runtime.InteropServices.ComTypes.IStream> </xref:System.Xml.XmlResolver.GetEntity%2A> Это помогает защищаться от ситуации, когда вредоносный код пытается передать бесконечный поток байтов, <xref:System.Xml.XmlResolver.GetEntity%2A>метод.</xref:System.Xml.XmlResolver.GetEntity%2A>"
  example:
  - "The following example creates an <xref:System.Xml.XmlUrlResolver> with default credentials. A <xref:System.Xml.XmlReader> is used to read and display the resulting data stream.  \n  \n [!code-cs[XmlResolver_ex#1](~/add/codesnippet/csharp/t-system.xml.xmlresolver_3.cs)]\n [!code-vb[XmlResolver_ex#1](~/add/codesnippet/visualbasic/t-system.xml.xmlresolver_3.vb)]"
  syntax:
    content: public abstract class XmlResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.#ctor
  id: '#ctor'
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.XmlResolver&quot;> </xref> класса."
  remarks: "Данный конструктор вызывается конструкторами производных классов для инициализации состояния данного типа."
  syntax:
    content: protected XmlResolver ();
    parameters: []
  overload: System.Xml.XmlResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.Credentials
  id: Credentials
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "При переопределении в производном классе задает учетные данные, используемые для проверки подлинности веб-запросов."
  remarks: "Если виртуальный каталог не требует проверки подлинности, не нужно задавать это свойство. В противном случае необходимо указать учетные данные пользователя.       Следующий код C# задает учетные данные на <xref:System.Xml.XmlResolver>объекта.</xref:System.Xml.XmlResolver>      ```   NetworkCredential nc = new NetWorkCredential(UserName,SecurelyStoredPassword,Domain);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = nc;   ```Можно связать другие учетные данные с различными URI и добавление их в кэш. Затем можно использовать учетные данные для проверки подлинности для различных URI независимо от исходного источника XML.      ```   NetworkCredential myCred = new NetworkCredential(UserName,SecurelyStoredPassword,Domain);    CredentialCache myCache = new CredentialCache();    myCache.Add(new Uri(&quot;http://www.contoso.com/&quot;), &quot;Basic&quot;, myCred);    myCache.Add(new Uri(&quot;http://app.contoso.com/&quot;), &quot;Basic&quot;, myCred);   XmlUrlResolver resolver = new XmlUrlResolver();   resolver.Credentials = myCache;   ```"
  example:
  - See <xref:System.Xml.XmlUrlResolver.Credentials%2A?displayProperty=fullName> for an example that uses this property.
  syntax:
    content: public virtual System.Net.ICredentials Credentials { set; }
    return:
      type: System.Net.ICredentials
      description: "Учетные данные, используемые для проверки подлинности веб-запросов. Если это свойство не задано, используется значение по умолчанию <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, то есть <xref uid=&quot;langword_csharp_XmlResolver&quot; name=&quot;XmlResolver&quot; href=&quot;&quot;> </xref> имеет без учетных данных пользователя."
  overload: System.Xml.XmlResolver.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  id: GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "При переопределении в производном классе сопоставляет URI с объектом, содержащим фактический ресурс."
  remarks: "Этот метод используется, когда вызывающий объект хочет отобразить заданный URI в объект, содержащий фактический ресурс, представленный этим URI. Тип объекта является согласованным; Однако реализация всегда должен поддерживать <xref:System.IO.Stream?displayProperty=fullName>.</xref:System.IO.Stream?displayProperty=fullName>       Асинхронная версия данного метода в разделе <xref:System.Xml.XmlResolver.GetEntityAsync%2A>.</xref:System.Xml.XmlResolver.GetEntityAsync%2A>      Настроек [!IMPORTANT] настроек приложения может уменьшить отказ памяти службы угроз в метод GetEntity путем реализации <xref:System.Runtime.InteropServices.ComTypes.IStream>, ограничивающее число считанных байтов.</xref:System.Runtime.InteropServices.ComTypes.IStream> Это помогает защититься от ситуации, когда вредоносный код пытается передается методу GetEntity бесконечный поток байтов."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example using this method.
  syntax:
    content: public abstract object GetEntity (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI, возвращаемый методом <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "В настоящее время не используется."
    - id: ofObjectToReturn
      type: System.Type
      description: "Тип возвращаемого объекта. В текущей версии возвращаются только объекты System.IO.Stream."
    return:
      type: System.Object
      description: "Объект потока или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если указан тип, отличный от потока."
  overload: System.Xml.XmlResolver.GetEntity*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "<code>ofObjectToReturn</code>не является <xref uid=&quot;langword_csharp_Stream&quot; name=&quot;Stream&quot; href=&quot;&quot;> </xref> типа."
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "Указанный URI не является абсолютным URI."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>absoluteUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Exception
    commentId: T:System.Exception
    description: "Есть ошибка среды выполнения (например, прервано подключение к серверу)."
  platform:
  - net462
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  id: GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Асинхронно сопоставляет URI с объектом, содержащим фактический ресурс."
  remarks: "Это асинхронная версия объекта <xref:System.Xml.XmlResolver.GetEntity%2A>, с одинаковой функциональностью.</xref:System.Xml.XmlResolver.GetEntity%2A> Чтобы использовать этот метод, необходимо задать <xref:System.Xml.XmlReaderSettings.Async%2A>флаг `true`.</xref:System.Xml.XmlReaderSettings.Async%2A>"
  syntax:
    content: public virtual System.Threading.Tasks.Task<object> GetEntityAsync (Uri absoluteUri, string role, Type ofObjectToReturn);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "URI, возвращаемый методом <xref:System.Xml.XmlResolver.ResolveUri*>.</xref:System.Xml.XmlResolver.ResolveUri*>"
    - id: role
      type: System.String
      description: "В настоящее время не используется."
    - id: ofObjectToReturn
      type: System.Type
      description: "Тип возвращаемого объекта. В текущей версии возвращаются только <xref:System.IO.Stream>объектов.</xref:System.IO.Stream>"
    return:
      type: System.Threading.Tasks.Task{System.Object}
      description: "Объект потока или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если указан тип, отличный от потока."
  overload: System.Xml.XmlResolver.GetEntityAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  id: ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "При переопределении в производном классе, разрешает абсолютный URI на основе базового и относительного URI."
  remarks: "Абсолютный URI может использоваться как базовый URI для последующих запросов для сущностей, которые относятся к данному URI."
  example:
  - See <xref:System.Xml.XmlUrlResolver.GetEntity%2A?displayProperty=fullName> for an example that uses this method.
  syntax:
    content: public virtual Uri ResolveUri (Uri baseUri, string relativeUri);
    parameters:
    - id: baseUri
      type: System.Uri
      description: "Базовый URI, используемый для разрешения относительного URI."
    - id: relativeUri
      type: System.String
      description: "URI для решения. URI может быть абсолютным или относительным. Если абсолютным, данное значение замещает `baseUri` значение. Если относительным, в нем сочетаются с `baseUri` в абсолютный URI."
    return:
      type: System.Uri
      description: "Абсолютный URI или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если невозможно разрешить относительный URI."
  overload: System.Xml.XmlResolver.ResolveUri*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>relativeUri</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  id: SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  langs:
  - csharp
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Включает распознаватель для возврата типов, отличных от &lt;xref:System.IO.Stream?displayProperty=fullName&gt;."
  syntax:
    content: public virtual bool SupportsType (Uri absoluteUri, Type type);
    parameters:
    - id: absoluteUri
      type: System.Uri
      description: "Универсальный код Ресурса."
    - id: type
      type: System.Type
      description: "Возвращаемый тип."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> type </code> поддерживается; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlResolver.SupportsType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xml.XmlResolver.#ctor
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver()
  nameWithType: XmlResolver.XmlResolver()
  fullName: System.Xml.XmlResolver.XmlResolver()
- uid: System.Xml.XmlResolver.Credentials
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
  fullName: System.Xml.XmlResolver.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Xml.XmlResolver.GetEntity(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity(Uri,String,Type)
  nameWithType: XmlResolver.GetEntity(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntity(Uri,String,Type)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.XmlResolver.GetEntityAsync(System.Uri,System.String,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync(Uri,String,Type)
  nameWithType: XmlResolver.GetEntityAsync(Uri,String,Type)
  fullName: System.Xml.XmlResolver.GetEntityAsync(Uri,String,Type)
- uid: System.Threading.Tasks.Task{System.Object}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<Object>
  nameWithType: Task<Object>
  fullName: System.Threading.Tasks.Task<System.Object>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlResolver.ResolveUri(System.Uri,System.String)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri(Uri,String)
  nameWithType: XmlResolver.ResolveUri(Uri,String)
  fullName: System.Xml.XmlResolver.ResolveUri(Uri,String)
- uid: System.Xml.XmlResolver.SupportsType(System.Uri,System.Type)
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType(Uri,Type)
  nameWithType: XmlResolver.SupportsType(Uri,Type)
  fullName: System.Xml.XmlResolver.SupportsType(Uri,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlResolver.#ctor*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: XmlResolver
  nameWithType: XmlResolver.XmlResolver
- uid: System.Xml.XmlResolver.Credentials*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: Credentials
  nameWithType: XmlResolver.Credentials
- uid: System.Xml.XmlResolver.GetEntity*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntity
  nameWithType: XmlResolver.GetEntity
- uid: System.Xml.XmlResolver.GetEntityAsync*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: GetEntityAsync
  nameWithType: XmlResolver.GetEntityAsync
- uid: System.Xml.XmlResolver.ResolveUri*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: ResolveUri
  nameWithType: XmlResolver.ResolveUri
- uid: System.Xml.XmlResolver.SupportsType*
  parent: System.Xml.XmlResolver
  isExternal: false
  name: SupportsType
  nameWithType: XmlResolver.SupportsType
