### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.DataReceivedEventHandler
  id: DataReceivedEventHandler
  langs:
  - csharp
  name: DataReceivedEventHandler
  nameWithType: DataReceivedEventHandler
  fullName: System.Diagnostics.DataReceivedEventHandler
  type: Delegate
  summary: "Представляет метод, обрабатывающий <xref href=&quot;System.Diagnostics.Process.OutputDataReceived&quot;> </xref> событий или <xref href=&quot;System.Diagnostics.Process.ErrorDataReceived&quot;> </xref> событие <xref href=&quot;System.Diagnostics.Process&quot;> </xref>."
  remarks: "При создании делегата DataReceivedEventHandler, необходимо указать метод, обрабатывающий событие. Чтобы связать событие с обработчиком событий, добавьте в событие экземпляр делегата. Обработчик событий вызывается всякий раз, когда происходит событие, пока не будет удален делегат. Дополнительные сведения о делегатах-обработчиках событий см. в разделе [события](~/add/includes/ajax-current-ext-md.md).       Для асинхронного сбора в перенаправленном <xref:System.Diagnostics.Process.StandardOutput%2A>или <xref:System.Diagnostics.Process.StandardError%2A>поток выходных данных процесса, добавьте обработчик событий <xref:System.Diagnostics.Process.OutputDataReceived>или <xref:System.Diagnostics.Process.ErrorDataReceived>событий.</xref:System.Diagnostics.Process.ErrorDataReceived> </xref:System.Diagnostics.Process.OutputDataReceived> </xref:System.Diagnostics.Process.StandardError%2A> </xref:System.Diagnostics.Process.StandardOutput%2A> Эти события вызываются каждый раз, когда процесс записывает строку в соответствующий перенаправленный поток. При закрытии перенаправленного потока обработчику событий отправляется строка null. Убедитесь, что обработчик событий проверяет это условие перед обращением к <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>свойство.</xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> Например, можно использовать `static` метод <xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName>для проверки <xref:System.Diagnostics.DataReceivedEventArgs.Data%2A>свойство в обработчике событий.</xref:System.Diagnostics.DataReceivedEventArgs.Data%2A> </xref:System.String.IsNullOrEmpty%2A?displayProperty=fullName>"
  example:
  - "The following code example illustrates how to perform asynchronous read operations on the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream of the **sort** command. The **sort** command is a console application that reads and sorts text input.  \n  \n The example creates a DataReceivedEventHandler delegate for the `SortOutputHandler` event handler and associates the delegate with the <xref:System.Diagnostics.Process.OutputDataReceived> event. The event handler receives text lines from the redirected <xref:System.Diagnostics.Process.StandardOutput%2A> stream, formats the text, and writes the text to the screen.  \n  \n [!code-cpp[Process_AsyncStreams#1](~/add/codesnippet/cpp/t-system.diagnostics.dat_1_1.cpp)]\n [!code-vb[Process_AsyncStreams#1](~/add/codesnippet/visualbasic/t-system.diagnostics.dat_1_1.vb)]\n [!code-cs[Process_AsyncStreams#1](~/add/codesnippet/csharp/t-system.diagnostics.dat_1_1.cs)]"
  syntax:
    content: public delegate void DataReceivedEventHandler(object sender, DataReceivedEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
