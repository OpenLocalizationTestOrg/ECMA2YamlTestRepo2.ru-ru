### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  id: WebPartManager
  children:
  - System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  - System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  - System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  - System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  - System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  - System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  - System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  - System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  - System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  - System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  - System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  - System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  - System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  - System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  - System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  - System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  - System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  - System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  - System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  langs:
  - csharp
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
  type: Class
  summary: "Служит в качестве центрального класса набора элементов управления веб-частей, управление все веб-части элементов управления, функциональность и события, происходящие на веб-странице."
  remarks: "Элемент управления WebPartManager выступает в качестве центра концентратора или элемента управления веб-частей приложения. Должен быть один — и только один — экземпляр элемента управления WebPartManager на каждой странице, которое использует элементы управления веб-частей. Как и с большинством аспектов приложений веб-частей управления WebPartManager работает только с проверкой подлинности пользователей. Кроме того работает его функциональность практически полностью с серверными элементами управления, которые находятся в пределах зоны веб-частей, которые наследуют от <xref:System.Web.UI.WebControls.WebParts.WebZone>класса.</xref:System.Web.UI.WebControls.WebParts.WebZone> Серверные элементы управления, которые находятся на странице за пределами этих зон может иметь очень малую часть функциональности веб-частей или взаимодействия с элементом управления WebPartManager.       В качестве концентратора для функциональных возможностей веб-частей на странице элемент управления WebPartManager выполняет видов задач, описанных в следующей таблице.      | Категория задачи | Элемент управления выполняет |   |-------------------|---------------------------|   | Отслеживание элементов управления веб-частей | Хранит список много различных типов элементов управления на странице, которые обеспечивают функции веб-частей, включая элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPart>, подключения, зоны и другие. |   | Добавление и удаление элементов управления веб-частей | Предоставляет методы для добавления, удаления и закрытие <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления на странице. |   | Администрирование подключений | Создает соединения между элементами управления и отслеживает соединения, а также процессы добавления и удаления их. |   | Персонализация страниц и элементов управления | Пользователи могут перемещать элементы управления в разных местах на странице и запускает представления, в которых пользователи могут изменять внешний вид, свойства и поведение элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Поддерживает параметры персонализации для различных пользователей на каждой странице. |   | Переключение между различными представлениями страниц | Переключает между различными специализированными представлениями страницы, чтобы пользователи могли выполнять определенные задачи, такие как изменение макета страницы и редактирование элементов управления. |   | Создание событий жизненного цикла веб-частей | Определяет, создает событие и позволяет разработчикам обрабатывать события жизненного цикла управления веб-частей, например, когда элементы управления добавляемых, перемещены, подключенном или удалены. |   | Разрешение импорта и экспорта элементов управления | Экспортирует XML-потоки, содержащие состояние свойств элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPart>и позволяет пользователям импортировать файлы для удобства при персонализации сложных элементов управления на других страницах или сайтах. |       Класс WebPartManager имеет большой набор свойств.</xref:System.Web.UI.WebControls.WebParts.WebPart> Согласованность с ролью WebPartManager отслеживания других элементов управления, он имеет несколько свойств, которые ссылаются на коллекции элементов управления веб-частей или других специальных объектов веб-частей. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>, И <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A>свойства являются все коллекции, используемые элементом управления WebPartManager для его отслеживания и другие задачи управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Connections%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers%2A>       Другая группа свойств содержит настраиваемые предупреждения, которые применяются в определенных сценариях, происходящих в приложении веб-частей. К ним относятся <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A>и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A>Свойства.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning%2A>       Класс WebPartManager переопределяет некоторые из его базового наследуемых свойств, используемых многих серверных элементов управления. К ним относятся <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A>, и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A>Свойства.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Visible%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SkinID%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming%2A>       Наконец есть группа свойств, полезна при доступе к текущее состояние приложения. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>Указывает текущий режим отображения, что страница является in.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A>Свойство указывает, может ли элемент управления для подготовки к просмотру клиентского скрипта, который является полезным в ситуациях, где пользователь может иметь браузеры по своим возможностям или сценарии выключается.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>Свойство можно использовать для ссылки на служебный класс, который содержит вызовы ряд важных методов веб-части, используемые для расширения случаев.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A> Скрывая вызовы этих методов в отдельный класс ( <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>класса), класс WebPartManager владельцем API упрощено.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>Свойство предоставляет доступ к объектам персонализации, которые хранят параметры персонализации пользователей и сохранения этих данных в постоянном хранилище.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>Свойство указывает, что <xref:System.Web.UI.WebControls.WebParts.WebPart>управления на странице выбранного пользователем или приложением.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>Свойство указывает ли данные пользовательской персонализации на <xref:System.Web.UI.WebControls.WebParts.WebPart>элемент управления был изменен.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>       Элемент управления WebPartManager содержит пять встроенные режимы отображения или представления веб-страницы. Разработчики могут расширить эту функцию создания пользовательские режимы отображения, расширяя типов, например <xref:System.Web.UI.WebControls.WebParts.WebZone>класса или <xref:System.Web.UI.WebControls.WebParts.ToolZone>класса.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> Пользователи могут переключаться в режимы отображения страницы, условии, что на странице есть правильный тип элементов управления, которые соответствуют в определенном режиме отображения.      Настроек [!NOTE] настроек можно расширить эту функциональную возможность, чтобы пользователи могли переключиться в режим отображения пользовательских без необходимости соответствующей зоны на странице. Однако поведение по умолчанию является соответствие режимов отображения зонам.       Открытые поля в классе WebPartManager представлены стандартных режимов отображения. В следующей таблице перечислены поля и режимы отображения, которые они ссылаются. Текущий режим отображения страницы, как указано выше, всегда указывается в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>содержится свойство, а также набор режимов отображения, доступный на конкретной странице, заданный тип зоны, которые присутствуют на странице в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A>      | Поле | Сведения о режиме отображения |   |-----------|--------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>| Обычное пользовательское представление веб-страницы; по умолчанию и наиболее распространенных режима отображения. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>| Представление, в котором можно изменять и удалять элементы управления для изменения макета страницы пользователей. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>| Представление, в котором редактирования пользовательский интерфейс (UI) становится видимым. Пользователи могут изменять внешний вид, свойства и поведение элементов управления, которые отображаются в обычном режиме. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>| Представление, в котором пользовательский Интерфейс каталога становится видимым. Пользователи могут добавлять элементы управления на страницу из каталога доступных элементов управления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>| Представление, в котором подключение пользовательского интерфейса становится видимым. Пользователи могут подключаться, управление или завершить соединения между элементами управления. |       Элемент управления WebPartManager также содержит ряд событий, которые являются критическими жизненного цикла страниц веб-частей и элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Эти события предоставляют полный программный контроль над поведением элементов управления веб-частей. Большинство методов относятся непосредственно к <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления (или другим сервером или пользовательской элементы, помещенные в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны, чтобы они ведут себя как <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Однако некоторые события относятся к состоянию страницы или подключений на странице. В следующей таблице перечислены доступные события и описаны их назначение.      Настроек [!NOTE] настроек во всех случаях в таблице ниже со словом «элемент управления» ссылается на <xref:System.Web.UI.WebControls.WebParts.WebPart>управления или любой серверный элемент управления, который находится в зоне и заключается в оболочку с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>объекта во время выполнения.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>      | Событие | Описание |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>| Происходит непосредственно перед элемент управления добавлен на страницу, чтобы проверить, что авторизован. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>| Происходит после активации всех подключений на странице. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>| Происходит перед активацией подключений на странице. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>| Происходит после изменения текущего режима отображения страницы. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>| Происходит перед процесс изменения режима отображения страницы. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>| Происходит после отмены выбора элемента управления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>| Происходит перед отменой выбора элемента управления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>| Происходит после добавления элемента управления в зону. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>| Происходит перед Добавление элемента управления зоны. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>| Происходит после закрытия элемента управления (удаления со страницы). |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>| Происходит перед закрытием элемента управления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>| Происходит после экземпляр динамического элемента управления (один, который был создан программно или добавлен из каталога) был удален без возможности восстановления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>| Происходит перед удалением динамического элемента управления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>| Происходит после перемещения элемента управления в зоне или в другую зону. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>| Происходит перед перемещением элемента управления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>| Происходит после двух элементов управления, выбранные для участия в подключении подключения. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>| Происходит перед процесс подключения двух элементов управления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>| Происходит после отключения двух подключенных элементов управления. |   | <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>| Происходит перед отключением двух элементов управления. |       Элемент управления WebPartManager имеет множество методов для управления веб-частей страницы.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> Большой набор методов, не перечисленных здесь, являются методы, имена в виде*EventName*. Эти методы обычно их связанных событие и предоставить событие с обработчиком типа <xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler>.</xref:System.Web.UI.WebControls.WebParts.WebPartEventHandler> Большинство этих методов может быть переопределено разработчиков, которые наследуют от класса WebPartManager. Кроме того разработчики страниц могут предоставлять пользовательские обработчики для событий, связанных с помощью этих методов. Например, в случае использования <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>событий, разработчик может добавить `OnWebPartAdded` атрибут `<asp:webpartmanager>` элемент в разметке веб-страницы и затем назначьте пользовательский метод имя атрибута для предоставления обычной обработки события.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded> Атрибут соответствует атрибуту <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>метод и этот базовый шаблон подходит для большинства событий веб-частей и их связанные методы обработки событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>       Кроме того, элемент управления WebPartManager имеет методы, относящиеся к задачу управления <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления (и использовать элементы управления сервера или пользователя в качестве <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления).</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> These methods include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart></xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>       Другой набор методов, специально для подключений. This includes methods such as <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>       Наконец некоторые методы WebPartManager сосредоточиться на функциональные возможности персонализации. These include <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState%2A></xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization%2A>       Дополнительные сведения о других методах WebPartManager, которые доступны через <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>свойство, см. в документации для <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>класса.</xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Internals%2A>"
  example:
  - "The following code example demonstrates both declarative and programmatic use of the WebPartManager control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The user control has a drop-down list control that shows the possible display modes on a page, given the Web Parts controls that are present on the page. In the Web page for this code example, this user control is declared just below the WebPartManager element in the page's markup, and there is a `Register` directive near the top of the Web page to register the control. For details about display modes and a description of the source code in this control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_1.ascx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#6](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_1.ascx)]  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. The page also contains some inline code that handles connection-related events for the WebPartManager control; you can see the effect of this code as you connect and disconnect controls.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_2.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_2.aspx)]  \n  \n The third part of the example is the source code for the controls. Note that there is an interface named `IZipCode`, and this interface is implemented in the `ZipCodeWebPart` class. This class has a special callback method named `ProvideIZipCode` that serves as a provider. The other type, named `WeatherWebPart`, is also implemented with a special method named `GetIZipCode`, which enables the control to act as a consumer of the other control.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example assumes that you have compiled the source into an assembly, and the `Register` directive in the Web page references the assembly name. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_345_3.cs)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_345_3.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection UI appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and then click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. You can enter a ZIP Code, and the consumer control will be updated with the value you enter. Because the `ZipCode` property was marked with the `Personalizable` attribute in the source code, this property value will persist across browser sessions, thus saving the value entered by a user. A more sophisticated consumer control could take the ZIP code information, look up weather information based on the code, and display it to a user."
  syntax:
    content: >-
      [System.ComponentModel.Bindable(false)]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.WebPartManagerDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.NonVisualControl]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.ViewStateModeById]

      public class WebPartManager : System.Web.UI.Control, System.Web.UI.INamingContainer, System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.INamingContainer
  - System.Web.UI.WebControls.WebParts.IPersonalizable
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> класса."
  remarks: "Конструктор WebPartManager инициализирует несколько важных переменных, используемых в <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Одно назначение, напрямую влияет на все страницы веб-частей является тот факт, что режим отображения страницы по умолчанию установлено в режим просмотра (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>"
  syntax:
    content: public WebPartManager ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  id: ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Делает активным всех подключений на веб-странице, которые в данный момент неактивны."
  remarks: "Метод ActivateConnections вызывается при каждом запросе страницы для активации существующие соединения между <xref:System.Web.UI.WebControls.WebParts.WebPart>и других серверных элементов управления, находящихся в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зон.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> В некоторых случаях для экземпляра, если возникает конфликт в подключениях к активации, этот метод в свою очередь вызывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>метод для завершения подключения проблематичным.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> Во время процесса отключения <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>события.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Как правило, разработчики могут отменить это событие, но в случае там, где существует конфликт между подключениями, не может быть отменено, так как <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления должен разрешить конфликт для завершения процесса активации подключений.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  syntax:
    content: protected virtual void ActivateConnections ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Предоставляет стандартный программный способ добавления <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления на веб-страницу."
  remarks: "Метод AddWebPart используется как для добавления новых динамических <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления на страницу и повторное открытие статические или динамические элементы управления, которые ранее были закрыты на странице.</xref:System.Web.UI.WebControls.WebParts.WebPart> При вызове метода для добавления нового элемента управления, фактически создает копию элемента управления, на который ссылается `webPart` параметра. Для копирования элемент управления создается новый идентификатор, поэтому разработчики должны ссылаться <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления, возвращенный из метода для получения значения нового идентификатора.</xref:System.Web.UI.WebControls.WebParts.WebPart> При вызове метода для повторного открытия ранее закрытый элемент управления возвращается прямую ссылку на элемент управления, на который указывает `webPart` параметра.      Настроек [!IMPORTANT] настроек всегда следует использовать метод AddWebPart вместо <xref:System.Web.UI.ControlCollection.Add%2A>метод коллекции элементов управления, на который указывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName>свойство, чтобы добавить <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления программными средствами на страницу, так как с помощью <xref:System.Web.UI.ControlCollection.Add%2A>метод создает исключение.</xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.ControlCollection.Add%2A> Чтобы добавить элемент управления, который не является <xref:System.Web.UI.WebControls.WebParts.WebPart>управления (другими словами, элемент управления сервера, который будет заключена в <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>элемента управления во время выполнения), следует вначале вызвать <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A>способ создания элемента управления, а затем вызвать метод AddWebPart, чтобы добавить элемент управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Для демонстрации этого подхода см. в разделе."
  example:
  - "The following code example demonstrates use of the AddWebPart method to add a server control programmatically to a page. The page markup contains an empty `<asp:webpartzone>` element, and an `<asp:webpartmanager>` element. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object, calling the AddWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6da004d9-95d1-4401-9d7e-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6da004d9-95d1-4401-9d7e-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart AddWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (Или сервера или пользовательского элемента управления) для добавления веб-страницу или открыть на странице."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> , `webPart` , Добавляется."
    - id: zoneIndex
      type: System.Int32
      description: "Целое число, представляющее порядковый номер позиции, `webPart` занимает в `zone`относительно других элементов управления в `zone`."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элемента управления, который был добавлен на страницу."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>zone</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>zone</code> is not registered in the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control's collection of zones.  \n  \n \\- or -  \n  \n <code>webPart</code> is already in <code>zone</code>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение <code> zoneIndex </code> меньше нуля."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  id: AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит при <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>метод вызывается, чтобы определить, является ли <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления можно добавить на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*>"
  remarks: "Каждый раз, когда происходит событие AuthorizeWebPart <xref:System.Web.UI.WebControls.WebParts.WebPart>элемент управления добавляется на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPart> Существует несколько распространенных сценариях, где можно добавить элемент управления на страницу. Полное описание этих, см в разделе &quot;Примечания&quot; <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> При добавлении элемента управления, его необходимо выбрать для просмотра ли его <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>Свойства, и в этом случае ли элемент управления авторизации для добавления на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Разработчики могут создавать обработчики событий для события AuthorizeWebPart, обеспечивающие фильтрацию для элементов управления. Если элемент управления <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>значение свойства не соответствует условиям, заданным в коде обработчиков событий, элемент управления не добавляется на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the AuthorizeWebPart event, which automatically overrides the default <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A> method.  \n  \n The code in the `mgr1_AuthorizeWebPart` method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `user` and, if so, returns `true`, which means that they will be authorized and added to the page. This assumes the default approach is to allow users to view controls with a page in user personalization scope. Notice, however, that in the example one of the controls has its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property value set to `admin`. Developers might place this filter on a specialized control that was designed for only administrative users to see. This control will fail the authorization check during the AuthorizeWebPart event, and will not be displayed. Note that controls that do not have the property set are displayed as well; they are assumed not to be part of a filtering scenario because their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties are not set.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_9_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_9_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler AuthorizeWebPart;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  id: AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает коллекцию <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> объектов, доступных для использования при создании веб-частей подключения между серверными элементами управления."
  remarks: "Это свойство использует <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A>метод для создания коллекции.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers%2A> По умолчанию она считывает доступные преобразователи из файла конфигурации приложения."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.TransformerTypeCollection AvailableTransformers { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.TransformerTypeCollection&quot;> </xref> , содержащий набор <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> объектов."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Запускает процесс подключения двух <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления."
  remarks: "Метод BeginWebPartConnecting существует, поэтому процесс формирования подключений между элементами управления можно сделать в несколько различных этапов, предоставляя разработчикам больший контроль над процессом соединения. Этот метод выполняет набор исходных проверок, чтобы убедиться, что `webPart` находится в состоянии, когда соединение является допустимым. Если `webPart` проходит все проверки, затем он задан как текущего выбранного элемента управления (см. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>Свойства), и можно продолжить процесс подключения.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartConnecting (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Элемент управления, для которого формируется соединения."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий режим отображения на странице не <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  id: BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Запускает процесс редактирования <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления."
  remarks: "Метод BeginWebPartEditing существует, поэтому процесс редактирования элементов управления можно сделать в несколько различных этапов, предоставляя разработчикам больший контроль над процессом. Этот метод выполняет набор исходных проверок, чтобы убедиться, что `webPart` находится в состоянии, в котором ее можно редактировать. Если `webPart` проходит все проверки, затем он задан как текущего выбранного элемента управления (см. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>Свойства), и редактирования процесс может продолжаться.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void BeginWebPartEditing (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Элемент управления для редактирования."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий режим отображения на странице не <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is closed.  \n  \n \\- or -  \n  \n <code>webPart</code> is not part of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n -or -  \n  \n <code>webPart</code> is equal to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*> control."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  id: BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Представляет режим отображения по умолчанию для страниц, содержащих элементы управления веб-частей. Это поле доступно только для чтения."
  remarks: "Поле BrowseDisplayMode ссылается на пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>объекта, который создается и содержащиеся в <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Поскольку это статический объект, можно ссылаться на него напрямую с помощью <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класс без необходимости экземпляр элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       При первой загрузке определяет, страницу, которая содержит веб-части, по умолчанию она находится в BrowseDisplayMode (режим просмотра). При простом просмотре, как обычные веб-страницы, страница остается в режиме просмотра. Если пользователи хотят настраивать макет страницы, элементы управления, внешний вид или поведение, их необходимо переключить страницу в один из режимов отображения специализированные через <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>"
  example:
  - "The following code example demonstrates how to work with the BrowseDisplayMode field programmatically. The code populates a drop-down list with the supported display modes, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to BrowseDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[WebParts_WebPartManager_BrowseDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_5_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page that indicates you are in browse mode. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now hidden."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode BrowseDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Проверяет <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления, которые будут участвовать в подключении, чтобы определить, являются ли они поддерживают подключен, если элементы управления потребителя и поставщика имеют совместимые интерфейсы и <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> объекта не требуется."
  remarks: "Этот метод используется для подключения `provider` и `consumer` при обоих элементов управления имеют совместимые точка типов подключения, чтобы <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>объекта не требуется.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Вы можете использовать этот метод для проверки подключении двух элементов управления перед вызовом метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>для создания подключения программный.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Эта перегрузка использует ту же реализацию как <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>перегрузка метода, с единственным исключением является, что эта перегрузка не требуется преобразователь.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPartTransformer%29>"
  example:
  - "The following code example demonstrates how to use this method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, an `<asp:webpartmanager>` element, and some event-handling code that creates a connection using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks whether the connection can be made and, if so, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. It contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, one acting as a provider, and the other as a consumer. Because they have compatible connection points (both of them recognize the `IZipCode` interface), a transformer is not needed to make the connection. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/csharp/6c629474-a5b1-438b-b1c7-_2.cs)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#2](~/add/codesnippet/visualbasic/6c629474-a5b1-438b-b1c7-_2.vb)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method."
  syntax:
    content: public bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Элемент управления, который предоставляет данные для `consumer` при подключенных элементах управления."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> , позволяющий `provider` участвовать в соединениях."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Элемент управления, который получает данные из `provider` при подключенных элементах управления."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> , выступающий в качестве метода обратного вызова таким образом, `consumer` может участвовать в связи."
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, является ли <code> provider </code> и <code> consumer </code> может быть установлено подключение."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Проверяет <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления, которые будут участвовать в подключении, чтобы определить, являются ли они поддерживают подключения, а также использует <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> объект для создания соединения между несовместимыми потребителя и поставщика."
  remarks: "Этот метод используется для подключения `provider` и `consumer` при обоих элементов управления имеют несовместимые точка типов подключения, чтобы <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>требуется объект.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Вы можете использовать этот метод для проверки подключении двух элементов управления перед вызовом метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>для создания подключения программный.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Эта перегрузка использует ту же реализацию как <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>перегрузка метода, с единственным исключением является, что эта перегрузка требует преобразователя.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%28System.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ProviderConnectionPoint%2CSystem.Web.UI.WebControls.WebParts.WebPart%2CSystem.Web.UI.WebControls.WebParts.ConsumerConnectionPoint%29>"
  syntax:
    content: public virtual bool CanConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Элемент управления, который предоставляет данные для `consumer` при подключенных элементах управления."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> , выступающий в качестве метода обратного вызова таким образом, `provider` может участвовать в связи."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Элемент управления, который получает данные из `provider` при подключенных элементах управления."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> , выступающий в качестве метода обратного вызова таким образом, `consumer` может участвовать в связи."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> , позволяющий несовместимое `provider` и `consumer` для подключения."
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, является ли <code> provider </code> и <code> consumer </code> формирования подключения."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  id: CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Представляет режим отображения, используемый для добавления серверных элементов управления из каталога элементов управления на веб-страницу. Это поле доступно только для чтения."
  remarks: "Поле CatalogDisplayMode ссылается на пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>объекта, который создается и содержащиеся в <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Поскольку это статический объект, можно ссылаться на него напрямую с помощью <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класс без необходимости экземпляр элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       При пользователи хотят добавить элементы управления на страницу, если доступен каталог серверных элементов управления, они переключить страницу в CatalogDisplayMode (режим каталога), и появится каталог пользовательский интерфейс (UI). Пользовательский Интерфейс для каталога веб-частей обеспечивается <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase>элемент управления зоной.</xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Разработчики добавляют эту зону страницы во время разработки и добавить серверные элементы управления в зону, чтобы пользователи смогут добавлять эти элементы управления с ними страницы во время выполнения. После добавления этих элементов управления разработчик режим каталога становится поддерживаемым режимом отображения на странице, так как необходимые элементы управления имеются в наличии для включения режима каталога.       Когда пользователь переключает страницу в режиме, зона и все серверные элементы управления, добавленные к ней становятся видимыми в каталог, и пользователь может выбрать элементы управления из каталога, который следует добавить на страницу или удалять элементы управления на странице. После добавления элементов управления на страницу, они отображаются в обычном режиме просмотра и обновления страницы."
  example:
  - "The following code example demonstrates how to work with the CatalogDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and catalog. The catalog mode is available because of the `<asp:CatalogZone>` element and its child elements in the Web page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to CatalogDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_3_1.aspx)]\n [!code-cs[WebParts_WebPartManager_CatalogDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_3_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to catalog mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. You can select the control in the catalog and add it to either of the two zones on the page."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode CatalogDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  id: CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Проверяет возможности браузера, выполняющего запрос, а значение <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>Свойства, чтобы определить, следует ли отрисовывать клиента сценарий</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*>"
  syntax:
    content: protected virtual bool CheckRenderClientScript ();
    parameters: []
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, следует ли отрисовывать клиентского скрипта."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  id: CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает или задает предупреждение, которое отображается, когда пользователь закрывает элемент управления, который выступает в качестве поставщика для других элементов управления в подключении."
  remarks: "Когда пользователь закрывает <xref:System.Web.UI.WebControls.WebParts.WebPart>управления, обычно не выводится.</xref:System.Web.UI.WebControls.WebParts.WebPart> Дополнительные сведения о том, что для закрытия элемента управления см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>       Тем не менее когда элемент управления подключен к другому элементу управления и используется в качестве поставщика данных к другому элементу управления, по умолчанию предупреждающее сообщение отображается при попытке закрытия элемента управления. В сообщении указывается пользователей, управления поставщика собирается закрыть, которая означает, что элементы управления подключена к этому поставщику как потребители больше не будет данных для получения. Свойство CloseProviderWarning позволяет разработчикам настраивать предупреждающее сообщение, отображаемое для пользователя.       Если разработчик страницы присваивает значение пусто или равно null для этого свойства, окно предупреждение отображается, когда пользователь закрывает <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления, который является поставщиком.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the CloseProviderWarning property to display a custom warning to users.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to assign a custom warning message to the CloseProviderWarning property in declarative markup in the `<asp:webpartmanager>` element.  \n  \n [!code-cs[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_979_1.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseProviderWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_979_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Finally, click the verbs menu for the **ZIP Code** control (which is the provider control in this case) and select **Close**. The custom message you assigned to the CloseProviderWarning property is displayed."
  syntax:
    content: public virtual string CloseProviderWarning { get; set; }
    return:
      type: System.String
      description: "Строка, содержащая предупреждающее сообщение. Значение по умолчанию — это сообщение конкретного языка и региональных параметров, предоставляемых .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Закрывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления таким образом, что он не отображается на веб-странице, но можно повторно открыть."
  remarks: "Метод CloseWebPart удаляет <xref:System.Web.UI.WebControls.WebParts.WebPart>или другой сервер управления, чтобы он не отображается на веб-странице, который изначально содержал его.</xref:System.Web.UI.WebControls.WebParts.WebPart> Закрытый элемент управления добавляется <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>объекта, который хранит ссылку на закрытый элемент управления и делает возможным для элемента управления для восстановления на страницу.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Закрытый <xref:System.Web.UI.WebControls.WebParts.WebPart>по-прежнему отображается в коллекции, на который указывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Закрытие элемента управления отличается от его удаления. Закрытые элементы управления по-прежнему доступны для восстановления на странице, но удаленный экземпляр элемента управления удаляется окончательно и не может быть восстановлена. Независимо от того, следует ли <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверный элемент управления не является статическим (объявленным в разметке страницы) или динамическим (добавленным на страницу программным способом или пользователем из каталога веб-частей), закрытии и повторном открытии на странице.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Как правило, чтобы закрыть <xref:System.Web.UI.WebControls.WebParts.WebPart>управления, щелкнув его команд меню и выбрав команду закрытия.</xref:System.Web.UI.WebControls.WebParts.WebPart> Элемент управления может быть закрыто, напрямую вызвать метод CloseWebPart и передав ссылку на `webPart`.       На странице где <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления были закрыты, если разработчик объявляет `<asp:catalogzone>` элемент и в нем добавляет `<asp:pagecatalogpart>` элемент, он предоставляет простой пользовательский интерфейс (UI) для пользователей восстановить закрытые элементы управления на страницу во время выполнения.</xref:System.Web.UI.WebControls.WebParts.WebPart> Пользователей можно переключить в режим отображения каталога и закрытые элементы управления будут отображаться в каталоге страницы. Пользователи могут выбрать закрытые элементы управления и добавьте их обратно на страницу в любой позиции, что пожелает, а затем восстановить на странице и подготовке к просмотру в обычном режиме выбранных элементов управления.       При вызове метода CloseWebPart, он создает несколько события: <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>(если существует несколько элементов управления), и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>(при наличии подключенных элементов управления).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Как правило, разработчики могут отменить эти события, но в некоторых случаях не удается отменить их. Дополнительные сведения см. в документации для <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>, и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>события.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  example:
  - "The following code example demonstrates how to use the CloseWebPart method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_1.vb)]\n [!code-cs[WebParts_WebPartManager_CloseWebPart#3](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_1.cs)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with an <`asp:pagecatalogpart>` element declared within it. This is what will contain the closed <xref:System.Web.UI.WebControls.WebParts.WebPart> control and enable users to add it back to the page. The `Button1_Click` method directly calls the CloseWebPart method to close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, although a user can also close the control through the verbs menu.  \n  \n [!code-cs[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/csharp/b26a8753-d277-40c2-ba47-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_CloseWebPart#1](~/add/codesnippet/visualbasic/b26a8753-d277-40c2-ba47-_2.aspx)]  \n  \n After you load the page in a browser, close the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control by clicking the verbs menu (the arrow symbol) in the header of the control, and clicking **Close**. Now change the page to catalog mode by selecting **Catalog** in the **Display Mode** drop-down list control. The page catalog appears with the closed control. Select the check box next to the closed control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. The control is restored to the page. Now close it again, this time by clicking the **Close WebPart** button."
  syntax:
    content: public void CloseWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления, который закрывается в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection.  \n  \n \\- or -  \n  \n <code>webPart</code> is a shared control and has already been closed by another user."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  id: ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Представляет режим отображения, используемый для отображения специальный пользовательский интерфейс (UI) для пользователей управлять соединениями между <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления. Это поле доступно только для чтения."
  remarks: "Поле ConnectDisplayMode ссылается на пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>объекта, который создается и содержащиеся в <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Поскольку это статический объект, можно ссылаться на него напрямую с помощью <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класс без необходимости экземпляр элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Если пользователи хотят управлять соединениями между <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления на веб-странице, если <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone>зоны был объявлен на странице, их можно переключить в режим ConnectDisplayMode.</xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Режим отображения подключения отображается специальный пользовательский Интерфейс для управления подключениями, который включает возможность подключать или отключать элементы управления, а также для изменения сведений о существующих соединений.       Если вы хотите предоставить пользователям возможность управлять подключениями с помощью пользовательского интерфейса, предоставляемые в наборе элементов управления веб-частей, необходимо объявить `<asp:connectionszone>` элемент в разметке страницы. В отличие от элементов для других типов <xref:System.Web.UI.WebControls.WebParts.WebZone>зоны, необходимо добавить другие теги внутри этого элемента; просто объявить элемент самостоятельно.</xref:System.Web.UI.WebControls.WebParts.WebZone>"
  example:
  - "The following code example demonstrates the usage of the ConnectDisplayMode mode.  \n  \n The code example has three parts:  \n  \n-   A source file that contains an interface and custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection.  \n  \n-   A Web page that provides a connection UI and demonstrates working with the ConnectDisplayMode mode.  \n  \n-   An explanation of how to run the example.  \n  \n The first part of the code example is a source file that contains an interface and two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that are designed so they can be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compilation approach. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_1.cs)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#2](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_1.vb)]  \n  \n The second part of the example is a Web page that hosts the custom controls. Within the server `<script>` tags on the page are several methods that populate a drop-down list with the display modes available on the page. A user can select these from the drop-down list to change the page's display mode. One of the available display modes is connect display mode, because an `<asp:connectionszone>` element is declared in the page's markup. Notice that this element does not contain any other child elements; it exists only to enable the connection management UI for users.  \n  \n The ConnectDisplayMode mode appears in this example in two places. First, in the `Page_Init` method, the connect display mode is added to the drop-down list of display modes, as the code loops through the collection referenced in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> property. Second, the `Page_PreRender` method checks the current display mode on the page, and if the current mode is ConnectDisplayMode, a message is displayed in a <xref:System.Web.UI.WebControls.Label> control.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_1_2.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_1_2.aspx)]  \n  \n After you load the page in a browser, click the drop-down list and select **Connect** to switch the page into connect display mode. Notice that a message appears, telling you that the page is in connect display mode. Now click the verbs menu (an arrow symbol) in the title bar of one of the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and then click **Connect** in the verbs menu. After the connection UI is displayed, click the link to create a connection. Use the drop-down list within the connection UI that appears, select the other control that will participate in the connection, and click the **Connect** button. The connection is established. Click the **Close** button, and then use the drop-down list at the top of the page to return the page to browse display mode."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode ConnectDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  id: Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ссылку на коллекцию всех текущих подключений на веб-странице."
  remarks: "Свойство подключения предоставляет способ доступа к текущий набор подключений на странице. Сама коллекция только для чтения, и разработчики, которым необходимо управлять конкретного подключения из коллекции следует использовать <xref:System.Web.UI.WebControls.WebParts.WebPartManager>методы, например <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>до <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates declarative and programmatic use of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need the custom user control and the source code for the custom controls mentioned above. Obtain these two items from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n The following Web page code demonstrates how to use the Connections property programmatically to get the count of current connections on a page. Note that in the `<script>` tag section, the code to handle two events for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control accesses the Connections property to obtain the count.  \n  \n [!code-cs[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_34_1.aspx)]\n [!code-vb[WebParts_WebPartManager_SimpleConnection#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_34_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) displays, click the **Create a connection to a Consumer** link. A cell appears that has a drop-down list control. Select **Weather Control** in the drop-down list, and click **Connect** to complete the connection of the two controls. Click **Close**, and then use the **Display Mode** drop-down list to return the page to normal browse mode. Note that a label now displays the number of connections and the number of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. If you now return to connect mode and disconnect the two controls, when you return to browse mode, the label's content should be updated and there should be no connections."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection Connections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> , содержащий набор <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> объектов."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  id: ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после всех текущих подключений веб-частей на странице не только подключены, но и начнут активно обмениваться данными между потребителя и поставщика элементов управления в каждом подключении."
  remarks: "В жизненном цикле подключений это событие возникает после завершения загрузки страницы. Она также происходит после <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>событие, которое означает только то, что <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверных элементов управления, включенных в конкретных подключение успешно подключились.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected> В случае которых несколько подключений на странице, метод ConnectionsActivated означает, что все допустимых подключений веб-частей на странице теперь активных и обмениваются данными. Зная, что все соединения являются активными, разработчики могут выполнить любое количество задач, включая уведомление пользователей о состоянии всех подключений, уведомление элементов управления получателя для обработки и отображения данных из своих служб и т. д.       Это событие связано с <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>метод, который вызывает события и позволяет разработчикам создавать пользовательские обработчики для события.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated%2A>       Разработчики страниц могут создать пользовательский обработчик для события, добавив `OnConnectionsActivated` атрибут `<asp:webpartmanager>` элемент на странице и последующим назначением атрибуту имени пользовательского метода."
  syntax:
    content: public event EventHandler ConnectionsActivated;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  id: ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит во время активации всех установленных подключений веб-частей на веб-странице."
  remarks: "В жизненном цикле подключений, это событие возникает, как страница завершает его процесс загрузки непосредственно перед <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>вызывается метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Оно отличается от <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>событие, которое включает в себя определенного соединения между <xref:System.Web.UI.WebControls.WebParts.WebPart>или других серверных элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Событие ConnectionsActivating возникает при все возможные соединения на странице были подключены и должны быть активированы.       Связанный с событием ConnectionsActivating <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>метод, который создает событие.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A> Разработчики элементов управления, которые хотят расширить тип соединения, которые можно добавить на страницу может переопределить защищенный <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>метод и активируйте дополнительные типы подключений.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating%2A>       Разработчики страниц могут создать пользовательский обработчик для события, добавив `OnConnectionsActivating` атрибут `<asp:webpartmanager>` элемент на странице и последующим назначением атрибуту имени пользовательского метода."
  syntax:
    content: public event EventHandler ConnectionsActivating;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Создает соединение между двумя <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> элементов управления с помощью только ссылки на элементы управления и их указанного <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> объектов."
  remarks: "Данная перегрузка используется для подключения элементов управления при их точек подключения достаточно совместимы, что они могут подключаться без использования <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>объекта.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> При вызове перегруженного метода, он просто передает этот вызов к перегруженной версии метода и передает `null` параметра, которое требуется <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>объект.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>       При попытке подключения двух элементов управления программными средствами, можно использовать <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>метода в проверку условия, чтобы определить, является ли элементы управления могут подключаться непосредственно.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A>"
  example:
  - "The following code example demonstrates how to use this method to create a connection programmatically. For the full code required to run the example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. From that example, you will need the source code for the user control that allows you to change display modes on the page, and the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The code for the Web page that hosts the two controls follows. The page uses `Register` directives at the top to declare the user control and the custom controls. The custom controls are then referenced declaratively within an `<asp:webpartzone>` element. The code that handles the `Button1_Click` method creates a connection between the controls by using the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> method.  \n  \n [!code-cs[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/csharp/4892fea4-8419-4966-aca7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_ConnectWebParts1#1](~/add/codesnippet/visualbasic/4892fea4-8419-4966-aca7-_1.aspx)]  \n  \n After you load the page in a browser, click the **Connect WebPart Controls** button to form the connection. You can then enter some data in the text box, and click the **Enter 5-digit ZIP Code** button to demonstrate that the controls are connected, and that data entered in the first control is updated in the second."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления подключен управления ролью предоставление данных в другую."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Метод, который служит в качестве метода обратного вызова для подключения. Реализованное в наборе элементов управления веб-частей это открытый метод в `provider` помеченное <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> атрибута метаданных."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элемента управления, имеющего роль получение данных из `provider`, обработки и его отображения."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Метод, который подключается с помощью `providerConnectionPoint` для получения данных для соединения. Реализованное в наборе элементов управления веб-частей это открытый метод в `consumer` помеченное <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> атрибута метаданных."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> , содержащий различные сведения о поставщике и потребителя, необходимые для подключения."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> Коллекцию элемента управления динамические коллекции только для чтения."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  id: ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Создает соединение между двумя <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> элементов управления с помощью ссылки на элементы управления, их указанного <xref href=&quot;System.Web.UI.WebControls.WebParts.ConnectionPoint&quot;> </xref> объектов и <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> объекта."
  remarks: "Данная перегрузка используется для подключения элементов управления при их точек соединения несовместимы. Эта несовместимость происходит при `consumer` реализует другой интерфейс, чем `provider` точкой подключения. Преобразователь преобразует данные в тип, который может быть понятным `consumer`."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartConnection ConnectWebParts (System.Web.UI.WebControls.WebParts.WebPart provider, System.Web.UI.WebControls.WebParts.ProviderConnectionPoint providerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPart consumer, System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint consumerConnectionPoint, System.Web.UI.WebControls.WebParts.WebPartTransformer transformer);
    parameters:
    - id: provider
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> , имеющий роль предоставление данных на другой элемент управления подключенной."
    - id: providerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
      description: "Открытый метод в `provider` помеченное <xref uid=&quot;langword_csharp_ConnectionProvider&quot; name=&quot;ConnectionProvider&quot; href=&quot;&quot;> </xref> атрибута метаданных и служит в качестве метода обратного вызова для подключения."
    - id: consumer
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> , имеющий роль получение данных из `provider` или `transformer`, обработки и его отображения."
    - id: consumerConnectionPoint
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
      description: "Открытый метод в `consumer` помеченное <xref uid=&quot;langword_csharp_ConnectionConsumer&quot; name=&quot;ConnectionConsumer&quot; href=&quot;&quot;> </xref> атрибута метаданных и соединяет с `providerConnectionPoint` для получения данных для соединения."
    - id: transformer
      type: System.Web.UI.WebControls.WebParts.WebPartTransformer
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartTransformer&quot;> </xref> , обеспечивает подключение между двумя элементами управления путем преобразования данных из `provider` в формат, `consumer` может обработать."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> , содержащий сведения о поставщике, потребитель и преобразователя, необходимые для подключения."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "В уже активации подключений <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  id: Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает коллекцию всех <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>, сервер или пользовательских элементов управления, содержащихся в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны на веб-странице и управляются <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  remarks: "Свойства элементов управления не ссылается на другие элементы управления, на которые ссылается <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления, такие как различных элементов управления, зоны <xref:System.Web.UI.WebControls.WebParts.EditorPart>или <xref:System.Web.UI.WebControls.WebParts.CatalogPart>элементов управления и др.</xref:System.Web.UI.WebControls.WebParts.CatalogPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Это свойство используется набором элементов управления веб-частей и в большинстве случаев разработки не предназначен для непосредственного вызова из кода. По этой причине несмотря на то, что свойство является общим, он скрыт из IntelliSense. Разработчики, которым требуется доступ к коллекции из <xref:System.Web.UI.WebControls.WebParts.WebPart>или других серверных элементов управления под управлением <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления должен использовать его <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "Объект <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> , содержащую все элементы, которые управляются <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Используется элементом управления веб-частей, чтобы создать копию <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления для добавления элемента управления на веб-страницу."
  remarks: "Невозможно вызвать метод CopyWebPart непосредственно из программного кода. Этот метод вызывается внутренним образом <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемента управления в процессе добавления нового динамического <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверный элемент управления на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Динамический элемент управления добавляется на страницу программно или через веб-частей пользовательский интерфейс (UI), например добавление элемента управления из каталога элементов управления, а не статический элемент управления, который объявляется напрямую в разметке страницы пользователем.      Настроек [!NOTE] настроек метод можно переопределить в производном классе, если разработчикам необходимо включить этот метод для обработки дополнительных сценариев копирования элементов управления. Дополнительные сведения см. в разделе &quot;примечания к наследующим объектам&quot;.       При добавлении нового динамического элемента управления, если это <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления, метод CopyWebPart возвращает новый экземпляр элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> Если добавляемый элемент управления принадлежит другому типу серверного элемента управления (например, пользовательский элемент управления, пользовательский элемент управления или элемент управления ASP.NET), элемент управления будет уже были изолированы с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>объекта набором элементов управления веб-частей.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Когда метод CopyWebPart обнаруживает <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>элемента управления, он возвращает новый экземпляр элемента <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>управления для нового экземпляра дочернего элемента управления в оболочку в пределах его.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Когда метод CopyWebPart создает новую копию элемента управления для возврата, он также возвращает значения всех свойств, значения по умолчанию. Обратите внимание, что, если вы хотите сохранить значения настраиваемых свойств и иметь их копируются в новый экземпляр элемента управления, следует вызвать метод <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A>метод также.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.CopyPersonalizationState%2A> Последний шаг выполняемые CopyWebPart, метод заключается в вызове <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>метод, чтобы получить новый идентификатор для элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID%2A>      Настроек [!NOTE] настроек, так как метод получает новый идентификатор для скопированного элемента управления, не следует полагаться на создание ссылок на динамический элемент управления, который добавляется на страницу с использованием исходного идентификатора. Вместо этого следует ссылаться на новый экземпляр элемента управления, возвращенный методом."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPart CopyWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> Или серверный элемент управления для копирования."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> добавить на страницу."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  id: CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Создает набор преобразователи, указанные в файле конфигурации веб-сайта и добавляет их в коллекцию преобразователей ссылается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.TransformerTypeCollection CreateAvailableTransformers ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
      description: "Коллекция преобразователей, указанные в файле конфигурации веб-сайта."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает коллекцию всех элементов управления, которые управляются <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> на веб-странице. Этот класс не наследуется."
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Объект <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> состоящий из всех различных элементов веб-частей, управляется <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  id: CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Создает набор всех возможных режимов отображения для приложения веб-частей."
  remarks: "Этот метод создает список всех возможных режимов отображения, не только режимов отображения, поддерживаемых на определенной странице. Дополнительные сведения о поддерживаемых режимах отображения см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       По умолчанию режимы для использования на страницах веб-частей отображения веб-частей, набор элементов управления создает следующий набор:- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>- <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>разработчики могут создавать пользовательские режимы отображения, с указанием или без сообщения, сопровождающие настраиваемые зоны, которые являются производными от <xref:System.Web.UI.WebControls.WebParts.WebZone>или <xref:System.Web.UI.WebControls.WebParts.ToolZone>классы.</xref:System.Web.UI.WebControls.WebParts.ToolZone> </xref:System.Web.UI.WebControls.WebParts.WebZone> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Для создания пользовательского режима отображения, должен наследовать из <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>класса, и для добавления в режим отображения как поддерживаемый режим на странице, должен наследовать из <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класса и переопределить метод CreateDisplayModes.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       При добавлении режимы отображения с помощью <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>метода, следует добавить их в порядке их отображения в любые пользовательские элементы управления пользовательского интерфейса (например, <xref:System.Web.UI.WebControls.ListBox>управления), обеспечивающие пользователям возможные режимы отображения на странице.</xref:System.Web.UI.WebControls.ListBox> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection.Add%2A>"
  example:
  - "The following code example demonstrates how to use the CreateDisplayModes method.  \n  \n The code example has five parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that hosts the other controls.  \n  \n-   A user control that resides in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone on the Web page, and enables you to enter and display text in a label.  \n  \n-   A source code file that contains two controls. One is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, and the other is a custom <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> object to add to the page's default display modes.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the Web page. It contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> controls, both user controls, and the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. Notice the `Register` directives at the top of the page to reference the user controls and namespace for the compiled controls.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_1.aspx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_1.aspx)]  \n  \n The third part of the example is the user control for entering and displaying text. It uses a <xref:System.Web.UI.WebControls.MultiView> control to create multiple views of the UI. One view appears with the `Button1` button, the other without. Notice that in the overridden `OnPreRender` method, the code checks to see whether the page is currently in the custom display mode and, if so, displays the first view of the user control, which includes the button. If the page is not in the custom display mode, for example if the page is in browse or design mode, the button is hidden.  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_2.ascx)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_2.ascx)]  \n  \n The fourth part of the example is the source file for the two custom classes. Notice that the custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overrides the CreateDisplayModes method, and that it first calls the base method to add all the default display modes, and then adds the custom display mode. The custom display mode class, `InLineEditDisplayMode`, simply inherits from <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>, sets the name of the display mode in the constructor, and overrides a number of the base properties to establish the characteristics of the custom display.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_187_3.cs)]\n [!code-vb[Webparts_WebPartManager_CreateDisplayModes#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_187_3.vb)]  \n  \n To run the code example, load the page in a browser. Notice that the page is currently in browse mode, and no button is visible. Using the **Display Mode** drop-down list control, change the page to **Inline Edit Display** mode, and notice that now the `Button1` button is visible in the lower user control. Add some text, and click the button to update the control. Notice that the page display is returned to browse mode, the text you entered is now displayed, and the button is once again hidden because the page is no longer in the custom display mode."
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection CreateDisplayModes ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> , содержащий все режимы отображения, которые поддерживаются."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  id: CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Получает уникальное значение, чтобы служить в качестве идентификатора для динамического подключения."
  remarks: "Метод CreateDynamicConnectionID создает значение идентификатора GUID и преобразует его в строку в качестве уникальный идентификатор соединения. Метод вызывается каждый раз при создании динамического подключения."
  syntax:
    content: protected virtual string CreateDynamicConnectionID ();
    parameters: []
    return:
      type: System.String
      description: "Строка, содержащая уникальный идентификатор для подключения."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  id: CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Создает уникальный идентификатор для динамического <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления."
  remarks: "Если <xref:System.Web.UI.WebControls.WebParts.WebPart>добавлены элементы управления на веб-страницу, они могут быть статическими (то есть, объявляются в разметке страницы) или динамическими (программным способом добавляются).</xref:System.Web.UI.WebControls.WebParts.WebPart> В любом сценарии, где <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления создает новые динамические элементы управления, чтобы добавить на страницу, он вызывает этот метод для создания уникального идентификатора.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Метод является виртуальным, чтобы разработчики могли переопределять его при необходимости предоставить собственную реализацию для создания идентификатора."
  syntax:
    content: protected virtual string CreateDynamicWebPartID (Type webPartType);
    parameters:
    - id: webPartType
      type: System.Type
      description: "<xref:System.Type>Элемента управления, для которого создается идентификатор.</xref:System.Type>"
    return:
      type: System.String
      description: "Строка, содержащая уникальный идентификатор для элемента управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPartType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  id: CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Создает специальный элемент управления, который вставляется в страницу и отображается для конечных пользователей, при попытке загрузить или создать динамический <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления завершается сбоем по какой-либо причине."
  remarks: "Метод CreateErrorWebPart вызывается при наборе пытается загрузить или создать экземпляр динамического управления веб-частей <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверный элемент управления и он не по какой-либо причине.</xref:System.Web.UI.WebControls.WebParts.WebPart> Метод создает <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>объект, назначает сообщение об ошибке и возвращает его.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>Управления вставляется вместо элемента управления, вызвавшего сбой, и на странице отображается сообщение об ошибке.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>       Невозможно вызвать метод CreateErrorWebPart непосредственно из программного кода. Тем не менее, можно наследовать от <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класса и метода расширения.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Дополнительные сведения см. примечания для наследующих объектов раздела.       Конечные пользователи могут работать с <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>управлять на странице, как это было бы обычной <xref:System.Web.UI.WebControls.WebParts.WebPart>управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ErrorWebPart> Чтобы удалить сообщение об ошибке, они закрытия элемента управления, щелкнув команду закрытия, после чего добавляется элемент управления <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>объекта, как и любой другой элемент управления закрытых.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Если конечный пользователь удаляет <xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>сервера управления, не удалось загрузить на странице также будут удалены.</xref:System.Web.UI.WebControls.WebParts.ErrorWebPart>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.ErrorWebPart CreateErrorWebPart (string originalID, string originalTypeName, string originalPath, string genericWebPartID, string errorMessage);
    parameters:
    - id: originalID
      type: System.String
      description: "Строка, представляющая идентификатор элемента управления со сбоем. Если <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> участвует в сбоя, идентификатор — это идентификатор его дочернего элемента управления сервера."
    - id: originalTypeName
      type: System.String
      description: "Строка, являющаяся имя <xref:System.Type>элемента управления со сбоем.</xref:System.Type> Если <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> участвует в сбоя, имя типа представляет тип его дочернего элемента управления сервера."
    - id: originalPath
      type: System.String
      description: "Строка, содержащая путь к пользовательскому элементу управления, если <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> , содержащий дочерний элемент пользовательского элемента управления, участвующих в ошибку."
    - id: genericWebPartID
      type: System.String
      description: "Строка, которая возвращает идентификатор <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>, если соответствующий элемент управления вовлечена в удалось загрузить или создать элемент управления."
    - id: errorMessage
      type: System.String
      description: "Строка, содержащая сообщение об ошибке для отображения на странице."
    return:
      type: System.Web.UI.WebControls.WebParts.ErrorWebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.ErrorWebPart&quot;> </xref> , Вставляется в страницу вместо элемента управления, которые не удалось загрузить или создать."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  id: CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает объект персонализации, содержат пользовательские данные персонализации для текущей страницы."
  remarks: "Метод CreatePersonalization возвращает объект для хранения и управления параметры персонализации пользователя для текущей страницы. <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Управления управляет этого объекта.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.WebParts.WebPartPersonalization CreatePersonalization ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> должен содержать данные персонализации пользователя."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  id: CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Создает оболочку для управления сервером, который не является <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> объекта, чтобы элемент управления мог иметь функциональные возможности веб-частей."
  remarks: "Метод CreateWebPart является основной механизм для включения серверных элементов управления, которые не являются <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, чтобы взять на себя те же функциональные возможности, как <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления и, следовательно, полностью участвовать в приложениях веб-частей.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> С помощью этого метода разработчики значительно расширить число серверных элементов управления, их можно использовать в приложении веб-частей, поскольку практически любой тип серверного элемента управления — можно использовать стандартные элементы управления ASP.NET, пользовательские элементы управления и пользовательские элементы управления--.       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Управления также использует этот метод в двух сценариях программы-оболочки для серверных элементов управления с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>объекта.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> При добавлении серверных элементов управления на страницу с помощью <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>управления, если импортированного элемента управления не <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления, вызывается метод CreateWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Кроме того, когда серверных элементов управления объявляются в постоянном формате в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны на веб-странице, CreateWebPart, метод вызывается для всех элементов управления, которые не являются <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       При добавлении серверного элемента управления в зону программными средствами, типичный подход является использование метода CreateWebPart программы-оболочки для элемента управления с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>объекта, а затем вызвать <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A>метод, чтобы добавить элемент управления к коллекции всех <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления на страницу, которая ссылается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates use of the CreateWebPart method. In the `Button2_Click method`, the CreateWebPart method is called to wrap a <xref:System.Web.UI.WebControls.Calendar> control with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object before adding it to the zone.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/6552ec5d-43c0-4c29-a8a1-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/6552ec5d-43c0-4c29-a8a1-_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.GenericWebPart CreateWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Серверный элемент управления, который не <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> -оболочки <code> control </code> и позволяет ему работать как с обычным <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  id: DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает или задает пользовательские предупреждающее сообщение, отображаемое для конечных пользователей, которые удаляют элемент управления."
  remarks: "При удалении <xref:System.Web.UI.WebControls.WebParts.WebPart>управления, обычно отображается предупреждающее сообщение по умолчанию.</xref:System.Web.UI.WebControls.WebParts.WebPart> Оно предупреждает пользователя, что при удалении этого экземпляра элемента управления, не подлежат восстановлению. Разработчик может предоставить пользователям способ добавления нового экземпляра элемента управления на страницу (такие как через каталог <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, или некоторых программных способов), но текущий экземпляр элемента управления, который будет удален без возможности восстановления будут удалены.</xref:System.Web.UI.WebControls.WebParts.WebPart> Диалоговое окно, отображает предупреждение, содержит кнопки для пользователя, для отмены удаления, при необходимости.       Свойство DeleteWarning дает разработчикам возможность задать предупреждающее сообщение, отображаемое для пользователя.       Если разработчик страницы назначает пустая строка (&quot;») будет отображаться значение этого свойства, диалоговое окно предупреждение, когда пользователь удаляет <xref:System.Web.UI.WebControls.WebParts.WebPart>управления.</xref:System.Web.UI.WebControls.WebParts.WebPart>      Настроек [!NOTE] настроек DeleteWarning свойство не отображается в случае статического <xref:System.Web.UI.WebControls.WebParts.WebPart>и серверных элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> Статические элементы управления, серверные элементы управления, которые объявлены в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны в разметке веб-страницы.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Поскольку такие элементы управления являются статическими, их невозможно удалить, поэтому удаленное предупреждение в этом случае никогда не отображается. Пользователь может быть закрыт, статические элементы управления, но закрытый элемент управления добавляется в каталог страницы, откуда его можно добавить на страницу пользователем, в то время как удаленный элемент управления не может быть восстановлен."
  example:
  - "The following code example demonstrates the use of the DeleteWarning property declaratively and programmatically.  \n  \n There are four parts to the code example:  \n  \n-   A user control that enables you to change page display modes.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the code example is the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses the dynamic compilation approach; thus there is no `Assembly` attribute in the `Register` directive for this control at the top of the Web page. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_1.cs)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_1.vb)]  \n  \n The third part of the code example is the Web page. The page contains a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, with the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control declared in the zone, so that a user can add it to the page at run time. Note that only dynamic controls (controls that are added to a page programmatically or from a catalog like this one) can be deleted from a page. Static controls (controls that are declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone in the markup of a page) can be closed, but never deleted. The `<asp:webpartmanager>` element declares a custom value for the DeleteWarning property by using the `DeleteWarning` attribute. The `Button1_Click` method assigns another custom value to the DeleteWarning property.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_226_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWarning#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_226_2.aspx)]  \n  \n After you load the page in a browser, you need to add the <xref:System.Web.UI.WebControls.WebParts.WebPart> control to the page. Using the **Display Mode** drop-down list control, select catalog mode. When the catalog appears, select the check box next to the custom control, click **Add** to add it to the page, and then click **Close** to return the page to browse mode. Now that the control is visible, you can delete it. Using the **Display Mode** control again, switch the page into design mode (you cannot delete controls while the page is in browse mode). Click the verbs menu (the arrow symbol) in the header of the <xref:System.Web.UI.WebControls.WebParts.WebPart> control, and select **Delete**. The warning that you set on the `DeleteWarning` attribute appears. Click **Cancel**. Now click the button labeled **Change Delete Warning**, which changes the property value programmatically. From the verbs menu on the control, select **Delete** again, and notice that this time the other warning message appears."
  syntax:
    content: public virtual string DeleteWarning { get; set; }
    return:
      type: System.String
      description: "Строка, содержащая текст предупреждающего сообщения. Значение по умолчанию — локализованное сообщение с предупреждением."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Окончательно удаляет динамического экземпляра <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления на веб-странице."
  remarks: "Метод DeleteWebPart окончательно удаляет элемент управления, представленный `webPart` параметра со страницы. В отличие от закрытого элемента управления, который добавляется <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>управления и может быть добавлена на страницу никогда не удаленный экземпляр элемента управления можно добавить на страницу.</xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>      Настроек [!NOTE] настроек, реализуемый управления веб-частей задано, возможность пользователям удалять динамический <xref:System.Web.UI.WebControls.WebParts.WebPart>управления зависит от пользователя и области персонализации, в котором элемент управления был добавлен на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPart> Если элемент управления добавляется при нахождении страницы в общей области (от пользователя, имеющего разрешения), затем элемент управления нельзя удалить отдельными пользователями при нахождении страницы в пользовательской области.       Динамические элементы управления могут быть удалены. Динамические элементы управления добавляются на страницу программным способом или пользователи, добавление элементов управления из каталога. Статические элементы управления добавляются на страницу декларативно в разметке или в постоянном формате. Так как декларативные теги постоянно присутствуют в разметке, статические элементы управления не могут быть удалены, но закрыт и открыт повторно."
  example:
  - "The following code example demonstrates how to use the DeleteWebPart method. The first time the **Add Calendar** button is clicked, the code in the event handler creates a <xref:System.Web.UI.WebControls.Calendar> control, and adds it to a zone as a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Because the control is added programmatically, it is a dynamic control, and therefore it can be deleted. When a user clicks the **Delete Calendar** button, the code ensures that the control exists, and then deletes it by calling the DeleteWebPart method.  \n  \n [!code-cs[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/csharp/116fed0f-0c12-4700-9cde-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DeleteWebPart#1](~/add/codesnippet/visualbasic/116fed0f-0c12-4700-9cde-_1.aspx)]"
  syntax:
    content: public void DeleteWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Серверный элемент управления для удаления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  id: DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Представляет режим отображения, используемый для изменения макета веб-страниц, содержащих элементы управления веб-частей. Это поле доступно только для чтения."
  remarks: "Поле DesignDisplayMode ссылается на пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>объекта, который создается и содержащиеся в <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Поскольку это статический объект, можно ссылаться на него напрямую с помощью <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класс без необходимости экземпляр элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       При первой загрузке определяет, страницу, которая содержит веб-частей, он находится в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(режим просмотра) по умолчанию.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Если требуется изменить макет страницы путем перемещения элементов управления в различных зонах или в пределах текущей зоны, они сначала переключить страницу в DesignDisplayMode (режим конструктора). В режиме конструктора появится пользовательский интерфейс (UI) для различных зон, и пользователи могут перетаскивать элементы управления для изменения макета."
  example:
  - "The following code example demonstrates how to work with the DesignDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse and design. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to DesignDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-vb[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_6_1.aspx)]\n [!code-cs[WebParts_WebPartManager_DesignDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_6_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice that the label on the page is hidden. Use the drop-down list control to switch the page to design mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode DesignDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Удаляет <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или сервер управления, являющийся выполняется удалены все соединения, участвующего в или закрыт."
  remarks: "Метод DisconnectWebPart можно вызвать изнутри с помощью элемента управления веб-частей при закрыт на странице или удален из страницы элемента управления. В этом случае метод вызывается для удаления элемента управления из любого подключения включающих как поставщик или потребитель. Если элемент управления удаляется из любого соединения, этот метод также вызывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>метод, чтобы завершить все соединения, в котором `webPart` участвовал.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       При вызове метода DisconnectWebPart, он выдает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Обычно это событие может быть отменено, однако в двух случаях не может быть отменено. Один вариант происходит во время запросов на страницу при <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>вызывается метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Если возникает конфликт между существующих подключений, DisconnectWebPart метод будет вызван для закрыть один из конфликтующих подключений, а также в данном экземпляре <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>событий не может быть отменено, так как конфликт, должны быть устранены.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>       Другой случай возникает тогда, когда <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверный элемент управления, подключенных в данный момент закрыт или удален.</xref:System.Web.UI.WebControls.WebParts.WebPart> В этом случае из-за управления удаляется со страницы его подключения должен завершаться, поэтому проектирования, невозможно отменить <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>событий для прерывания процесса разрыв соединения.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>"
  example:
  - "The following code example demonstrates how to use the DisconnectWebPart method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls. If you close one of the controls while the page is in browse mode and the controls are connected, an override of the DisconnectWebPart method disconnects the closed control, ends the connection, and displays a message.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is the file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected, and a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n In the source code, notice the inherited control `MyWebPartManager` that overrides the DisconnectWebPart method. This method checks each connection in a page to see whether the control being closed participates in the connection and, if so, calls the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> method to end the connection. This is identical to the base implementation of the method in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control. The overridden method then customizes the base implementation by writing a message to the page.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control, and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, while the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/71ce8e23-5620-4b82-8ba7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/71ce8e23-5620-4b82-8ba7-_2.aspx)]  \n  \n After you load the page, click the **Connect** button to connect the controls. Then click the verbs menu in one of the controls (the downward arrow in the header of the control), and select **Close** from the verbs menu. When you try to close the control, the overridden method is called, the connection is ended, and the message is written to the page. If you want to reset the page to restore the closed control and experiment with other options, click the **Reset User State** link to remove personalization data and restore the page's original state."
  syntax:
    content: protected virtual void DisconnectWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления, который требуется отключить."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  id: DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Выполняет отключение серверных элементов управления, подключенных на веб-странице."
  remarks: "Метод DisconnectWebParts выполняет полный разрыв соединения между <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверных элементов управления, при его передаче `connection` параметр.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Этот метод используется для отключения элементов управления при размещении `<asp:connectionszone>` элемент на веб-странице, чтобы предоставить пользовательский интерфейс (UI) для управления подключениями. Когда страница находится в режиме отображения подключения (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>) и текущее соединение, нажав кнопку, который вызывает метод DisconnectWebParts для завершения подключения.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode>       Можно также вызвать метод DisconnectWebParts непосредственно из программного кода, если вы хотите отключить элементы управления программным путем и без добавления `<asp:connectionszone>` элемента на страницу."
  example:
  - "The following code example demonstrates how to use the DisconnectWebParts method. Using two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, the Web page enables you to create a connection between the controls by clicking a button, while another button enables you to disconnect the controls.  \n  \n The code example has four parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A source file containing custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part is a file containing the source code for the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that will be connected. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This example uses dynamic compilation, so the `Register` directive that references these components in the Web page is declared accordingly at the top of the Web page. For a walkthrough that demonstrates compiling options, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_1.cs)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#2](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that near the top, it contains `Register` directives to register the user control and the dynamically compiled assembly with the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. The page has two primary methods. The `Button1_Click` method creates a connection between the controls, and the `Button2_Click` method disconnects the controls.  \n  \n [!code-cs[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/csharp/01708fce-976e-4f0e-bfeb-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_DisconnectWebParts#1](~/add/codesnippet/visualbasic/01708fce-976e-4f0e-bfeb-_2.aspx)]  \n  \n After you load the page, you can click the **Connect** button to connect the controls. If you enter some text in the text box control, and then click the **Enter** button, the text will be displayed in the connected control (it would not be displayed if the controls were disconnected). If you click the **Disconnect** button, the controls will be disconnected. You can verify the connection status of the controls by using the **Display Mode** drop-down list control to switch the page into **Connect** mode. After doing that, click the verbs menu (represented by an arrow) in the title bar of one of the controls, and select the **Connect** item. The connection UI is displayed; it is available because there is an `<asp:connectionszone>` element declared in the page. You can also connect and disconnect the controls from this UI."
  syntax:
    content: public virtual void DisconnectWebParts (System.Web.UI.WebControls.WebParts.WebPartConnection connection);
    parameters:
    - id: connection
      type: System.Web.UI.WebControls.WebParts.WebPartConnection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> , представляющий подключение между серверными элементами управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>connection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>connection</code>не содержится в одном <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> или <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*>.  \n  \n \\- or -  \n  \n <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*> is read-only.  \n  \n \\- or -  \n  \n <code>connection</code> has already been disconnected from <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  id: DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает или задает режим активного отображения веб-страницы, содержащей элементы управления веб-частей."
  remarks: "На странице, содержащей элементы управления веб-частей всегда находится в одном из нескольких возможных режимов отображения. Дополнительные сведения о режимах отображения см. в разделе [режимах отображения страницы Web частей](~/add/includes/ajax-current-ext-md.md).       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Класс создает режимов отображения для веб-страницы.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> С помощью базового <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>класса, <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления создает несколько объектов стандартный режим, которые можно использовать на страницах, содержащих элементы управления веб-частей.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Эти режимы отображения Стандартная описаны в <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>Общие сведения о классе.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Управления также управляет режимов отображения для страниц, использующих элементы управления веб-частей.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> С помощью свойства DisplayMode <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления хранит ссылки на текущий режим отображения на странице.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Можно также использовать свойства DisplayMode для переключения страницы в различных режимах. Пример изменения режимов отображения на странице, которая использует элементы управления веб-частей см. в разделе [Пошаговое руководство: изменение режима отображения страницы](~/add/includes/ajax-current-ext-md.md).       В процессе управления режим отображения <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления также предоставляет события и обработчики событий, относящихся к режимы отображения, такие как <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A>метод и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Эти методы предоставляют механизм для настройки поведения страницы и даже для добавления пользовательского режима отображения."
  example:
  - "The following code example demonstrates programmatic use of the DisplayMode property. After loading the page in a browser, you can use the buttons near the bottom of the page to switch display modes. The page is in browse mode by default when it loads. If you switch to design mode, you can drag the server controls from one zone to another, or arrange two controls within one zone. If you switch to edit mode, you can click the verbs menu in the header of either of the server controls, select **Edit**, and edit the control using the provided editing user interface (UI).  \n  \n> [!NOTE]\n>  Switching among display modes in a Web Parts application is very common, and you might want to provide a consistent, reusable way to do this on all your pages that contain Web Parts controls. For an example of a user control that changes display modes and that can be reused on many pages, see [Walkthrough: Changing Display Modes on a Web Parts Page](../Topic/Walkthrough:%20Changing%20Display%20Modes%20on%20a%20Web%20Parts%20Page.md).  \n  \n [!code-cs[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_632_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_632_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPartDisplayMode DisplayMode { get; set; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> , определяющее режим отображения страницы."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> Объекта, присваиваемого свойству <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is not one of the supported display modes.  \n  \n \\- or -  \n  \n The <xref href=\"System.Web.UI.WebControls.WebParts.WebPartDisplayMode\"></xref> object being assigned to the property is disabled."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  id: DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после изменения текущего режима отображения на веб-частей, страница была изменена."
  remarks: "Режимы отображения являются неотъемлемой частью приложений веб-частей. Когда пользователи переходят в другой режим отображения веб-страницы, страница может выглядеть сильно отличается внешний вид, в зависимости от назначения нового режима отображения. После изменения режима отображения, возможно требуется внести определенные изменения в пользовательском интерфейсе (UI), таких как скрытие или отображение определенных элементов, изменение внешнего вида выбранного элементы пользовательского интерфейса и так далее.      Настроек [!NOTE] настроек Дополнительные сведения о режимах отображения см. в разделе [режимах отображения страницы Web частей](~/add/includes/ajax-current-ext-md.md). Дополнительные сведения о событиях см. в разделе [как: прием событий в приложениях Web Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler DisplayModeChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  id: DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после щелчка пользователем команды на веб-странице, на которой запускается процесс изменения другой режим отображения."
  remarks: "Режимы отображения являются неотъемлемой частью приложений веб-частей. Когда пользователи переходят в другой режим отображения веб-страницы, страница может выглядеть сильно отличается внешний вид, в зависимости от назначения нового режима отображения. После пользователь инициирует процесс изменения в новый режим отображения путем щелчка команды, может потребоваться внести определенные изменения в пользовательском интерфейсе (UI) с помощью <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A>Свойства, чтобы определить, каким будет новый режим отображения и затем изменив различных элементов пользовательского интерфейса соответствующим образом.</xref:System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs.NewDisplayMode%2A> Для этого удобно для переопределения <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>метод для настройки пользовательского интерфейса.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging%2A>      Настроек [!NOTE] настроек Дополнительные сведения о режимах отображения см. в разделе [режимах отображения страницы Web частей](~/add/includes/ajax-current-ext-md.md). Дополнительные сведения о событиях см. в разделе [как: прием событий в приложениях Web Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler DisplayModeChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  id: DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает коллекцию только для чтения всех режимов отображения, которые связаны с <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  remarks: "Ссылки на свойства DisplayModes, все связанные режимы отображения, в отличие от с <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>Свойства, которое ссылается режимы отображения доступных (поддерживается) на текущей странице.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>       Два из режимов отображения предоставленный, обзора и разработки, всегда поддерживается на странице. Другие режимы отображения три, редактирования, каталога и подключения, поддерживаются только в том случае, если на странице соответствующего типа зона, который необходим для определенного режима отображения для работы. Например, если вы не входят <xref:System.Web.UI.WebControls.WebParts.EditorZone>зоны, изменить режим отображения будет выглядеть в коллекции, который ссылается свойство DisplayModes, но не будет отображаться в коллекции, на который указывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes%2A> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example shows the programmatic use of the DisplayModes property. The code uses this property to populate the list with all the display modes available in the Web Parts control set, even those that are not supported on the current page. In this case, the catalog and connect display modes are not supported, because their corresponding required zones are not on the page.  \n  \n The other three display modes--browse, design, and edit--are supported on the page. Edit mode is supported because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> zone, while browse and design modes are always supported.  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control. Note that if you select **Catalog** or **Connect** in the drop-down list, an error page is generated.  \n  \n [!code-cs[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_572_1.aspx)]\n [!code-vb[WebParts_WebPartManager_DisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_572_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection DisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> , содержащий набор <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> объектов, связанных с <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  id: DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает коллекцию всех динамических подключений, которые в настоящее время существуют на веб-странице."
  remarks: "Динамические подключения — подключений, созданных программным образом, в отличие от статически. Статические подключения создаются путем их объявления в разметке страницы веб-форм. Динамические подключения формируются или программно, или посредством создания пользователем подключения с помощью пользовательского интерфейса (UI) подключения.       Коллекция DynamicConnections, то, что он доступен только для чтения и не может изменить ее содержимое, обеспечивает программный доступ к каждому объекту динамического подключения.      Настроек [!NOTE] настроек для выполнения общих операций, таких как подключения или отключения <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, разработчикам следует использовать открытые методы на <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класса, такие как <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>, вместо того чтобы напрямую изменить объекты соединения в коллекция DynamicConnections.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartConnectionCollection DynamicConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> , содержащий ссылки на все динамические подключения на странице."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  id: EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Представляет режим отображения, в котором можно изменять и редактировать серверных элементов управления конечным пользователям. Это поле доступно только для чтения."
  remarks: "Поле EditDisplayMode ссылается на пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode>объекта, который создается и содержащиеся в <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartDisplayMode> Поскольку это статический объект, можно ссылаться на него напрямую с помощью <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класс без необходимости экземпляр элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       При первой загрузке определяет, страницу, которая содержит веб-частей, он находится в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode>(режим просмотра) по умолчанию.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode> Если требуется изменить или изменить серверного элемента управления, они сначала переключить страницу в EditDisplayMode (в режиме редактирования). Во-вторых они должны выбрать определенный серверный элемент управления посредством щелчка команды редактирования в меню команд в заголовке элемента управления. После элемент управления находится в режиме редактирования, редактирования пользовательский интерфейс (UI) появляется для редактирования выбранного элемента управления.       Чтобы включить режим редактирования на странице, страница должна содержать по крайней мере один <xref:System.Web.UI.WebControls.WebParts.EditorZone>зоны, который включает один или несколько указанных редактирования элементы управления, такие как <xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart>управления или пользовательские элементы управления для редактирования.</xref:System.Web.UI.WebControls.WebParts.LayoutEditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone>"
  example:
  - "The following code example demonstrates how to work with the EditDisplayMode field programmatically. The code populates a drop-down list with the supported display modes for the page, which in this case are browse, design, and edit. To support editing, an `<asp:EditorZone>` element is in the page. Notice that, in the `Page_PreRender` method, the code checks whether the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode%2A> property is set to EditDisplayMode. If so, `Label1` will be visible, and if not, `Label1` will be hidden.  \n  \n [!code-cs[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/csharp/f-system.web.ui.webcontr_7_1.aspx)]\n [!code-vb[WebParts_WebPartManager_EditDisplayMode#1](~/add/codesnippet/visualbasic/f-system.web.ui.webcontr_7_1.aspx)]  \n  \n After you load the page in a browser, you are in browse mode by default. Notice the label on the page is hidden. Use the drop-down list control to switch the page to edit mode. Notice that, because of the code in the `Page_PreRender` method, the label is now visible. Click the **Edit** verb in the verbs menu on one of the controls, to enable editing of that specific control."
  syntax:
    content: public static readonly System.Web.UI.WebControls.WebParts.WebPartDisplayMode EditDisplayMode;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  id: EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает или задает значение, определяющее, включен ли клиентских скриптов на веб-странице, содержащий <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  remarks: "Свойство EnableClientScript предоставляет способ для разработчиков отключить клиентских скриптов. Вы можете отключить клиентских скриптов в целях безопасности или обеспечить аналогичные пользователем страницы в различных браузерах.       Вы можете отключить клиентских сценариев, добавив `EnableClientScript` атрибут <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемента на веб-странице, как и следующую строку кода, декларативной: `<asp:webpartmanager id=&quot;manager&quot; runat=&quot;server&quot;` `EnableClientScript=&quot;false&quot; />` Кроме того, разработчики могут исключить это свойство путем наследования от <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класса и установки по умолчанию значение `false`.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>        </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Набор элементов управления веб-частей использует клиентские скрипты для предоставления некоторых клиентских возможностей персонализации и пользовательского интерфейса (UI). При отключении клиента сценариев веб-части элементов управления по-прежнему работать, но некоторые функции будут отключены. Возможность перетаскивать элементы управления в другие зоны отключена вместе с возможностью отображать команды в меню команд раскрывающегося списка в заголовке окна элемента управления (вместо этого команды отображаются в заголовке окна элемента управления как ссылки)."
  syntax:
    content: public virtual bool EnableClientScript { get; set; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, является ли клиентский сценарий можно запустить на странице. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает значение, показывающее, что использование тем на веб-странице."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Управления переопределяет базовый <xref:System.Web.UI.Control.EnableTheming%2A>свойство, чтобы убедиться, что он всегда возвращает значение `true`.</xref:System.Web.UI.Control.EnableTheming%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Это делается потому, что набор элементов управления требуется использование тем для отображения веб-частей, элементы управления, веб-частей, дочерние элементы управления <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления, которые образуют пользовательский интерфейс (UI) на веб-странице.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Например, темы используются для визуализации различных зон и элементов управления, которые находятся в зонах, включая различные виды часть элементов управления (элементы управления, которые наследуют от <xref:System.Web.UI.WebControls.WebParts.Part>класса), пользовательские элементы управления ASP.NET серверных элементов управления и пользовательских серверных элементов управления.</xref:System.Web.UI.WebControls.WebParts.Part>       Несмотря на то, что переопределенное свойство EnableTheming реализуется как свойство чтения/записи в соответствии с его базовым свойством, нельзя задать свойство, поскольку изначально оно должно всегда возвращать значение `true`. При попытке задать свойство, <xref:System.NotSupportedException>исключения.</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, включены ли темы. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>во всех случаях."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Выполнена попытка установить значение свойства."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  id: EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Завершает процесс подключения <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления на другой элемент управления."
  remarks: "Метод EndWebPartConnecting завершения процесса подключения <xref:System.Web.UI.WebControls.WebParts.WebPart>управления на другой элемент управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> Он является аналогом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting%2A>       Метод EndWebPartConnecting гарантирует, что объект персонализации ссылается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>свойство является изменяемым, которой необходима, так как формирования подключения сам по себе является типом персонализации.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Метод затем гарантирует, что <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>объект не `null`и наконец вызывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartConnecting ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Элемент управления, на который указывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  id: EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Завершает процесс редактирования <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления."
  remarks: "Метод EndWebPartEditing не завершит процесс редактирования <xref:System.Web.UI.WebControls.WebParts.WebPart>управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> Он является аналогом <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>       Метод EndWebPartEditing гарантирует, что объект персонализации ссылается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A>свойство является изменяемым, которой необходима, так как изменение элемента управления — процесс, который требует изменения персонализации.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.Personalization%2A> Метод затем гарантирует, что <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>объект не `null`таким образом, выбранного в данный момент <xref:System.Web.UI.WebControls.WebParts.WebPart>управления можно изменить, и наконец он вызывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart%2A>"
  syntax:
    content: public virtual void EndWebPartEditing ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Элемент управления, на который указывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  id: ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает или задает текст, отображаемый, когда пользователь пытается экспортировать конфиденциальные данные состояния из предупреждение <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления."
  remarks: "Когда пользователь пытается экспортировать конфиденциальные данные состояния из <xref:System.Web.UI.WebControls.WebParts.WebPart>управления, если любой из экспортируемых данных поступают из члена, который был отмечен как конфиденциальные, в исходном коде, предупреждающее сообщение отображается для пользователя в окне сообщения, уведомляющее о том, что выполняется экспорт конфиденциальных данных и предоставляет пользователям возможность отменить экспорт.</xref:System.Web.UI.WebControls.WebParts.WebPart> Разработчики могут пометить конкретный элемент данных как конфиденциальные, задав `isSensitive` параметр `[Personalizable]` атрибут `true` в элементе. Дополнительные сведения об этом атрибуте и параметре см. в разделе <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>класса.</xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute>      Настроек [!IMPORTANT] настроек при использовании функцию экспорта веб-частей, конфиденциальные данные потенциально могут быть экспортированы для неавторизованных пользователей. Дополнительные сведения о способах защиты от этой угрозы см. в разделе [Защита страниц веб-частей](~/add/includes/ajax-current-ext-md.md).       Каждый раз, когда пользователи пытаются экспортировать, отображается сообщение по умолчанию. Тем не менее путем присвоения значения свойству ExportSensitiveDataWarning, можно задать пользовательское сообщение, предупреждение."
  example:
  - "The following code example demonstrates the declarative use of the ExportSensitiveDataWarning property.  \n  \n The code for the following Web page uses a standard <xref:System.Web.UI.WebControls.BulletedList> control and places it in a zone. The control will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control at run time, which enables it to act as a true <xref:System.Web.UI.WebControls.WebParts.WebPart> control. To make the control exportable, an `ExportMode` attribute is added to the `<asp:bulletedlist>` element, and the attribute value is set to <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, which means that both sensitive and non-sensitive data can be exported. Note also that in the `<asp:webpartmanager>` element, the `ExportSensitiveDataWarning` attribute is assigned a custom value.  \n  \n Note that for the code example to work, there is a setting you must add in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n [!code-vb[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1033_1.aspx)]\n [!code-cs[WebParts_WebPartManager_ExportSensitiveData#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1033_1.aspx)]  \n  \n After you load the page in a browser, click the verbs menu (represented by a downward arrow) in the title bar of the control that contains the links. In the verbs menu, select **Export**, and notice that a message box appears with the custom warning. If you want to continue with the export, click **OK**, which will allow you to save a local copy of an XML description file with all the data about the control."
  syntax:
    content: public virtual string ExportSensitiveDataWarning { get; set; }
    return:
      type: System.String
      description: "Строка, содержащая предупреждающее сообщение. Сообщение по умолчанию является значение конкретного языка и региональных параметров, предоставляемых .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  id: ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Создает XML-файл описания, который содержит состояние и данные свойства для серверного элемента управления."
  remarks: "Метод ExportWebPart собирает различные данные состояния и свойств из `webPart` в XML-файл. Данные содержат сведения об элементе управления, включая его сборку, данные о состоянии и данные свойства. Пользователь, запускающий экспорта можно сохранить XML-файл на диск на локальном компьютере или в сети. Другие пользователи затем импортировать файл описания другой страницы или веб-сайт и применить данные состояния и свойств другой экземпляр `webPart`. Это обеспечивает быстрый и удобный механизм для пользователей, для совместного использования и повторного использования параметров для серверных элементов управления, а также дает разработчикам возможность управлять внешнего вида и поведения экспортированных и импортированных элементов управления.       Свойства `webPart` не экспортируются по умолчанию. Чтобы разрешить экспорт свойства, необходимо отметить его с `[Personalizable]` атрибут в исходном коде. Можно также дополнительно пометить экспортируемое свойство как содержащие конфиденциальные данные, задав `isSensitive` параметр `[Personalizable]` атрибут `true`. По умолчанию `isSensitive` — `false`. Разработчики могут задавать параметр `true` означает конфиденциальные данные.       Для включения `webPart` для экспорта, разработчик устанавливает его <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>значение свойства, либо <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>(включает все свойства настраиваемых и конфиденциальные), или к <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode>, который экспортирует все, кроме свойств, зависящих от.</xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPartExportMode> </xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A>      Настроек [!IMPORTANT] настроек позволяет пользователям экспортировать данные из элементов управления, а также для импорта данных в другие элементы управления, включает некоторые риски безопасности. Разработчикам следует использовать подход, описанный выше, для защиты конфиденциальных данных, а также если необходимо избежать риска предоставления всех данных, их не следует включать экспорта на `webPart` вообще. Дополнительные сведения о вопросах безопасности веб-частей см. в разделе [Защита страниц веб-частей](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ExportWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Xml.XmlWriter writer);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Элемент управления, из которого будут экспортированы данные."
    - id: writer
      type: System.Xml.XmlWriter
      description: "<xref:System.Xml.XmlWriter>, Который записывает данные, экспортированные из `webPart` описание в XML-файл.</xref:System.Xml.XmlWriter>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>writer</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the collection of controls referenced in <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode*> property of <code>webPart</code> is set to a value of <xref href=\"System.Web.UI.WebControls.WebParts.WebPartExportMode\"></xref>, which means that export is disabled for <code>webPart</code>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  id: Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Отключение фокус из когда-либо на набор <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления, у него нет пользовательского интерфейса (UI)."
  remarks: "Метод фокус переопределяет базовый <xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName>метода и вызывает исключение, если вызывающий объект вызывает метод.</xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName> Поскольку <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления без пользовательского интерфейса и никогда не отображается для пользователей, она никогда не позволяет сама по себе установлен фокус.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Вызывающий объект пытается вызвать метод фокус, который не поддерживается в элементе управления без пользовательского интерфейса."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Получает коллекцию <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint&quot;> </xref> объектов, которые может выступать в качестве точки подключения с сервера управления, являющийся действующего в качестве потребителя в соединении веб-частей."
  remarks: "Подключение веб-частей всегда происходит между двумя элементами управления, один из которых является поставщиком данных, других действующего в качестве объекта-получателя данных. Каждый элемент управления должен иметь один или несколько методов, которые определены как точки подключения. В случае с элементом управления получателя свои точки подключения, <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>объекты.</xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> Получение точек подключения получателя является необходимым этапом при создании подключения веб-частей.       Потребитель всегда должен иметь хотя бы одно подключение точку, чтобы иметь возможность установить соединение. Метод GetConsumerConnectionPoints проверяет управления получателя и возвращает коллекцию свои точки подключения. Если <xref:System.Web.UI.WebControls.WebParts.WebPart>управления имеет без точек подключения, то метод возвращает пустую коллекцию.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to use the GetConsumerConnectionPoints method.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection> object that is retrieved by using the GetConsumerConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/02749d07-cefa-48e1-9ad7-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/02749d07-cefa-48e1-9ad7-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection GetConsumerConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Серверный элемент управления, который выступает в качестве получателя в подключении."
    return:
      type: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection&quot;> </xref> , содержащий все точки соединения в объекте-получателе."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  id: GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Извлекает ссылку на текущий экземпляр <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления на странице."
  remarks: "Метод GetCurrentWebPartManager полезен в контекстах, в которой вы хотите получить ссылку на текущий <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Является распространенным сценарием, где это может произойти при создании пользовательского элемента управления, не знает, какой идентификатор во время разработки <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления на странице будет.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      Настроек [!NOTE] настроек GetCurrentWebPartManager метод является статическим, поэтому его можно вызвать напрямую, без необходимости экземпляр <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Некоторые элементы управления веб-частей управления набором, такие как <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления, имеют <xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A>свойство, которое можно получить ссылку на текущий <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart.WebPartManager%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> Таким образом при работе с такими элементами управления, следует использовать это свойство для извлечения ссылки.       Если вы программируете в контексте, где вы знаете идентификатор элемента <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления, например написание встроенный код на веб-странице, он является простейшим и наиболее эффективным способом ссылаться непосредственно в элемент <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления с помощью его идентификатора.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the GetCurrentWebPartManager method. The example has two parts: a custom server control, and a Web page that hosts the control.  \n  \n The custom <xref:System.Web.UI.WebControls.Label> control uses the GetCurrentWebPartManager method to retrieve the ID of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control on the current page, and then displays the ID.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_1.cs)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#2](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_1.vb)]  \n  \n The following code example provides the Web page that hosts the control in a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n [!code-cs[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/csharp/42edcc7a-0f38-4926-86e7-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_GetCurrentWebPartManager#1](~/add/codesnippet/visualbasic/42edcc7a-0f38-4926-86e7-_2.aspx)]  \n  \n After you load the page in a browser, notice that the ID of the current <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control is displayed within the custom <xref:System.Web.UI.WebControls.Label> control."
  syntax:
    content: public static System.Web.UI.WebControls.WebParts.WebPartManager GetCurrentWebPartManager (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "Веб-страницы, которая содержит экземпляр <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref>."
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManager
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> , ссылается на текущий экземпляр элемента управления на странице."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>page</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает строку, содержащую значение для <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>свойство <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  remarks: "Возвращает вычисленное значение <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>Свойства `webPart`.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> Когда разработчики не присвоить значение <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>Свойства <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления, этот метод создает значение для отображения в заголовке.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> Вычисленное значение для элементов управления без названия состоит из нескольких дополненная в строку, число, определяющее порядок элемента управления в текущей зоны."
  syntax:
    content: protected virtual string GetDisplayTitle (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Элемент управления, для которого метод возвращает значение <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
    return:
      type: System.String
      description: "Строка, содержащая вычисленное значение <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>для <code> webPart </code>.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code>не находится в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> коллекции."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает относительный виртуальный путь и строку запроса, являются частью запроса, если пользователь пытается экспортировать <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления."
  remarks: "Значение, возвращаемое методом GetExportUrl — относительный виртуальный путь к расположению сервера страницы, содержащей элемент управления, а также добавленный запрос строковое значение, создающее запрос на экспорт отправки на сервер. Метод GetExportUrl кодирует строку, прежде чем разрешить запрос для отправки, чтобы защититься от атак вредоносного сценария.      Настроек [!NOTE] настроек Дополнительные сведения о безопасности приложений веб-частей см. в разделе [Защита страниц веб-частей](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string GetExportUrl (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> , Выполняется экспорт."
    return:
      type: System.String
      description: "Строка, содержащая относительный виртуальный путь и запрос строки, которые вмести формируют запрос на экспорт элемента управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  id: GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ссылку на экземпляр <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> управления, содержащий серверного элемента управления."
  remarks: "Как правило, существует две категории элементов управления, которые разработчики поместите в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны для участия в приложениях веб-частей: <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, которые наследуют от <xref:System.Web.UI.WebControls.WebParts.WebPart>базовый класс и другие серверные элементы управления, которые можно использовать стандартные элементы управления ASP.NET, пользовательские элементы управления или пользовательских элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> При помещении любой из этих элементов управления в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны, он получает функциональные возможности <xref:System.Web.UI.WebControls.WebParts.WebPart>управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> Объект <xref:System.Web.UI.WebControls.WebParts.WebPart>элемент управления имеет эта функция по своей природе, а другие виды серверные элементы управления — нет.</xref:System.Web.UI.WebControls.WebParts.WebPart> Чтобы включить другие серверные элементы управления в качестве <xref:System.Web.UI.WebControls.WebParts.WebPart>управляет при помещении в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны, ASP.NET создает оболочку для их с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>управления.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> Поскольку <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>управления наследует непосредственно от <xref:System.Web.UI.WebControls.WebParts.WebPart>класса, он предоставляет его дочерних элементов управления значение true, функции веб-частей.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart>       Часто во время выполнения, разработчики страниц может потребоваться получить ссылку на <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>элемент управления, который содержит один из серверных элементов управления в зоне.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> Метод GetGenericWebPart позволяет получить ссылку на <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>управления.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart>"
  example:
  - "The following code example demonstrates the use of the GetGenericWebPart method. The code example contains a <xref:System.Web.UI.WebControls.Calendar> control declared within a <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone. The `Button1_Click` method first prints the ID of the <xref:System.Web.UI.WebControls.Calendar> control to a label, and then uses the GetGenericWebPart method to retrieve a reference to the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control that wraps the calendar. The ID of the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> control, and the ID of its child control (which is the <xref:System.Web.UI.WebControls.Calendar> control), are both printed to a second label.  \n  \n [!code-cs[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/csharp/d656242f-a1d2-490c-85d4-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_GetGenericWebPart#1](~/add/codesnippet/visualbasic/d656242f-a1d2-490c-85d4-_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.GenericWebPart GetGenericWebPart (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Серверный элемент управления, который существует в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> и оформляется в виде дочернего элемента управления <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> во время выполнения."
    return:
      type: System.Web.UI.WebControls.WebParts.GenericWebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> -оболочки <code> control </code> как дочерний элемент управления. Метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если <code> control </code> не содержится в <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  id: GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Получает коллекцию <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPoint&quot;> </xref> объектов, которые может выступать в качестве точки подключения с сервера управления, являющийся действующего в качестве поставщика в соединении веб-частей."
  remarks: "Подключение веб-частей всегда происходит между двумя элементами управления, один из которых является поставщиком данных, других действующего в качестве объекта-получателя данных. Каждый элемент управления должен иметь один или несколько методов, которые определены как точки подключения. В случае с элементом управления поставщика свои точки подключения, <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>объекты.</xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint>       Поставщик всегда должен иметь по крайней мере одну точку подключения для установления соединения. Метод GetProviderConnectionPoints проверяет управления поставщика и возвращает коллекцию свои точки подключения. Получение точек подключения поставщика является необходимым этапом при создании подключения веб-частей."
  example:
  - "The following code example demonstrates how to use the GetProviderConnectionPoints method.  \n  \n The example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The declarative markup for the Web page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections%2A> property. Note that the <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection> object that is retrieved by using the GetProviderConnectionPoints method is then passed to the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts%2A> method to determine whether a connection between the two controls can be created.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/7aa405f8-9f90-4b6f-8d66-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/7aa405f8-9f90-4b6f-8d66-_1.aspx)]  \n  \n The third part of the example is the source code for the controls. You can obtain this code, and instructions for compiling it, from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview.  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection GetProviderConnectionPoints (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Серверный элемент управления, который выполняет роль поставщика в соединении."
    return:
      type: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection&quot;> </xref> , содержащий все точки подключения поставщика."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  id: ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Импортирует файл описания XML, который содержит состояние и данные свойства для <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления и применяет данные к элементу управления."
  remarks: "Метод ImportWebPart импортирует файл описания XML, которая была создана с <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>метода для серверного элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Это не фактический серверный элемент управления, который импортируется, но файл описания, содержащий данные состояния и свойств элемента управления. Элемент управления и сборку, указанную в файле описания уже должны быть доступны на сервере, когда пользователь пытается импортировать файл описания.       Чтобы включить импорт элемента управления, разработчик должен добавить <xref:System.Web.UI.WebControls.WebParts.CatalogZone>управления на странице, где будет включаться импорта.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> В этой зоне <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>управления должны быть добавлены.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Этот элемент управления предоставляет диалоговое окно файла, который позволяет пользователям просматривать и найдите импортируемый файл описания.       Пользователь начинает импорта файла описания, с помощью метода ImportWebPart считывается файл описания. Если ошибок нет, и при обнаружении сборки и элемента управления серверный элемент управления добавляется в каталог в <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>управления и различные данные свойств и состояния, указанные в файле описания применяются к элементу управления.</xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Пользователь может затем выберите элемент управления и добавить его на страницу.      Настроек [!IMPORTANT] настроек как <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A>метод ImportWebPart имеет некоторые потенциальные угрозы безопасности.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart%2A> Так как он содержит, импорт данных в веб-сайта, пользователь-злоумышленник может попытаться вставить данные или даже код скрипта в файле description, который импортируется. Затем недопустимые данные отображаются на странице или в базе данных или вставленный скрипт. Обзор возможных рисков, связанных с импортом файлов описания и способов устранения этих рисков см. в разделе [Защита страниц веб-частей](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual System.Web.UI.WebControls.WebParts.WebPart ImportWebPart (System.Xml.XmlReader reader, out string errorMessage);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: "<xref:System.Xml.XmlReader>, Считывает данные состояния и свойств из XML-файла описания импортируемым.</xref:System.Xml.XmlReader>"
    - id: errorMessage
      type: System.String
      description: "Объект <xref:System.String>отображается для пользователя, если возникает ошибка во время импорта.</xref:System.String>"
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (или серверный элемент управления, который является оболочкой для <xref href=&quot;System.Web.UI.WebControls.WebParts.GenericWebPart&quot;> </xref> и поэтому рассматривается как <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref>), на которые ссылается импортированные XML-файла описания."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.EndOfStreamException
    commentId: T:System.IO.EndOfStreamException
    description: "<code>reader</code> could not read the file.  \n  \n \\- or -  \n  \n <code>reader</code> needed to display an import error message but did not find one in the file.  \n  \n \\- or -  \n  \n <code>reader</code> reached the end of the file without finding the XML element that contains the exported data."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  id: Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ссылку на <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref> класс, который используется для объединения и разделения набор методов, реализованных в действительности <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> класса, но наиболее полезны для разработчиков элементов управления."
  remarks: "Свойство внутренние компоненты предоставляет API для вызова в набор <xref:System.Web.UI.WebControls.WebParts.WebPartManager>методы, используемые в основном в случаях расширяемости.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Спроектированный способ использования этих внутренних методов заключается в том, для доступа к ним через свойство внутренние компоненты. Так как свойство защищен, могут только доступ к нему и вызывать методы в экземпляр <xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>класса путем наследования от <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класса.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManagerInternals>      Настроек [!NOTE] настроек это свойство скрыто из IntelliSense в [!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)]. Однако в производном <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класса, по-прежнему доступны свойства и его различных элементов.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: protected System.Web.UI.WebControls.WebParts.WebPartManagerInternals Internals { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>, через который <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> могут ссылаться на различные методы, которые были разделены на <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManagerInternals&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  id: IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Выполняет начальные действия для определения, разрешен ли элемент управления добавлен на страницу."
  remarks: "Метод IsAuthorized является исходный метод вызывается элементом управления веб-частей, которые заданы для проверки авторизации для <xref:System.Web.UI.WebControls.WebParts.WebPart>управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> Он принимает `webPart` как параметр и начинает процесс, который определяет, будет ли элемент управления быть добавлен на страницу. Этот метод в коде непосредственно при необходимо определить, авторизован ли данный элемент управления.       Этот метод выполняет задачи начальной определения того, является ли элемент управления наследуется от <xref:System.Web.UI.WebControls.WebParts.WebPart>класса или является <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>управления, и если да, какой тип дочернего элемента управления, он содержит.</xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Для выполнения задач авторизации, он вызывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>перегрузки метода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>"
  example:
  - "The following code example demonstrates how to call the IsAuthorized method from your code to determine whether a control is authorized to be added to a page.  \n  \n The code example has three parts:  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the IsAuthorized method.  \n  \n-   A Web page that creates a filter for a <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   An explanation of how to run the code example.  \n  \n This code example uses a custom <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control that overrides the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> overload method to provide custom handling of the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property. This control checks for a property value of `admin` and, if the value is present, authorizes the control. If a control has a different value, it is not authorized; controls without the property value are authorized as well, as they are presumed not to be part of the filtering scenario.  \n  \n For this code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_1.vb)]  \n  \n The second part of the code example creates a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer. Notice also that in the `Page_Load` method, the code calls the IsAuthorized method to determine whether each of the controls is authorized, and if so, it sets each control's <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/9c13e351-e761-4514-8860-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/9c13e351-e761-4514-8860-_2.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because it is excluded by the filter. The third control is also added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. Notice that if you click the verbs menu icon in the title bar of either control, they can both be exported because their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> property values were assigned."
  syntax:
    content: public bool IsAuthorized (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или другого серверного элемента управления, проверяются на наличие авторизации."
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, является ли <code> webPart </code> можно добавить на страницу."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  id: IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Выполняет заключительные действия для определения, разрешен ли элемент управления добавлен на страницу."
  remarks: "Перегруженный метод IsAuthorized выполняет заключительные действия для определения, разрешен ли элемент управления добавлен на страницу. Метод гарантирует, что `type` является допустимым типом, и что `path` имеет значение, только если проверяемых элемент управления пользовательского элемента управления. Затем он вызывает критически важные <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>метод, который вызывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart%2A>"
  example:
  - "The following code example demonstrates how to override the IsAuthorized method to determine whether a control is authorized to be added to a page.  \n  \n The first step is to create a filter that can potentially exclude a control. The following Web page contains three ASP.NET server controls in an `<asp:webpartzone>` element. Notice that the first and second controls have their <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> properties set to different values, and the third does not assign the property. This authorization value can be checked at run time, and the control can be added to the page if the filter matches criteria set by the developer.  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#1](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_1.aspx)]  \n  \n The second step is to override the IsAuthorized method, and create custom handling for authorization filters. Note that the code first checks whether the property has a value, so that any control that does not assign the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property will be added automatically. If a control has a filter, the code returns `true` only if the filter value is equal to `admin`. This demonstrates a simple mechanism you can use for displaying certain controls to certain users, depending on their role. While a full example using roles is beyond the scope of this topic, you could use the same logic as the overridden method in this code example, except that you could check whether the current user is in a role that matches the authorization filter value, and then add the control only for that user. This would enable you to create pages where some users would see all the controls, and other users would see only selected controls. This is how the logic that checks the filter might look if you used roles:  \n  \n [Visual Basic]  \n  \n```  \nIf Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter) Then  \n  return True  \nElse  \n  return False  \nEnd If  \n```  \n  \n [C#]  \n  \n```  \nif(Roles.IsUserInRole(Page.User.Identity.Name, authorizationFilter))  \n    return true;  \nelse  \n    return false;  \n```  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the dynamic compile method. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/csharp/c3cfcde3-abf1-45f3-ace8-_2.cs)]\n [!code-vb[WebParts_WebPartManager_IsAuthorized#2](~/add/codesnippet/visualbasic/c3cfcde3-abf1-45f3-ace8-_2.vb)]  \n  \n After you load the page in a browser, note that the first control is displayed, because it matches the criteria in the overridden method. The second control is not added to the page, because its filter value is excluded. The third control is added, because it does not have its <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property set. If you change the property value on the second control to match that of the first control, and then run the page again, the second control is added as well."
  syntax:
    content: public virtual bool IsAuthorized (Type type, string path, string authorizationFilter, bool isShared);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Элемента управления, для которого проверяется авторизация.</xref:System.Type>"
    - id: path
      type: System.String
      description: "Путь к файлу исходного кода для элемента управления, авторизован, если элемент управления пользовательского элемента управления относительно приложения."
    - id: authorizationFilter
      type: System.String
      description: "Произвольное строковое значение, присвоенное <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>свойство <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элемента управления, используемый для авторизации, является ли элемент управления можно добавить на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter*>"
    - id: isShared
      type: System.Boolean
      description: "Указывает, является ли элемент управления, для которого проверяется авторизация общего элемента управления, это означает, что он является видимым для многих или всех пользователей этого приложения и его <xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>имеет значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebParts.WebPart.IsShared*>"
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, разрешено ли элемент управления добавлен на страницу."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>type</code> is a user control, and <code>path</code> is either <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref> or an empty string (\"\").  \n  \n \\- or -  \n  \n <code>type</code> is not a user control, and <code>path</code> has a value assigned to it."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  id: IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Получает значение, указывающее, были ли внесены изменения в персонализацию, влияющих на сведения о персонализации на уровне страницы, управляются <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Управления использует свойство IsCustomPersonalizationStateDirty внутренне для отслеживания ли какая-либо Персонализация на уровне страницы, изменения данных, который им управляет.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Данные персонализации изменяются, если пользователи выполняют определенные действия персонализации на уровне страницы, такие как добавление или удаление <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления, подключение или отключение элементов управления, изменение макета страницы путем перемещения элементов управления и других действий.</xref:System.Web.UI.WebControls.WebParts.WebPart>      Настроек [!NOTE] настроек пользователи также могут выполнять персонализацию на уровне управления, это означает, что внесение изменений персонализации для определенного элемента управления, и эти изменения влияют на этот элемент управления. Пример следует изменять элемент управления и изменение его текста заголовка или цвета фона. Персонализация на уровне элемента управления не влияет на данные персонализации страницам, отслеживается <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемента управления, и поэтому значение свойства IsCustomPersonalizationStateDirty не изменяется на `true` при возникновении управления персонализации.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Несмотря на то, что метод является защищенным и не доступны непосредственно для вызывающего объекта, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>свойство можно получить доступ напрямую вызывающие объекты, и возвращает значение этого свойства.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>"
  syntax:
    content: protected virtual bool IsCustomPersonalizationStateDirty { get; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, были ли внесены изменения персонализации. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Загружает данные состояния элемента управления, который был сохранен из предыдущего запроса страницы и должны быть восстановлены в последующем запросе."
  remarks: "LoadControlState, метод полезен для восстановления данных свойств, которые должны сохраняться во время обратной передачи страницы, даже если <xref:System.Web.UI.Control.EnableViewState%2A>свойству `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Содержит данные для загрузки сохраненного состояния."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>savedState</code>не является допустимым <xref:System.Web.UI.PageStatePersister.ControlState*>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Сохраняет данные пользовательской персонализации, которые были переданы <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления объектами персонализации использоваться позже в процессе инициализации."
  remarks: "Метод LoadCustomPersonalizationState предоставляет сохраненное состояние данных в виде <xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary>объекта.</xref:System.Web.UI.WebControls.WebParts.PersonalizationDictionary> Эти данные в конце концов используется для загрузки данных персонализации в элементы управления веб-частей и выполнить другие задачи инициализации.      Настроек [!NOTE] настроек данный метод вызывается с помощью последовательности из методов, начинается при <xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>метод изначально запрашивает связанного <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>объект для предоставления данных персонализации <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState%2A>       Этот метод невозможно вызвать непосредственно из программного кода. Можно Однако непосредственно вызвать <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>метод, который в свою очередь, вызывает метод LoadCustomPersonalizationState и возвращает данные персонализации.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Load%2A>"
  syntax:
    content: protected virtual void LoadCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> , содержащий данные о состоянии для загрузки."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  id: MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает <xref href=&quot;System.Security.PermissionSet&quot;> </xref> объект, который допускает только <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> разрешений и <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> разрешение."
  remarks: "<xref:System.Security.PermissionSet>Объект, возвращаемый этим свойством, используется для десериализации типа во время импорта.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MediumPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Объект <xref href=&quot;System.Security.PermissionSet&quot;> </xref> объект, который допускает только <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> разрешений и <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> разрешение."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  id: MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает <xref href=&quot;System.Security.PermissionSet&quot;> </xref> объект, который допускает только <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> разрешений и <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> разрешение."
  remarks: "<xref:System.Security.PermissionSet>Объект, возвращаемый этим свойством, используется во время импорта для всех типов десериализации, за исключением.</xref:System.Security.PermissionSet>"
  syntax:
    content: protected virtual System.Security.PermissionSet MinimalPermissionSet { get; }
    return:
      type: System.Security.PermissionSet
      description: "Возвращает <xref href=&quot;System.Security.PermissionSet&quot;> </xref> объект, который допускает только <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> разрешений и <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> разрешение."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  id: MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Перемещает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления из одного <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны в другую или в новое положение в той же зоны."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Управления использует метод MoveWebPart для перемещения `webPart` на новое место в той же зоны или в другую зону.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Этот метод можно вызывать непосредственно из кода, а также он вызывается, когда пользователь перемещает элемент управления на новое место с помощью различных параметров в пользовательском интерфейсе (UI) веб-частей.       Количество условий, которые должны быть выполнены перед `webPart` можно переместить, и большинство из них определяется элементов, перечисленных в раздел &quot;исключения&quot; этого раздела. Если `webPart` не содержалась в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны начинается с ее нельзя переместить в зону.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Происходит после условия выполнены, следующую последовательность действий для перемещения `webPart`: 1.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>Вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>      2.  `webPart`удаляется из текущей зоны (при необходимости) и добавить новую зону или в новое положение в текущей зоны.      3.  <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>Вызывает метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>      4.  `zoneIndex` Из каждого <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления в источнике и целевой зоны сбрасывается в соответствии с перемещенного элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to call the MoveWebPart method directly from code to move a <xref:System.Web.UI.WebControls.WebParts.WebPart> control from one zone to another.  \n  \n The code example has three parts:  \n  \n-   A user control for changing display modes.  \n  \n-   A Web page to host the controls.  \n  \n-   An explanation of how to run the code example.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For more information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is a Web page that contains two zones, each of which contains two server controls. When a user clicks the **Move WebPart** button on the page, the code in the `Button1_Click` method moves a control from the first zone to a new position in the second zone. Notice that the code first must call the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart%2A> method to retrieve the <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object that wraps the `list1` control. This is required because the first parameter of the MoveWebPart method requires a <xref:System.Web.UI.WebControls.WebParts.WebPart> control, whereas `list1` is an ASP.NET server control.  \n  \n [!code-cs[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/csharp/49caf3f6-e63d-4133-bdf2-_1.aspx)]\n [!code-vb[WebParts_WebPartManager_MoveWebPart#1](~/add/codesnippet/visualbasic/49caf3f6-e63d-4133-bdf2-_1.aspx)]  \n  \n After the page loads, click the **Move WebPart** button, and note that the control that contains the links moves into the middle position in the second zone. This movement of the control is accomplished programmatically by calling the MoveWebPart method. You can also use the **Display Mode** drop-down list control to switch the page to design mode, and in design mode, you can drag the controls to different zones or different positions within their zones. The MoveWebPart method is also called by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control to handle such user-initiated moves."
  syntax:
    content: public virtual void MoveWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart, System.Web.UI.WebControls.WebParts.WebPartZoneBase zone, int zoneIndex);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "<xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> Или другого серверного элемента управления перемещается."
    - id: zone
      type: System.Web.UI.WebControls.WebParts.WebPartZoneBase
      description: "Целевой объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> к которому `webPart` перемещается."
    - id: zoneIndex
      type: System.Int32
      description: "Целое число, указывающее индекс `webPart` относительно других элементов в пределах `zone`."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>webPart</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Controls*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n <code>zone</code> is not contained in the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.Zones*> collection of the <xref href=\"System.Web.UI.WebControls.WebParts.WebPartManager\"></xref> control.  \n  \n \\- or -  \n  \n The zone referenced by the <code>webPart</code> control's <xref:System.Web.UI.WebControls.WebParts.WebPart.Zone*> property is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>, which means that <code>webPart</code> is not currently contained in a zone."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>webPart</code>or <code>zone</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>zoneIndex</code>меньше нуля."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  id: OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart&quot;> </xref> событий и вызывает обработчик для события, если он существует."
  remarks: "Метод OnAuthorizeWebPart вызывается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>метод, когда <xref:System.Web.UI.WebControls.WebParts.WebPart>управления выполняется проверка на наличие авторизации должны быть добавлены на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> При вызове метода OnAuthorizeWebPart, он выдает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>события, и если имеется метод обработчика для события, он вызывает обработчик.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>       Процесс авторизации <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления является важной функцией веб-частей.</xref:System.Web.UI.WebControls.WebParts.WebPart> Каждый <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверный элемент управления, который добавляется в зону, <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления проходит через процесс авторизации для определения добавления элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPart> По умолчанию в наборе элементов управления веб-частей не предоставляет критериям фильтрации для предотвращения добавления в зону элементов управления. Однако в наборе элементов управления предоставляют механизмы, необходимые разработчикам для создания собственных критериев фильтрации. С помощью этих механизмов можно создать пользовательские скрипты фильтрации. Например можно создать фильтр, чтобы, если пользователь входит в роль администратора, некоторые элементы управления добавляется в зону при отображении страницы, а также если пользователь входит в роль пользователя, не следует добавить эти элементы управления.       Средства для фильтрации элементов управления в процессе авторизации <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>свойство <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>и методы OnAuthorizeWebPart и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>события <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Чтобы создать сценарий фильтрации, существует две задачи. Во-первых, назначить строки для <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>свойства каждого <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления, который необходимо отфильтровать.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Эти строковые значения, может быть произвольным, но они должны содержать условие, по которому нужно выполнить фильтрацию по. Например, если требуется, чтобы данный элемент управления для добавления зоны, только если администратор при просмотре страницы, то можно назначить строковое значение `admin` к свойству. Затем может использовать функциональные возможности ролей ASP.NET и добавить всех пользователей веб-узла для различных ролей, таких как администратор, диспетчер и пользователя. Во время загрузки страницы фильтрации кода следует проверить, какую роль у пользователя в, сравните их со значением фильтра авторизации для элемента управления и если, к примеру, пользователь с ролью администратора и элемента управления было задано <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>значение `admin`, элемент управления может быть добавлен.</xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>       Вторым шагом в создании сценария фильтрации заключается в написании кода для проверки <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A>значения свойств на <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов, а также определить, авторизован ли каждый элемент управления, перед добавлением его зону.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> Существует два варианта для размещения этого кода фильтрации. Первый вариант является предпочтительным для разработчиков страниц. Можно создать метод для обработки <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart>событие непосредственно в коде сценария сервера веб-странице или в файле разделение кода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> При связывании методов с событием, добавив `OnAuthorizeWebPart` в тег для <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления на странице, как показано в следующем образце кода разметки.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      ```   <asp:webpartmanager id=&quot;manager1&quot; runat=&quot;server&quot;       OnAuthorizeWebPart=&quot;manager1_AuthorizeWebPart&quot; />   ```Пользовательский метод должна быть выполнена всего проверку каждого <xref:System.Web.UI.WebControls.WebParts.WebPart>управления в критериях фильтрации, а затем, основываясь на результатах назначить логическое значение, <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A>свойство <xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs>объекте, чтобы указать ли <xref:System.Web.UI.WebControls.WebParts.WebPart>можно добавить элемент управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs> </xref:System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> В следующем примере кода показано, как это сделать.       Второй параметр для фильтрации кода размещения должен наследовать <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класса и переопределить метод для проверки условия фильтра.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Два метода, можно переопределить для этого <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>метод или метод OnAuthorizeWebPart.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> Несмотря на то, что оба этих метода будут работать, в большинстве случаев лучше переопределить <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>метода, так как он предоставляет больший программный контроль над процесс авторизации целиком, в то время как метод OnAuthorizeWebPart не только одна специальная задача, используемого для вызова события и проверьте обработчика.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> Пример кода настраиваемого <xref:System.Web.UI.WebControls.WebParts.WebPartManager>класс, который переопределяет <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A>метода, см. <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName>перегрузка метода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%28System.Type%2CSystem.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to set a custom event handler for the <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart> event, so that the handler can provide custom filtering code for the OnAuthorizeWebPart method. This example would be a typical way for a page developer to provide a filtering scenario and authorization of <xref:System.Web.UI.WebControls.WebParts.WebPart> controls to be added to a page.  \n  \n In the Web page, notice that the `<asp:webpartmanager>` element has the `OnAuthorizeWebPart` attribute with the name of the event handler assigned to it. The method checks whether the controls on the page have their respective <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property values set to `admin` and, if so, returns `true`, which means that they will be authorized and added to the page.  \n  \n> [!NOTE]\n>  Note that controls that do not have any value assigned to the <xref:System.Web.UI.WebControls.WebParts.WebPart.AuthorizationFilter%2A> property are added as well, because they are assumed not to be part of a filtering scenario. This would be a common approach in a filtering scenario: some controls would be filtered, and others would not be, because they are presumed to be available for all users.  \n  \n [!code-vb[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/visualbasic/fb74240d-1119-4128-abbc-_1.aspx)]\n [!code-cs[WebParts_WebPartManager_AuthorizeWebPart#1](~/add/codesnippet/csharp/fb74240d-1119-4128-abbc-_1.aspx)]  \n  \n Because setting up users in roles is beyond the scope of this topic, this code example does not check user roles in the filtering. However, the scenario of filtering controls according to user roles is likely to be one of the most common uses of this filtering feature. If you have roles on your site, and you want to check user roles in this method to filter controls, the method would resemble the following code block (versus the simpler approach in the preceding code example, which does not use roles).  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub WebPartManager1_AuthorizeWebPart(ByVal sender _  \n  As Object, ByVal e As WebPartAuthorizationEventArgs)  \n  \n  If String.IsNullOrEmpty(e.AuthorizationFilter) Then  \n    If Roles.IsUserInRole(Page.User.Identity.Name, _  \n      e.AuthorizationFilter) Then  \n  \n      e.IsAuthorized = True  \n    Else  \n      e.IsAuthorized = False  \n    End If  \n  End If  \n  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void mgr1_AuthorizeWebPart(object sender,   \n  WebPartAuthorizationEventArgs e)  \n{  \n  if (!String.IsNullOrEmpty(e.AuthorizationFilter))  \n  {  \n    if(Roles.IsUserInRole(Page.User.Identity.Name, e.authorizationFilter))  \n      e.IsAuthorized = true;  \n    else  \n      e.IsAuthorized = false;  \n  }  \n}  \n```"
  syntax:
    content: protected virtual void OnAuthorizeWebPart (System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  id: OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated&quot;> </xref> событие, чтобы указать, что страница и ее элементы управления загружаются и активации подключений на странице для начала обмена данными."
  remarks: "Вызывает метод OnConnectionsActivated <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated>событий после завершения процесса загрузки страницы.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated> Метод предоставляет способ добавления обработчика для события.       Разработчики страниц можно добавить пользовательский обработчик для события, добавив `OnConnectionsActivated` атрибут `<asp:webpartmanager>` элемент на странице и последующим назначением атрибуту имени пользовательского метода."
  syntax:
    content: protected virtual void OnConnectionsActivated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  id: OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating&quot;> </xref> событие, указывающее, что загрузили страницы и ее элементов управления, и можно начать процесс активации подключений."
  remarks: "Вызывает метод OnConnectionsActivating <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>событие, которое предоставляет разработчикам механизм для настройки процесса активации подключений программным путем.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating>       Разработчики страниц можно добавить пользовательский обработчик для события, добавив `OnConnectionsActivating` атрибут `<asp:webpartmanager>` элемент на странице и последующим назначением атрибуту имени пользовательского метода."
  syntax:
    content: protected virtual void OnConnectionsActivating (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  id: OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged&quot;> </xref> событий, чтобы указать, что <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления завершил процесс переключения из режима отображения одного в другой веб-страницы."
  remarks: "Метод OnDisplayModeChanged в своей основе форме просто вызывает исключение <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged>"
  syntax:
    content: protected virtual void OnDisplayModeChanged (System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs&quot;> </xref> , содержащий данные события, связанные с режимом измененные отображения."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  id: OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging&quot;> </xref> событий, чтобы указать, что <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления находится в процессе переключения из режима отображения одного в другой веб-страницы."
  remarks: "Метод OnDisplayModeChanging в своей основе форме просто вызывает исключение <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging>"
  syntax:
    content: protected virtual void OnDisplayModeChanging (System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события, связанные с изменением режима отображения.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> событие, которое является первым событием в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> жизненного цикла."
  remarks: "Метод OnInit вызывает базовый метод, который вызывает <xref:System.Web.UI.Control.Init>событий для элемента управления, а затем выполняет подготовительных действий, например убедиться, что имеется только один экземпляр <xref:System.Web.UI.WebControls.WebParts.WebPartManager>на странице и загрузки данных персонализации.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.Init>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Выполняется другая <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления на странице"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> событие, которое возникает непосредственно перед <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> элемент управления отрисовывается, на веб-странице."
  remarks: "Метод OnPreRender вызывает базовый метод, который вызывает <xref:System.Web.UI.Control.PreRender>событий для элемента управления, а затем регистрирует управляет несколько клиентских скриптов, необходимых на страницах, содержащих веб-частей.</xref:System.Web.UI.Control.PreRender>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "<xref:System.EventArgs>, Содержащий данные события.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged&quot;> </xref> событие, возникающее после <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления либо был только что выбран или выполнение очистки выбранный для него."
  remarks: "Вызывает метод OnSelectedWebPartChanged <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>событие, которое обычно является точкой времени, когда разработчик может потребоваться изменить внешний вид пользовательского интерфейса (UI).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Например, при создании нового <xref:System.Web.UI.WebControls.WebParts.WebPart>управления установлен, установить элемент управления веб-частей, изменения для подготовки к просмотру вновь выбранный элемент управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> После отмены выбора элемента управления отрисовка возвращается в обычный режим.       Когда пользователь выбирает определенный <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления для редактирования, вызывается метод OnSelectedWebPartChanged.</xref:System.Web.UI.WebControls.WebParts.WebPart> Когда пользователь заканчивает редактирование элемента управления и закрывает его, с результатом, снять Выбор элемента управления, повторно вызывается метод OnSelectedWebPartChanged."
  syntax:
    content: protected virtual void OnSelectedWebPartChanged (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging&quot;> </xref> событие, возникающее во время изменения которого <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> выбранного элемента управления."
  remarks: "Вызывает метод OnSelectedWebPartChanging <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>событие, возникающее во время изменения которого <xref:System.Web.UI.WebControls.WebParts.WebPart>выбранного элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Управления использует этот метод и связанные события, для обеспечения возможности отменить процесс, в котором выбранного элемента управления изменяется.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Например, метод вызывается внутри <xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A>метода, а также в <xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A>метод предоставляет способ для отмены процесса.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing%2A> Если пользователь щелкает команду отмены в элемент управления, который редактируется, элемент управления теряет фокус и любого изменения не сохраняются, так как метод OnSelectedWebPartChanging дает возможность отменить внесения изменений.      Настроек [!NOTE] настроек точно так же метод вызывается во время работы методов, которые начинают и завершают процесс подключения <xref:System.Web.UI.WebControls.WebParts.WebPart>управления на другой элемент управления, для отмены этого процесса.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Разработчики страниц могут создать пользовательский обработчик для <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>событие, добавив `OnSelectedWebPartChanging` атрибут `<asp:webpartmanager>` элемент в разметке страницы декларативный и присвоения атрибуту имя пользовательского метода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>"
  syntax:
    content: protected virtual void OnSelectedWebPartChanging (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает базовый <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> событий и удаляет <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> экземпляра с веб-страницы."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Данные события, связанные с удалением элемента управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded&quot;> </xref> событие, возникающее после <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элемент управления добавлен на страницу."
  remarks: "Метод OnWebPartAdded вызывается в процессе добавления <xref:System.Web.UI.WebControls.WebParts.WebPart>управления (или другого серверного элемента управления, который добавляется <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны) на страницу.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Разработчики страниц могут создать пользовательский обработчик для <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>событие, добавив `OnWebPartAdded` атрибут `asp:webpartmanager>` элемента и присвоения атрибуту имени пользовательского метода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>"
  syntax:
    content: protected virtual void OnWebPartAdded (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  id: OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding&quot;> </xref> событие, возникающее во время добавления <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элемент управления (или сервера или пользователя) для <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны."
  remarks: "Вызывает метод OnWebPartAdding <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding>событие, указывающее, что элемент управления находится в процессе добавления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding> Этот метод также предоставляет возможность отмены процесса добавления. Если элемент управления успешно добавлен, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>событие соответствует.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Разработчики страниц могут предоставить пользовательский обработчик связанного события путем добавления `OnWebPartAdding` атрибут `<asp:webpartmanager>` элемента на веб-страницы, а затем добавляют имени пользовательского метода с атрибутом."
  syntax:
    content: protected virtual void OnWebPartAdding (System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed&quot;> </xref> события, чтобы сообщить, что элемент управления был удален из страницы."
  remarks: "Вызывает метод OnWebPartClosed <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>событий, чтобы указать, что <xref:System.Web.UI.WebControls.WebParts.WebPart>управления (или другого серверного или пользовательского элемента управления) был успешно закрыт на странице.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Чтобы закрыть <xref:System.Web.UI.WebControls.WebParts.WebPart>означает элемента управления удалить его со страницы, чтобы он не отображается, а также чтобы поместить его в специальном объекте хранения, который называется каталогом страницы.</xref:System.Web.UI.WebControls.WebParts.WebPart> Каталог страницы, который соответствует <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>управления, обслуживает ссылки на закрытое <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления для каждой страницы.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Если <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>на странице объявляется элемент управления <xref:System.Web.UI.WebControls.WebParts.CatalogZone>зоны, пользователи могут переключитесь в режим отображения каталога и добавьте на страницу, все элементы управления, которые ранее были закрыты.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       Метод OnWebPartClosed дает возможность разработчикам создавать пользовательские обработчики для <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed> Разработчики страниц можно добавить пользовательский обработчик для события, добавив `OnWebPartClosed` атрибут `<asp:webpartmanager>` элемент на странице и последующим назначением атрибуту имени пользовательского метода. Одна полезны, разработчик может выполнить в этом методе заключается в отображении местозаполнителя вместо закрытого элемента управления, завершить с всплывающей подсказки, которая оповещает пользователей о том, как добавить элемент управления на страницу."
  syntax:
    content: protected virtual void OnWebPartClosed (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing&quot;> </xref> событие, возникающее во время <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления, который удаляется из страницы."
  remarks: "Вызывает метод OnWebPartClosing <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>событие, указывающее, что элемент управления находится в процессе, закрывается или удалены из страницы.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing> Этот метод также предоставляет возможность отмены процесса закрытия. Если элемент успешно удален из страницы, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>событие соответствует.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Разработчики страниц могут предоставить пользовательский обработчик связанного события путем добавления `OnWebPartClosinging` атрибут `<asp:webpartmanager>` элемента на веб-страницы, а затем добавляют имени пользовательского метода с атрибутом."
  syntax:
    content: protected virtual void OnWebPartClosing (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted&quot;> </xref> событие, возникающее после <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления окончательно удалена со страницы."
  remarks: "Метод OnWebPartDeleted вызывается в процессе удаления <xref:System.Web.UI.WebControls.WebParts.WebPart>управления (или другого серверного элемента управления, который добавляется <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны) со страницы.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart>       Разработчики страниц могут создать пользовательский обработчик для <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>событие, добавив `OnWebPartDeleted` атрибут `asp:webpartmanager>` элемента и присвоения атрибуту имени пользовательского метода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>"
  syntax:
    content: protected virtual void OnWebPartDeleted (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  id: OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting&quot;> </xref> событие, которое указывает, что динамический <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления (или сервера или пользовательский элемент управления, содержащийся в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны) находится в процессе удаления."
  remarks: "Только динамические <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления могут быть удалены, а при удалении элемента управления экземпляр элемента управления окончательно удаляется со страницы и не могут быть восстановлены.</xref:System.Web.UI.WebControls.WebParts.WebPart> Динамические <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, которые были добавлены программно или из каталога веб-частей, в отличие от статических элементов управления, которые были объявлены в разметке веб-страницы.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Вызывает метод OnWebPartDeleting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting>событие, указывающее, что элемент управления безвозвратно удаляется из зоны.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting> Этот метод также предоставляет возможность отменить процесс удаления. Если элемент успешно удален из страницы, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>событие соответствует.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Разработчики страниц могут предоставить пользовательский обработчик связанного события путем добавления `OnWebPartDeleting` атрибут `<asp:webpartmanager>` элемента на веб-страницы, а затем добавляют имени пользовательского метода с атрибутом."
  syntax:
    content: protected virtual void OnWebPartDeleting (System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  id: OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved&quot;> </xref> событие, возникающее после <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления был перемещен в другое расположение на странице."
  remarks: "Вызывает метод OnWebPartMoved <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>событий в самом конце <xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A>метод, который обеспечивает завершение процесс перемещения элемента управления перед любой код в событии запустится обработчик.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>Событие возникает при перемещении элемента управления в пределах текущей зоны или в другую зону, а не важно, перемещение осуществляется программно или с пользователем, перетащив элемент управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Разработчики страниц могут создать пользовательский обработчик для <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>событие, добавив `OnWebPartMoved` атрибут `asp:webpartmanager>` элемента и присвоения атрибуту имени пользовательского метода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>"
  syntax:
    content: protected virtual void OnWebPartMoved (System.Web.UI.WebControls.WebParts.WebPartEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  id: OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving&quot;> </xref> событие, которое указывает, что <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или сервера или пользовательского элемента управления в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зона находится в процессе перемещения."
  remarks: "Вызывает метод OnWebPartMoving <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving>событие, возникающее при <xref:System.Web.UI.WebControls.WebParts.WebPart>или другого серверного элемента управления перемещен в зоне или в другую зону.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving> Этот метод также предоставляет возможность отмены процесса перемещения. Если перемещение успешно завершена, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>событие соответствует.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Разработчики страниц могут предоставить пользовательский обработчик связанного события путем добавления `OnWebPartMoving` атрибут `<asp:webpartmanager>` элемента на веб-страницы, а затем добавляют имени пользовательского метода с атрибутом."
  syntax:
    content: protected virtual void OnWebPartMoving (System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected&quot;> </xref> событие, возникающее после установки подключения между <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления."
  remarks: "Метод OnWebPartsConnected выдает соответствующего события в самом конце <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>метод, который обеспечивает завершение действия, необходимые для подключения двух элементов управления до выполнения кода в обработчик событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A>       Этот метод предоставляет программный контроль над процессом создания подключений и соответствующее событие является удобным моментом для обновления пользовательского интерфейса (UI), или уведомить пользователя, что соединение было установлено.       Разработчики страниц могут создать пользовательский обработчик для <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>событие, добавив `OnWebPartsConnected` атрибут `asp:webpartmanager>` элемента и присвоения атрибуту имени пользовательского метода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>"
  syntax:
    content: protected virtual void OnWebPartsConnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting&quot;> </xref> событие, возникающее во время установления соединения между двумя <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или сервером или пользовательской элементов управления, содержащихся в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны."
  remarks: "Вызывает метод OnWebPartsConnecting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting>событие, возникающее при попытке установить соединение двух элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting> Этот метод предоставляет возможность отмены попытки подключения. Если соединение установлено успешно, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>событие соответствует.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Разработчики страниц могут предоставить пользовательский обработчик связанного события путем добавления `OnWebPartsConnecting` атрибут `<asp:webpartmanager>` элемента на веб-страницы, а затем добавляют имени пользовательского метода с атрибутом."
  syntax:
    content: protected virtual void OnWebPartsConnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  id: OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected&quot;> </xref> событие, возникающее после соединения между <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> завершен элементов управления."
  remarks: "Метод OnWebPartsDisconnected выдает соответствующего события в самом конце <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>метод, который выполняет процесс завершения подключения между двумя элементами управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>       Этот метод предоставляет программный контроль над процессом разрыв соединения, и разработчики могут уведомить пользователя, внести изменения в пользовательский интерфейс (UI) или внести другие изменения в приложение.       Разработчики страниц могут создать пользовательский обработчик для <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>событие, добавив `OnWebPartsDisconnected` атрибут `asp:webpartmanager>` элемента и присвоения атрибуту имени пользовательского метода.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>"
  syntax:
    content: protected virtual void OnWebPartsDisconnected (System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  id: OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Вызывает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting&quot;> </xref> событие, которое указывает на два <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверного или пользовательского элемента управления в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны занимаемся разрыв соединения."
  remarks: "Вызывает метод OnWebPartsDisconnecting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting>событие, возникающее при двух элементов управления Разрыв соединения.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting> Этот метод предоставляет возможность отмены процесса отключения. Если подключение успешно удалено, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>событие соответствует.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Разработчики страниц могут предоставить пользовательский обработчик связанного события путем добавления `OnWebPartsDisconnecting` атрибут `<asp:webpartmanager>` элемента на веб-страницы, а затем добавляют имени пользовательского метода с атрибутом."
  syntax:
    content: protected virtual void OnWebPartsDisconnecting (System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  id: Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ссылку на объект, содержащий данные персонализации для веб-страницы."
  remarks: "Свойство персонализации предоставляет способ доступа к <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization>объект, связанный со страницей через <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization> С помощью этого свойства, доступны различные члены объекта, персонализацию. Например, можно использовать <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A>общий метод переключение область персонализации из области пользователя или наоборот.</xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> Также можно узнать текущую область персонализации страницы ли персонализация включена даже на странице, какой поставщик используется для данных персонализации и многое другое.       Обратите внимание, что данные ссылается свойство персонализации только данные персонализации страницам, отслеживаемой <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Данные персонализации элемента управления, такие как значения настраиваемых свойств <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления, не является частью свойства персонализации.</xref:System.Web.UI.WebControls.WebParts.WebPart>      Настроек [!NOTE] настроек Дополнительные сведения о персонализации веб-частей см. в разделе [Общие сведения о персонализации частей Web](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the Personalization property programmatically.  \n  \n The following Web page allows a user to enter edit mode to edit certain aspects of the <xref:System.Web.UI.WebControls.Calendar> control. The **Toggle Scope** button switches the page to user or shared personalization scope. The **Edit Mode** and **Browse Mode** buttons each switch the page into the appropriate display mode. Notice that in the `<script>` tag section of the file, two of the methods that handle events use the Personalization property to access useful members of the underlying object. Specifically, these methods use the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.ToggleScope%2A> method and the <xref:System.Web.UI.WebControls.WebParts.WebPartPersonalization.Scope%2A> property on the object accessed through the Personalization property.  \n  \n [!code-cs[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_970_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Personalization#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_970_1.aspx)]  \n  \n For the code example to run, you also must enable a user or users to personalize pages in shared scope. Add an entry to the Web.config file, within the `<system.web>` section, that looks like the following markup.  \n  \n```  \n<webParts>  \n  <personalization>  \n    <authorization>  \n      <allow  \n        users=\"[Replace the text and brackets with a user name or   \n           group.]\"  \n        roles=\"admin\"   \n        verbs=\"enterSharedScope\"  />  \n    </authorization>  \n  </personalization>  \n</webParts>   \n```  \n  \n After you load the page in a browser, click the **Toggle Scope** button, and notice that the page now says the scope is shared. Click **Edit Mode** to change the display mode, click the verbs menu on the visible control, and select **Edit** from the menu. Notice that the user interface (UI) for both editing controls appears. Now click **Browse Mode** to return to normal browsing. If the page says it is in shared scope, click **Toggle Scope** again to ensure the page is in user scope. Next, follow the same steps to edit the control again, but notice that now in the editing UI, the <xref:System.Web.UI.WebControls.WebParts.BehaviorEditorPart> control does not appear. That is because this control only works when the page is in shared personalization scope."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartPersonalization Personalization { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartPersonalization
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartPersonalization&quot;> </xref> , содержащий данные персонализации."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  id: RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Включает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления создать клиентский сценарий, используемый для различных функций персонализации, такие как перетаскивание <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления на веб-странице."
  syntax:
    content: protected virtual void RegisterClientScript ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Отключение <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> визуализации содержимого элемента управления."
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "<xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> , Получающий содержимое элемента управления, для записи на страницу."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Сохранение данных для среды <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления, чтобы можно было восстановить данные на будущих запросов к веб-странице, содержащей элемент управления."
  remarks: "SaveControlState, метод сохраняет данные о состоянии для свойств, которые должны сохраняться во время обратной передачи страницы, даже если <xref:System.Web.UI.Control.EnableViewState%2A>свойству `false`.</xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "<xref:System.Object>Для размещения элемента управления сохраненные данные состояния элемента.</xref:System.Object>"
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Сохраняет данные состояния пользовательской персонализации, обслуживается <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> таким образом, эти данные могут быть повторно загружены при перезагрузке страницы."
  remarks: "Метод SaveCustomPersonalizationState в процессе персонализации, важно, так как он включает настроенные пользователем параметры хранения для будущих сеансов браузера и посещает на страницу. Этот метод сохраняет данные состояния пользовательской персонализации, которые включают следующие: динамические <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверные элементы управления, которые были добавлены на страницу или удаляются из страницы; элементы управления, которые были перемещены на странице; и динамических подключений, которые были созданы или удалены.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Этот метод невозможно вызвать непосредственно из программного кода. Можно Однако, вызывать <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>метод, который в свою очередь вызывает этот метод для сохранения данных персонализации.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23Save%2A>"
  syntax:
    content: protected virtual void SaveCustomPersonalizationState (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> , содержащий данные о состоянии для загрузки."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  id: SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ссылку на <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или другого серверного элемента управления, выбранного в данный момент для редактирования или для создания соединения с другим элементом управления."
  remarks: "Свойство SelectedWebPart возвращает ссылку на <xref:System.Web.UI.WebControls.WebParts.WebPart>или другого серверного элемента управления, выбранного в данный момент для редактирования или для создания соединения с другим элементом управления.</xref:System.Web.UI.WebControls.WebParts.WebPart>       <xref:System.Web.UI.WebControls.WebParts.WebPartManager>Элемент управления предоставляет несколько полезных методов и событий для обработки процесс выбора элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging>Событие происходит сразу после выбранного элемента управления, но перед внесением изменений.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging> Для выполнения некоторых действий в элементе управления после его выбора, переопределение <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Например можно изменить внешний вид элемента управления, который выбран, но не изменилось, чтобы визуально подчеркнуть какой элемент управления выбран.       <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged>Событие происходит сразу после выбранного элемента управления был изменен.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged> Для выполнения некоторых действий в элементе управления после его изменения, переопределите <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPart SelectedWebPart { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления, который выбран в данный момент для редактирования или формирования подключения."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  id: SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после выбора одного <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> управления изменил и перемещен на другой элемент управления на веб-странице."
  remarks: "Это событие может использоваться в сочетании с <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A>метод, чтобы изменить пользовательский интерфейс (UI) выбранного элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged%2A> Например, если пользователь переключает страницу в режиме конструктора (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>) и затем выбирает <xref:System.Web.UI.WebControls.WebParts.WebPart>управления с целью перетаскивания его в новое положение, чаще всего изменяет отрисовку выбранного элемента управления, например, изменив цвет границы его или фон при его выборе.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode>      Настроек [!NOTE] настроек Дополнительные сведения о событиях см. в разделе [как: прием событий в приложениях Web Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler SelectedWebPartChanged;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  id: SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Во время изменения которого <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления выбран в данный момент на веб-странице."
  remarks: "Это событие может использоваться в сочетании с <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A> Разработчики страниц могут создать обработчик событий в своем коде, добавив `OnSelectedWebPartChanging` атрибут `<asp:webpartmanager>` элемент на страницы и значение атрибута имя пользовательский метод, обрабатывающий событие.       Это событие возникает во время запуска или завершения подключения между элементами управления, а также при запуске или завершении редактирования элемента управления. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging%2A>       Как правило при возникновении события SelectedWebPartChanging в результате действия пользователя, которое изменяет выбранный элемент управления позволяет отменить событие. Однако есть ситуации, в котором события не может быть отменено. Если <xref:System.Web.UI.WebControls.WebParts.WebPartZone>управления должен быть удален, <xref:System.Web.UI.WebControls.WebParts.WebPart>он содержит элементы управления должны быть закрыты все, в противном случае они будут потеряны.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> В этом случае <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления закрывается <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, не пользователем и его необходимо определить, какой элемент управления выбран в данный момент, а когда их изменять без прерывания, возможность, чтобы его можно завершить процесс очистки всех элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Таким образом изначально SelectedWebPartChanging метод не может быть отменено в этом сценарии. Связанные события, которые могут быть отменены, в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler SelectedWebPartChanging;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  id: SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Задает флаг, указывающий, что данные пользовательской персонализации для <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> элемент управления был изменен."
  remarks: "Метод SetPersonalizationDirty устанавливает флаг, который в конечном итоге приводит компоненты персонализации в наборе для сохранения данных персонализации обновленных элементов управления веб-частей. Дополнительные сведения об этих сценариях, которые могут вызвать изменения в данные персонализации, отслеживаемых <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A>свойство.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.System%23Web%23UI%23WebControls%23WebParts%23IPersonalizable%23IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Метод SetPersonalizationDirty не может вызываться напрямую из кода приложения и не может быть переопределен, поскольку он используется внутри элемента управления веб-частей заданы как часть персонализация веб-частей."
  syntax:
    content: protected void SetPersonalizationDirty ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  id: SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Наборы <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>значение свойства равно значению выбранного в данный момент <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*>"
  remarks: "Метод SetSelectedWebPart вызывается во время процессов, которые может начинаться или заканчиваться редактирования элемента управления, определяемое `webPart` параметр, а те, которые может начинаться или заканчиваться подключение, которое включает в себя `webPart`.       В начале процесса изменения и соединений `webPart` элемент управления, который был выбран для редактирования или для установки подключения.       В конце процессы изменения и соединений `null` передается методу SetSelectedWebPart, что приводит к снять выделение выбранного элемента управления."
  syntax:
    content: protected void SetSelectedWebPart (System.Web.UI.WebControls.WebParts.WebPart webPart);
    parameters:
    - id: webPart
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления, который был выбран."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает или задает пустая строка (&quot;»), чтобы обложки можно применять к <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  remarks: "SkinID свойство переопределяет унаследованный <xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName>свойство, чтобы предотвратить <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления, который является невидимом элементе управления, с помощью обложек.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName> Реализация этого свойства предотвращает назначение обложки, присваиваемого методом всегда возвращает пустую строку из `get` метод доступа и всегда выбрасывает исключение при попытке задать значение в `set` метода доступа."
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "Пустую строку, которая предотвращает <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления не назначен для обложки."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Выполнена попытка установить значение свойства."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  id: StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ссылку на коллекцию всех <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnection&quot;> </xref> объектов веб-страницы, которые определены как статические подключения."
  remarks: "Свойство StaticConnections используется <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления для отслеживания и управления всех статических подключений на странице.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Статические подключения, в отличие от динамического подключения, необходимо добавить на страницу каждый раз при отображении страницы.       Коллекция ссылается это свойство содержит все статические соединений, которые существуют на странице ли они программными средствами или указан с `<asp:webpartconnection>` элемент в разметке страницы."
  example:
  - "The following code example demonstrates programmatic use of the StaticConnections property.  \n  \n The code example has four parts:  \n  \n-   A user control that enables you to change display modes on a Web Parts page.  \n  \n-   A source code file that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls and a custom interface.  \n  \n-   A Web page that contains two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an `<asp:webpartmanager>` element.  \n  \n-   An explanation of how the example works in a browser.  \n  \n The following code contains only the Web page portion of the example. You will also need to obtain the first two parts of the example--the custom user control and the source code for the custom controls and interface--from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. That topic also explains your options for compiling the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls.  \n  \n The third part of the code example is the Web page. The declarative markup for the page contains `Register` directives for both the user control and the custom controls. There is an `<asp:webpartmanager>` element, an `<asp:webpartzone>` element to contain the custom controls, and an `<asp:connectionszone>` element. Notice that in the `Page_Load` method, the code checks to see whether a connection already exists and, if not, defines a provider, a consumer, and their respective connection points, and then adds a new connection to the set of static connections referenced by the StaticConnections property.  \n  \n [!code-cs[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_98_1.aspx)]\n [!code-vb[WebParts_WebPartManager_StaticConnections#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_98_1.aspx)]  \n  \n After you have loaded the Web page in a browser, click the **Display Mode** drop-down list control and select **Connect** to switch the page to connect mode. Connect mode uses the `<asp:connectionszone>` element to enable you to create connections between controls. In connect mode, click the downward arrow in the title bar of the **ZIP Code** control to activate its verbs menu, and then click **Connect**. After the connection user interface (UI) appears, notice that a connection has already been created by the code contained in the `Page_Load` method. If you return to this page in a later browser session, this static connection will already be established and will not need to be recreated each time the page loads."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartConnectionCollection StaticConnections { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartConnectionCollection&quot;> </xref> , содержащий статические связи на странице."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  id: SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает коллекцию только для чтения всех режимов отображения, которые доступны на определенной веб-страницы."
  remarks: "Свойство SupportedDisplayModes содержит только режимы отображения, которые фактически доступны на страницы, учитывая типы элементов управления зоны присутствуют на странице.      Настроек [!NOTE] настроек режимы отображения можно отключить, а также при отключении режима отображения, он не добавляется в коллекцию SupportedDisplayModes даже при наличии соответствующего типа зоны, поддерживающей этот режим для отображения на странице.       Режим просмотра и в режиме конструктора всегда поддерживаются. Режимы отображения, которые могут изменяться в — это изменение, каталога и режимов подключения. Каждый из этих режимов отображения связан определенный тип <xref:System.Web.UI.WebControls.WebParts.ToolZone>управления.</xref:System.Web.UI.WebControls.WebParts.ToolZone> Он является наличие этой специально типизированные зоны на веб-странице, выполнение определенного режима отображения для добавления в коллекцию, указываемый свойством SupportedDisplayModes. Например, если веб-страница содержит <xref:System.Web.UI.WebControls.WebParts.EditorZone>зоны, но не <xref:System.Web.UI.WebControls.WebParts.CatalogZone>зону, а затем изменить режим отображения является одним из поддерживаемых режимов на этой странице, но режим отображения каталога не поддерживается.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.EditorZone>      Настроек [!NOTE] настроек SupportedDisplayModes свойство отличается от <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>свойство, которое ссылается на коллекцию, содержащую все режимы отображения, которые доступны текущему <xref:System.Web.UI.WebControls.WebParts.WebPartManager>контролировать, даже те, которые не поддерживаются на определенной странице.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes%2A>"
  example:
  - "The following code example shows the programmatic use of the SupportedDisplayModes property. The code uses this property to populate the list with only the display modes available in the current Web page.  \n  \n There are three supported display modes on this page: browse, design, and edit. The first two are always available, and the edit mode is available in this code example because the page contains an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control. The catalog and connect display modes are not shown, because their corresponding zones are not on this page.  \n  \n [!code-vb[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_388_1.aspx)]\n [!code-cs[WebParts_WebPartManager_SupportedDisplayModes#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_388_1.aspx)]  \n  \n After you load the page in a browser, you can use the drop-down list control to switch the page from browse mode to design mode, and then to edit mode. In edit mode, you can click the drop-down verbs menu in the header of one of the server controls, and select **Edit** to edit the control."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection SupportedDisplayModes { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection&quot;> </xref> , содержащий набор <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDisplayMode&quot;> </xref> объектов, доступных на определенных веб-странице."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает значение, указывающее, управляется ли данные состояния пользовательской персонализации <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> элемент управления был изменен на веб-странице."
  remarks: "Свойство IPersonalizable.IsDirty предоставляет способ для вызывающих объектов определить ли персонализации состояния данных под управлением <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления был изменен.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Когда пользователи персонализировать сведения на уровне страницы, например, изменение макета страницы, создание или удаление подключений и добавление или удаление элементов управления, данные персонализации, которыми управляет <xref:System.Web.UI.WebControls.WebParts.WebPartManager>контроля изменений.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> Это сквозной метод, возвращающий значение защищенный вызывающим объектам <xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>Свойства, которое не может получить доступ напрямую вызывающие объекты.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty%2A>      Настроек [!NOTE] настроек IPersonalizable.IsDirty свойство указывает, является ли настраиваемых значений свойств или отдельные свойства, которые влияют на внешний вид отдельных <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, были изменены.</xref:System.Web.UI.WebControls.WebParts.WebPart> Персонализация на уровне элементов управления отслеживается отдельно для каждого элемента управления. Свойство IPersonalizable.IsDirty указывает только ли данные персонализации, на уровне страниц и управляется <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления был изменен.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       В следующем списке описаны некоторые распространенные экземпляров персонализации, приводящие к возвращаемое значение Свойство IPersonalizable.IsDirty `true`, означающее, <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления имеет некоторые данные персонализации измененные:-закрытие статический <xref:System.Web.UI.WebControls.WebParts.WebPart>(или сервера или пользователя) элемент управления на странице.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>      -Восстановление закрытых статический <xref:System.Web.UI.WebControls.WebParts.WebPart>из каталога страницы обратно на страницу элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Перемещение любого элемента управления в зоне или в другую зону.      — Добавление элемента управления из каталога <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверных элементов управления или программным путем добавления элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Создание соединения между двумя <xref:System.Web.UI.WebControls.WebParts.WebPart>управляет программно или с помощью пользовательского интерфейса (UI) подключения.</xref:System.Web.UI.WebControls.WebParts.WebPart>      -Удаление соединения между двумя <xref:System.Web.UI.WebControls.WebParts.WebPart>управляет программно или с помощью пользовательского интерфейса подключения.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Для доступа к этому значению свойства, необходимо привести <xref:System.Web.UI.WebControls.WebParts.WebPartManager>экземпляра элемента управления для <xref:System.Web.UI.WebControls.WebParts.IPersonalizable>интерфейса; можно затем прочитать <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A>значение свойства.</xref:System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty%2A> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates a simple usage of the IPersonalizable.IsDirty property, to indicate some common page personalization instances that cause a <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control's personalization data to change.  \n  \n The code example has four parts:  \n  \n-   A user control that allows you to change display modes on a page that contains Web Parts controls.  \n  \n-   A source file that contains the code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can be connected, and an interface.  \n  \n-   A Web page that hosts all the controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control for changing display modes. You can obtain the source code for the user control from the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> class overview. For information about display modes and how the user control works, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n The second part of the example is the source file with the custom controls and the interface. Notice that the `IZipCode` interface exposes one method, and that this method as implemented in the custom `ZipCodeWebPart` control serves as a callback method to enable `ZipCodeWebPart` to act as a provider in a connection scenario. The other control, `WeatherWebPart`, acts as the consumer control in a connection; it can consume the particular interface provided by `ZipCodeWebPart`. In a real application, `WeatherWebPart` could consume a personalized ZIP Code value from the provider, and then provide graphical weather information to users.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation; therefore, notice that the `Register` directive for this component at the top of the Web page contains only `TagPrefix` and `Namespace` attributes, without an `Assembly` attribute. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_1.cs)]\n [!code-vb[WebParts_WebPartManager_IsDirty#2](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_1.vb)]  \n  \n The third part of the code example is the Web page. Notice that it contains two <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zones, with the first one containing the two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. There is also a <xref:System.Web.UI.WebControls.WebParts.CatalogZone> zone, which contains a standard <xref:System.Web.UI.WebControls.Calendar> control that users can add to the page. The `<asp:connectionszone>` element provides a connection UI for users to create connections between controls. In the `Page_PreRender` method, notice that it checks to see whether the personalization data has changed and, if so, updates the text of `Label1`.  \n  \n [!code-cs[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/csharp/c24ecc1a-95a5-4007-8876-_2.aspx)]\n [!code-vb[WebParts_WebPartManager_IsDirty#1](~/add/codesnippet/visualbasic/c24ecc1a-95a5-4007-8876-_2.aspx)]  \n  \n After you load the page in a browser, try to create some of the scenarios listed in the Remarks section of this topic that will change the personalization data. As you make various changes, when a change involves one of the personalization scenarios tracked by the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control, the text of the `Label1` control is displayed to indicate that personalization data has changed. For example, you can:  \n  \n-   Create a connection between controls by clicking the **Connect WebPart Controls** button.  \n  \n-   Use the **Display Mode** drop-down list control to switch the page to catalog mode, and add the **My Calendar** control to the second <xref:System.Web.UI.WebControls.WebParts.WebPartZone> zone.  \n  \n-   Change the page back to browse mode, click on the verbs menu (shown with an arrow symbol in the title bar) for the **My Calendar** control, and select **Close** to close it and add it to the page catalog.  \n  \n-   Return the page to catalog mode, and add the **My Calendar** control back to the page.  \n  \n-   Use the **Display Mode** control to switch the page to design mode, and rearrange the layout of the controls by dragging one or more of them to another zone, or to a different position in the same zone."
  syntax:
    content: bool System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty { get; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, изменилось ли состояние данные персонализации."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ранее сохраненные данные состояния пользовательской персонализации, который должен быть загружен для <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  remarks: "Этот метод является реализацией <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName>метод, который предоставляет способ для управления веб-частей, задайте доступ непосредственно защищенный <xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Load%2A?displayProperty=fullName> При вызове этого метода он сохраняет пользовательские данные персонализации, который управляется <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления и который был ранее сохранен в долговременном хранилище данных для дальнейшего использования в процессе инициализации.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      Настроек [!NOTE] настроек в большинстве случаев код разработки страниц и элементов управления не требуется для вызова этого метода, так как он используется главным образом задать в качестве механизма для получения данных персонализации элемента управления веб-частей."
  syntax:
    content: void IPersonalizable.Load (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> , содержащий данные о состоянии для загрузки."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  id: System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  isEii: true
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Сохраняет данные состояния пользовательской персонализации, который управляется <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления."
  remarks: "Метод IPersonalizable.Save — это реализация <xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName>метода, который предоставляет способ для управления веб-частей, задайте доступ непосредственно защищенный <xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.IPersonalizable.Save%2A?displayProperty=fullName> При вызове этого метода он сохраняет все личные данные, которые управляются <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемента управления в хранилище постоянных данных, настроенного для приложения веб-частей.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>      Настроек [!NOTE] настроек в большинстве случаев код разработки страниц и элементов управления не требуется для вызова этого метода, так как он используется главным образом задать в качестве механизма для сохранения данных персонализации элемента управления веб-частей."
  syntax:
    content: void IPersonalizable.Save (System.Web.UI.WebControls.WebParts.PersonalizationDictionary state);
    parameters:
    - id: state
      type: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.PersonalizationDictionary&quot;> </xref> , содержащий данные о состоянии для сохранения."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Применяет данные состояния персонализации для <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления и вызывает базовый метод для включения отслеживания изменения данных состояния представления для элемента управления."
  remarks: "Изменения данных состояния представления, хранятся в <xref:System.Web.UI.StateBag>объекта и можно получить с помощью элемента управления <xref:System.Web.UI.Control.ViewState%2A>свойство.</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  id: Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает значение, которое позволяет им быть видимым."
  remarks: "<xref:System.Web.UI.WebControls.WebParts.WebPartManager>Управления переопределяет базовый <xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName>свойство всегда возвращает значение `true` для свойства Visible.</xref:System.Web.UI.Control.Visible%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Несмотря на то что <xref:System.Web.UI.WebControls.WebParts.WebPartManager>сам элемент управления не отображается, свойство Visible должно быть задано `true` , чтобы все дочерние элементы управления отображаются по умолчанию.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       При попытке задать значение свойства Visible, он всегда возникает ошибка, поскольку <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления переопределяет базовое свойство поведение и предотвращает присваивания любое значение свойству.</xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Это свойство не может быть связано в визуальных конструкторах, но может быть связано во время выполнения. Дополнительные сведения см. в разделе <xref:System.ComponentModel.BindableAttribute>.</xref:System.ComponentModel.BindableAttribute>"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, является ли <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> управления и его дочерние элементы являются видимыми. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>во всех случаях."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Была предпринята попытка присвоить значение свойству."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  id: WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после динамический <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или другого серверного элемента управления был добавлен к <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны, чтобы указать, что элемент управления был добавлен успешно."
  remarks: "Событие WebPartAdded полезно для указания, что динамический элемент управления (элемент управления добавлен программными средствами, в отличие от, объявляемых в разметке страницы) успешно добавлен в зону. В сочетании с <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>метода, это событие предоставляет разработчикам способ обновления пользовательского интерфейса (UI) или в противном случае уведомить пользователей, что элемент управления был успешно добавлен.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartAdded;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  id: WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Во время добавления динамического <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или другого серверного элемента управления для <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны."
  remarks: "Вызывает событие WebPartAdding <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A>метод после начала процесса добавления элемента управления в зону.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding%2A> Это событие предоставляет возможность отменить этот процесс до его завершения. Если добавление процесс прошел успешно, это событие сопровождается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded>       Разработчики страниц могут предоставлять пользовательские обработчики для события, добавив `OnWebPartAdding` атрибут `<asp:webpartmanager>` элемент на странице и присвоения атрибуту имени пользовательского метода."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler WebPartAdding;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  id: WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит, когда <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (или элемент управления сервером или пользовательской) удаляется со страницы."
  remarks: "Событие WebPartClosed указывает, что элемент управления был успешно закрыт, пользователем или программным путем. Чтобы закрыть <xref:System.Web.UI.WebControls.WebParts.WebPart>означает элемента управления удалить его со страницы, чтобы он не отображается, а также чтобы поместить его в специальном объекте хранения, который называется каталогом страницы.</xref:System.Web.UI.WebControls.WebParts.WebPart> Каталог страницы, который соответствует <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>управления, обслуживает ссылки на закрытое <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления для каждой страницы.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Если <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>на странице объявляется элемент управления <xref:System.Web.UI.WebControls.WebParts.CatalogZone>зоны, пользователи могут переключить страницу в режим отображения каталога и добавьте любые элементы управления, которые ранее были закрыты, обратно на страницу.</xref:System.Web.UI.WebControls.WebParts.CatalogZone> </xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>       Событие WebPartClosed связан с помощью <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>метода, который вызывает событие и предоставляет обработчик для него.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed%2A>       Разработчики страниц можно добавить пользовательский обработчик для события, добавив `OnWebPartClosed` атрибут `<asp:webpartmanager>` элемент на странице и последующим назначением атрибуту имени пользовательского метода."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartClosed;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  id: WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Во время удаления <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> (или сервера или пользователя) элемент управления со страницы."
  remarks: "Вызывает событие WebPartClosing <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A>метод при <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления находится в процессе закрытия элемента управления.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing%2A> При успешном удалении элемента управления это событие сопровождается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed>       Разработчики страниц могут предоставить пользовательский обработчик для события, добавив `OnWebPartClosed` атрибут `asp:webpartmanager>` элемент на странице и присвоения атрибуту имени пользовательского метода.       Как правило, при возникновении события WebPartClosing в результате закрытия пользователем <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления, это событие может быть отменено.</xref:System.Web.UI.WebControls.WebParts.WebPart> Однако есть ситуации, в котором события не может быть отменено. Если <xref:System.Web.UI.WebControls.WebParts.WebPartZone>управления должен быть удален, <xref:System.Web.UI.WebControls.WebParts.WebPart>он содержит элементы управления должны быть закрыты все, в противном случае они будут потеряны.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> В этом случае <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления закрывается <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, не пользователя.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> И когда <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления находится в процессе вызова <xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A>метод закрытия каждый элемент управления и вызывается событие WebPartClosing, событие не может быть отменено (так предусмотрено разработчиками), так как <xref:System.Web.UI.WebControls.WebParts.WebPartManager>необходимых для выполнения задач очистки элементов управления зоны.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartClosing;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  id: WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или другого серверного элемента управления был удален из <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны."
  remarks: "Событие WebPartDeleted полезно для указания, что динамический элемент управления (элемент управления добавлен программными средствами, в отличие от, объявляемых в разметке страницы) успешно удален из зоны. В сочетании с <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>метода, это событие предоставляет разработчикам способ обновления пользовательского интерфейса (UI) или в противном случае уведомить пользователей, что элемент управления был успешно удален.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartDeleted;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  id: WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возникает в процессе окончательного удаления экземпляра динамического <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или другого серверного элемента управления из <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны."
  remarks: "Вызывает событие WebPartDeleting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A>метод во время удаления динамического элемента управления (один, который был добавлен программными средствами или пользователем через пользовательский интерфейс веб-частей).</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting%2A> Это событие предоставляет возможность отменить процесс до его завершения. Если процесс удаления завершается успешно, это событие сопровождается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted>       Разработчики страниц могут предоставлять пользовательские обработчики для события, добавив `OnWebPartDeleting` атрибут `<asp:webpartmanager>` элемент на странице и присвоения атрибуту имени пользовательского метода."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler WebPartDeleting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  id: WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверный элемент управления был перемещен в другое расположение на веб-странице."
  remarks: "Это событие применяется к статическим (объявленным в разметке веб-страницы) и динамические элементы управления. Он связан, <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved%2A> Так как это событие возникает после перемещения, разработчики могут включать обработчик событий для предоставления уведомлений пользователям, некоторые проверки или других действий. Чтобы добавить обработчик событий, можно добавить `OnWebPartMoved` атрибут `<asp:webpartmanager>` элемента страницы, и назначьте имя используемой пользовательский метод с атрибутом."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartEventHandler WebPartMoved;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  id: WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Во время процесса перемещения <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или другого серверного элемента управления, содержащегося в <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны."
  remarks: "Событие WebPartMoving при <xref:System.Web.UI.WebControls.WebParts.WebPart>или другого серверного элемента управления перемещен в его собственной зоны или в другую зону.</xref:System.Web.UI.WebControls.WebParts.WebPart> Это может произойти, когда пользователь перетаскивает элемент управления и при отсутствии программным методом.       Вызывает событие WebPartMoving <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A>метода и предоставляет возможность отмены процесса перемещения до его завершения.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving%2A> Если для завершения перемещения и управления, размещаемым в новое положение, это событие сопровождается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved>       Разработчики страниц могут создать пользовательский обработчик для события, добавив `OnWebPartMoving` атрибут `<asp:webpartmanager>` элемента и присвоения атрибуту имени пользовательского метода."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler WebPartMoving;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  id: WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ссылку на все <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления под контролем <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartManager&quot;> </xref> на веб-странице."
  remarks: "Свойства веб-частей используется <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления для отслеживания всех <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, содержащихся в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны на странице.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Несмотря на то, что коллекция доступна только для чтения, можно открыть отдельных <xref:System.Web.UI.WebControls.WebParts.WebPart>элементы управления через коллекцию и внести изменения их программными средствами.</xref:System.Web.UI.WebControls.WebParts.WebPart>      Настроек [!NOTE] настроек можно иметь <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления, размещенные на странице за пределами <xref:System.Web.UI.WebControls.WebParts.WebPartZone>зоны, что позволяет использовать в элементе управления, не отслеживается <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления или ссылка в его коллекции веб-частей.</xref:System.Web.UI.WebControls.WebParts.WebPartManager> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Тем не менее, практически не существует причин для использования <xref:System.Web.UI.WebControls.WebParts.WebPart>управления за пределами зоны, так как он теряет его функциональность веб-частей и действует как обычный серверный элемент управления.</xref:System.Web.UI.WebControls.WebParts.WebPart>       Любой тип элемента управления, который можно поместить в зоне, является ли настраиваемый <xref:System.Web.UI.WebControls.WebParts.WebPart>управления, стандартный элемент управления, пользовательский элемент управления или серверного элемента управления, могут рассматриваться как <xref:System.Web.UI.WebControls.WebParts.WebPart>элемента управления во время выполнения.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Если элемент управления, не <xref:System.Web.UI.WebControls.WebParts.WebPart>элемент управления помещается в <xref:System.Web.UI.WebControls.WebParts.WebPartZone>зоны, во время выполнения ASP.NET создает оболочку для элемента управления с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart>объекта, чтобы элемент управления может действовать как с обычным <xref:System.Web.UI.WebControls.WebParts.WebPart>управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.GenericWebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPart> Таким образом с помощью свойства веб-частей, <xref:System.Web.UI.WebControls.WebParts.WebPartManager>элемент управления можно отслеживать любого типа серверного элемента управления, независимо от того, является ли он является производным от <xref:System.Web.UI.WebControls.WebParts.WebPart>класса.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  example:
  - "The following code example demonstrates how to use the WebParts property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPart> controls. Notice that in the declarative markup for the Web page, within the `<asp:webpartzone>` element there are two standard ASP.NET server controls. Although these do not inherit from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class, because they are in a zone they will be wrapped with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object at run time, and thus will be included in the collection referenced by the WebParts property. You could also add custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls, user controls, or custom server controls in this zone, and they would be handled the same way.  \n  \n [!code-vb[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_992_1.aspx)]\n [!code-cs[WebParts_WebPartManager_WebParts#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_992_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **WebPart Count** button, the code uses the WebParts property to return the count of controls in the collection. If you click the **Hide Calendar Title** button, the code changes the calendar so that it renders with only a border and not a title."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartCollection WebParts { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartCollection&quot;> </xref> , содержащий ссылки на набор <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  id: WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после установления подключения между <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементы управления (или элементов управления сервера или пользователя)."
  remarks: "Связанный с событием WebPartsConnected <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected%2A> Это событие полезно, так как после известно, что соединение установлено, может потребоваться информировать пользователей об этом или даже изменить пользовательский интерфейс (UI) страницы. Например может потребоваться отобразить графическое изображение, которое предлагает успешного подключения между двумя элементами управления, или отобразить краткое сообщение, а затем измените режим отображения страницы обратно в режим просмотра.       Разработчики страниц могут сопоставить пользовательский обработчик событий с этим событием, добавив `OnWebPartsConnected` атрибут `<asp:webpartmanager>` элемент на странице и присвоения атрибуту имени пользовательского метода."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsConnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  id: WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Во время создания соединения между <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> элементов управления (или элементы управления сервером или пользовательской поместить <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны)."
  remarks: "Вызывает событие WebPartsConnecting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A>метода, и сообщает о начале процесса подключения (например, пользователь выбранного элемента управления и щелкнул команду подключения), но еще не завершено.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting%2A> Это событие предоставляет возможность отменить соединение до его завершения. Если соединение успешно завершена, это событие сопровождается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected>       Разработчики страниц можно добавить пользовательский обработчик для события, добавив `OnWebPartsConnecting` атрибут `<asp:webpartmanager>` элемента и присвоения атрибуту имени пользовательского метода."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsConnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  id: WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Происходит после соединения между двумя <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или было прервано серверных элементов управления."
  remarks: "Связанный с событием WebPartsDisconnected <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A>метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected%2A> Это событие полезно, так как после известно, что соединение будет разорвано, может потребоваться информировать пользователей, выполнить некоторые действия по очистке в коде или внести другие изменения в пользовательском интерфейсе (UI).       Разработчики страниц могут сопоставить пользовательский обработчик событий с этим событием, добавив `OnWebPartsDisConnected` атрибут `<asp:webpartmanager>` элемент на странице и присвоения атрибуту имени пользовательского метода."
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler WebPartsDisconnected;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  id: WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Имеет место в процессе разрыв соединения между подключен <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> или серверных элементов управления."
  remarks: "Вызывает событие WebPartsDisconnecting <xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A>метод, который сигнализирует тот факт, пользователь щелкнул команду отключения, или <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A>в противном случае будет вызван метод.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting%2A> Это событие предоставляет возможность отменить разрыв соединения до его завершения. Если подключение завершается успешно, это событие сопровождается <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected>       Разработчики страниц можно добавить пользовательский обработчик для события, добавив `OnWebPartsDisconnecting` атрибут `<asp:webpartmanager>` элемента и присвоения атрибуту имени пользовательского метода.       Как правило при возникновении события WebPartsDisconnecting в результате действия пользователя, которое завершает соединение, позволяет отменить событие. Однако существует несколько сценариев, в которых события не может быть отменено. Первый сценарий относится, если <xref:System.Web.UI.WebControls.WebParts.WebPartZone>управления должен быть удален, <xref:System.Web.UI.WebControls.WebParts.WebPart>она содержит элементы управления должны быть закрыты все, в противном случае они будут потеряны.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartZone> В этом случае <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления закрывается <xref:System.Web.UI.WebControls.WebParts.WebPart>элементов управления, не пользователем и она также должны быть видимы для завершения подключения всех подключенных элементов управления, без прерывания, возможность, чтобы его можно завершить процесс очистки и закрытие всех элементов управления.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Таким образом изначально WebPartsDisconnecting метод не может быть отменено в этом сценарии. Связанные события, которые могут быть отменены, в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>событий.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing>       Второй сценарий, в котором невозможно отменить событие WebPartsDisconnecting — когда <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A>(это называется во время каждого запроса страницы, например) вызывается метод, и есть некоторые тип конфликта в существующих подключений на странице.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections%2A> Например предположим, пользователь подключает элемент управления x y элемента управления, но другой пользователь подключает элемент управления x к элементу управления z и еще управления x не разрешается создавать несколько подключений. В этом случае параметры отдельного пользователя для соединения имеют приоритет и <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления устраняет конфликт путем вызова <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>метод и завершение подключения между x и z для конкретного пользователя.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Так как это отключение важно для разрешения конфликта, намеренно WebPartsDisconnecting событий не может быть отменено в этом сценарии.       Третий сценарий, в котором не может быть отменено метод WebPartsDisconnecting — когда <xref:System.Web.UI.WebControls.WebParts.WebPart>или серверный элемент управления, который в настоящее время подключен удаляется или закрыт.</xref:System.Web.UI.WebControls.WebParts.WebPart> Так как элемент управления определенно будет удален со страницы, он является логическим действием будет удаление его подключения. Таким образом, если <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления вызывает <xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A>метод, который в свою очередь вызывает событие WebPartsDisconnecting, изначально отсутствует возможность отмены события.</xref:System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>"
  syntax:
    content: public event System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler WebPartsDisconnecting;
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  id: Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  langs:
  - csharp
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Возвращает ссылку на коллекцию всех <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны на веб-странице."
  remarks: "Свойство зоны используется <xref:System.Web.UI.WebControls.WebParts.WebPartManager>управления для отслеживания <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>зоны на веб-странице.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> </xref:System.Web.UI.WebControls.WebParts.WebPartManager> Обратите внимание, что свойство ссылки не все типы зон; он ссылается только зоны, которые являются производными от <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>класса, включая <xref:System.Web.UI.WebControls.WebParts.WebPartZone>зон.</xref:System.Web.UI.WebControls.WebParts.WebPartZone> </xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>       Несмотря на то, что коллекция ссылается это свойство доступно только для чтения, его можно использовать для доступа к отдельным объектам в коллекции и работать с ними программными средствами."
  example:
  - "The following code example demonstrates how to use the Zones property programmatically to access individual <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> zone controls. Notice that in the declarative markup for the Web page, there are two `<asp:webpartzone>` elements, each containing a server control. In the `<script>` section of the page, the code uses the Zones property to access the individual zones, listing all the zone IDs and then changing the background color on the second zone.  \n  \n [!code-cs[WebParts_WebPartManager_Zones#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_860_1.aspx)]\n [!code-vb[WebParts_WebPartManager_Zones#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_860_1.aspx)]  \n  \n Note that for the code example to work, you must add a setting in the Web.config file to enable exporting Web Parts description files. Ensure that you have a Web.config file in the same directory as the Web page for this code example. Within the `<system.web>` section, make sure there is a `<webParts>` element with an `enableExport` attribute set to `true`, as in the following markup.  \n  \n `<webParts enableExport=\"true\">`  \n  \n `...`  \n  \n `</webParts>`  \n  \n After you load the page into a browser, if you click the **List Zone IDs** button, the code uses the Zones property to list the IDs of all zones in the collection. If you click the **Change Zone BackColor** button, the code changes the background color of the second zone."
  syntax:
    content: public System.Web.UI.WebControls.WebParts.WebPartZoneCollection Zones { get; }
    return:
      type: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
      description: "Объект <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneCollection&quot;> </xref> , ссылается на набор <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartZoneBase&quot;> </xref> зоны."
  overload: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.IO.EndOfStreamException
  isExternal: true
  name: System.IO.EndOfStreamException
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager()
  nameWithType: WebPartManager.WebPartManager()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartManager()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections()
  nameWithType: WebPartManager.ActivateConnections()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneBase
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneBase
  nameWithType: WebPartZoneBase
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneBase
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AuthorizeWebPart
  nameWithType: WebPartManager.AuthorizeWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventHandler
  nameWithType: WebPartAuthorizationEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: TransformerTypeCollection
  nameWithType: TransformerTypeCollection
  fullName: System.Web.UI.WebControls.WebParts.TransformerTypeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting(WebPart)
  nameWithType: WebPartManager.BeginWebPartConnecting(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing(WebPart)
  nameWithType: WebPartManager.BeginWebPartEditing(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BrowseDisplayMode
  nameWithType: WebPartManager.BrowseDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.BrowseDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayMode
  nameWithType: WebPartDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPoint
  nameWithType: ProviderConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPoint
  nameWithType: ConsumerConnectionPoint
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartTransformer
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartTransformer
  nameWithType: WebPartTransformer
  fullName: System.Web.UI.WebControls.WebParts.WebPartTransformer
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CatalogDisplayMode
  nameWithType: WebPartManager.CatalogDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript()
  nameWithType: WebPartManager.CheckRenderClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart(WebPart)
  nameWithType: WebPartManager.CloseWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectDisplayMode
  nameWithType: WebPartManager.ConnectDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionCollection
  nameWithType: WebPartConnectionCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivated
  nameWithType: WebPartManager.ConnectionsActivated
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectionsActivating
  nameWithType: WebPartManager.ConnectionsActivating
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnection
  nameWithType: WebPartConnection
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ProviderConnectionPoint,System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint,System.Web.UI.WebControls.WebParts.WebPartTransformer)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  nameWithType: WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts(WebPart,ProviderConnectionPoint,WebPart,ConsumerConnectionPoint,WebPartTransformer)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart(WebPart)
  nameWithType: WebPartManager.CopyWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers()
  nameWithType: WebPartManager.CreateAvailableTransformers()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection()
  nameWithType: WebPartManager.CreateControlCollection()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes()
  nameWithType: WebPartManager.CreateDisplayModes()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes()
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCollection
  nameWithType: WebPartDisplayModeCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID()
  nameWithType: WebPartManager.CreateDynamicConnectionID()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(System.Type)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID(Type)
  nameWithType: WebPartManager.CreateDynamicWebPartID(Type)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart(String,String,String,String,String)
  nameWithType: WebPartManager.CreateErrorWebPart(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart(String,String,String,String,String)
- uid: System.Web.UI.WebControls.WebParts.ErrorWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ErrorWebPart
  nameWithType: ErrorWebPart
  fullName: System.Web.UI.WebControls.WebParts.ErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization()
  nameWithType: WebPartManager.CreatePersonalization()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization()
- uid: System.Web.UI.WebControls.WebParts.WebPartPersonalization
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartPersonalization
  nameWithType: WebPartPersonalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartPersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart(Control)
  nameWithType: WebPartManager.CreateWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.GenericWebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: GenericWebPart
  nameWithType: GenericWebPart
  fullName: System.Web.UI.WebControls.WebParts.GenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart(WebPart)
  nameWithType: WebPartManager.DeleteWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DesignDisplayMode
  nameWithType: WebPartManager.DesignDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DesignDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart(WebPart)
  nameWithType: WebPartManager.DisconnectWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(System.Web.UI.WebControls.WebParts.WebPartConnection)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts(WebPartConnection)
  nameWithType: WebPartManager.DisconnectWebParts(WebPartConnection)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts(WebPartConnection)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanged
  nameWithType: WebPartManager.DisplayModeChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventHandler
  nameWithType: WebPartDisplayModeEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModeChanging
  nameWithType: WebPartManager.DisplayModeChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventHandler
  nameWithType: WebPartDisplayModeCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EditDisplayMode
  nameWithType: WebPartManager.EditDisplayMode
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EditDisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting()
  nameWithType: WebPartManager.EndWebPartConnecting()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing()
  nameWithType: WebPartManager.EndWebPartEditing()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Xml.XmlWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart(WebPart,XmlWriter)
  nameWithType: WebPartManager.ExportWebPart(WebPart,XmlWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart(WebPart,XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus()
  nameWithType: WebPartManager.Focus()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Focus()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetConsumerConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ConsumerConnectionPointCollection
  nameWithType: ConsumerConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ConsumerConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(System.Web.UI.Page)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager(Page)
  nameWithType: WebPartManager.GetCurrentWebPartManager(Page)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager(Page)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle(WebPart)
  nameWithType: WebPartManager.GetDisplayTitle(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl(WebPart)
  nameWithType: WebPartManager.GetExportUrl(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart(Control)
  nameWithType: WebPartManager.GetGenericWebPart(Control)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart(Control)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints(WebPart)
  nameWithType: WebPartManager.GetProviderConnectionPoints(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints(WebPart)
- uid: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: ProviderConnectionPointCollection
  nameWithType: ProviderConnectionPointCollection
  fullName: System.Web.UI.WebControls.WebParts.ProviderConnectionPointCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(System.Xml.XmlReader,System.String@)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart(XmlReader,String)
  nameWithType: WebPartManager.ImportWebPart(XmlReader,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart(XmlReader,String)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: true
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartManagerInternals
  nameWithType: WebPartManagerInternals
  fullName: System.Web.UI.WebControls.WebParts.WebPartManagerInternals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(WebPart)
  nameWithType: WebPartManager.IsAuthorized(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(System.Type,System.String,System.String,System.Boolean)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized(Type,String,String,Boolean)
  nameWithType: WebPartManager.IsAuthorized(Type,String,String,Boolean)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized(Type,String,String,Boolean)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: WebPartManager.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: PersonalizationDictionary
  nameWithType: PersonalizationDictionary
  fullName: System.Web.UI.WebControls.WebParts.PersonalizationDictionary
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(System.Web.UI.WebControls.WebParts.WebPart,System.Web.UI.WebControls.WebParts.WebPartZoneBase,System.Int32)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart(WebPart,WebPartZoneBase,Int32)
  nameWithType: WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart(WebPart,WebPartZoneBase,Int32)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  nameWithType: WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart(WebPartAuthorizationEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAuthorizationEventArgs
  nameWithType: WebPartAuthorizationEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAuthorizationEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivated(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating(EventArgs)
  nameWithType: WebPartManager.OnConnectionsActivating(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged(WebPartDisplayModeEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeEventArgs
  nameWithType: WebPartDisplayModeEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  nameWithType: WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging(WebPartDisplayModeCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartDisplayModeCancelEventArgs
  nameWithType: WebPartDisplayModeCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartDisplayModeCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: WebPartManager.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: WebPartManager.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged(WebPartEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventArgs
  nameWithType: WebPartEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventArgs
  nameWithType: WebPartCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: WebPartManager.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartAdded(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding(WebPartAddingEventArgs)
  nameWithType: WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding(WebPartAddingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventArgs
  nameWithType: WebPartAddingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartClosed(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleted(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(System.Web.UI.WebControls.WebParts.WebPartCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting(WebPartCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting(WebPartCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(System.Web.UI.WebControls.WebParts.WebPartEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved(WebPartEventArgs)
  nameWithType: WebPartManager.OnWebPartMoved(WebPartEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved(WebPartEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving(WebPartMovingEventArgs)
  nameWithType: WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving(WebPartMovingEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventArgs
  nameWithType: WebPartMovingEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventArgs
  nameWithType: WebPartConnectionsEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventArgs
  nameWithType: WebPartConnectionsCancelEventArgs
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(System.Web.UI.WebControls.WebParts.WebPartConnectionsEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected(WebPartConnectionsEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventArgs)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  nameWithType: WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting(WebPartConnectionsCancelEventArgs)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript()
  nameWithType: WebPartManager.RegisterClientScript()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebPartManager.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState()
  nameWithType: WebPartManager.SaveControlState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState(PersonalizationDictionary)
  nameWithType: WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanged
  nameWithType: WebPartManager.SelectedWebPartChanged
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartEventHandler
  nameWithType: WebPartEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPartChanging
  nameWithType: WebPartManager.SelectedWebPartChanging
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCancelEventHandler
  nameWithType: WebPartCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty()
  nameWithType: WebPartManager.SetPersonalizationDirty()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart(WebPart)
  nameWithType: WebPartManager.SetSelectedWebPart(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save(System.Web.UI.WebControls.WebParts.PersonalizationDictionary)
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save(PersonalizationDictionary)
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState()
  nameWithType: WebPartManager.TrackViewState()
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState()
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdded
  nameWithType: WebPartManager.WebPartAdded
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartAdding
  nameWithType: WebPartManager.WebPartAdding
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartAddingEventHandler
  nameWithType: WebPartAddingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartAddingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosed
  nameWithType: WebPartManager.WebPartClosed
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartClosing
  nameWithType: WebPartManager.WebPartClosing
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleted
  nameWithType: WebPartManager.WebPartDeleted
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartDeleting
  nameWithType: WebPartManager.WebPartDeleting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoved
  nameWithType: WebPartManager.WebPartMoved
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartMoving
  nameWithType: WebPartManager.WebPartMoving
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartMovingEventHandler
  nameWithType: WebPartMovingEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartMovingEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartCollection
  nameWithType: WebPartCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnected
  nameWithType: WebPartManager.WebPartsConnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsEventHandler
  nameWithType: WebPartConnectionsEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsConnecting
  nameWithType: WebPartManager.WebPartsConnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartConnectionsCancelEventHandler
  nameWithType: WebPartConnectionsCancelEventHandler
  fullName: System.Web.UI.WebControls.WebParts.WebPartConnectionsCancelEventHandler
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnected
  nameWithType: WebPartManager.WebPartsDisconnected
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartsDisconnecting
  nameWithType: WebPartManager.WebPartsDisconnecting
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.WebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
  fullName: System.Web.UI.WebControls.WebParts.WebPartManager.Zones
- uid: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPartZoneCollection
  nameWithType: WebPartZoneCollection
  fullName: System.Web.UI.WebControls.WebParts.WebPartZoneCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebPartManager
  nameWithType: WebPartManager.WebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ActivateConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ActivateConnections
  nameWithType: WebPartManager.ActivateConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AddWebPart
  nameWithType: WebPartManager.AddWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.AvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: AvailableTransformers
  nameWithType: WebPartManager.AvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartConnecting
  nameWithType: WebPartManager.BeginWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.BeginWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: BeginWebPartEditing
  nameWithType: WebPartManager.BeginWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CanConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CanConnectWebParts
  nameWithType: WebPartManager.CanConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CheckRenderClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CheckRenderClientScript
  nameWithType: WebPartManager.CheckRenderClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseProviderWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseProviderWarning
  nameWithType: WebPartManager.CloseProviderWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CloseWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CloseWebPart
  nameWithType: WebPartManager.CloseWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Connections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Connections
  nameWithType: WebPartManager.Connections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ConnectWebParts
  nameWithType: WebPartManager.ConnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Controls*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Controls
  nameWithType: WebPartManager.Controls
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CopyWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CopyWebPart
  nameWithType: WebPartManager.CopyWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateAvailableTransformers*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateAvailableTransformers
  nameWithType: WebPartManager.CreateAvailableTransformers
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateControlCollection*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateControlCollection
  nameWithType: WebPartManager.CreateControlCollection
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDisplayModes
  nameWithType: WebPartManager.CreateDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicConnectionID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicConnectionID
  nameWithType: WebPartManager.CreateDynamicConnectionID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateDynamicWebPartID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateDynamicWebPartID
  nameWithType: WebPartManager.CreateDynamicWebPartID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateErrorWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateErrorWebPart
  nameWithType: WebPartManager.CreateErrorWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreatePersonalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreatePersonalization
  nameWithType: WebPartManager.CreatePersonalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.CreateWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: CreateWebPart
  nameWithType: WebPartManager.CreateWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWarning
  nameWithType: WebPartManager.DeleteWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DeleteWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DeleteWebPart
  nameWithType: WebPartManager.DeleteWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebPart
  nameWithType: WebPartManager.DisconnectWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisconnectWebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisconnectWebParts
  nameWithType: WebPartManager.DisconnectWebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayMode*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayMode
  nameWithType: WebPartManager.DisplayMode
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DisplayModes
  nameWithType: WebPartManager.DisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.DynamicConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: DynamicConnections
  nameWithType: WebPartManager.DynamicConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableClientScript
  nameWithType: WebPartManager.EnableClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EnableTheming*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EnableTheming
  nameWithType: WebPartManager.EnableTheming
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartConnecting
  nameWithType: WebPartManager.EndWebPartConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.EndWebPartEditing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: EndWebPartEditing
  nameWithType: WebPartManager.EndWebPartEditing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportSensitiveDataWarning*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportSensitiveDataWarning
  nameWithType: WebPartManager.ExportSensitiveDataWarning
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ExportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ExportWebPart
  nameWithType: WebPartManager.ExportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Focus*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Focus
  nameWithType: WebPartManager.Focus
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetConsumerConnectionPoints
  nameWithType: WebPartManager.GetConsumerConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetCurrentWebPartManager*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetCurrentWebPartManager
  nameWithType: WebPartManager.GetCurrentWebPartManager
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetDisplayTitle*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetDisplayTitle
  nameWithType: WebPartManager.GetDisplayTitle
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetExportUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetExportUrl
  nameWithType: WebPartManager.GetExportUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetGenericWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetGenericWebPart
  nameWithType: WebPartManager.GetGenericWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: GetProviderConnectionPoints
  nameWithType: WebPartManager.GetProviderConnectionPoints
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.ImportWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: ImportWebPart
  nameWithType: WebPartManager.ImportWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Internals*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Internals
  nameWithType: WebPartManager.Internals
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsAuthorized*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsAuthorized
  nameWithType: WebPartManager.IsAuthorized
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.IsCustomPersonalizationStateDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: IsCustomPersonalizationStateDirty
  nameWithType: WebPartManager.IsCustomPersonalizationStateDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadControlState
  nameWithType: WebPartManager.LoadControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.LoadCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: LoadCustomPersonalizationState
  nameWithType: WebPartManager.LoadCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MediumPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MediumPermissionSet
  nameWithType: WebPartManager.MediumPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MinimalPermissionSet*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MinimalPermissionSet
  nameWithType: WebPartManager.MinimalPermissionSet
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.MoveWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: MoveWebPart
  nameWithType: WebPartManager.MoveWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnAuthorizeWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnAuthorizeWebPart
  nameWithType: WebPartManager.OnAuthorizeWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivated*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivated
  nameWithType: WebPartManager.OnConnectionsActivated
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnConnectionsActivating*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnConnectionsActivating
  nameWithType: WebPartManager.OnConnectionsActivating
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanged
  nameWithType: WebPartManager.OnDisplayModeChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnDisplayModeChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnDisplayModeChanging
  nameWithType: WebPartManager.OnDisplayModeChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnInit*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnInit
  nameWithType: WebPartManager.OnInit
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnPreRender*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnPreRender
  nameWithType: WebPartManager.OnPreRender
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanged*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanged
  nameWithType: WebPartManager.OnSelectedWebPartChanged
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnSelectedWebPartChanging*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnSelectedWebPartChanging
  nameWithType: WebPartManager.OnSelectedWebPartChanging
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnUnload*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnUnload
  nameWithType: WebPartManager.OnUnload
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdded*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdded
  nameWithType: WebPartManager.OnWebPartAdded
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartAdding*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartAdding
  nameWithType: WebPartManager.OnWebPartAdding
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosed*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosed
  nameWithType: WebPartManager.OnWebPartClosed
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartClosing*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartClosing
  nameWithType: WebPartManager.OnWebPartClosing
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleted*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleted
  nameWithType: WebPartManager.OnWebPartDeleted
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartDeleting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartDeleting
  nameWithType: WebPartManager.OnWebPartDeleting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoved*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoved
  nameWithType: WebPartManager.OnWebPartMoved
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartMoving*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartMoving
  nameWithType: WebPartManager.OnWebPartMoving
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnected
  nameWithType: WebPartManager.OnWebPartsConnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsConnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsConnecting
  nameWithType: WebPartManager.OnWebPartsConnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnected*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnected
  nameWithType: WebPartManager.OnWebPartsDisconnected
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.OnWebPartsDisconnecting*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: OnWebPartsDisconnecting
  nameWithType: WebPartManager.OnWebPartsDisconnecting
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Personalization*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Personalization
  nameWithType: WebPartManager.Personalization
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.RegisterClientScript*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: RegisterClientScript
  nameWithType: WebPartManager.RegisterClientScript
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Render*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Render
  nameWithType: WebPartManager.Render
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveControlState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveControlState
  nameWithType: WebPartManager.SaveControlState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SaveCustomPersonalizationState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SaveCustomPersonalizationState
  nameWithType: WebPartManager.SaveCustomPersonalizationState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SelectedWebPart
  nameWithType: WebPartManager.SelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetPersonalizationDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetPersonalizationDirty
  nameWithType: WebPartManager.SetPersonalizationDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SetSelectedWebPart*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SetSelectedWebPart
  nameWithType: WebPartManager.SetSelectedWebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SkinID*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SkinID
  nameWithType: WebPartManager.SkinID
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.StaticConnections*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: StaticConnections
  nameWithType: WebPartManager.StaticConnections
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.SupportedDisplayModes*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: SupportedDisplayModes
  nameWithType: WebPartManager.SupportedDisplayModes
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#IsDirty*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.IsDirty
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Load*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Load
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Load
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.System#Web#UI#WebControls#WebParts#IPersonalizable#Save*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: System.Web.UI.WebControls.WebParts.IPersonalizable.Save
  nameWithType: WebPartManager.System.Web.UI.WebControls.WebParts.IPersonalizable.Save
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.TrackViewState*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: TrackViewState
  nameWithType: WebPartManager.TrackViewState
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Visible*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Visible
  nameWithType: WebPartManager.Visible
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.WebParts*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: WebParts
  nameWithType: WebPartManager.WebParts
- uid: System.Web.UI.WebControls.WebParts.WebPartManager.Zones*
  parent: System.Web.UI.WebControls.WebParts.WebPartManager
  isExternal: false
  name: Zones
  nameWithType: WebPartManager.Zones
