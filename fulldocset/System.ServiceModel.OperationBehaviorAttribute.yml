### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.OperationBehaviorAttribute
  id: OperationBehaviorAttribute
  children:
  - System.ServiceModel.OperationBehaviorAttribute.#ctor
  - System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  - System.ServiceModel.OperationBehaviorAttribute.Impersonation
  - System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  - System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  - System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  - System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  langs:
  - csharp
  name: OperationBehaviorAttribute
  nameWithType: OperationBehaviorAttribute
  fullName: System.ServiceModel.OperationBehaviorAttribute
  type: Class
  summary: "Задает поведение локального выполнения метода службы."
  remarks: "Используйте атрибут OperationBehaviorAttribute, чтобы указать, какие поведения конкретной операции выполнения операции при выполнении. (Чтобы задать поведение выполнения на уровне службы, используйте атрибут <xref:System.ServiceModel.ServiceBehaviorAttribute>).      Настроек [!NOTE] настроек OperationBehaviorAttribute также можно использовать для настройки операции контракта обратного вызова в дуплексном клиентском приложении.</xref:System.ServiceModel.ServiceBehaviorAttribute> При использовании в операции обратного вызова, <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>свойство должно быть <xref:System.ServiceModel.ReleaseInstanceMode>или <xref:System.InvalidOperationException>исключения во время выполнения.</xref:System.InvalidOperationException> </xref:System.ServiceModel.ReleaseInstanceMode> </xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>       Атрибут OperationBehaviorAttribute [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] функцией модели программирования, обеспечивающей общие функции, которые разработчики в ином случае обязаны реализовать самостоятельно.      - <xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A>Свойство управляет удалением объектов параметров, переданных операции после завершения операции.</xref:System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters%2A>      - <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>Свойство указывает ли автоматически завершать транзакцию, в которой выполняется метод при отсутствии необработанных исключений.</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>      - <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>Свойство указывает, должен ли метод выполняться в рамках транзакции.</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>      - <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>Свойство указывает ли операция службы может, должна или не может олицетворять вызывающий объект.</xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>      - <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>Свойство указывает, когда удаление объектов службы, во время процесса вызова метода.</xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>"
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the method executes under the caller's transaction and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction commits automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method)]

      public sealed class OperationBehaviorAttribute : Attribute, System.ServiceModel.Description.IOperationBehavior
  inheritance:
  - System.Attribute
  implements:
  - System.ServiceModel.Description.IOperationBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor
  id: '#ctor'
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: OperationBehaviorAttribute()
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute()
  fullName: System.ServiceModel.OperationBehaviorAttribute.OperationBehaviorAttribute()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.OperationBehaviorAttribute&quot;> </xref> класса."
  remarks: "Конструктор по умолчанию создает экземпляр класса с помощью следующих параметров по умолчанию: - <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>свойство `true`.</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A>      - <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>Свойство `false`.</xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A>      - <xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>Свойство является <xref:System.ServiceModel.ReleaseInstanceMode>.</xref:System.ServiceModel.ReleaseInstanceMode> </xref:System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode%2A>      -   The <xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A> is <xref:System.ServiceModel.ImpersonationOption>.</xref:System.ServiceModel.ImpersonationOption></xref:System.ServiceModel.OperationBehaviorAttribute.Impersonation%2A>"
  syntax:
    content: public OperationBehaviorAttribute ();
    parameters: []
  overload: System.ServiceModel.OperationBehaviorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  id: AutoDisposeParameters
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
  fullName: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Возвращает или задает параметры определяющее, следует ли автоматически удалять."
  remarks: "Это свойство определяет, удаляются ли службой все высвобождаемые параметры (входные, выходные или ссылочные параметры), которые были созданы при обработке сообщения. Значение по умолчанию — `true`. Присвойте этому свойству значение `false` Если вы хотите запретить системе освобождение ресурсов и кэшировать их при необходимости.       Например, если AutoDisposeParameters `false`, а затем отправитель отвечает за закрытие потока на отправляющей стороне."
  syntax:
    content: public bool AutoDisposeParameters { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если параметры автоматически удалять; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation
  id: Impersonation
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
  fullName: System.ServiceModel.OperationBehaviorAttribute.Impersonation
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Возвращает или задает значение, указывающее уровень олицетворения вызывающей стороны, поддерживаемый операцией."
  remarks: "Свойство олицетворения (вместе с конфигурацией привязки, поддерживающей олицетворение) чтобы включить заданные методы (отмеченные олицетворения, имеющим значение <xref:System.ServiceModel.ImpersonationOption>или <xref:System.ServiceModel.ImpersonationOption>) для выполнения с использованием удостоверения вызывающего пользователя.</xref:System.ServiceModel.ImpersonationOption> </xref:System.ServiceModel.ImpersonationOption> Дополнительные сведения, включая способ выполнения олицетворения при использовании <xref:System.ServiceModel.ImpersonationOption>вместе с <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName>свойство, в разделе [делегирования и олицетворения](~/add/includes/ajax-current-ext-md.md) и [как: олицетворение клиента в службе](~/add/includes/ajax-current-ext-md.md).</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations%2A?displayProperty=fullName> </xref:System.ServiceModel.ImpersonationOption>      Настроек [!NOTE] настроек при программном добавлении конечной точки службы, выполняющей олицетворение, необходимо либо использовать один из <xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A>методы или <xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName>правильно загрузить контракт в новый метод <xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName>объекта.</xref:System.ServiceModel.Description.ServiceDescription?displayProperty=fullName> </xref:System.ServiceModel.Description.ContractDescription.GetContract%2A?displayProperty=fullName> </xref:System.ServiceModel.ServiceHost.AddServiceEndpoint%2A> С помощью файла конфигурации не требует дополнительных действий.       Если олицетворение не поддерживается возможно конкретных сценариев. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Неподдерживаемые сценарии](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following service code example requires impersonation by setting the Impersonation property to <xref:System.ServiceModel.ImpersonationOption>.  \n  \n [!code-cs[OperationBehaviorAttribute_Impersonation#1](~/add/codesnippet/csharp/operationbehaviorattribute_impersonation.client/services.cs#1)]\n [!code-vb[OperationBehaviorAttribute_Impersonation#1](~/add/codesnippet/visualbasic/operationbehaviorattribute_impersonation.client/services.vb#1)]  \n  \n The following code example shows using the <xref:System.ServiceModel.ClientBase%601.ClientCredentials%2A> property to set the client application credentials prior to invoking the operation that requires those credentials for impersonation.  \n  \n [!code-cs[OperationBehaviorAttribute_Impersonation#3](~/add/codesnippet/csharp/operationbehaviorattribute_impersonation.client/client.cs#3)]\n [!code-vb[OperationBehaviorAttribute_Impersonation#3](~/add/codesnippet/visualbasic/operationbehaviorattribute_impersonation.client/client.vb#3)]"
  syntax:
    content: public System.ServiceModel.ImpersonationOption Impersonation { get; set; }
    return:
      type: System.ServiceModel.ImpersonationOption
      description: "Один из <xref href=&quot;System.ServiceModel.ImpersonationOption&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.ServiceModel.ImpersonationOption&quot;> </xref>."
  overload: System.ServiceModel.OperationBehaviorAttribute.Impersonation*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  id: ReleaseInstanceMode
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
  fullName: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Возвращает или задает значение, указывающее, когда во время вызова операции уничтожать объект службы."
  remarks: "Use the ReleaseInstanceMode property to specify when [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] recycles a service object in the course of executing a method. The default behavior is to recycle a service object according to the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> value. Setting the ReleaseInstanceMode property changes that default behavior.  \n  \n The ReleaseInstanceMode makes no threading guarantees. If you must have a new, unmodified object when your service runs, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property to <xref:System.ServiceModel.InstanceContextMode>.  \n  \n In transaction scenarios, the ReleaseInstanceMode property is often used to ensure that old data associated with the service object is cleaned up prior to processing a method call. You can also ensure that service objects associated with transactions are recycled after the transaction successfully completes by setting the <xref:System.ServiceModel.ServiceBehaviorAttribute.ReleaseServiceInstanceOnTransactionComplete%2A> property to `true`.  \n  \n You can choose the following behaviors:  \n  \n-   Recycle a service object before an operation is called.  \n  \n-   Recycle a service object after an operation is called.  \n  \n-   Recycle a service object both before and after an operation is called.  \n  \n-   No recycling behavior.  \n  \n You can also use <xref:System.ServiceModel.OperationBehaviorAttribute> to configure a callback contract operation in a duplex client application. When used on a callback operation, the ReleaseInstanceMode property must be <xref:System.ServiceModel.ReleaseInstanceMode> or an <xref:System.InvalidOperationException> exception is thrown at runtime.  \n  \n In addition, it is important to realize that if the service is created by passing a service object to the [ServiceHost.ServiceHost(Object, Uri\\[\\])](assetId:///M:System.ServiceModel.ServiceHost.#ctor(System.Object,System.Uri[])?qualifyHint=True&autoUpgrade=False) constructor, the value of this property is treated as if it were <xref:System.ServiceModel.ReleaseInstanceMode>."
  example:
  - "The following example code shows the use of <xref:System.ServiceModel.ReleaseInstanceMode> to recycle service objects both before and after a call.  \n  \n [!code-cs[OBA.ReleaseInstanceMode#1](~/add/codesnippet/csharp/oba.releaseinstancemode.client/services.cs#1)]\n [!code-vb[OBA.ReleaseInstanceMode#1](~/add/codesnippet/visualbasic/oba.releaseinstancemode.client/services.vb#1)]"
  syntax:
    content: public System.ServiceModel.ReleaseInstanceMode ReleaseInstanceMode { get; set; }
    return:
      type: System.ServiceModel.ReleaseInstanceMode
      description: "Один из <xref href=&quot;System.ServiceModel.ReleaseInstanceMode&quot;> </xref> значения. Значение по умолчанию — <xref href=&quot;System.ServiceModel.ReleaseInstanceMode&quot;> </xref>."
  overload: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение не является одним из <xref href=&quot;System.ServiceModel.ReleaseInstanceMode&quot;> </xref> значения."
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Реализует <xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters*>метод.</xref:System.ServiceModel.Description.IOperationBehavior.AddBindingParameters*>"
  syntax:
    content: void IOperationBehavior.AddBindingParameters (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "Описание операции, измененное для поддержки <xref href=&quot;System.ServiceModel.OperationBehaviorAttribute&quot;> </xref> свойства."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "Параметры привязки, переданные для поддержки поведений привязки."
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Реализует поведение операций клиента."
  syntax:
    content: void IOperationBehavior.ApplyClientBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.ClientOperation proxy);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "Описание операции, измененное для поддержки <xref href=&quot;System.ServiceModel.OperationBehaviorAttribute&quot;> </xref> свойства."
    - id: proxy
      type: System.ServiceModel.Dispatcher.ClientOperation
      description: "Точка доступа расширяемости для вставки пользовательских клиентских изменений для этой операции."
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  id: System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Реализует поведение операций службы."
  syntax:
    content: void IOperationBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.OperationDescription description, System.ServiceModel.Dispatcher.DispatchOperation dispatch);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "Описание операции, измененное для поддержки <xref href=&quot;System.ServiceModel.OperationBehaviorAttribute&quot;> </xref> свойства."
    - id: dispatch
      type: System.ServiceModel.Dispatcher.DispatchOperation
      description: "Точки расширяемости для вставки изменений пользовательских служб для этой операции."
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  id: System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  isEii: true
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Реализует поведение проверки."
  syntax:
    content: void IOperationBehavior.Validate (System.ServiceModel.Description.OperationDescription description);
    parameters:
    - id: description
      type: System.ServiceModel.Description.OperationDescription
      description: "Описание операции для проверки."
  overload: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  id: TransactionAutoComplete
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Возвращает или задает значение, указывающее, следует ли автоматически завершать текущую область транзакции при отсутствии необработанных исключений."
  remarks: "Присвойте свойству TransactionAutoComplete `false` чтобы завершить или прервать транзакции непосредственно в коде операции.       Обработанные исключения могут вызываться в ходе операции без автоматического прерывания транзакции. Только необработанные исключения активируют Автоматическое прерывание."
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A> property indicates that the operation executes under a transaction scope and the TransactionAutoComplete property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]"
  syntax:
    content: public bool TransactionAutoComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для завершения области транзакции автоматически при успешном выполнении операции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  id: TransactionScopeRequired
  parent: System.ServiceModel.OperationBehaviorAttribute
  langs:
  - csharp
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: "Возвращает или задает значение, указывающее, требуется ли методу область транзакции для его выполнения."
  remarks: "Значение TransactionScopeRequired `true` , чтобы операция выполнялась в области транзакции. Если доступна поточная транзакция, операция выполняется в контексте этой транзакции. Если он не доступен, новая транзакция создается и используется для выполнения операции. Привязка, указанная в конечной точке, управляет, поддерживаются ли поточные транзакции. Таким образом Чтобы получить соответствующее поведение необходимо понимать взаимосвязь между тем, допускает ли поток транзакций, привязка и свойство TransactionScopeRequired. В следующей таблице показаны возможное поведение.      |||||   |-|-|-|-|   | Значением | Привязка допускает поток транзакций | Вызывающий объект передает транзакцию | Результат |   | False | False | Не | Метод выполняется без транзакции. |   | Значение true | False | Не | Метод создается и выполняется с новой транзакцией. |   | Значение true или False | False | Да | Ошибка SOAP возвращается для заголовка транзакции. |   | False | Значение true | Да | Метод выполняется без транзакции. |   | Значение true | Значение true | Да | Метод выполняется в поточной транзакции. |"
  example:
  - "The following code example shows an operation that executes within a mandatory distributed transaction. The TransactionScopeRequired property indicates that the operation executes under a transaction scope and the <xref:System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete%2A> property indicates that if no unhandled exceptions occur, the transaction scope is completed automatically. If an unhandled exception does occur, the transaction is aborted.  \n  \n [!code-cs[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/csharp/operationbehaviorattribute_transaction.client/services.cs#2)]\n [!code-vb[OperationBehaviorAttribute_Transaction#2](~/add/codesnippet/visualbasic/operationbehaviorattribute_transaction.client/services.vb#2)]"
  syntax:
    content: public bool TransactionScopeRequired { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если методу требуется область транзакции для выполнения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: OperationBehaviorAttribute()
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute()
  fullName: System.ServiceModel.OperationBehaviorAttribute.OperationBehaviorAttribute()
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
  fullName: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
  fullName: System.ServiceModel.OperationBehaviorAttribute.Impersonation
- uid: System.ServiceModel.ImpersonationOption
  parent: System.ServiceModel
  isExternal: false
  name: ImpersonationOption
  nameWithType: ImpersonationOption
  fullName: System.ServiceModel.ImpersonationOption
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
  fullName: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode
- uid: System.ServiceModel.ReleaseInstanceMode
  parent: System.ServiceModel
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: ReleaseInstanceMode
  fullName: System.ServiceModel.ReleaseInstanceMode
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters(OperationDescription,BindingParameterCollection)
- uid: System.ServiceModel.Description.OperationDescription
  parent: System.ServiceModel.Description
  isExternal: true
  name: OperationDescription
  nameWithType: OperationDescription
  fullName: System.ServiceModel.Description.OperationDescription
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.ClientOperation)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior(OperationDescription,ClientOperation)
- uid: System.ServiceModel.Dispatcher.ClientOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: ClientOperation
  nameWithType: ClientOperation
  fullName: System.ServiceModel.Dispatcher.ClientOperation
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.OperationDescription,System.ServiceModel.Dispatcher.DispatchOperation)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior(OperationDescription,DispatchOperation)
- uid: System.ServiceModel.Dispatcher.DispatchOperation
  parent: System.ServiceModel.Dispatcher
  isExternal: true
  name: DispatchOperation
  nameWithType: DispatchOperation
  fullName: System.ServiceModel.Dispatcher.DispatchOperation
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate(System.ServiceModel.Description.OperationDescription)
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
  fullName: System.ServiceModel.OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate(OperationDescription)
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
  fullName: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired
- uid: System.ServiceModel.OperationBehaviorAttribute.#ctor*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: OperationBehaviorAttribute
  nameWithType: OperationBehaviorAttribute.OperationBehaviorAttribute
- uid: System.ServiceModel.OperationBehaviorAttribute.AutoDisposeParameters*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: AutoDisposeParameters
  nameWithType: OperationBehaviorAttribute.AutoDisposeParameters
- uid: System.ServiceModel.OperationBehaviorAttribute.Impersonation*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: Impersonation
  nameWithType: OperationBehaviorAttribute.Impersonation
- uid: System.ServiceModel.OperationBehaviorAttribute.ReleaseInstanceMode*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: ReleaseInstanceMode
  nameWithType: OperationBehaviorAttribute.ReleaseInstanceMode
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#AddBindingParameters*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.AddBindingParameters
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyClientBehavior*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyClientBehavior
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.OperationBehaviorAttribute.System#ServiceModel#Description#IOperationBehavior#Validate*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: System.ServiceModel.Description.IOperationBehavior.Validate
  nameWithType: OperationBehaviorAttribute.System.ServiceModel.Description.IOperationBehavior.Validate
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionAutoComplete*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionAutoComplete
  nameWithType: OperationBehaviorAttribute.TransactionAutoComplete
- uid: System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired*
  parent: System.ServiceModel.OperationBehaviorAttribute
  isExternal: false
  name: TransactionScopeRequired
  nameWithType: OperationBehaviorAttribute.TransactionScopeRequired
