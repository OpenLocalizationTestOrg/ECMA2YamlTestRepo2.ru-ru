### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.GenerateMetadata
  id: GenerateMetadata
  children:
  - System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  - System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  - System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  langs:
  - csharp
  name: GenerateMetadata
  nameWithType: GenerateMetadata
  fullName: System.EnterpriseServices.Internal.GenerateMetadata
  type: Class
  summary: "Создает общие метаданные языка среды CLR для компонента COM +."
  remarks: "При необходимости GenerateMetadata создает сборку, содержащую метаданные среды CLR для указанной библиотеки типов.       GenerateMetadata используется внутренне платформой .NET Framework. Необходимо использовать класс непосредственно в коде."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013ff1-730b-45e2-ba24-874b7242c425")]

      public class GenerateMetadata : System.EnterpriseServices.Internal.IComSoapMetadata
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComSoapMetadata
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.EnterpriseServices.Internal.GenerateMetadata&quot;> </xref> класса."
  syntax:
    content: public GenerateMetadata ();
    parameters: []
  overload: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  id: Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Создает или находит сборку, содержащую метаданные среды CLR для компонента COM +, представленного указанной библиотекой типов."
  remarks: "При необходимости создать метод создает сборку, содержащую метаданные среды CLR для указанной библиотеки типов. Чтобы сделать этот процесс, он вызывает <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>метод.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>       Эти методы не должны вызываться напрямую из кода приложения."
  syntax:
    content: public string Generate (string strSrcTypeLib, string outPath);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "Имя библиотеки типов, для которого требуется создать сборку."
    - id: outPath
      type: System.String
      description: "Папка, в которой требуется создать сборку или найти уже существующую сборку."
    return:
      type: System.String
      description: "Имя создаваемой сборке; в противном случае — пустая строка, если входные данные недопустимы."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  id: GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Создает или находит сборку, содержащую метаданные среды CLR для компонента COM +, представленного указанной библиотекой типов, подписывает сборку парой ключей, образующих строгое имя и устанавливает ее в глобальный кэш сборок."
  remarks: "При необходимости метод GenerateMetaData создает сборку, содержащую метаданные среды CLR для указанной библиотеки типов. Не создает сборку, если сборка сгенерированным именем уже существует в строке `outPath` папки.       GenerateMetaData не должен вызываться напрямую из кода приложения. Он вызывается как <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>и <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>методы.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> </xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>       При вызове <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, GenerateMetaData также создает пару ключей со строгими именами, подписывает сборку и устанавливает ее в глобальный кэш сборок.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>"
  syntax:
    content: public string GenerateMetaData (string strSrcTypeLib, string outPath, byte[] PublicKey, System.Reflection.StrongNameKeyPair KeyPair);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "Имя библиотеки типов, для которого требуется создать сборку."
    - id: outPath
      type: System.String
      description: "Папка, в которой требуется создать сборку или найти уже существующую сборку."
    - id: PublicKey
      type: System.Byte[]
      description: "Открытый ключ, используемый для импорта информации о библиотеке типов в сборку."
    - id: KeyPair
      type: System.Reflection.StrongNameKeyPair
      description: "Строгое имя пары ключей, используемой для подписи созданной сборки."
    return:
      type: System.String
      description: "Имя создаваемой сборке; в противном случае — пустая строка, если входные данные недопустимы."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  id: GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Создает или находит сборку, содержащую метаданные среды CLR для компонента COM +, представленного указанной библиотекой типов, подписывает сборку парой ключей, образующих строгое имя и устанавливает ее в глобальный кэш сборок."
  remarks: "При необходимости метод GenerateSigned создает сборку, содержащую метаданные среды CLR для указанной библиотеки типов. Он также создает пару ключей со строгими именами и подписывает сборку.       Чтобы сделать этот процесс, он вызывает <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>метод.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> Эти методы не должны вызываться напрямую из кода приложения.       `InstallGac` Параметр указывает, следует ли устанавливать сборки в глобальный кэш сборок. Однако реализация игнорирует это значение и всегда пытается установить подписанную сборку в глобальный кэш сборок."
  syntax:
    content: public string GenerateSigned (string strSrcTypeLib, string outPath, bool InstallGac, out string Error);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "Имя библиотеки типов, для которого требуется создать сборку."
    - id: outPath
      type: System.String
      description: "Папка, в которой требуется создать сборку или найти уже существующую сборку."
    - id: InstallGac
      type: System.Boolean
      description: "Не обрабатывается."
    - id: Error
      type: System.String
      description: "Строка, в который могут записываться сообщение об ошибке."
    return:
      type: System.String
      description: "Имя создаваемой сборке; в противном случае — пустая строка, если входные данные недопустимы."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  id: SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Выполняет поиск указанного файла по указанному пути."
  remarks: "Дополнительные сведения см. в документации Platform SDK о SearchPath в [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)."
  syntax:
    content: public static int SearchPath (string path, string fileName, string extension, int numBufferChars, string buffer, int[] filePart);
    parameters:
    - id: path
      type: System.String
      description: "Путь для поиска файла."
    - id: fileName
      type: System.String
      description: "Имя файла, который требуется найти."
    - id: extension
      type: System.String
      description: "Расширение для добавления к имени файла при поиске файла."
    - id: numBufferChars
      type: System.Int32
      description: "Размер буфера, принимающего допустимый путь и имя файла."
    - id: buffer
      type: System.String
      description: "Буфер, который передается путь и имя найденного файла."
    - id: filePart
      type: System.Int32[]
      description: "Переменная, принимающая адрес последнего компонента допустимого пути и имени."
    return:
      type: System.Int32
      description: "Если поиск выполнен успешно, возвращается длина строки, скопированной в <code> buffer </code>. Если поиск заканчивается неудачно, возвращается 0."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata
  nameWithType: GenerateMetadata.GenerateMetadata
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate
  nameWithType: GenerateMetadata.Generate
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData
  nameWithType: GenerateMetadata.GenerateMetaData
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned
  nameWithType: GenerateMetadata.GenerateSigned
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath
  nameWithType: GenerateMetadata.SearchPath
