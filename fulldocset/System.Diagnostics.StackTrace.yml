### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.StackTrace
  id: StackTrace
  children:
  - System.Diagnostics.StackTrace.#ctor
  - System.Diagnostics.StackTrace.#ctor(System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  - System.Diagnostics.StackTrace.#ctor(System.Exception)
  - System.Diagnostics.StackTrace.#ctor(System.Int32)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  - System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  - System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  - System.Diagnostics.StackTrace.FrameCount
  - System.Diagnostics.StackTrace.GetFrame(System.Int32)
  - System.Diagnostics.StackTrace.GetFrames
  - System.Diagnostics.StackTrace.METHODS_TO_SKIP
  - System.Diagnostics.StackTrace.ToString
  langs:
  - csharp
  name: StackTrace
  nameWithType: StackTrace
  fullName: System.Diagnostics.StackTrace
  type: Class
  summary: "Представляет трассировку стека, которая является упорядоченной коллекцией из одного или нескольких кадров стека."
  remarks: "Сведения о трассировка стека будут наиболее эффективны в отладочной конфигурации построения. По умолчанию отладочных построений включать символы отладки, а сборки выпуска не содержат. Символы отладки содержат большую часть файла, имя метода, номер строки и сведения о столбцах, используемых при создании <xref:System.Diagnostics.StackFrame>и объекты StackTrace.</xref:System.Diagnostics.StackFrame>       Трассировка стека не может сообщить число вызовов методов, как и ожидалось, из-за преобразований кода в процессе оптимизации."
  example:
  - "The following console application demonstrates how to create a simple StackTrace and iterate through its frames to obtain debugging and diagnostic information.  \n  \n [!code-cpp[StackTraceSample1#1](~/add/codesnippet/cpp/t-system.diagnostics.sta_1_1.cpp)]\n [!code-cs[StackTraceSample1#1](~/add/codesnippet/csharp/t-system.diagnostics.sta_1_1.cs)]\n [!code-vb[StackTraceSample1#1](~/add/codesnippet/visualbasic/t-system.diagnostics.sta_1_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class StackTrace
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor
  id: '#ctor'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace()
  nameWithType: StackTrace.StackTrace()
  fullName: System.Diagnostics.StackTrace.StackTrace()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класс из кадра вызывающего."
  remarks: "<xref:System.Diagnostics.StackTrace>Создается с текущим потоком вызывающего и не содержит имя файла, номер строки или столбца сведения.</xref:System.Diagnostics.StackTrace>       Используйте этот конструктор по умолчанию, если нужно выполнить полную трассировку только метод сводные сведения о стеке вызовов."
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/m-system.diagnostics.sta_8_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_8_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/m-system.diagnostics.sta_8_1.cs)]"
  syntax:
    content: public StackTrace ();
    parameters: []
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Boolean)
  nameWithType: StackTrace.StackTrace(Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класс из кадра вызывающего, дополнительно может собирать сведения об источнике."
  remarks: "<xref:System.Diagnostics.StackTrace>Создается с текущим потоком вызывающего.</xref:System.Diagnostics.StackTrace>"
  example:
  - "The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.  \n  \n [!code-cpp[StackFrameSample1#4](~/add/codesnippet/cpp/m-system.diagnostics.sta_4_1.cpp)]\n [!code-vb[StackFrameSample1#4](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_4_1.vb)]\n [!code-cs[StackFrameSample1#4](~/add/codesnippet/csharp/m-system.diagnostics.sta_4_1.cs)]"
  syntax:
    content: public StackTrace (bool fNeedFileInfo);
    parameters:
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи, имя файла, номер строки и номер столбца; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  id: '#ctor(System.Diagnostics.StackFrame)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(StackFrame)
  nameWithType: StackTrace.StackTrace(StackFrame)
  fullName: System.Diagnostics.StackTrace.StackTrace(StackFrame)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класс, содержащий один кадр."
  remarks: "Этот конструктор используется, если не хотите, чтобы затраты на полную трассировку стека."
  example:
  - "The following code example writes stack trace information to an event log entry.  \n  \n [!code-cpp[StackTraceSample3#6](~/add/codesnippet/cpp/m-system.diagnostics.sta_1_1.cpp)]\n [!code-cs[StackTraceSample3#6](~/add/codesnippet/csharp/m-system.diagnostics.sta_1_1.cs)]\n [!code-vb[StackTraceSample3#6](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_1_1.vb)]"
  syntax:
    content: public StackTrace (System.Diagnostics.StackFrame frame);
    parameters:
    - id: frame
      type: System.Diagnostics.StackFrame
      description: "Кадр, <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> должен содержаться в объекте."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception)
  id: '#ctor(System.Exception)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception)
  nameWithType: StackTrace.StackTrace(Exception)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класса с использованием предоставленного объекта исключения."
  remarks: "<xref:System.Diagnostics.StackTrace>Создается с текущим потоком вызывающего и не содержит имя файла, номер строки или столбца сведения.</xref:System.Diagnostics.StackTrace>       Результирующая трассировка стека описывает стека в момент возникновения исключения."
  syntax:
    content: public StackTrace (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "Объект исключения, из которого создается трассировка стека."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Int32)
  nameWithType: StackTrace.StackTrace(Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класс из кадра вызывающего, пропуская указанное число кадров."
  remarks: "<xref:System.Diagnostics.StackTrace>Создается с текущим потоком вызывающего и не содержит имя файла, номер строки или столбца сведения.</xref:System.Diagnostics.StackTrace>       Если число кадров для пропуска больше или равно общее число кадров в стеке вызовов во время, создается экземпляр <xref:System.Diagnostics.StackTrace>будет содержать ни одного кадра.</xref:System.Diagnostics.StackTrace>"
  syntax:
    content: public StackTrace (int skipFrames);
    parameters:
    - id: skipFrames
      type: System.Int32
      description: "Количество пропускаемых кадров вверх по стеку, с которого следует начать трассировку."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> skipFrames </code> Параметр имеет отрицательное значение."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  id: '#ctor(System.Exception,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класс, с помощью предоставленного объекта исключения и Дополнительно может собирать сведения об источнике."
  remarks: "Результирующая трассировка стека описывает стека в момент возникновения исключения."
  syntax:
    content: public StackTrace (Exception e, bool fNeedFileInfo);
    parameters:
    - id: e
      type: System.Exception
      description: "Объект исключения, из которого создается трассировка стека."
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи, имя файла, номер строки и номер столбца; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  id: '#ctor(System.Exception,System.Int32)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Int32)
  nameWithType: StackTrace.StackTrace(Exception,Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класса с использованием предоставленного объекта исключения, пропуская указанное число кадров."
  remarks: "<xref:System.Diagnostics.StackTrace>Не содержит имя файла, номер строки или столбца сведения.</xref:System.Diagnostics.StackTrace>       Результирующая трассировка стека описывает стека в момент возникновения исключения.       Если число кадров для пропуска больше или равно общее число кадров в стеке вызовов во время, создается экземпляр <xref:System.Diagnostics.StackTrace>будет содержать ни одного кадра.</xref:System.Diagnostics.StackTrace>"
  syntax:
    content: public StackTrace (Exception e, int skipFrames);
    parameters:
    - id: e
      type: System.Exception
      description: "Объект исключения, из которого создается трассировка стека."
    - id: skipFrames
      type: System.Int32
      description: "Количество пропускаемых кадров вверх по стеку, с которого следует начать трассировку."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> skipFrames </code> Параметр имеет отрицательное значение."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класс из кадра вызывающего, пропуская указанное число кадров и Дополнительно может собирать сведения об источнике."
  remarks: "Если число кадров для пропуска больше или равно общее число кадров в стеке вызовов во время, создается экземпляр <xref:System.Diagnostics.StackTrace>будет содержать ни одного кадра.</xref:System.Diagnostics.StackTrace>"
  example:
  - "The following code example demonstrates various <xref:System.Diagnostics.StackTrace> constructor methods.  \n  \n [!code-cpp[StackFrameSample1#4](~/add/codesnippet/cpp/m-system.diagnostics.sta_3_1.cpp)]\n [!code-vb[StackFrameSample1#4](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_3_1.vb)]\n [!code-cs[StackFrameSample1#4](~/add/codesnippet/csharp/m-system.diagnostics.sta_3_1.cs)]"
  syntax:
    content: public StackTrace (int skipFrames, bool fNeedFileInfo);
    parameters:
    - id: skipFrames
      type: System.Int32
      description: "Количество пропускаемых кадров вверх по стеку, с которого следует начать трассировку."
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи, имя файла, номер строки и номер столбца; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> skipFrames </code> Параметр имеет отрицательное значение."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  id: '#ctor(System.Threading.Thread,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Thread,Boolean)
  nameWithType: StackTrace.StackTrace(Thread,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Thread,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класс для определенного потока и Дополнительно может собирать сведения об источнике.       Не используйте эту перегрузку конструктора."
  remarks: >-
    > [!IMPORTANT]

    >  Do not use this constructor. It is obsolete, and there is no recommended alternative. When you suspend a thread, you have no way of knowing what code it is executing, and deadlocks can occur very easily. For example, if you suspend a thread while it holds locks during a security permission evaluation, other threads in the <xref:System.AppDomain> might be blocked. If you suspend a thread while it is executing a class constructor, other threads in the <xref:System.AppDomain> that attempt to use that class are blocked.
  syntax:
    content: public StackTrace (System.Threading.Thread targetThread, bool needFileInfo);
    parameters:
    - id: targetThread
      type: System.Threading.Thread
      description: "Поток, который запрашивается, трассировка стека."
    - id: needFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи, имя файла, номер строки и номер столбца; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.Threading.ThreadStateException
    commentId: T:System.Threading.ThreadStateException
    description: "Поток <code> targetThread </code> не был приостановлен."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  id: '#ctor(System.Exception,System.Int32,System.Boolean)'
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: StackTrace(Exception,Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32,Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Diagnostics.StackTrace&quot;> </xref> класса с использованием предоставленного объекта исключения, пропуская указанное число кадров и Дополнительно может собирать сведения об источнике."
  remarks: "Результирующая трассировка стека описывает стека в момент возникновения исключения.       Если число кадров для пропуска больше или равно общее число кадров в стеке вызовов во время, создается экземпляр <xref:System.Diagnostics.StackTrace>будет содержать ни одного кадра.</xref:System.Diagnostics.StackTrace>"
  syntax:
    content: public StackTrace (Exception e, int skipFrames, bool fNeedFileInfo);
    parameters:
    - id: e
      type: System.Exception
      description: "Объект исключения, из которого создается трассировка стека."
    - id: skipFrames
      type: System.Int32
      description: "Количество пропускаемых кадров вверх по стеку, с которого следует начать трассировку."
    - id: fNeedFileInfo
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для записи, имя файла, номер строки и номер столбца; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.StackTrace.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The parameter <code>e</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> skipFrames </code> Параметр имеет отрицательное значение."
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.FrameCount
  id: FrameCount
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: FrameCount
  nameWithType: StackTrace.FrameCount
  fullName: System.Diagnostics.StackTrace.FrameCount
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Возвращает число кадров в трассировке стека."
  remarks: ''
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/p-system.diagnostics.sta_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/p-system.diagnostics.sta_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/p-system.diagnostics.sta_1.cs)]"
  syntax:
    content: public virtual int FrameCount { get; }
    return:
      type: System.Int32
      description: "Число кадров в трассировке стека."
  overload: System.Diagnostics.StackTrace.FrameCount*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.GetFrame(System.Int32)
  id: GetFrame(System.Int32)
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: GetFrame(Int32)
  nameWithType: StackTrace.GetFrame(Int32)
  fullName: System.Diagnostics.StackTrace.GetFrame(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Возвращает указанный кадр стека."
  remarks: "Кадры стека нумеруются, начиная с 0, то есть помещается последнего кадра стека."
  example:
  - "The following code example displays the first and last function calls in a stack trace.  \n  \n [!code-cpp[StackFrameSample1#8](~/add/codesnippet/cpp/m-system.diagnostics.sta_17_1.cpp)]\n [!code-vb[StackFrameSample1#8](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_17_1.vb)]\n [!code-cs[StackFrameSample1#8](~/add/codesnippet/csharp/m-system.diagnostics.sta_17_1.cs)]"
  syntax:
    content: public virtual System.Diagnostics.StackFrame GetFrame (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Индекс запрашиваемого кадра стека."
    return:
      type: System.Diagnostics.StackFrame
      description: "Указанный кадр стека."
  overload: System.Diagnostics.StackTrace.GetFrame*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.GetFrames
  id: GetFrames
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: GetFrames()
  nameWithType: StackTrace.GetFrames()
  fullName: System.Diagnostics.StackTrace.GetFrames()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Возвращает копию объекта все кадры стека в текущую трассировку стека."
  remarks: "Используйте возвращенный <xref:System.Diagnostics.StackFrame>массив для перечисления и просмотра вызовов функций в <xref:System.Diagnostics.StackTrace>.</xref:System.Diagnostics.StackTrace> </xref:System.Diagnostics.StackFrame> Длина возвращаемого массива равна <xref:System.Diagnostics.StackTrace.FrameCount%2A>значение свойства.</xref:System.Diagnostics.StackTrace.FrameCount%2A>       <xref:System.Diagnostics.StackFrame>Элементы массива являются в обратном хронологическом порядке.</xref:System.Diagnostics.StackFrame> <xref:System.Diagnostics.StackFrame>В массиве индекс 0 представляет самый последний вызов функции в трассировке стека и помещается в стек вызова последнего кадра.</xref:System.Diagnostics.StackFrame> <xref:System.Diagnostics.StackFrame>Индекса в массиве <xref:System.Diagnostics.StackTrace.FrameCount%2A>минус 1 представляет старый вызов функции в трассировке стека и передачей первого кадра, помещенный в стек вызовов.</xref:System.Diagnostics.StackTrace.FrameCount%2A> </xref:System.Diagnostics.StackFrame>       Метод GetFrames используется для получения все кадры стека в трассировке стека; Используйте <xref:System.Diagnostics.StackTrace.GetFrame%2A>метод, чтобы получить определенный кадр стека в трассировке стека.</xref:System.Diagnostics.StackTrace.GetFrame%2A> <xref:System.Diagnostics.StackFrame>Индексы упорядочиваются alike двумя способами.</xref:System.Diagnostics.StackFrame> Например <xref:System.Diagnostics.StackFrame>с индексом 0 в массиве, возвращенном GetFrames эквивалентно <xref:System.Diagnostics.StackFrame>возвращенных <xref:System.Diagnostics.StackTrace.GetFrame%2A>с входного индекса 0.</xref:System.Diagnostics.StackTrace.GetFrame%2A> </xref:System.Diagnostics.StackFrame> </xref:System.Diagnostics.StackFrame>"
  example:
  - "The following code example demonstrates enumerating the frames in a <xref:System.Diagnostics.StackTrace>.  \n  \n [!code-cpp[StackTraceSample2#3](~/add/codesnippet/cpp/m-system.diagnostics.sta_14_1.cpp)]\n [!code-vb[StackTraceSample2#3](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_14_1.vb)]\n [!code-cs[StackTraceSample2#3](~/add/codesnippet/csharp/m-system.diagnostics.sta_14_1.cs)]"
  syntax:
    content: public virtual System.Diagnostics.StackFrame[] GetFrames ();
    parameters: []
    return:
      type: System.Diagnostics.StackFrame[]
      description: "Массив объектов типа <xref href=&quot;System.Diagnostics.StackFrame&quot;> </xref> представляющий вызовы функции в трассировке стека."
  overload: System.Diagnostics.StackTrace.GetFrames*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  id: METHODS_TO_SKIP
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: METHODS_TO_SKIP
  nameWithType: StackTrace.METHODS_TO_SKIP
  fullName: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Определяет значение по умолчанию для числа методов, которые следует исключить из трассировки стека. Это поле является константой."
  remarks: "Значение по умолчанию для числа методов, чтобы пропустить в начале трассировки стека. Значение этой константы — 0."
  syntax:
    content: public const int METHODS_TO_SKIP = 0;
    return:
      type: System.Int32
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.StackTrace.ToString
  id: ToString
  parent: System.Diagnostics.StackTrace
  langs:
  - csharp
  name: ToString()
  nameWithType: StackTrace.ToString()
  fullName: System.Diagnostics.StackTrace.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Diagnostics
  summary: "Создает читаемое представление трассировки стека."
  remarks: ''
  example:
  - "The following code example writes stack trace information to an event log entry.  \n  \n [!code-cpp[StackTraceSample3#6](~/add/codesnippet/cpp/m-system.diagnostics.sta_10_1.cpp)]\n [!code-cs[StackTraceSample3#6](~/add/codesnippet/csharp/m-system.diagnostics.sta_10_1.cs)]\n [!code-vb[StackTraceSample3#6](~/add/codesnippet/visualbasic/m-system.diagnostics.sta_10_1.vb)]"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Читаемое представление трассировки стека."
  overload: System.Diagnostics.StackTrace.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Threading.ThreadStateException
  parent: System.Threading
  isExternal: false
  name: ThreadStateException
  nameWithType: ThreadStateException
  fullName: System.Threading.ThreadStateException
- uid: System.Diagnostics.StackTrace.#ctor
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace()
  nameWithType: StackTrace.StackTrace()
  fullName: System.Diagnostics.StackTrace.StackTrace()
- uid: System.Diagnostics.StackTrace.#ctor(System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Boolean)
  nameWithType: StackTrace.StackTrace(Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.StackTrace.#ctor(System.Diagnostics.StackFrame)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(StackFrame)
  nameWithType: StackTrace.StackTrace(StackFrame)
  fullName: System.Diagnostics.StackTrace.StackTrace(StackFrame)
- uid: System.Diagnostics.StackFrame
  parent: System.Diagnostics
  isExternal: false
  name: StackFrame
  nameWithType: StackFrame
  fullName: System.Diagnostics.StackFrame
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception)
  nameWithType: StackTrace.StackTrace(Exception)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Int32)
  nameWithType: StackTrace.StackTrace(Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Boolean)
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Int32)
  nameWithType: StackTrace.StackTrace(Exception,Int32)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32)
- uid: System.Diagnostics.StackTrace.#ctor(System.Int32,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Int32,Boolean)
- uid: System.Diagnostics.StackTrace.#ctor(System.Threading.Thread,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Thread,Boolean)
  nameWithType: StackTrace.StackTrace(Thread,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Thread,Boolean)
- uid: System.Threading.Thread
  parent: System.Threading
  isExternal: false
  name: Thread
  nameWithType: Thread
  fullName: System.Threading.Thread
- uid: System.Diagnostics.StackTrace.#ctor(System.Exception,System.Int32,System.Boolean)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace(Exception,Int32,Boolean)
  nameWithType: StackTrace.StackTrace(Exception,Int32,Boolean)
  fullName: System.Diagnostics.StackTrace.StackTrace(Exception,Int32,Boolean)
- uid: System.Diagnostics.StackTrace.FrameCount
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: FrameCount
  nameWithType: StackTrace.FrameCount
  fullName: System.Diagnostics.StackTrace.FrameCount
- uid: System.Diagnostics.StackTrace.GetFrame(System.Int32)
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrame(Int32)
  nameWithType: StackTrace.GetFrame(Int32)
  fullName: System.Diagnostics.StackTrace.GetFrame(Int32)
- uid: System.Diagnostics.StackTrace.GetFrames
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrames()
  nameWithType: StackTrace.GetFrames()
  fullName: System.Diagnostics.StackTrace.GetFrames()
- uid: System.Diagnostics.StackFrame[]
  parent: System.Diagnostics
  isExternal: false
  name: StackFrame
  nameWithType: StackFrame
  fullName: System.Diagnostics.StackFrame[]
  spec.csharp:
  - uid: System.Diagnostics.StackFrame
    name: StackFrame
    nameWithType: StackFrame
    fullName: StackFrame[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.StackTrace.METHODS_TO_SKIP
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: METHODS_TO_SKIP
  nameWithType: StackTrace.METHODS_TO_SKIP
  fullName: System.Diagnostics.StackTrace.METHODS_TO_SKIP
- uid: System.Diagnostics.StackTrace.ToString
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: ToString()
  nameWithType: StackTrace.ToString()
  fullName: System.Diagnostics.StackTrace.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.StackTrace.#ctor*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: StackTrace
  nameWithType: StackTrace.StackTrace
- uid: System.Diagnostics.StackTrace.FrameCount*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: FrameCount
  nameWithType: StackTrace.FrameCount
- uid: System.Diagnostics.StackTrace.GetFrame*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrame
  nameWithType: StackTrace.GetFrame
- uid: System.Diagnostics.StackTrace.GetFrames*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: GetFrames
  nameWithType: StackTrace.GetFrames
- uid: System.Diagnostics.StackTrace.ToString*
  parent: System.Diagnostics.StackTrace
  isExternal: false
  name: ToString
  nameWithType: StackTrace.ToString
