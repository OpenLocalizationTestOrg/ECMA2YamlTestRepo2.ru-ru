### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CngUIPolicy
  id: CngUIPolicy
  children:
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  - System.Security.Cryptography.CngUIPolicy.CreationTitle
  - System.Security.Cryptography.CngUIPolicy.Description
  - System.Security.Cryptography.CngUIPolicy.FriendlyName
  - System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  - System.Security.Cryptography.CngUIPolicy.UseContext
  langs:
  - csharp
  name: CngUIPolicy
  nameWithType: CngUIPolicy
  fullName: System.Security.Cryptography.CngUIPolicy
  type: Class
  summary: "Инкапсулирует Дополнительные параметры конфигурации для пользовательского интерфейса (UI), отображающий криптографии следующего поколения (CNG) при доступе к защищенному ключу."
  remarks: "Этот класс позволяет создать политику пользовательского интерфейса для отображения запросов о ключевых операциях предлагает ПИН-кода смарт-карты. Он также позволяет обеспечить взаимодействие с пользователем для доступа к ключу, даже если ключ хранится в программное обеспечение поставщика хранилища ключей (KSP) вместо на смарт-карте. CNG отображает эти параметры конфигурации для пользовательского интерфейса при доступе к защищенному ключу."
  syntax:
    content: public sealed class CngUIPolicy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;> </xref> класса с помощью указанным уровнем защиты."
  remarks: "Этот конструктор задает уровень защиты ключа в сценариях запроса пользовательского интерфейса."
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "Побитовое сочетание значений перечисления, задающих уровень защиты."
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;> </xref> , используя указанным уровнем защиты и понятное имя."
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel, string friendlyName);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "Побитовое сочетание значений перечисления, задающих уровень защиты."
    - id: friendlyName
      type: System.String
      description: "Понятное имя для ключа для использования в запросе пользовательского интерфейса. Укажите строку null, чтобы использовать имя по умолчанию."
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;> </xref> класса с помощью указанным уровнем защиты, понятное имя и описание."
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel, string friendlyName, string description);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "Побитовое сочетание значений перечисления, задающих уровень защиты."
    - id: friendlyName
      type: System.String
      description: "Понятное имя для ключа для использования в запросе пользовательского интерфейса. Укажите строку null, чтобы использовать имя по умолчанию."
    - id: description
      type: System.String
      description: "Описание полнотекстового ключа. Укажите строку null, чтобы использовать описание по умолчанию."
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels,String,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;> </xref> класса с помощью указанным уровнем защиты, понятное имя, строку описания и использовать контекст."
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel, string friendlyName, string description, string useContext);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "Побитовое сочетание значений перечисления, задающих уровень защиты."
    - id: friendlyName
      type: System.String
      description: "Понятное имя для ключа для использования в запросе пользовательского интерфейса. Укажите строку null, чтобы использовать имя по умолчанию."
    - id: description
      type: System.String
      description: "Описание полнотекстового ключа. Укажите строку null, чтобы использовать описание по умолчанию."
    - id: useContext
      type: System.String
      description: "Описание использования ключа. Укажите строку null, чтобы использовать описание по умолчанию."
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  id: '#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)'
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CngUIPolicy&quot;> </xref> класса с помощью указанным уровнем защиты, понятное имя, строку описания, используйте контекст и заголовок."
  syntax:
    content: public CngUIPolicy (System.Security.Cryptography.CngUIProtectionLevels protectionLevel, string friendlyName, string description, string useContext, string creationTitle);
    parameters:
    - id: protectionLevel
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "Побитовое сочетание значений перечисления, задающих уровень защиты."
    - id: friendlyName
      type: System.String
      description: "Понятное имя для ключа для использования в запросе пользовательского интерфейса. Укажите строку null, чтобы использовать имя по умолчанию."
    - id: description
      type: System.String
      description: "Описание полнотекстового ключа. Укажите строку null, чтобы использовать описание по умолчанию."
    - id: useContext
      type: System.String
      description: "Описание использования ключа. Укажите строку null, чтобы использовать описание по умолчанию."
    - id: creationTitle
      type: System.String
      description: "Заголовок диалогового окна, отображается запрос пользовательского интерфейса. Укажите строку null, чтобы использовать заголовок по умолчанию."
  overload: System.Security.Cryptography.CngUIPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.CreationTitle
  id: CreationTitle
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: CreationTitle
  nameWithType: CngUIPolicy.CreationTitle
  fullName: System.Security.Cryptography.CngUIPolicy.CreationTitle
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает заголовок, отображаемый в пользовательском Интерфейсе в запросе."
  syntax:
    content: public string CreationTitle { get; }
    return:
      type: System.String
      description: "Заголовок диалогового окна, которое появляется при доступе к ключу."
  overload: System.Security.Cryptography.CngUIPolicy.CreationTitle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.Description
  id: Description
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: Description
  nameWithType: CngUIPolicy.Description
  fullName: System.Security.Cryptography.CngUIPolicy.Description
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает строку описания, которая отображается в пользовательском Интерфейсе в запросе."
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Текст описания для диалогового окна, которое появляется при доступе к ключу."
  overload: System.Security.Cryptography.CngUIPolicy.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.FriendlyName
  id: FriendlyName
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: FriendlyName
  nameWithType: CngUIPolicy.FriendlyName
  fullName: System.Security.Cryptography.CngUIPolicy.FriendlyName
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Получает понятное имя, которое отображается в пользовательском Интерфейсе в запросе."
  syntax:
    content: public string FriendlyName { get; }
    return:
      type: System.String
      description: "Понятное имя, которое используется для описания ключа в диалоговом окне, которое появляется при доступе к ключу."
  overload: System.Security.Cryptography.CngUIPolicy.FriendlyName*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  id: ProtectionLevel
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: ProtectionLevel
  nameWithType: CngUIPolicy.ProtectionLevel
  fullName: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает уровень защиты пользовательского интерфейса для ключа."
  syntax:
    content: public System.Security.Cryptography.CngUIProtectionLevels ProtectionLevel { get; }
    return:
      type: System.Security.Cryptography.CngUIProtectionLevels
      description: "Объект, описывающий уровень защиты пользовательского интерфейса для применения к ключу."
  overload: System.Security.Cryptography.CngUIPolicy.ProtectionLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CngUIPolicy.UseContext
  id: UseContext
  parent: System.Security.Cryptography.CngUIPolicy
  langs:
  - csharp
  name: UseContext
  nameWithType: CngUIPolicy.UseContext
  fullName: System.Security.Cryptography.CngUIPolicy.UseContext
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Возвращает описание использования ключа."
  syntax:
    content: public string UseContext { get; }
    return:
      type: System.String
      description: "Описание использования ключа."
  overload: System.Security.Cryptography.CngUIPolicy.UseContext*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels)
- uid: System.Security.Cryptography.CngUIProtectionLevels
  parent: System.Security.Cryptography
  isExternal: false
  name: CngUIProtectionLevels
  nameWithType: CngUIProtectionLevels
  fullName: System.Security.Cryptography.CngUIProtectionLevels
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String)
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels,String,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String)
- uid: System.Security.Cryptography.CngUIPolicy.#ctor(System.Security.Cryptography.CngUIProtectionLevels,System.String,System.String,System.String,System.String)
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  nameWithType: CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
  fullName: System.Security.Cryptography.CngUIPolicy.CngUIPolicy(CngUIProtectionLevels,String,String,String,String)
- uid: System.Security.Cryptography.CngUIPolicy.CreationTitle
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CreationTitle
  nameWithType: CngUIPolicy.CreationTitle
  fullName: System.Security.Cryptography.CngUIPolicy.CreationTitle
- uid: System.Security.Cryptography.CngUIPolicy.Description
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: Description
  nameWithType: CngUIPolicy.Description
  fullName: System.Security.Cryptography.CngUIPolicy.Description
- uid: System.Security.Cryptography.CngUIPolicy.FriendlyName
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: FriendlyName
  nameWithType: CngUIPolicy.FriendlyName
  fullName: System.Security.Cryptography.CngUIPolicy.FriendlyName
- uid: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: ProtectionLevel
  nameWithType: CngUIPolicy.ProtectionLevel
  fullName: System.Security.Cryptography.CngUIPolicy.ProtectionLevel
- uid: System.Security.Cryptography.CngUIPolicy.UseContext
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: UseContext
  nameWithType: CngUIPolicy.UseContext
  fullName: System.Security.Cryptography.CngUIPolicy.UseContext
- uid: System.Security.Cryptography.CngUIPolicy.#ctor*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CngUIPolicy
  nameWithType: CngUIPolicy.CngUIPolicy
- uid: System.Security.Cryptography.CngUIPolicy.CreationTitle*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: CreationTitle
  nameWithType: CngUIPolicy.CreationTitle
- uid: System.Security.Cryptography.CngUIPolicy.Description*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: Description
  nameWithType: CngUIPolicy.Description
- uid: System.Security.Cryptography.CngUIPolicy.FriendlyName*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: FriendlyName
  nameWithType: CngUIPolicy.FriendlyName
- uid: System.Security.Cryptography.CngUIPolicy.ProtectionLevel*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: ProtectionLevel
  nameWithType: CngUIPolicy.ProtectionLevel
- uid: System.Security.Cryptography.CngUIPolicy.UseContext*
  parent: System.Security.Cryptography.CngUIPolicy
  isExternal: false
  name: UseContext
  nameWithType: CngUIPolicy.UseContext
