### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.CspParameters
  id: CspParameters
  children:
  - System.Security.Cryptography.CspParameters.#ctor
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  - System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  - System.Security.Cryptography.CspParameters.CryptoKeySecurity
  - System.Security.Cryptography.CspParameters.Flags
  - System.Security.Cryptography.CspParameters.KeyContainerName
  - System.Security.Cryptography.CspParameters.KeyNumber
  - System.Security.Cryptography.CspParameters.KeyPassword
  - System.Security.Cryptography.CspParameters.ParentWindowHandle
  - System.Security.Cryptography.CspParameters.ProviderName
  - System.Security.Cryptography.CspParameters.ProviderType
  langs:
  - csharp
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
  type: Class
  summary: "Содержит параметры, передаваемые в поставщике служб шифрования (CSP), который выполняет криптографические вычисления. Этот класс не наследуется."
  remarks: "Класс CspParameters представляет параметры, которые можно передать управляемыми криптографическими классами, которые внутренне используют Microsoft поставщика служб шифрования (CSP) из неуправляемой Microsoft Cryptography API (CAPI). Классы, имена которых заканчиваются на «CryptoServiceProvider» являются оболочки управляемого кода для соответствующего CSP.       Класс CspParameters для выполните следующие действия:-указать, передав тип поставщика для определенного поставщика служб Шифрования <xref:System.Security.Cryptography.CspParameters.ProviderType>или <xref:System.Security.Cryptography.CspParameters.ProviderName>свойство.</xref:System.Security.Cryptography.CspParameters.ProviderName> </xref:System.Security.Cryptography.CspParameters.ProviderType>  Можно также указать поставщика служб Шифрования, с использованием перегрузки конструктора.      -Создание контейнера ключей, в котором можно хранить ключи шифрования.  Контейнеры ключей предоставляют наиболее безопасный способ хранения криптографических ключей и храните их в тайне от злоумышленников.  Дополнительные сведения о создании контейнеров ключей см. в разделе [как: хранилище асимметричных ключей в контейнере ключей](~/add/includes/ajax-current-ext-md.md).      — Укажите, следует ли создать асимметричный ключ подписи или exchange асимметричный ключ, используя <xref:System.Security.Cryptography.CspParameters.KeyNumber>свойство.</xref:System.Security.Cryptography.CspParameters.KeyNumber>"
  example:
  - "The following code example creates a key container using the CspParameters class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/t-system.security.crypto_47_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/t-system.security.crypto_47_1.cs)]  \n  \n The following code example uses the CspParameters class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \n  \n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/t-system.security.crypto_47_2.cs)]\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/t-system.security.crypto_47_2.cpp)]\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/t-system.security.crypto_47_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class CspParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters()
  nameWithType: CspParameters.CspParameters()
  fullName: System.Security.Cryptography.CspParameters.CspParameters()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> класса."
  remarks: "Инициализирует эту форму CspParameters <xref:System.Security.Cryptography.CspParameters.ProviderType>поле значение `24`, который указывает поставщика PROV_RSA_AES.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Этот поставщик по умолчанию совместима с <xref:System.Security.Cryptography.Aes>алгоритма.</xref:System.Security.Cryptography.Aes>       Сведения о других типах поставщика см. в разделе <xref:System.Security.Cryptography.CspParameters.ProviderType>поля.</xref:System.Security.Cryptography.CspParameters.ProviderType>"
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_108_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_108_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_108_1.cs)]"
  syntax:
    content: public CspParameters ();
    parameters: []
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32)
  nameWithType: CspParameters.CspParameters(Int32)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> класса с заданным кодом типа поставщика."
  remarks: "Конструктор CspParameters используется для задания типа поставщика, передав числовое значение, представляющее этого поставщика.  Числовые значения, которые представляют типы поставщика по умолчанию определены в файле заголовка WinCrypt.h: -, чтобы указать поставщика, совместимый с <xref:System.Security.Cryptography.RSA>алгоритма, передайте значение `1`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.RSA>      -Указание поставщик, совместимый с <xref:System.Security.Cryptography.DSA>алгоритма, передайте значение `13`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.DSA>       Сведения о других значений типа поставщика см. в разделе <xref:System.Security.Cryptography.CspParameters.ProviderType>поля.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Дополнительные сведения о типах поставщика по умолчанию и их поведение см. в документации Microsoft Cryptography API (CAPI) в библиотеке MSDN."
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/m-system.security.crypto_129_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/m-system.security.crypto_129_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/m-system.security.crypto_129_1.cs)]"
  syntax:
    content: public CspParameters (int dwTypeIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Код типа поставщика, определяющий вид создаваемого поставщика."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  id: '#ctor(System.Int32,System.String)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String)
  nameWithType: CspParameters.CspParameters(Int32,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> класса с заданным кодом типа поставщика и именем."
  remarks: "Используйте конструктор CspParameters, чтобы указать тип поставщика и имя.       Укажите тип поставщика, передав числовое значение, представляющее требуемый тип поставщика.  Числовые значения, которые представляют типы поставщика по умолчанию определены в файле заголовка WinCrypt.h: -, чтобы указать поставщика, совместимый с <xref:System.Security.Cryptography.RSA>алгоритма, передайте значение `1`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.RSA>      -Указание поставщик, совместимый с <xref:System.Security.Cryptography.DSA>алгоритма, передайте значение `13`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.DSA>       Сведения о других значений типа поставщика см. в разделе <xref:System.Security.Cryptography.CspParameters.ProviderType>поля.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Дополнительные сведения о типах поставщика по умолчанию и их поведение см. в документации Microsoft Cryptography API (CAPI) в библиотеке MSDN."
  example:
  - "The following code example uses the <xref:System.Security.Cryptography.CspParameters> class to select a Smart Card Cryptographic Service Provider.  It then signs and verifies data using the smart card.  \n  \n [!code-cs[Cryptography.SmartCardCSP#1](~/add/codesnippet/csharp/3115faba-ad85-4109-97d8-_1.cs)]\n [!code-cpp[Cryptography.SmartCardCSP#1](~/add/codesnippet/cpp/3115faba-ad85-4109-97d8-_1.cpp)]\n [!code-vb[Cryptography.SmartCardCSP#1](~/add/codesnippet/visualbasic/3115faba-ad85-4109-97d8-_1.vb)]"
  syntax:
    content: public CspParameters (int dwTypeIn, string strProviderNameIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Код типа поставщика, определяющий вид создаваемого поставщика."
    - id: strProviderNameIn
      type: System.String
      description: "Имя поставщика."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.String)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String)
  nameWithType: CspParameters.CspParameters(Int32,String,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> класса с заданным кодом типа поставщика и именем и именем контейнера."
  remarks: "Используйте конструктор CspParameters, чтобы указать тип поставщика, имя поставщика и имя контейнера.       Имя контейнера можно использовать для извлечения ключа из этого контейнера.       Укажите тип поставщика, передав числовое значение, представляющее требуемый тип поставщика.  Числовые значения, которые представляют типы поставщика по умолчанию определены в файле заголовка WinCrypt.h: -, чтобы указать поставщика, совместимый с <xref:System.Security.Cryptography.RSA>алгоритма, передайте значение `1`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.RSA>      -Указание поставщик, совместимый с <xref:System.Security.Cryptography.DSA>алгоритма, передайте значение `13`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.DSA>       Сведения о других значений типа поставщика см. в разделе <xref:System.Security.Cryptography.CspParameters.ProviderType>поля.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Дополнительные сведения о типах поставщика по умолчанию и их поведение см. в документации Microsoft Cryptography API (CAPI) в библиотеке MSDN."
  syntax:
    content: public CspParameters (int dwTypeIn, string strProviderNameIn, string strContainerNameIn);
    parameters:
    - id: dwTypeIn
      type: System.Int32
      description: "Код типа поставщика, определяющий вид создаваемого поставщика."
    - id: strProviderNameIn
      type: System.String
      description: "Имя поставщика."
    - id: strContainerNameIn
      type: System.String
      description: "Имя контейнера."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> класса, используя тип поставщика, имя поставщика, имя контейнера, доступ к информации и дескриптор диалогового окна пароля неуправляемые смарт-карты."
  remarks: "Имя контейнера можно использовать для извлечения ключа из этого контейнера.       Укажите тип поставщика, передав числовое значение, представляющее требуемый тип поставщика.  Числовые значения, которые представляют типы поставщика по умолчанию определены в файле заголовка WinCrypt.h: -, чтобы указать поставщика, совместимый с <xref:System.Security.Cryptography.RSA>алгоритма, передайте значение `1`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.RSA>      -Указание поставщик, совместимый с <xref:System.Security.Cryptography.DSA>алгоритма, передайте значение `13`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.DSA>       Сведения о других значений типа поставщика см. в разделе <xref:System.Security.Cryptography.CspParameters.ProviderType>поля.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Дополнительные сведения о типах поставщика по умолчанию и их поведение см. в документации Microsoft Cryptography API (CAPI) в библиотеке MSDN."
  syntax:
    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, IntPtr parentWindowHandle);
    parameters:
    - id: providerType
      type: System.Int32
      description: "Код типа поставщика, определяющий вид создаваемого поставщика."
    - id: providerName
      type: System.String
      description: "Имя поставщика."
    - id: keyContainerName
      type: System.String
      description: "Имя контейнера."
    - id: cryptoKeySecurity
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Объект, представляющий права доступа и аудита правила для контейнера."
    - id: parentWindowHandle
      type: System.IntPtr
      description: "Дескриптор родительского окна для окна ввода пароля смарт-карты."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  id: '#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)'
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> класса, используя тип поставщика, имя поставщика, имя контейнера, доступ к информации и пароль, связанный со смарт-картой."
  remarks: "Имя контейнера можно использовать для извлечения ключа из этого контейнера.       Укажите тип поставщика, передав числовое значение, представляющее требуемый тип поставщика.  Числовые значения, которые представляют типы поставщика по умолчанию определены в файле заголовка WinCrypt.h: -, чтобы указать поставщика, совместимый с <xref:System.Security.Cryptography.RSA>алгоритма, передайте значение `1`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.RSA>      -Указание поставщик, совместимый с <xref:System.Security.Cryptography.DSA>алгоритма, передайте значение `13`для `dwTypeIn` параметр.</xref:System.Security.Cryptography.DSA>       Сведения о других значений типа поставщика см. в разделе <xref:System.Security.Cryptography.CspParameters.ProviderType>поля.</xref:System.Security.Cryptography.CspParameters.ProviderType>  Дополнительные сведения о типах поставщика по умолчанию и их поведение см. в документации Microsoft Cryptography API (CAPI) в библиотеке MSDN."
  syntax:
    content: public CspParameters (int providerType, string providerName, string keyContainerName, System.Security.AccessControl.CryptoKeySecurity cryptoKeySecurity, System.Security.SecureString keyPassword);
    parameters:
    - id: providerType
      type: System.Int32
      description: "Код типа поставщика, определяющий вид создаваемого поставщика."
    - id: providerName
      type: System.String
      description: "Имя поставщика."
    - id: keyContainerName
      type: System.String
      description: "Имя контейнера."
    - id: cryptoKeySecurity
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Объект, представляющий права доступа и аудита правила для контейнера."
    - id: keyPassword
      type: System.Security.SecureString
      description: "Пароль, связанный со смарт-картой."
  overload: System.Security.Cryptography.CspParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  id: CryptoKeySecurity
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает или задает <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> объекта, представляет права доступа и аудита для контейнера."
  remarks: "Свойство CryptoKeySecurity определяет <xref:System.Security.AccessControl.CryptoKeySecurity>объект, который управляет создании элемента управления доступом перечислены (DACL) и системы управления доступом (SACL) для контейнера.</xref:System.Security.AccessControl.CryptoKeySecurity>"
  syntax:
    content: public System.Security.AccessControl.CryptoKeySecurity CryptoKeySecurity { get; set; }
    return:
      type: System.Security.AccessControl.CryptoKeySecurity
      description: "Объект <xref href=&quot;System.Security.AccessControl.CryptoKeySecurity&quot;> </xref> объекта, представляет права доступа и аудита для контейнера."
  overload: System.Security.Cryptography.CspParameters.CryptoKeySecurity*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.Flags
  id: Flags
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: Flags
  nameWithType: CspParameters.Flags
  fullName: System.Security.Cryptography.CspParameters.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Представляет флаги для <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref> , изменяющие поведение поставщика служб шифрования (CSP)."
  syntax:
    content: public System.Security.Cryptography.CspProviderFlags Flags { get; set; }
    return:
      type: System.Security.Cryptography.CspProviderFlags
      description: "Значение перечисления, или побитовое сочетание значений перечисления."
  overload: System.Security.Cryptography.CspParameters.Flags*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение не является допустимым значением перечисления."
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: CspParameters.KeyContainerName
  fullName: System.Security.Cryptography.CspParameters.KeyContainerName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Представляет имя контейнера ключа для <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Используйте поле КонтейнерКлючей для указания имени контейнера ключа.  Имя контейнера можно использовать для извлечения постоянного ключа из этого контейнера.       Дополнительные сведения о создании контейнеров ключей см. в разделе [как: хранилище асимметричных ключей в контейнере ключей](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a key container using the <xref:System.Security.Cryptography.CspParameters> class and saves the key in the container.  \n  \n [!code-cpp[capikey#1](~/add/codesnippet/cpp/f-system.security.crypto_6_1.cpp)]\n [!code-vb[capikey#1](~/add/codesnippet/visualbasic/f-system.security.crypto_6_1.vb)]\n [!code-cs[capikey#1](~/add/codesnippet/csharp/f-system.security.crypto_6_1.cs)]"
  syntax:
    content: public string KeyContainerName;
    return:
      type: System.String
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyNumber
  id: KeyNumber
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyNumber
  nameWithType: CspParameters.KeyNumber
  fullName: System.Security.Cryptography.CspParameters.KeyNumber
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Указывает, является ли асимметричный ключ создан как ключ подписи или ключ обмена."
  remarks: "Инициализирует поле KeyNumber <xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>свойство при инициализации <xref:System.Security.Cryptography.CspKeyContainerInfo>объекта с <xref:System.Security.Cryptography.CspParameters>объекта.</xref:System.Security.Cryptography.CspParameters> </xref:System.Security.Cryptography.CspKeyContainerInfo> </xref:System.Security.Cryptography.CspKeyContainerInfo.KeyNumber%2A>       Ключ обмена представляет собой пару асимметричных ключей, используется для шифрования сеансовых ключей с целью безопасного хранения и обмена ими с другими пользователями.  Можно использовать <xref:System.Security.Cryptography.KeyNumber>значение (`1`) для указания ключа обмена.</xref:System.Security.Cryptography.KeyNumber>  Это значение соответствует `AT_KEYEXCHANGE` значение, используемое в неуправляемых Microsoft шифрования API (CAPI).       Ключ подписи является пару асимметричных ключей, используемых для проверки подлинности сообщения с цифровой подписью или файлов.  Можно использовать <xref:System.Security.Cryptography.KeyNumber>значение (`2`) для указания ключа подписи.</xref:System.Security.Cryptography.KeyNumber>  Это значение соответствует `AT_SIGNATURE` значение, используемое в CAPI.       По умолчанию поле KeyNumber указывает ключ обмена."
  example:
  - "The following code example demonstrates how to use the <xref:System.Security.Cryptography.KeyNumber> enumeration to specify a key type for an <xref:System.Security.Cryptography.RSACryptoServiceProvider> object.  \n  \n [!code-cs[Cryptography.KeyNumber#1](~/add/codesnippet/csharp/f-system.security.crypto_8_1.cs)]\n [!code-cpp[Cryptography.KeyNumber#1](~/add/codesnippet/cpp/f-system.security.crypto_8_1.cpp)]\n [!code-vb[Cryptography.KeyNumber#1](~/add/codesnippet/visualbasic/f-system.security.crypto_8_1.vb)]"
  syntax:
    content: public int KeyNumber;
    return:
      type: System.Int32
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.KeyPassword
  id: KeyPassword
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
  fullName: System.Security.Cryptography.CspParameters.KeyPassword
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает или задает пароль, связанный со смарт-картой."
  remarks: "Свойство KeyPassword на ввод пароля для смарт-картой.  При указании пароля с помощью этого свойства, диалоговое окно «пароль» не будет предоставляться для пользователя."
  syntax:
    content: public System.Security.SecureString KeyPassword { get; set; }
    return:
      type: System.Security.SecureString
      description: "Пароль, связанный со смарт-картой."
  overload: System.Security.Cryptography.CspParameters.KeyPassword*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle
  id: ParentWindowHandle
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Возвращает или задает дескриптор неуправляемого родительского окна для диалогового окна пароля смарт-карты."
  remarks: "Свойство ParentWindowHandle определяет дескриптор неуправляемого родительского окна для диалогового окна пароля смарт-карты.  При указании дескриптор с помощью этого свойства, откроется диалоговое окно пароля смарт-карты пользователя.       Можно избежать, представления, явно указав пароль, используя диалоговое окно пароля смарт-карты <xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>свойство.</xref:System.Security.Cryptography.CspParameters.KeyPassword%2A>"
  syntax:
    content: public IntPtr ParentWindowHandle { get; set; }
    return:
      type: System.IntPtr
      description: "Дескриптор родительского окна для диалогового окна пароля смарт-карты."
  overload: System.Security.Cryptography.CspParameters.ParentWindowHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ProviderName
  id: ProviderName
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ProviderName
  nameWithType: CspParameters.ProviderName
  fullName: System.Security.Cryptography.CspParameters.ProviderName
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Представляет имя поставщика для <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "См. в документации Microsoft Cryptography API (CAPI) в библиотеке MSDN, Дополнительные сведения об именах поставщиков."
  syntax:
    content: public string ProviderName;
    return:
      type: System.String
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.CspParameters.ProviderType
  id: ProviderType
  parent: System.Security.Cryptography.CspParameters
  langs:
  - csharp
  name: ProviderType
  nameWithType: CspParameters.ProviderType
  fullName: System.Security.Cryptography.CspParameters.ProviderType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: "Представляет код типа поставщика для <xref href=&quot;System.Security.Cryptography.CspParameters&quot;> </xref>."
  remarks: "Поле ProviderType служит для задания типа поставщика, передав числовое значение, представляющее этого поставщика.  Числовые значения, которые представляют типы поставщика по умолчанию определены в файле заголовка WinCrypt.h: -, чтобы указать поставщика, совместимый с <xref:System.Security.Cryptography.RSA>класса, передайте значение `1`.</xref:System.Security.Cryptography.RSA>      -Указание поставщик, совместимый с <xref:System.Security.Cryptography.DSA>класса, передайте значение `13`.</xref:System.Security.Cryptography.DSA>       В следующей таблице перечислены типы поставщика и соответствующие им числовые значения, определенные в файле заголовка WinCrypt.h.      | Тип поставщика | Числовое значение |   |-------------------|-------------------|   | `PROV_RSA_FULL`|1|   | `PROV_RSA_SIG`|2|   | `PROV_DSS`|3|   | `PROV_FORTEZZA`|4|   | `PROV_MS_EXCHANGE`|5|   | `PROV_SSL`|6|   | `PROV_RSA_SCHANNEL`|12|   | `PROV_DSS_DH`|13|   | `PROV_EC_ECDSA_SIG`|14|   | `PROV_EC_ECNRA_SIG`|15|   | `PROV_EC_ECDSA_FULL`|16|   | `PROV_EC_ECNRA_FULL`|17|   | `PROV_DH_SCHANNEL`|18|   | `PROV_SPYRUS_LYNKS`|20|   | `PROV_RNG`|21|   | `PROV_INTEL_SEC`|22|   | `PROV_REPLACE_OWF`|23|   | `PROV_RSA_AES`|24|       Дополнительные сведения о типах поставщика по умолчанию и их поведение см. в документации Microsoft Cryptography API (CAPI) в библиотеке MSDN."
  syntax:
    content: public int ProviderType;
    return:
      type: System.Int32
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Cryptography.CspParameters.#ctor
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters()
  nameWithType: CspParameters.CspParameters()
  fullName: System.Security.Cryptography.CspParameters.CspParameters()
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32)
  nameWithType: CspParameters.CspParameters(Int32)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String)
  nameWithType: CspParameters.CspParameters(Int32,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String)
  nameWithType: CspParameters.CspParameters(Int32,String,String)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String)
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.IntPtr)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,IntPtr)
- uid: System.Security.AccessControl.CryptoKeySecurity
  parent: System.Security.AccessControl
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CryptoKeySecurity
  fullName: System.Security.AccessControl.CryptoKeySecurity
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Security.Cryptography.CspParameters.#ctor(System.Int32,System.String,System.String,System.Security.AccessControl.CryptoKeySecurity,System.Security.SecureString)
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  nameWithType: CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
  fullName: System.Security.Cryptography.CspParameters.CspParameters(Int32,String,String,CryptoKeySecurity,SecureString)
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: false
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
  fullName: System.Security.Cryptography.CspParameters.CryptoKeySecurity
- uid: System.Security.Cryptography.CspParameters.Flags
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: Flags
  nameWithType: CspParameters.Flags
  fullName: System.Security.Cryptography.CspParameters.Flags
- uid: System.Security.Cryptography.CspProviderFlags
  parent: System.Security.Cryptography
  isExternal: false
  name: CspProviderFlags
  nameWithType: CspProviderFlags
  fullName: System.Security.Cryptography.CspProviderFlags
- uid: System.Security.Cryptography.CspParameters.KeyContainerName
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyContainerName
  nameWithType: CspParameters.KeyContainerName
  fullName: System.Security.Cryptography.CspParameters.KeyContainerName
- uid: System.Security.Cryptography.CspParameters.KeyNumber
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyNumber
  nameWithType: CspParameters.KeyNumber
  fullName: System.Security.Cryptography.CspParameters.KeyNumber
- uid: System.Security.Cryptography.CspParameters.KeyPassword
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
  fullName: System.Security.Cryptography.CspParameters.KeyPassword
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
  fullName: System.Security.Cryptography.CspParameters.ParentWindowHandle
- uid: System.Security.Cryptography.CspParameters.ProviderName
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ProviderName
  nameWithType: CspParameters.ProviderName
  fullName: System.Security.Cryptography.CspParameters.ProviderName
- uid: System.Security.Cryptography.CspParameters.ProviderType
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ProviderType
  nameWithType: CspParameters.ProviderType
  fullName: System.Security.Cryptography.CspParameters.ProviderType
- uid: System.Security.Cryptography.CspParameters.#ctor*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters.CspParameters
- uid: System.Security.Cryptography.CspParameters.CryptoKeySecurity*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: CryptoKeySecurity
  nameWithType: CspParameters.CryptoKeySecurity
- uid: System.Security.Cryptography.CspParameters.Flags*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: Flags
  nameWithType: CspParameters.Flags
- uid: System.Security.Cryptography.CspParameters.KeyPassword*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: KeyPassword
  nameWithType: CspParameters.KeyPassword
- uid: System.Security.Cryptography.CspParameters.ParentWindowHandle*
  parent: System.Security.Cryptography.CspParameters
  isExternal: false
  name: ParentWindowHandle
  nameWithType: CspParameters.ParentWindowHandle
