### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.IFieldTemplateFactory
  id: IFieldTemplateFactory
  children:
  - System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  - System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  langs:
  - csharp
  name: IFieldTemplateFactory
  nameWithType: IFieldTemplateFactory
  fullName: System.Web.DynamicData.IFieldTemplateFactory
  type: Interface
  summary: "Определяет интерфейс, реализованный с помощью объектов, создание шаблонов полей."
  remarks: "Этот класс должен быть реализован <xref:System.Web.DynamicData.FieldTemplateFactory>класса, чтобы создать шаблон полей.</xref:System.Web.DynamicData.FieldTemplateFactory> Этот интерфейс предоставляет методы инициализации <xref:System.Web.DynamicData.FieldTemplateFactory>и создает шаблонов полей.</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public interface IFieldTemplateFactory
  implements: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  id: CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Создает экземпляр шаблона поля с помощью <xref href=&quot;System.Web.DynamicData.MetaColumn&quot;> </xref> класса <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref> класса и <xref:System.Web.DynamicData.MetaColumn.UIHint*>свойство.</xref:System.Web.DynamicData.MetaColumn.UIHint*>"
  remarks: "Шаблоны полей платформа динамических данных являются пользовательскими элементами управления ASP.NET, сопоставляющими элементы управления к типам данных в модели данных. Шаблоны полей обычно являются производными от <xref:System.Web.DynamicData.FieldTemplateUserControl>, класс, который позволяет доступ к поля данных, столбцы данных и метаданных в модели данных.</xref:System.Web.DynamicData.FieldTemplateUserControl> Проекты платформы динамических данных предоставляют по умолчанию шаблоны полей, но можно изменять их и создавать пользовательские шаблоны полей. Когда imlemented, этот метод создает шаблон поля, основанный на столбце данных, режим столбца данных и <xref:System.Web.DynamicData.MetaColumn.UIHint%2A>Свойства.</xref:System.Web.DynamicData.MetaColumn.UIHint%2A> Указать `uiHint` параметра, если нужно отобразить данные с помощью пользовательского шаблона поля."
  syntax:
    content: public System.Web.DynamicData.IFieldTemplate CreateFieldTemplate (System.Web.DynamicData.MetaColumn column, System.Web.UI.WebControls.DataBoundControlMode mode, string uiHint);
    parameters:
    - id: column
      type: System.Web.DynamicData.MetaColumn
      description: "Задает столбец данных, используемый для отображения шаблона поля."
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Задает режим отображения шаблона поля."
    - id: uiHint
      type: System.String
      description: "Указывает шаблон полей для использования."
    return:
      type: System.Web.DynamicData.IFieldTemplate
      description: "Экземпляр <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> объекта при реализации в классе."
  overload: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  id: Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  langs:
  - csharp
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Инициализирует <xref href=&quot;System.Web.DynamicData.FieldTemplateFactory&quot;> </xref> с использованием указанной модели данных."
  remarks: "Платформа динамических данных ASP.NET использует шаблоны полей для отображения отдельных полей данных. Шаблоны полей обычно реализуются как пользовательские элементы управления, которые сопоставляют типы данных в модели данных для отдельных полей в элементе управления данными. Этот метод инициализирует <xref:System.Web.DynamicData.FieldTemplateFactory>класс, который используется для создания шаблонов полей в модели данных с помощью шаблона поля будет использовать.</xref:System.Web.DynamicData.FieldTemplateFactory>"
  syntax:
    content: public void Initialize (System.Web.DynamicData.MetaModel model);
    parameters:
    - id: model
      type: System.Web.DynamicData.MetaModel
      description: "Задает модель данных, который использует шаблон поля."
  overload: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(System.Web.DynamicData.MetaColumn,System.Web.UI.WebControls.DataBoundControlMode,System.String)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate(MetaColumn,DataBoundControlMode,String)
- uid: System.Web.DynamicData.IFieldTemplate
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldTemplate
  nameWithType: IFieldTemplate
  fullName: System.Web.DynamicData.IFieldTemplate
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize(System.Web.DynamicData.MetaModel)
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize(MetaModel)
  nameWithType: IFieldTemplateFactory.Initialize(MetaModel)
  fullName: System.Web.DynamicData.IFieldTemplateFactory.Initialize(MetaModel)
- uid: System.Web.DynamicData.MetaModel
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaModel
  nameWithType: MetaModel
  fullName: System.Web.DynamicData.MetaModel
- uid: System.Web.DynamicData.IFieldTemplateFactory.CreateFieldTemplate*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: CreateFieldTemplate
  nameWithType: IFieldTemplateFactory.CreateFieldTemplate
- uid: System.Web.DynamicData.IFieldTemplateFactory.Initialize*
  parent: System.Web.DynamicData.IFieldTemplateFactory
  isExternal: false
  name: Initialize
  nameWithType: IFieldTemplateFactory.Initialize
