### YamlMime:ManagedReference
items:
- uid: System.Activities.ActivityDelegate
  id: ActivityDelegate
  children:
  - System.Activities.ActivityDelegate.#ctor
  - System.Activities.ActivityDelegate.DisplayName
  - System.Activities.ActivityDelegate.GetResultArgument
  - System.Activities.ActivityDelegate.Handler
  - System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  - System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  - System.Activities.ActivityDelegate.ToString
  langs:
  - csharp
  name: ActivityDelegate
  nameWithType: ActivityDelegate
  fullName: System.Activities.ActivityDelegate
  type: Class
  summary: "Представляет обратный вызов основанные на действиях."
  remarks: 'Делегаты действий позволяют создателям действий предоставлять обратные вызовы с определенными сигнатурами которых пользователи действия могут предоставлять основанные на действиях обработчики. Существует два типа делегатов действия: <xref:System.Activities.ActivityAction%601>используется для вызова действий, которые не имеет возвращаемого значения, и <xref:System.Activities.ActivityFunc%601>используется для вызова действий, которые имеют значение, возвращаемое.</xref:System.Activities.ActivityFunc%601> </xref:System.Activities.ActivityAction%601> Делегаты действий полезны в случаях, когда дочерние действия должны быть ограничены необходимостью использования определенной сигнатуры.'
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Handler")]

      public abstract class ActivityDelegate
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.#ctor
  id: '#ctor'
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: ActivityDelegate()
  nameWithType: ActivityDelegate.ActivityDelegate()
  fullName: System.Activities.ActivityDelegate.ActivityDelegate()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Вызывается для инициализации объекта конструкторов в производных классах."
  syntax:
    content: protected ActivityDelegate ();
    parameters: []
  overload: System.Activities.ActivityDelegate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.DisplayName
  id: DisplayName
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: DisplayName
  nameWithType: ActivityDelegate.DisplayName
  fullName: System.Activities.ActivityDelegate.DisplayName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Возвращает или задает дополнительное понятное имя, которое используется для отладки, проверки, обработки исключений и отслеживания."
  remarks: "Это свойство доступно только для чтения во время выполнения. Если значение устанавливается во время выполнения, <xref:System.InvalidOperationException>возникает исключение.</xref:System.InvalidOperationException>"
  syntax:
    content: public string DisplayName { get; set; }
    return:
      type: System.String
      description: "Понятное имя, используемое для отладки, проверки, обработки исключений и отслеживания."
  overload: System.Activities.ActivityDelegate.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.GetResultArgument
  id: GetResultArgument
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: GetResultArgument()
  nameWithType: ActivityDelegate.GetResultArgument()
  fullName: System.Activities.ActivityDelegate.GetResultArgument()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "При реализации в производном классе, возвращает <xref href=&quot;System.Activities.DelegateOutArgument&quot;> </xref> из <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>."
  syntax:
    content: protected virtual System.Activities.DelegateOutArgument GetResultArgument ();
    parameters: []
    return:
      type: System.Activities.DelegateOutArgument
      description: "Выходной аргумент для <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>."
  overload: System.Activities.ActivityDelegate.GetResultArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.Handler
  id: Handler
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: Handler
  nameWithType: ActivityDelegate.Handler
  fullName: System.Activities.ActivityDelegate.Handler
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Возвращает или задает действие, представляемое этим <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>."
  remarks: "Это свойство доступно только для чтения во время выполнения. Если значение устанавливается во время выполнения, <xref:System.InvalidOperationException>возникает исключение.</xref:System.InvalidOperationException>"
  syntax:
    content: public System.Activities.Activity Handler { get; set; }
    return:
      type: System.Activities.Activity
      description: "Действие, представляемое этим <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>."
  overload: System.Activities.ActivityDelegate.Handler*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  id: OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  fullName: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Предоставляет список аргументов времени выполнения для <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref>."
  remarks: "При переопределении в производном классе этот метод можно изменить аргументы, используемые <xref:System.Activities.ActivityDelegate>.</xref:System.Activities.ActivityDelegate>"
  syntax:
    content: protected virtual void OnGetRuntimeDelegateArguments (System.Collections.Generic.IList<System.Activities.RuntimeDelegateArgument> runtimeDelegateArguments);
    parameters:
    - id: runtimeDelegateArguments
      type: System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument}
      description: "Список, который заполняется аргументами времени выполнения."
  overload: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  id: ShouldSerializeDisplayName
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: ShouldSerializeDisplayName()
  nameWithType: ActivityDelegate.ShouldSerializeDisplayName()
  fullName: System.Activities.ActivityDelegate.ShouldSerializeDisplayName()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Указывает, является ли <xref:System.Activities.ActivityDelegate.DisplayName*>значения свойства должен быть сериализован в XAML.</xref:System.Activities.ActivityDelegate.DisplayName*>"
  remarks: "Возвращает ShouldSerializeDisplayName `true` Если <xref:System.Activities.ActivityDelegate.DisplayName%2A>было задано явным образом <xref:System.Activities.ActivityDelegate>.</xref:System.Activities.ActivityDelegate> </xref:System.Activities.ActivityDelegate.DisplayName%2A>"
  syntax:
    content: public bool ShouldSerializeDisplayName ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, если <xref:System.Activities.ActivityDelegate.DisplayName*>значение свойства должно быть сериализованы; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Activities.ActivityDelegate.DisplayName*>"
  overload: System.Activities.ActivityDelegate.ShouldSerializeDisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.ActivityDelegate.ToString
  id: ToString
  parent: System.Activities.ActivityDelegate
  langs:
  - csharp
  name: ToString()
  nameWithType: ActivityDelegate.ToString()
  fullName: System.Activities.ActivityDelegate.ToString()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Возвращает <xref:System.String>представление <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref> , содержащий <xref:System.Activities.ActivityDelegate.DisplayName*>.</xref:System.Activities.ActivityDelegate.DisplayName*> </xref:System.String>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Представление <xref href=&quot;System.Activities.ActivityDelegate&quot;> </xref> , содержащий <xref:System.Activities.ActivityDelegate.DisplayName*>.</xref:System.Activities.ActivityDelegate.DisplayName*>"
  overload: System.Activities.ActivityDelegate.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.ActivityDelegate.#ctor
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ActivityDelegate()
  nameWithType: ActivityDelegate.ActivityDelegate()
  fullName: System.Activities.ActivityDelegate.ActivityDelegate()
- uid: System.Activities.ActivityDelegate.DisplayName
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: DisplayName
  nameWithType: ActivityDelegate.DisplayName
  fullName: System.Activities.ActivityDelegate.DisplayName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.ActivityDelegate.GetResultArgument
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: GetResultArgument()
  nameWithType: ActivityDelegate.GetResultArgument()
  fullName: System.Activities.ActivityDelegate.GetResultArgument()
- uid: System.Activities.DelegateOutArgument
  parent: System.Activities
  isExternal: false
  name: DelegateOutArgument
  nameWithType: DelegateOutArgument
  fullName: System.Activities.DelegateOutArgument
- uid: System.Activities.ActivityDelegate.Handler
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: Handler
  nameWithType: ActivityDelegate.Handler
  fullName: System.Activities.ActivityDelegate.Handler
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument})
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
  fullName: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments(IList<RuntimeDelegateArgument>)
- uid: System.Collections.Generic.IList{System.Activities.RuntimeDelegateArgument}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<RuntimeDelegateArgument>
  nameWithType: IList<RuntimeDelegateArgument>
  fullName: System.Collections.Generic.IList<System.Activities.RuntimeDelegateArgument>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.RuntimeDelegateArgument>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.RuntimeDelegateArgument
    name: RuntimeDelegateArgument
    nameWithType: RuntimeDelegateArgument
    fullName: RuntimeDelegateArgument
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ShouldSerializeDisplayName()
  nameWithType: ActivityDelegate.ShouldSerializeDisplayName()
  fullName: System.Activities.ActivityDelegate.ShouldSerializeDisplayName()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.ActivityDelegate.ToString
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ToString()
  nameWithType: ActivityDelegate.ToString()
  fullName: System.Activities.ActivityDelegate.ToString()
- uid: System.Activities.ActivityDelegate.#ctor*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ActivityDelegate
  nameWithType: ActivityDelegate.ActivityDelegate
- uid: System.Activities.ActivityDelegate.DisplayName*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: DisplayName
  nameWithType: ActivityDelegate.DisplayName
- uid: System.Activities.ActivityDelegate.GetResultArgument*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: GetResultArgument
  nameWithType: ActivityDelegate.GetResultArgument
- uid: System.Activities.ActivityDelegate.Handler*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: Handler
  nameWithType: ActivityDelegate.Handler
- uid: System.Activities.ActivityDelegate.OnGetRuntimeDelegateArguments*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: OnGetRuntimeDelegateArguments
  nameWithType: ActivityDelegate.OnGetRuntimeDelegateArguments
- uid: System.Activities.ActivityDelegate.ShouldSerializeDisplayName*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ShouldSerializeDisplayName
  nameWithType: ActivityDelegate.ShouldSerializeDisplayName
- uid: System.Activities.ActivityDelegate.ToString*
  parent: System.Activities.ActivityDelegate
  isExternal: false
  name: ToString
  nameWithType: ActivityDelegate.ToString
