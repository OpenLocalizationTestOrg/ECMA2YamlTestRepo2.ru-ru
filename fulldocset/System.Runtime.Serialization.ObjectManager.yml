### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.ObjectManager
  id: ObjectManager
  children:
  - System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Serialization.ObjectManager.DoFixups
  - System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  - System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  - System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  - System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  - System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  langs:
  - csharp
  name: ObjectManager
  nameWithType: ObjectManager
  fullName: System.Runtime.Serialization.ObjectManager
  type: Class
  summary: "Сохраняет сведения о объекты при их десериализации."
  remarks: "Во время десериализации <xref:System.Runtime.Serialization.Formatter>запрашивает ObjectManager, чтобы определить, является ли ссылка на объект в сериализованном потоке ссылается на объект, который уже был десериализованный (обратная ссылка), или объект, который еще не был десериализован (прямая ссылка).</xref:System.Runtime.Serialization.Formatter> Если ссылка в сериализованном потоке является прямой ссылкой, то <xref:System.Runtime.Serialization.Formatter>можно зарегистрировать адресная привязка ObjectManager.</xref:System.Runtime.Serialization.Formatter> Если ссылка в сериализованном потоке является обратной, <xref:System.Runtime.Serialization.Formatter>немедленно завершает ссылку.</xref:System.Runtime.Serialization.Formatter> Адресная привязка ссылается на обработку завершающихся ссылок на объекты, которые еще не завершено во время десериализации объекта. После десериализации объекта требуется ObjectManager завершает ссылку.       ObjectManager выполняет набор правил, которые порядка адресной привязки. Все объекты, которые реализуют <xref:System.Runtime.Serialization.ISerializable>или иметь <xref:System.Runtime.Serialization.ISerializationSurrogate>предполагается, что для всех объектов, которые они передаются через <xref:System.Runtime.Serialization.SerializationInfo>доступно при десериализации дерева объектов.</xref:System.Runtime.Serialization.SerializationInfo> </xref:System.Runtime.Serialization.ISerializationSurrogate> </xref:System.Runtime.Serialization.ISerializable> Родительский объект не может предположить, все его дочерние объекты полностью завершается, когда он полностью десериализуется. Все дочерние объекты будут присутствовать, но не все внучатые объекты обязательно будут присутствовать. Если объект должен выполнить определенные действия, зависящие от выполнения кода с его дочерними объектами, можно отложить эти действия, реализуйте <xref:System.Runtime.Serialization.IDeserializationCallback>интерфейсов и выполнить код только после обратного вызова на этом интерфейсе.</xref:System.Runtime.Serialization.IDeserializationCallback>"
  example:
  - "The following code example shows how to use the ObjectManager class to walk through an object graph, traversing to each object only once.  \n  \n [!code-cs[ObjectManager#1](~/add/codesnippet/csharp/t-system.runtime.seriali_0_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ObjectManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)'
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: ObjectManager(ISurrogateSelector,StreamingContext)
  nameWithType: ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  fullName: System.Runtime.Serialization.ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Serialization.ObjectManager&quot;></xref> class."
  syntax:
    content: public ObjectManager (System.Runtime.Serialization.ISurrogateSelector selector, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: selector
      type: System.Runtime.Serialization.ISurrogateSelector
      description: "Суррогатный селектор. <xref href=&quot;System.Runtime.Serialization.ISurrogateSelector&quot;> </xref> Определяет соответствующий суррогат для использования при десериализации объектов данного типа. Во время десериализации суррогатный селектор создает новый экземпляр объекта из данных, передаваемых в потоке."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Контекст потоковой передачи. <xref:System.Runtime.Serialization.StreamingContext>Не используется <xref uid=&quot;langword_csharp_ObjectManager&quot; name=&quot;ObjectManager&quot; href=&quot;&quot;> </xref>, но передается как параметр объектами, реализующими <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref> или having <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext> Эти объекты могут выполнять определенные действия в зависимости от источника данных для десериализации."
  overload: System.Runtime.Serialization.ObjectManager.#ctor*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.DoFixups
  id: DoFixups
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: DoFixups()
  nameWithType: ObjectManager.DoFixups()
  fullName: System.Runtime.Serialization.ObjectManager.DoFixups()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Выполняет все записанные адресные привязки."
  remarks: "Адресные привязки выполняются любым соответствующим суррогатом самого объекта (если он реализует <xref:System.Runtime.Serialization.ISerializable>), или реализация по умолчанию.</xref:System.Runtime.Serialization.ISerializable>"
  syntax:
    content: public virtual void DoFixups ();
    parameters: []
  overload: System.Runtime.Serialization.ObjectManager.DoFixups*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Адресная привязка не было успешно завершено."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  id: GetObject(System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: GetObject(Int64)
  nameWithType: ObjectManager.GetObject(Int64)
  fullName: System.Runtime.Serialization.ObjectManager.GetObject(Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Возвращает объект с идентификатором указанного объекта."
  remarks: "Можно зарегистрировать объект и выдать ID объекта с помощью вызова <xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A>метод.</xref:System.Runtime.Serialization.ObjectManager.RegisterObject%2A>"
  syntax:
    content: public virtual object GetObject (long objectID);
    parameters:
    - id: objectID
      type: System.Int64
      description: "Идентификатор запрашиваемого объекта."
    return:
      type: System.Object
      description: "Объект с заданным Идентификатором объекта, если он был ранее сохранен или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , если объект не был зарегистрирован."
  overload: System.Runtime.Serialization.ObjectManager.GetObject*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Меньше или равно нулю."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  id: RaiseDeserializationEvent
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RaiseDeserializationEvent()
  nameWithType: ObjectManager.RaiseDeserializationEvent()
  fullName: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Вызывает событие десериализации для любого зарегистрированного объекта, который реализует <xref href=&quot;System.Runtime.Serialization.IDeserializationCallback&quot;> </xref>."
  syntax:
    content: public virtual void RaiseDeserializationEvent ();
    parameters: []
  overload: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  id: RaiseOnDeserializingEvent(System.Object)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RaiseOnDeserializingEvent(Object)
  nameWithType: ObjectManager.RaiseOnDeserializingEvent(Object)
  fullName: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Вызывает метод, помеченный атрибутом <xref:System.Runtime.Serialization.OnDeserializingAttribute>.</xref:System.Runtime.Serialization.OnDeserializingAttribute>"
  syntax:
    content: public void RaiseOnDeserializingEvent (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Экземпляр типа, содержащего вызываемый метод."
  overload: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  id: RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordArrayElementFixup(Int64,Int32,Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Записывает адресную привязку для одного элемента в массиве."
  remarks: "Исправление предназначено для указанного элемента указанного массива. Значение, используемое при обработке адресной привязки, предоставляется в `objectRequired` параметра."
  syntax:
    content: public virtual void RecordArrayElementFixup (long arrayToBeFixed, int index, long objectRequired);
    parameters:
    - id: arrayToBeFixed
      type: System.Int64
      description: "Идентификатор массива, используемого для записи адресной привязки."
    - id: index
      type: System.Int32
      description: "Индекс в `arrayFixup` , запрашиваются адресную привязку."
    - id: objectRequired
      type: System.Int64
      description: "Идентификатор объекта, который будет указывать на текущий элемент массива после завершения адресной привязки."
  overload: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> arrayToBeFixed </code> Или <code> objectRequired </code> меньше или равно нулю."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>index</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  id: RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordArrayElementFixup(Int64,Int32[],Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Записывает адресные привязки заданных элементов в массиве, который будет выполнен позже."
  remarks: "Исправление предназначено для указанные элементы указанного массива. Значение, используемое при обработке адресной привязки, предоставляется в `objectRequired` параметра."
  syntax:
    content: public virtual void RecordArrayElementFixup (long arrayToBeFixed, int[] indices, long objectRequired);
    parameters:
    - id: arrayToBeFixed
      type: System.Int64
      description: "Идентификатор массива, используемого для записи адресной привязки."
    - id: indices
      type: System.Int32[]
      description: "Индексы в многомерном массиве, запрашиваются адресную привязку."
    - id: objectRequired
      type: System.Int64
      description: "Идентификатор объекта элементы массива будет указывать после завершения адресной привязки."
  overload: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> arrayToBeFixed </code> Или <code> objectRequired </code> меньше или равно нулю."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>indices</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  id: RecordDelayedFixup(System.Int64,System.String,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordDelayedFixup(Int64,String,Int64)
  nameWithType: ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Записывает адресную привязку для элемента объекта, который будет выполнен позже."
  remarks: "Адресная привязка — для указанного элемента из указанного объекта. Значение для использования в процессе исправления предоставляется как `objectRequired` аргумент."
  syntax:
    content: public virtual void RecordDelayedFixup (long objectToBeFixed, string memberName, long objectRequired);
    parameters:
    - id: objectToBeFixed
      type: System.Int64
      description: "Идентификатор объекта, которому требуется ссылка на `objectRequired`."
    - id: memberName
      type: System.String
      description: "Имя члена `objectToBeFixed` где исправление должно быть выполнено."
    - id: objectRequired
      type: System.Int64
      description: "Идентификатор объекта, предусмотренного `objectToBeFixed`."
  overload: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>objectToBeFixed</code>или <code>objectRequired</code> меньше или равно нулю."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>memberName</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  id: RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RecordFixup(Int64,MemberInfo,Int64)
  nameWithType: ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Записывает адресную привязку для элемента объекта, который будет выполнен позже."
  remarks: "Адресная привязка — для указанного элемента из указанного объекта. Значение для использования в процессе исправления предоставляется как `objectRequired` параметр."
  syntax:
    content: public virtual void RecordFixup (long objectToBeFixed, System.Reflection.MemberInfo member, long objectRequired);
    parameters:
    - id: objectToBeFixed
      type: System.Int64
      description: "Идентификатор объекта, которому требуется ссылка на `objectRequired` объекта."
    - id: member
      type: System.Reflection.MemberInfo
      description: "Элемент `objectToBeFixed` где исправление должно быть выполнено."
    - id: objectRequired
      type: System.Int64
      description: "Идентификатор объекта, предусмотренного `objectToBeFixed`."
  overload: System.Runtime.Serialization.ObjectManager.RecordFixup*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectToBeFixed </code> Или <code> objectRequired </code> меньше или равно нулю."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>member</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  id: RegisterObject(System.Object,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64)
  nameWithType: ObjectManager.RegisterObject(Object,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Регистрирует объект при его десериализации, сопоставляя его с <code> objectID </code>."
  remarks: "<xref:System.Runtime.Serialization.ObjectManager>хранит информацию об объекте и его идентификатор.</xref:System.Runtime.Serialization.ObjectManager> Далее в процессе десериализации <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>может использоваться для определения ли уже был десериализован идентификатор конкретного объекта, и является ли он прямая ссылка на объект, который не был десериализован.</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>"
  syntax:
    content: public virtual void RegisterObject (object obj, long objectID);
    parameters:
    - id: obj
      type: System.Object
      description: "Регистрируемый объект."
    - id: objectID
      type: System.Int64
      description: "Идентификатор объекта для регистрации."
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Меньше или равно нулю."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code> objectID </code> Уже зарегистрирован для объекта, отличного от <code> obj </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Регистрирует объект при его десериализации, сопоставляя его с <code> objectID </code>, запись и <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> используется вместе с ним."
  remarks: "<xref:System.Runtime.Serialization.ObjectManager>хранит информацию об объекте и его идентификатор.</xref:System.Runtime.Serialization.ObjectManager> Позднее, во время десериализации, можно использовать <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>Обнаружение ли определенный объект уже был десериализован идентификатор, или если это прямая ссылка на объект, который не был десериализован.</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info);
    parameters:
    - id: obj
      type: System.Object
      description: "Регистрируемый объект."
    - id: objectID
      type: System.Int64
      description: "Идентификатор объекта для регистрации."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`завершится с любой информации о необходимые исправления, а затем передается необходимому объекту, когда объект завершается."
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Меньше или равно нулю."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code> objectID </code> Уже зарегистрирован для объекта, отличного от <code> obj </code>."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Регистрирует является членом объекта при его десериализации, сопоставляя его с <code> objectID </code>, запись и <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  remarks: "Необходимо указать `member` и `idOfContainingObj` параметры Если `obj` — <xref:System.ValueType>из-за того, выполняются исправления <xref:System.ValueType>объектов.</xref:System.ValueType> </xref:System.ValueType> Место для хранения информации о <xref:System.ValueType>размещаются вместе с его содержащего объекта.</xref:System.ValueType> Тем не менее, когда <xref:System.ValueType>упаковывается регистрация <xref:System.Runtime.Serialization.ObjectManager>, он теряет соединение с его содержащего объекта.</xref:System.Runtime.Serialization.ObjectManager> </xref:System.ValueType> Чтобы гарантировать, что адресные привязки осуществляются в экземпляре <xref:System.ValueType>сохраняется вмещающего объекта и не в упакованном экземпляре, <xref:System.Runtime.Serialization.ObjectManager>сохраняет некоторые дополнительные сведения.</xref:System.Runtime.Serialization.ObjectManager> </xref:System.ValueType>       <xref:System.Runtime.Serialization.ObjectManager>хранит информацию об объекте и его идентификатор.</xref:System.Runtime.Serialization.ObjectManager> Далее в процессе десериализации <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>может использоваться для обнаружения ли уже был десериализован идентификатор определенного объекта или является ли он не прямая ссылка на объект еще десериализуются.</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member);
    parameters:
    - id: obj
      type: System.Object
      description: "Регистрируемый объект."
    - id: objectID
      type: System.Int64
      description: "Идентификатор объекта для регистрации."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`завершится с любой информации о необходимые исправления, а затем передается необходимому объекту, когда объект завершается."
    - id: idOfContainingObj
      type: System.Int64
      description: "Идентификатор объекта, который содержит `obj`. Этот параметр является обязательным только в том случае, если `obj` является типом значения."
    - id: member
      type: System.Reflection.MemberInfo
      description: "Поле в вмещающего объекта где `obj` существует. Этот параметр имеет смысл только в том случае, если `obj` является типом значения."
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Меньше или равно нулю."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref:System.Reflection.FieldInfo> and <code>member</code> is not <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Reflection.FieldInfo>"
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  id: RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  parent: System.Runtime.Serialization.ObjectManager
  langs:
  - csharp
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Регистрирует член массива, содержащийся в объекте при его десериализации, сопоставляя его с <code> objectID </code>, запись и <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref>."
  remarks: "Необходимо указать `member` и `idOfContainingObj` параметры Если `obj` — <xref:System.ValueType>из-за того, выполняются исправления <xref:System.ValueType>объектов.</xref:System.ValueType> </xref:System.ValueType> Место для хранения информации о <xref:System.ValueType>размещаются вместе с его содержащего объекта.</xref:System.ValueType> Тем не менее, когда <xref:System.ValueType>упаковывается регистрация <xref:System.Runtime.Serialization.ObjectManager>, он теряет соединение с его содержащего объекта.</xref:System.Runtime.Serialization.ObjectManager> </xref:System.ValueType> Чтобы гарантировать, что адресные привязки осуществляются в экземпляре <xref:System.ValueType>сохраняется вмещающего объекта и не в упакованном экземпляре, <xref:System.Runtime.Serialization.ObjectManager>сохраняет некоторые дополнительные сведения.</xref:System.Runtime.Serialization.ObjectManager> </xref:System.ValueType>       <xref:System.Runtime.Serialization.ObjectManager>хранит информацию об объекте и его идентификатор.</xref:System.Runtime.Serialization.ObjectManager> Далее в процессе десериализации <xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>может использоваться для обнаружения ли уже был десериализован идентификатор определенного объекта или является ли он не прямая ссылка на объект еще десериализуются.</xref:System.Runtime.Serialization.ObjectManager.GetObject%2A>"
  syntax:
    content: public void RegisterObject (object obj, long objectID, System.Runtime.Serialization.SerializationInfo info, long idOfContainingObj, System.Reflection.MemberInfo member, int[] arrayIndex);
    parameters:
    - id: obj
      type: System.Object
      description: "Регистрируемый объект."
    - id: objectID
      type: System.Int64
      description: "Идентификатор объекта для регистрации."
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "The <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;></xref> used if `obj` implements <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;></xref> or has a <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref>. `info`завершится с любой информации о необходимые исправления, а затем передается необходимому объекту, когда объект завершается."
    - id: idOfContainingObj
      type: System.Int64
      description: "Идентификатор объекта, который содержит `obj`. Этот параметр является обязательным только в том случае, если `obj` является типом значения."
    - id: member
      type: System.Reflection.MemberInfo
      description: "Поле в вмещающего объекта где `obj` существует. Этот параметр имеет смысл только в том случае, если `obj` является типом значения."
    - id: arrayIndex
      type: System.Int32[]
      description: "Если `obj` — <xref:System.ValueType>и элемента массива, `arrayIndex` содержит индекс в этом массиве где `obj` существует.</xref:System.ValueType> `arrayIndex`учитывается, если `obj` не является ни <xref:System.ValueType>и элемента массива.</xref:System.ValueType>"
  overload: System.Runtime.Serialization.ObjectManager.RegisterObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code> objectID </code> Меньше или равно нулю."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "The <code>objectID</code> has already been registered for an object other than <code>obj</code>, or <code>member</code> is not a <xref:System.Reflection.FieldInfo> and <code>member</code> isn&quot;t <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Reflection.FieldInfo>"
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.ObjectManager.#ctor(System.Runtime.Serialization.ISurrogateSelector,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: ObjectManager(ISurrogateSelector,StreamingContext)
  nameWithType: ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
  fullName: System.Runtime.Serialization.ObjectManager.ObjectManager(ISurrogateSelector,StreamingContext)
- uid: System.Runtime.Serialization.ISurrogateSelector
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISurrogateSelector
  nameWithType: ISurrogateSelector
  fullName: System.Runtime.Serialization.ISurrogateSelector
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.ObjectManager.DoFixups
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: DoFixups()
  nameWithType: ObjectManager.DoFixups()
  fullName: System.Runtime.Serialization.ObjectManager.DoFixups()
- uid: System.Runtime.Serialization.ObjectManager.GetObject(System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: GetObject(Int64)
  nameWithType: ObjectManager.GetObject(Int64)
  fullName: System.Runtime.Serialization.ObjectManager.GetObject(Int64)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseDeserializationEvent()
  nameWithType: ObjectManager.RaiseDeserializationEvent()
  fullName: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent()
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(System.Object)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseOnDeserializingEvent(Object)
  nameWithType: ObjectManager.RaiseOnDeserializingEvent(Object)
  fullName: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent(Object)
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup(Int64,Int32,Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32,Int64)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(System.Int64,System.Int32[],System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup(Int64,Int32[],Int64)
  nameWithType: ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup(Int64,Int32[],Int64)
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(System.Int64,System.String,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordDelayedFixup(Int64,String,Int64)
  nameWithType: ObjectManager.RecordDelayedFixup(Int64,String,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup(Int64,String,Int64)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup(System.Int64,System.Reflection.MemberInfo,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordFixup(Int64,MemberInfo,Int64)
  nameWithType: ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RecordFixup(Int64,MemberInfo,Int64)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64)
  nameWithType: ObjectManager.RegisterObject(Object,Int64)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64)
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo)
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo)
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject(System.Object,System.Int64,System.Runtime.Serialization.SerializationInfo,System.Int64,System.Reflection.MemberInfo,System.Int32[])
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  nameWithType: ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
  fullName: System.Runtime.Serialization.ObjectManager.RegisterObject(Object,Int64,SerializationInfo,Int64,MemberInfo,Int32[])
- uid: System.Runtime.Serialization.ObjectManager.#ctor*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: ObjectManager
  nameWithType: ObjectManager.ObjectManager
- uid: System.Runtime.Serialization.ObjectManager.DoFixups*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: DoFixups
  nameWithType: ObjectManager.DoFixups
- uid: System.Runtime.Serialization.ObjectManager.GetObject*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: GetObject
  nameWithType: ObjectManager.GetObject
- uid: System.Runtime.Serialization.ObjectManager.RaiseDeserializationEvent*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseDeserializationEvent
  nameWithType: ObjectManager.RaiseDeserializationEvent
- uid: System.Runtime.Serialization.ObjectManager.RaiseOnDeserializingEvent*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RaiseOnDeserializingEvent
  nameWithType: ObjectManager.RaiseOnDeserializingEvent
- uid: System.Runtime.Serialization.ObjectManager.RecordArrayElementFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordArrayElementFixup
  nameWithType: ObjectManager.RecordArrayElementFixup
- uid: System.Runtime.Serialization.ObjectManager.RecordDelayedFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordDelayedFixup
  nameWithType: ObjectManager.RecordDelayedFixup
- uid: System.Runtime.Serialization.ObjectManager.RecordFixup*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RecordFixup
  nameWithType: ObjectManager.RecordFixup
- uid: System.Runtime.Serialization.ObjectManager.RegisterObject*
  parent: System.Runtime.Serialization.ObjectManager
  isExternal: false
  name: RegisterObject
  nameWithType: ObjectManager.RegisterObject
