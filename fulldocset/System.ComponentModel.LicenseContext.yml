### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicenseContext
  id: LicenseContext
  children:
  - System.ComponentModel.LicenseContext.#ctor
  - System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  - System.ComponentModel.LicenseContext.GetService(System.Type)
  - System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  - System.ComponentModel.LicenseContext.UsageMode
  langs:
  - csharp
  name: LicenseContext
  nameWithType: LicenseContext
  fullName: System.ComponentModel.LicenseContext
  type: Class
  summary: "Указывает, когда можно использовать лицензированный объект и предоставляет способ получения дополнительных служб, необходимых для поддержки лицензий, выполняемых в рамках своего домена."
  remarks: "Этот класс предоставляет значение по умолчанию LicenseContext. Он реализует поддержку только во время выполнения и выполняет не поддерживаются сохраненные ключи многократной установки."
  syntax:
    content: 'public class LicenseContext : IServiceProvider'
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.#ctor
  id: '#ctor'
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: LicenseContext()
  nameWithType: LicenseContext.LicenseContext()
  fullName: System.ComponentModel.LicenseContext.LicenseContext()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.LicenseContext&quot;> </xref> класса."
  syntax:
    content: public LicenseContext ();
    parameters: []
  overload: System.ComponentModel.LicenseContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  id: GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: GetSavedLicenseKey(Type,Assembly)
  nameWithType: LicenseContext.GetSavedLicenseKey(Type,Assembly)
  fullName: System.ComponentModel.LicenseContext.GetSavedLicenseKey(Type,Assembly)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "При переопределении в производном классе, возвращает сохраненный лицензионный ключ для указанного типа из сборки указанный ресурс."
  syntax:
    content: public virtual string GetSavedLicenseKey (Type type, System.Reflection.Assembly resourceAssembly);
    parameters:
    - id: type
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип компонента.</xref:System.Type>"
    - id: resourceAssembly
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>С ключом лицензии.</xref:System.Reflection.Assembly>"
    return:
      type: System.String
      description: "<xref:System.ComponentModel.License.LicenseKey*>Для указанного типа.</xref:System.ComponentModel.License.LicenseKey*> Этот метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> , если не переопределить его."
  overload: System.ComponentModel.LicenseContext.GetSavedLicenseKey*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: LicenseContext.GetService(Type)
  fullName: System.ComponentModel.LicenseContext.GetService(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает запрашиваемую службу, если он доступен."
  syntax:
    content: public virtual object GetService (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Тип возвращаемой службы."
    return:
      type: System.Object
      description: "Экземпляр службы, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если службу не удается найти."
  overload: System.ComponentModel.LicenseContext.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  id: SetSavedLicenseKey(System.Type,System.String)
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: SetSavedLicenseKey(Type,String)
  nameWithType: LicenseContext.SetSavedLicenseKey(Type,String)
  fullName: System.ComponentModel.LicenseContext.SetSavedLicenseKey(Type,String)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "При переопределении в производном классе задает лицензионный ключ для указанного типа."
  remarks: "Как правило, этот метод вызывается при установке <xref:System.ComponentModel.LicenseUsageMode>во время разработки.</xref:System.ComponentModel.LicenseUsageMode> Необходимо переопределить <xref:System.ComponentModel.LicenseContext.UsageMode%2A>свойство для реализации поддержки лицензии во время разработки.</xref:System.ComponentModel.LicenseContext.UsageMode%2A>"
  syntax:
    content: public virtual void SetSavedLicenseKey (Type type, string key);
    parameters:
    - id: type
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий компонент, связанный с ключом лицензии.</xref:System.Type>"
    - id: key
      type: System.String
      description: "<xref:System.ComponentModel.License.LicenseKey*>Для сохранения для типа компонента.</xref:System.ComponentModel.License.LicenseKey*>"
  overload: System.ComponentModel.LicenseContext.SetSavedLicenseKey*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicenseContext.UsageMode
  id: UsageMode
  parent: System.ComponentModel.LicenseContext
  langs:
  - csharp
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
  fullName: System.ComponentModel.LicenseContext.UsageMode
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "При переопределении в производном классе получает значение, указывающее, когда можно использовать лицензию."
  syntax:
    content: public virtual System.ComponentModel.LicenseUsageMode UsageMode { get; }
    return:
      type: System.ComponentModel.LicenseUsageMode
      description: "Один из <xref href=&quot;System.ComponentModel.LicenseUsageMode&quot;> </xref> значений, определяющее, когда можно использовать лицензию. Значение по умолчанию — <xref href=&quot;System.ComponentModel.LicenseUsageMode&quot;> </xref>."
  overload: System.ComponentModel.LicenseContext.UsageMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.LicenseContext.#ctor
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: LicenseContext()
  nameWithType: LicenseContext.LicenseContext()
  fullName: System.ComponentModel.LicenseContext.LicenseContext()
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey(System.Type,System.Reflection.Assembly)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetSavedLicenseKey(Type,Assembly)
  nameWithType: LicenseContext.GetSavedLicenseKey(Type,Assembly)
  fullName: System.ComponentModel.LicenseContext.GetSavedLicenseKey(Type,Assembly)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.ComponentModel.LicenseContext.GetService(System.Type)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetService(Type)
  nameWithType: LicenseContext.GetService(Type)
  fullName: System.ComponentModel.LicenseContext.GetService(Type)
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey(System.Type,System.String)
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: SetSavedLicenseKey(Type,String)
  nameWithType: LicenseContext.SetSavedLicenseKey(Type,String)
  fullName: System.ComponentModel.LicenseContext.SetSavedLicenseKey(Type,String)
- uid: System.ComponentModel.LicenseContext.UsageMode
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
  fullName: System.ComponentModel.LicenseContext.UsageMode
- uid: System.ComponentModel.LicenseUsageMode
  parent: System.ComponentModel
  isExternal: false
  name: LicenseUsageMode
  nameWithType: LicenseUsageMode
  fullName: System.ComponentModel.LicenseUsageMode
- uid: System.ComponentModel.LicenseContext.#ctor*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: LicenseContext
  nameWithType: LicenseContext.LicenseContext
- uid: System.ComponentModel.LicenseContext.GetSavedLicenseKey*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetSavedLicenseKey
  nameWithType: LicenseContext.GetSavedLicenseKey
- uid: System.ComponentModel.LicenseContext.GetService*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: GetService
  nameWithType: LicenseContext.GetService
- uid: System.ComponentModel.LicenseContext.SetSavedLicenseKey*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: SetSavedLicenseKey
  nameWithType: LicenseContext.SetSavedLicenseKey
- uid: System.ComponentModel.LicenseContext.UsageMode*
  parent: System.ComponentModel.LicenseContext
  isExternal: false
  name: UsageMode
  nameWithType: LicenseContext.UsageMode
