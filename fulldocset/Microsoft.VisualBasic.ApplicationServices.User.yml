### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.ApplicationServices.User
  id: User
  children:
  - Microsoft.VisualBasic.ApplicationServices.User.#ctor
  - Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  - Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  - Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  - Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  - Microsoft.VisualBasic.ApplicationServices.User.Name
  langs:
  - csharp
  name: User
  nameWithType: User
  fullName: Microsoft.VisualBasic.ApplicationServices.User
  type: Class
  summary: "Предоставляет доступ к сведениям о текущем пользователе."
  remarks: "Свойства и методы, предоставляемые `My.User` объект предоставлять доступ к сведениям о текущем пользователе. Значение «текущий пользователь» немного отличается в Windows и веб-приложений. В приложении Windows текущим пользователем является пользователь, запускающий приложение. В веб-приложении текущим пользователем является пользователь, обращающийся к приложению.       `My.User` Свойств также предоставляет доступ к <xref:System.Security.Principal.IPrincipal>для текущего пользователя.</xref:System.Security.Principal.IPrincipal> Объект-участник представляет контекст безопасности пользователя, включая удостоверение пользователя и любые роли, к которым принадлежит пользователь.       Для приложений Windows, это свойство предоставляет те же функциональные возможности, как <xref:System.Threading.Thread.CurrentPrincipal%2A>свойство.</xref:System.Threading.Thread.CurrentPrincipal%2A> Для веб-приложений, это свойство предоставляет те же функциональные возможности, как <xref:System.Web.HttpContext.User%2A>свойство объекта, возвращаемого <xref:System.Web.HttpContext.Current%2A>свойство.</xref:System.Web.HttpContext.Current%2A> </xref:System.Web.HttpContext.User%2A>      Настроек [!NOTE] настроек для приложений Windows, проекты, построенные на **приложение Windows** шаблона initialize `My.User` объекта по умолчанию. Для всех других Windows типов проектов, необходимо инициализировать `My.User` путем вызова метода <xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>метод явным образом или путем присвоения значения <xref:System.Threading.Thread.CurrentPrincipal%2A>.</xref:System.Threading.Thread.CurrentPrincipal%2A> </xref:Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser%2A>      Настроек [!NOTE] настроек `My.User` объект не содержит сведений о текущем пользователе Windows при запуске в Windows 95 и Windows 98, поскольку эти операционные системы не поддерживают концепцию вошедшего в систему пользователя. Необходимо реализовать нестандартную проверку подлинности для использования `My.User` объекта в этих операционных системах."
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public class User
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;Microsoft.VisualBasic.ApplicationServices.User&quot;> </xref> класса."
  remarks: "Свойства и методы, предоставляемые `My.User` объект предоставлять доступ к сведениям о текущем пользователе."
  syntax:
    content: public User ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  id: CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Возвращает или задает текущего участника (для безопасности на основе ролей)."
  remarks: "Можно задать `My.User.CurrentPrincipal` свойства объекта, реализующего <xref:System.Security.Principal.IPrincipal>интерфейс для включения нестандартной проверки подлинности.</xref:System.Security.Principal.IPrincipal>       В большинстве типов проектов это свойство возвращает и задает текущего участника потока. В приложениях ASP.NET это свойство возвращает и задает сведения о безопасности для удостоверения пользователя для текущего HTTP-запроса.       Это дополнительный элемент. не отображается в IntelliSense, пока не нажать **все** вкладки.      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | **Yes**|   | Служба Windows | **Yes**|   | Веб-сайта | **Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public System.Security.Principal.IPrincipal CurrentPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Объект <xref:System.Security.Principal.IPrincipal>значение, представляющее контекст безопасности.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий не имеет необходимых прав для задания участника."
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  id: InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Задает текущего участника потока для пользователя Windows, запустившего приложение."
  remarks: "Можно использовать `My.User.InitializeWithWindowsUser` метод для установки текущего участника потока для пользователя Windows, запустившего приложение. Модель приложения Visual Basic в приложении Windows этот метод вызывается во время запуска по умолчанию. В других типах проектов необходимо установить текущего участника потока путем вызова данного метода явным образом или путем присвоения значения <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>       В проектах Windows `My.User` объекта зависит от текущего участника потока; таким образом, этот метод может изменить сведения `My.User` возвращает. В приложении ASP.NET `My.User` объект основан на удостоверении пользователя текущего HTTP-запроса и не влияет на этот метод.      Настроек [!NOTE] настроек точное поведение `My.User` объекта зависит от типа приложения и операционной системы, на котором выполняется приложение. Дополнительные сведения см. в разделе <xref:Microsoft.VisualBasic.ApplicationServices.User>Общие сведения о классе.</xref:Microsoft.VisualBasic.ApplicationServices.User>       Это дополнительный элемент. не отображается в IntelliSense, пока не нажать **все** вкладки.      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | **Yes**|   | Служба Windows | **Yes**|   | Веб-сайта | **Yes**|"
  syntax:
    content: public void InitializeWithWindowsUser ();
    parameters: []
  overload: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  id: InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Возвращает или задает основной объект, представляющий текущего пользователя."
  remarks: "В <xref:Microsoft.VisualBasic.ApplicationServices.User>объекта, это свойство создает оболочку для <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>Свойства.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:Microsoft.VisualBasic.ApplicationServices.User> Переопределите этот метод в производном классе, чтобы обеспечить другое поведение. Например <xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>это свойство переопределяет свойство.</xref:Microsoft.VisualBasic.ApplicationServices.WebUser.InternalPrincipal%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Security.Principal.IPrincipal InternalPrincipal { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "<xref:System.Security.Principal.IPrincipal>Объект, представляющий текущего пользователя.</xref:System.Security.Principal.IPrincipal>"
  overload: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  id: IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Возвращает значение, указывающее, прошел ли пользователь проверку подлинности."
  remarks: "`My.User.IsAuthenticated` Свойство позволяет код, чтобы определить, если текущий пользователь прошел проверку подлинности.      Настроек [!NOTE] настроек точное поведение `My.User` объекта зависит от типа приложения и операционной системы, на котором выполняется приложение. Дополнительные сведения см. в разделе <xref:Microsoft.VisualBasic.ApplicationServices.User>Общие сведения о классе.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | **Yes**|   | Служба Windows | **Yes**|   | Веб-сайта | **Yes**|"
  example:
  - "This example verifies that the user has been authenticated before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#2](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#2)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если пользователь прошел проверку подлинности; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  id: IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Определяет, принадлежит ли текущий пользователь указанной роли."
  remarks: "`My.User.IsInRole` Метод позволяет код, чтобы определить, является ли текущий пользователь членом указанной роли.       Перегрузка `My.User.IsInRole` метод, который принимает строку обеспечивает простой доступ к <xref:System.Security.Principal.IPrincipal.IsInRole%2A>метод текущего участника.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       Перегрузка `My.User.IsInRole` метода, принимающего `BuiltInRole` перечисления ведет себя по-разному, в зависимости от текущего участника. Если участник Windows пользователя (<xref:System.Security.Principal.WindowsPrincipal>), эта функция преобразует `role` в эквивалент <xref:System.Security.Principal.WindowsBuiltInRole>перечисления и возвращает результат вызова <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Если текущий участник является любым другим участником, эта функция передает имя значения перечисления в `role` на основной <xref:System.Security.Principal.IPrincipal.IsInRole%2A>метод.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      Настроек [!NOTE] настроек точное поведение `My.User` объекта зависит от типа приложения и операционной системы, на котором выполняется приложение. Дополнительные сведения см. в разделе <xref:Microsoft.VisualBasic.ApplicationServices.User>Общие сведения о классе.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | **Yes**|   | Служба Windows | **Yes**|   | Веб-сайта | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (Microsoft.VisualBasic.ApplicationServices.BuiltInRole role);
    parameters:
    - id: role
      type: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
      description: "Встроенная роль Windows, для которой требуется проверить членство."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если текущий пользователь является членом указанной роли; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Определяет, принадлежит ли текущий пользователь указанной роли."
  remarks: "`My.User.IsInRole` Метод позволяет код, чтобы определить, является ли текущий пользователь членом указанной роли.       Перегрузка `My.User.IsInRole` метод, который принимает строку обеспечивает простой доступ к <xref:System.Security.Principal.IPrincipal.IsInRole%2A>метод текущего участника.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>       Перегрузка `My.User.IsInRole` метода, принимающего `BuiltInRole` перечисления ведет себя по-разному, в зависимости от текущего участника. Если участник Windows пользователя (<xref:System.Security.Principal.WindowsPrincipal>), эта функция преобразует `role` в эквивалент <xref:System.Security.Principal.WindowsBuiltInRole>перечисления и возвращает результат вызова <xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A>.</xref:System.Security.Principal.WindowsPrincipal.IsInRole%2A> </xref:System.Security.Principal.WindowsBuiltInRole> </xref:System.Security.Principal.WindowsPrincipal> Если текущий участник является любым другим участником, эта функция передает имя значения перечисления в `role` на основной <xref:System.Security.Principal.IPrincipal.IsInRole%2A>метод.</xref:System.Security.Principal.IPrincipal.IsInRole%2A>      Настроек [!NOTE] настроек точное поведение `My.User` объекта зависит от типа приложения и операционной системы, на котором выполняется приложение. Дополнительные сведения см. в разделе <xref:Microsoft.VisualBasic.ApplicationServices.User>Общие сведения о классе.</xref:Microsoft.VisualBasic.ApplicationServices.User>      ## Доступность по типу проекта ^ ^ ^   |-|-|   | Тип проекта | Доступные |   | Приложение Windows | **Yes**|   | Библиотека классов | **Yes**|   | Консольное приложение | **Yes**|   | Библиотека элементов управления Windows | **Yes**|   | Библиотека элементов управления веб | **Yes**|   | Служба Windows | **Yes**|   | Веб-сайта | **Yes**|"
  example:
  - "This example checks if the user is an administrator before accessing a resource.  \n  \n [!code-vb[VbVbalrMyUser#1](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#1)]"
  syntax:
    content: public bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: "Имя роли, для которой требуется проверить членство."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если текущий пользователь является членом указанной роли; в противном случае <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  id: Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  langs:
  - csharp
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.ApplicationServices
  summary: "Возвращает имя текущего пользователя."
  remarks: "You can use the `My.User` object to get information about the current user.  \n  \n The principal that authenticates the user also controls the format of the user name. By default, an application uses Windows authentication, and the user name has the format DOMAIN\\USERNAME. A custom implementation of the principal does not necessarily use the same format.  \n  \n> [!NOTE]\n>  The `My.User.Name` property returns an empty string when run under Windows 95 and Windows 98 because those operating systems do not recognize user names.  \n  \n> [!NOTE]\n>  The exact behavior of the `My.User` object depends on the type of the application and on the operating system on which the application runs. For more information, see the <xref:Microsoft.VisualBasic.ApplicationServices.User> class overview.  \n  \n## Availability by Project Type  \n  \n|||  \n|-|-|  \n|Project type|Available|  \n|Windows Application|**Yes**|  \n|Class Library|**Yes**|  \n|Console Application|**Yes**|  \n|Windows Control Library|**Yes**|  \n|Web Control Library|**Yes**|  \n|Windows Service|**Yes**|  \n|Web Site|**Yes**|"
  example:
  - "This example checks if the application is using Windows or custom authentication, and uses that information to parse the `My.User.Name` property.  \n  \n [!code-vb[VbVbalrMyUser#3](~/add/codesnippet/visualbasic/VbVbalrMyUser/Class1.vb#3)]"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Имя текущего пользователя."
  overload: Microsoft.VisualBasic.ApplicationServices.User.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User()
  nameWithType: User.User()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.User()
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser()
  nameWithType: User.InitializeWithWindowsUser()
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser()
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
  fullName: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(Microsoft.VisualBasic.ApplicationServices.BuiltInRole)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(BuiltInRole)
  nameWithType: User.IsInRole(BuiltInRole)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(BuiltInRole)
- uid: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
  parent: Microsoft.VisualBasic.ApplicationServices
  isExternal: false
  name: BuiltInRole
  nameWithType: BuiltInRole
  fullName: Microsoft.VisualBasic.ApplicationServices.BuiltInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(System.String)
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole(String)
  nameWithType: User.IsInRole(String)
  fullName: Microsoft.VisualBasic.ApplicationServices.User.IsInRole(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
  fullName: Microsoft.VisualBasic.ApplicationServices.User.Name
- uid: Microsoft.VisualBasic.ApplicationServices.User.#ctor*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: User
  nameWithType: User.User
- uid: Microsoft.VisualBasic.ApplicationServices.User.CurrentPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: CurrentPrincipal
  nameWithType: User.CurrentPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.InitializeWithWindowsUser*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InitializeWithWindowsUser
  nameWithType: User.InitializeWithWindowsUser
- uid: Microsoft.VisualBasic.ApplicationServices.User.InternalPrincipal*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: InternalPrincipal
  nameWithType: User.InternalPrincipal
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsAuthenticated*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsAuthenticated
  nameWithType: User.IsAuthenticated
- uid: Microsoft.VisualBasic.ApplicationServices.User.IsInRole*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: IsInRole
  nameWithType: User.IsInRole
- uid: Microsoft.VisualBasic.ApplicationServices.User.Name*
  parent: Microsoft.VisualBasic.ApplicationServices.User
  isExternal: false
  name: Name
  nameWithType: User.Name
