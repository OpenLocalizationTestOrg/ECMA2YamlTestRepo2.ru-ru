### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.RequestException
  id: RequestException
  children:
  - System.IdentityModel.RequestException.#ctor
  - System.IdentityModel.RequestException.#ctor(System.String)
  - System.IdentityModel.RequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.IdentityModel.RequestException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: RequestException
  nameWithType: RequestException
  fullName: System.IdentityModel.RequestException
  type: Class
  summary: "Базовый класс для исключений, создаваемых на сбоев запросов."
  syntax:
    content: 'public abstract class RequestException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.RequestException.#ctor
  id: '#ctor'
  parent: System.IdentityModel.RequestException
  langs:
  - csharp
  name: RequestException()
  nameWithType: RequestException.RequestException()
  fullName: System.IdentityModel.RequestException.RequestException()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.RequestException&quot;> </xref> класса."
  remarks: "Этот конструктор инициализирует <xref:SystemException.Message>свойств нового экземпляра системным сообщением, содержащим описание ошибки.</xref:SystemException.Message> Это сообщение учитывает текущую культуру системы.       В следующей таблице показаны исходные значения свойств для экземпляра.      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException>| `null`.|   | <xref:System.Exception.Message>| Строка локализованного сообщения об. |</xref:System.Exception.Message> </xref:System.Exception.InnerException>"
  syntax:
    content: protected RequestException ();
    parameters: []
  overload: System.IdentityModel.RequestException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.RequestException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.IdentityModel.RequestException
  langs:
  - csharp
  name: RequestException(String)
  nameWithType: RequestException.RequestException(String)
  fullName: System.IdentityModel.RequestException.RequestException(String)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.RequestException&quot;> </xref> класса с указанным сообщением об ошибке."
  remarks: "Этот конструктор инициализирует <xref:System.Exception.Message>нового исключения, используя свойство `message` параметр.</xref:System.Exception.Message> Содержимое `message` предназначен должно быть понятно пользователю. Код, вызывающий этот конструктор, должен убедиться, что эта строка локализована для текущего языка и региональных параметров системы.       В следующей таблице показаны исходные значения свойств для экземпляра.      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException>| `null`.|   | <xref:System.Exception.Message>| Строка сообщения об ошибке. |</xref:System.Exception.Message> </xref:System.Exception.InnerException>"
  syntax:
    content: protected RequestException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об ошибке с объяснением причин исключения."
  overload: System.IdentityModel.RequestException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.RequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.IdentityModel.RequestException
  langs:
  - csharp
  name: RequestException(SerializationInfo,StreamingContext)
  nameWithType: RequestException.RequestException(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.RequestException.RequestException(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.RequestException&quot;> </xref> сериализованными данными."
  remarks: "Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке."
  syntax:
    content: protected RequestException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Объект <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> объект, содержащий сериализованные данные объекта."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Объект <xref:System.Runtime.Serialization.StreamingContext>, содержащий контекстные сведения об источнике или назначении.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.IdentityModel.RequestException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.RequestException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.IdentityModel.RequestException
  langs:
  - csharp
  name: RequestException(String,Exception)
  nameWithType: RequestException.RequestException(String,Exception)
  fullName: System.IdentityModel.RequestException.RequestException(String,Exception)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IdentityModel.RequestException&quot;> </xref> класса с указанным сообщением об ошибке и ссылкой на внутреннее исключение, вызвавшее данное исключение."
  remarks: "Исключение, созданное как прямой результат предыдущего исключения, должно содержать ссылку на предыдущее исключение в <xref:System.Exception.InnerException>свойство.</xref:System.Exception.InnerException> <xref:System.Exception.InnerException>Свойство возвращает то же значение, которое было передано в конструктор.</xref:System.Exception.InnerException>       В следующей таблице показаны исходные значения свойств для экземпляра.      | Свойство | Значение |   |--------------|-----------|   | <xref:System.Exception.InnerException>| Ссылка на внутреннее исключение. |   | <xref:System.Exception.Message>| Строка сообщения об ошибке. |</xref:System.Exception.Message> </xref:System.Exception.InnerException>"
  syntax:
    content: protected RequestException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Сообщение об ошибке с объяснением причин исключения."
    - id: innerException
      type: System.Exception
      description: "<xref:System.Exception>, Являющееся причиной текущего исключения.</xref:System.Exception> Если `innerException` не <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, текущее исключение сгенерировано в <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> блок, обрабатывающем внутреннее исключение."
  overload: System.IdentityModel.RequestException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.IdentityModel.RequestException.#ctor
  parent: System.IdentityModel.RequestException
  isExternal: false
  name: RequestException()
  nameWithType: RequestException.RequestException()
  fullName: System.IdentityModel.RequestException.RequestException()
- uid: System.IdentityModel.RequestException.#ctor(System.String)
  parent: System.IdentityModel.RequestException
  isExternal: false
  name: RequestException(String)
  nameWithType: RequestException.RequestException(String)
  fullName: System.IdentityModel.RequestException.RequestException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.RequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.IdentityModel.RequestException
  isExternal: false
  name: RequestException(SerializationInfo,StreamingContext)
  nameWithType: RequestException.RequestException(SerializationInfo,StreamingContext)
  fullName: System.IdentityModel.RequestException.RequestException(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.IdentityModel.RequestException.#ctor(System.String,System.Exception)
  parent: System.IdentityModel.RequestException
  isExternal: false
  name: RequestException(String,Exception)
  nameWithType: RequestException.RequestException(String,Exception)
  fullName: System.IdentityModel.RequestException.RequestException(String,Exception)
- uid: System.IdentityModel.RequestException.#ctor*
  parent: System.IdentityModel.RequestException
  isExternal: false
  name: RequestException
  nameWithType: RequestException.RequestException
