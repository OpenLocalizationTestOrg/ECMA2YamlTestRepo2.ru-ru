### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.BuildManager
  id: BuildManager
  children:
  - System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  - System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  - System.Web.Compilation.BuildManager.BatchCompilationEnabled
  - System.Web.Compilation.BuildManager.CodeAssemblies
  - System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  - System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  - System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  - System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  - System.Web.Compilation.BuildManager.GetGlobalAsaxType
  - System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetReferencedAssemblies
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  - System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  - System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  - System.Web.Compilation.BuildManager.IsPrecompiledApp
  - System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  - System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  - System.Web.Compilation.BuildManager.TargetFramework
  langs:
  - csharp
  name: BuildManager
  nameWithType: BuildManager
  fullName: System.Web.Compilation.BuildManager
  type: Class
  summary: "Предоставляет набор методов для управления компиляцией приложения ASP.NET."
  remarks: "Класс BuildManager управляет процессом компиляции сборки и страниц для приложения. Он является запечатанным и наследовать его нельзя.       BuildManager содержит статические члены, которые предоставляют сведения о скомпилированных сборках."
  syntax:
    content: public sealed class BuildManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  id: AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Задает строку, представляющую зависимостей, которое используется диспетчером построения можно определить, требуется ли чистую сборку."
  remarks: "Метод должен вызываться во время `Application_PreStartInit` рабочей области приложения."
  syntax:
    content: public static void AddCompilationDependency (string dependency);
    parameters:
    - id: dependency
      type: System.String
      description: "Строка, представляющая зависимость."
  overload: System.Web.Compilation.BuildManager.AddCompilationDependency*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> dependency </code> Параметр <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или является пустой строкой."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод был вызван после <xref uid=&quot;langword_csharp_Application_PreStartInit&quot; name=&quot;Application_PreStartInit&quot; href=&quot;&quot;> </xref> рабочей области приложения."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  id: AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Добавляет сборку приложения набор сборок, на которую указывает ссылка."
  remarks: "Вызов этого метода эквивалентен Добавление сборки в файл Web.config уровня приложения. Метод должен вызываться во время `Application_PreStartInit` рабочей области приложения.       <xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>Метод будет возвращать набор сборок, которые определяются в файлах конфигурации и все сборки, которые были добавлены с помощью этого метода.</xref:System.Web.Compilation.BuildManager.GetReferencedAssemblies%2A>       Если попытка добавить сборку, которая уже была добавлена, повторяющаяся запись игнорируется.       Этот метод должен вызываться перед `Application_Start` возникает событие в файле Global.asax."
  syntax:
    content: public static void AddReferencedAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "Чтобы добавить сборку."
  overload: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> assembly </code> Параметр <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустым."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод не вызван перед <xref uid=&quot;langword_csharp_Application_Start&quot; name=&quot;Application_Start&quot; href=&quot;&quot;> </xref> произошло событие в файле Global.asax."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  id: BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает или задает значение, указывающее, включено ли пакетной компиляции."
  remarks: "Это свойство позволяет выключать пакетную компиляцию программными средствами. Он соответствует `batch` атрибут `compilation` в файле Web.config. Дополнительные сведения см. в разделе [компиляции элемента (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/7c319582-074a-4d2a-a787-03b9d4541c12).       Свойство может быть задано только в `PreApplicationStart` метод. Дополнительные сведения о `PreApplicationStart` метода, в разделе <xref:System.Web.PreApplicationStartMethodAttribute>.</xref:System.Web.PreApplicationStartMethodAttribute>"
  syntax:
    content: public static Nullable<bool> BatchCompilationEnabled { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пакетная компиляция всегда включена, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если пакетной компиляции никогда не включен, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если параметр компиляции определяется в файле конфигурации. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Свойство не было задано <xref uid=&quot;langword_csharp_PreApplicationStart&quot; name=&quot;PreApplicationStart&quot; href=&quot;&quot;> </xref> метод."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  id: CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает список сборок, созданных в каталоге App_Code."
  syntax:
    content: public static System.Collections.IList CodeAssemblies { get; }
    return:
      type: System.Collections.IList
      description: "<xref:System.Collections.IList>Коллекция, содержащая сборки в каталоге App_Code.</xref:System.Collections.IList>"
  overload: System.Web.Compilation.BuildManager.CodeAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  id: CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Создает кэшированный файл."
  remarks: "Этот метод и <xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A>метода позволяют выполнять кэширование сохраняется после перезагрузки домена приложения в средах с частичным доверием.</xref:System.Web.Compilation.BuildManager.ReadCachedFile%2A> Он используется платформой MVC для кэширования результатов просмотра контроллера.       Для кэширования данных запись в <xref:System.IO.Stream>объект, возвращаемый этим методом.</xref:System.IO.Stream>"
  syntax:
    content: public static System.IO.Stream CreateCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла для создания."
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>Объекта для нового файла.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildManager.CreateCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  id: CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Обрабатывает файл по его виртуальному пути и создает экземпляр результата."
  remarks: "Метод CreateInstanceFromVirtualPath работает для компиляции и не компиляции страницы."
  syntax:
    content: public static object CreateInstanceFromVirtualPath (string virtualPath, Type requiredBaseType);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь файла для создания экземпляра."
    - id: requiredBaseType
      type: System.Type
      description: "Базовый тип, определяющий создаваемого объекта."
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий экземпляр обработанного файла.</xref:System.Object>"
  overload: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает набор для виртуального пути, если путь расположен в кэше ASP.NET зависимостей сборки."
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Контекст запроса."
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь, по которому определяется набор зависимостей сборки."
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "Объект <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> объект, хранящийся в кэше, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> не удалось извлечь объект из кэша."
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  id: GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает набор для виртуального пути, если путь расположен в кэше ASP.NET, даже если содержимое не является текущим зависимостей сборки."
  remarks: "Если `ensureIsUpToDate` параметр имеет значение `true`, эта перегрузка метода GetCachedBuildDependencySet ведет себя как <xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName>перегрузку.</xref:System.Web.Compilation.BuildManager.GetCachedBuildDependencySet%2A?displayProperty=fullName> Обе перегрузки возвращают текущий набор, если таковой существует зависимость сборки, в противном случае они возвращают `null`.       Однако перегрузка метода GetCachedBuildDependencySet включает параметр для возврата любой набор зависимостей построения, который доступен, даже устаревшие один. Если `ensureIsUpToDate` параметр имеет значение `false`, метод будет возвращать любой доступный набор зависимостей построения."
  syntax:
    content: public static System.Web.Compilation.BuildDependencySet GetCachedBuildDependencySet (System.Web.HttpContext context, string virtualPath, bool ensureIsUpToDate);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Контекст запроса."
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь, по которому определяется набор зависимостей сборки."
    - id: ensureIsUpToDate
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для указания зависимости сборки только текущего набора должны быть возвращены, или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для указания, что должно возвращаться любой доступный набор зависимостей построения, даже если оно не является текущим. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.Compilation.BuildDependencySet
      description: "Объект <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> объект, хранящийся в кэше, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если <xref href=&quot;System.Web.Compilation.BuildDependencySet&quot;> </xref> не удалось извлечь объект из кэша."
  overload: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  id: GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Компилирует файл в сборку с помощью указанного виртуального пути."
  syntax:
    content: public static System.Reflection.Assembly GetCompiledAssembly (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь для сборки в сборку."
    return:
      type: System.Reflection.Assembly
      description: "<xref:System.Reflection.Assembly>, Скомпилированный из указанного виртуального пути, который кэшируется в памяти или на диск.</xref:System.Reflection.Assembly>"
  overload: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  id: GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Компилирует файл по указанному виртуальному пути и возвращает настраиваемую строку, которую поставщик построения хранит в кэше."
  syntax:
    content: public static string GetCompiledCustomString (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь файла для сборки."
    return:
      type: System.String
      description: "Строка, возвращенная <xref:System.Web.Compilation.BuildProvider.GetCustomString*>метод, который кэшируется на диске или памяти.</xref:System.Web.Compilation.BuildProvider.GetCustomString*>"
  overload: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  id: GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Компилирует файл по указанному виртуальному пути и возвращает скомпилированный тип."
  syntax:
    content: public static Type GetCompiledType (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь для сборки в тип."
    return:
      type: System.Type
      description: "<xref:System.Type>Объект, представляющий тип, созданный посредством компиляции виртуального пути.</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetCompiledType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Произошла ошибка при компиляции виртуального пути."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  id: GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает объект, представляющий скомпилированный тип на файл Global.asax."
  remarks: "Если этот метод вызывается перед был скомпилирован в файл Global.asax исключение."
  syntax:
    content: public static Type GetGlobalAsaxType ();
    parameters: []
    return:
      type: System.Type
      description: "Объект, представляющий скомпилированный тип на файл Global.asax."
  overload: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Была предпринята попытка вызвать этот метод перед страницы Global.asax был скомпилирован."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  id: GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает фабрику объектов для указанного виртуального пути."
  remarks: "Этот метод возвращает объект, который позволяет создавать типы путем компиляции виртуального пути. Возвращает объект, независимо от того, компилируется ли веб-сайта."
  syntax:
    content: public static System.Web.Util.IWebObjectFactory GetObjectFactory (string virtualPath, bool throwIfNotFound);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь."
    - id: throwIfNotFound
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>приводит к возникновению ошибки, если виртуальный путь не существует; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Если виртуальный путь не существует и `throwIfNotFound` — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, этот метод возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.Util.IWebObjectFactory
      description: "Фабрика объектов."
  overload: System.Web.Compilation.BuildManager.GetObjectFactory*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Виртуальный путь не существует.       - или - исключение более высокого уровня уже существовал при вызове этого метода.       - или - этот метод был вызван, когда процесс компиляции был построение файлов верхнего уровня.       - или - это предварительно скомпилированное приложение и виртуальный путь не найден в кэше.       - или - обнаружена циклическая ссылка."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  id: GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает список ссылок на сборки, которые должны ссылаться все компилируемые страницы."
  remarks: "Коллекция сборок, возвращаемый методом GetReferencedAssemblies включает сборки, указанной в элементе файла Web.config, сборок, созданных из пользовательского кода в каталоге App_Code и сборки в другие папки верхнего уровня.       GetReferencedAssemblies впервые появился в платформе .NET Framework версии 3.5.  Дополнительные сведения см. в разделе [версии платформы .NET Framework и зависимости](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static System.Collections.ICollection GetReferencedAssemblies ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Коллекция ссылок на сборки.</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  id: GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Находит тип в сборках верхнего уровня или в сборках, заданных в конфигурации и при необходимости вызывает исключение в случае ошибки."
  remarks: "Верхнего уровня сборки ссылается на файл Global.asax или в файл, который находится в каталоге App_GlobalResources, App_WebReferences, App_Code или App_Browsers."
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError);
    parameters:
    - id: typeName
      type: System.String
      description: "Имя типа."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для создания исключения, если <xref:System.Type>объект не может быть создано для имени типа; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
    return:
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий запрошенный <code> typeName </code> параметр.</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  id: GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Находит тип в сборках верхнего уровня или в сборках, заданных в конфигурации с помощью поиска без учета регистра и вызывая выборочное исключение при сбое."
  remarks: "Верхнего уровня сборки ссылается на файл Global.asax или в файл, который находится в каталоге App_GlobalResources, App_WebReferences, App_Code или App_Browsers."
  syntax:
    content: public static Type GetType (string typeName, bool throwOnError, bool ignoreCase);
    parameters:
    - id: typeName
      type: System.String
      description: "Имя типа."
    - id: throwOnError
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для создания исключения, если <xref:System.Type>не может быть создано для имени типа; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если `typeName` с учетом регистра; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий запрошенный <code> typeName </code> параметр.</xref:System.Type>"
  overload: System.Web.Compilation.BuildManager.GetType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>typeName</code> is invalid.  \n  \n \\- or -  \n  \n <code>typeName</code> is ambiguous.  \n  \n \\- or -  \n  \n <code>typeName</code> could not be found, and <code>throwOnError</code> is <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>."
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  id: GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Предоставляет коллекцию зависимостей виртуальный путь для указанного виртуального пути."
  syntax:
    content: public static System.Collections.ICollection GetVirtualPathDependencies (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь, используемый для определения зависимостей."
    return:
      type: System.Collections.ICollection
      description: "<xref:System.Collections.ICollection>Коллекция файлов, представленный виртуальных путей, которые кэширование зависимости для виртуального пути.</xref:System.Collections.ICollection>"
  overload: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  id: IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает значение, указывающее, является ли приложение скомпилировано предварительно."
  syntax:
    content: public static bool IsPrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если приложение является предкомпилированного; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  id: IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает значение, указывающее, является ли приложение скомпилировано предварительно как обновляемая."
  syntax:
    content: public static bool IsUpdatablePrecompiledApp { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если приложение является предкомпилированного как обновляемые; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  id: ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Считывает кэшированный файл."
  remarks: "Этот метод и <xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A>метода позволяют выполнять кэширование сохраняется после перезагрузки домена приложения в средах с частичным доверием.</xref:System.Web.Compilation.BuildManager.CreateCachedFile%2A> Он используется платформой MVC для кэширования результатов просмотра контроллера.       Для получения кэшированных данных, считываемых из <xref:System.IO.Stream>объект, возвращаемый этим методом.</xref:System.IO.Stream>"
  syntax:
    content: public static System.IO.Stream ReadCachedFile (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла для чтения."
    return:
      type: System.IO.Stream
      description: "<xref:System.IO.Stream>Для файла, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если файл не существует.</xref:System.IO.Stream>"
  overload: System.Web.Compilation.BuildManager.ReadCachedFile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.BuildManager.TargetFramework
  id: TargetFramework
  parent: System.Web.Compilation.BuildManager
  langs:
  - csharp
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает целевой версии платформы .NET Framework для текущего веб-сайта."
  remarks: "Это свойство поддерживает функцию для различных версий ASP.NET, которая позволяет использовать последнюю версию [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] для разработки приложений, работающих с предыдущими версиями платформы .NET Framework. Поставщик построения можно использовать это свойство, чтобы убедиться в том, что поставщик создает код, который подходит для целевой версии платформы .NET Framework. Например, может потребоваться создать другой код в зависимости от того, ли предназначен веб-сайт [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)] или [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)]. Дополнительные сведения о различных версий см. в разделе [.NET Framework различных версий для веб-проектов ASP.NET](~/add/includes/ajax-current-ext-md.md).       Если веб-сайта нет файла Web.config, ASP.NET предполагает, требуемой версии .NET framework версии, который связан с пулом приложений IIS, что сайт работает в группе. Для файловой системы веб-сайта, на котором выполняется в Visual Studio, версия платформы по умолчанию является текущая версия [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].       Если веб-сайт содержит файл Web.config, ASP.NET определяет целевую платформу, изучив файл Web.config.      ## Веб-сайтов, предназначенных для .NET Framework 2.0, веб-приложений, ориентированных на [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] компилируются, как будто целевой [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)]. Процесс построения не делает различия между [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] и [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] потому, что в файле Web.config не показывают компилятора версии или целевой платформы, если оно предназначено для одной из этих версий. (Для [!INCLUDE[net_v35_short](~/add/includes/net-v35-short-md.md)], файл Web.config определяет версию компилятора и для [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)], файл Web.config указывает целевую платформу.) Таким образом, для веб-приложений, ориентированных на [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], это свойство возвращает моникер целевой платформы, который указывает [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)].       Обычно это не вызывает проблем. [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)]предотвращает создание ссылки на [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] функции в проекте, которая предназначена для [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]. Например [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] не предоставляют шаблоны элементов для служб WCF в проекте, которая предназначена для [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], так как WCF была введена вместе с [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)] и не совместим с [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)].       Если планируется развернуть веб-сайт в [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)] среды выполнения и используется средство отличный от [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)] для обращения к функциям, которые совместимы только с [!INCLUDE[net_v30_short](~/add/includes/net-v30-short-md.md)], проект может быть построен без создания ошибки или предупреждения. Однако приложение может вызывать ошибки при запуске веб-сайта на [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)]."
  syntax:
    content: public static System.Runtime.Versioning.FrameworkName TargetFramework { get; }
    return:
      type: System.Runtime.Versioning.FrameworkName
      description: "Целевая версия .NET Framework для текущего веб-сайта."
  overload: System.Web.Compilation.BuildManager.TargetFramework*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency(String)
  nameWithType: BuildManager.AddCompilationDependency(String)
  fullName: System.Web.Compilation.BuildManager.AddCompilationDependency(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly(System.Reflection.Assembly)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly(Assembly)
  nameWithType: BuildManager.AddReferencedAssembly(Assembly)
  fullName: System.Web.Compilation.BuildManager.AddReferencedAssembly(Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
  fullName: System.Web.Compilation.BuildManager.BatchCompilationEnabled
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Compilation.BuildManager.CodeAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
  fullName: System.Web.Compilation.BuildManager.CodeAssemblies
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.Compilation.BuildManager.CreateCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile(String)
  nameWithType: BuildManager.CreateCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.CreateCachedFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(System.String,System.Type)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath(String,Type)
  nameWithType: BuildManager.CreateInstanceFromVirtualPath(String,Type)
  fullName: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String)
- uid: System.Web.Compilation.BuildDependencySet
  parent: System.Web.Compilation
  isExternal: false
  name: BuildDependencySet
  nameWithType: BuildDependencySet
  fullName: System.Web.Compilation.BuildDependencySet
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(System.Web.HttpContext,System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet(HttpContext,String,Boolean)
  nameWithType: BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet(HttpContext,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly(String)
  nameWithType: BuildManager.GetCompiledAssembly(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledAssembly(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString(String)
  nameWithType: BuildManager.GetCompiledCustomString(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledCustomString(String)
- uid: System.Web.Compilation.BuildManager.GetCompiledType(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType(String)
  nameWithType: BuildManager.GetCompiledType(String)
  fullName: System.Web.Compilation.BuildManager.GetCompiledType(String)
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType()
  nameWithType: BuildManager.GetGlobalAsaxType()
  fullName: System.Web.Compilation.BuildManager.GetGlobalAsaxType()
- uid: System.Web.Compilation.BuildManager.GetObjectFactory(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory(String,Boolean)
  nameWithType: BuildManager.GetObjectFactory(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetObjectFactory(String,Boolean)
- uid: System.Web.Util.IWebObjectFactory
  parent: System.Web.Util
  isExternal: false
  name: IWebObjectFactory
  nameWithType: IWebObjectFactory
  fullName: System.Web.Util.IWebObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies()
  nameWithType: BuildManager.GetReferencedAssemblies()
  fullName: System.Web.Compilation.BuildManager.GetReferencedAssemblies()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean)
- uid: System.Web.Compilation.BuildManager.GetType(System.String,System.Boolean,System.Boolean)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType(String,Boolean,Boolean)
  nameWithType: BuildManager.GetType(String,Boolean,Boolean)
  fullName: System.Web.Compilation.BuildManager.GetType(String,Boolean,Boolean)
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies(String)
  nameWithType: BuildManager.GetVirtualPathDependencies(String)
  fullName: System.Web.Compilation.BuildManager.GetVirtualPathDependencies(String)
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
  fullName: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile(System.String)
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile(String)
  nameWithType: BuildManager.ReadCachedFile(String)
  fullName: System.Web.Compilation.BuildManager.ReadCachedFile(String)
- uid: System.Web.Compilation.BuildManager.TargetFramework
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
  fullName: System.Web.Compilation.BuildManager.TargetFramework
- uid: System.Runtime.Versioning.FrameworkName
  parent: System.Runtime.Versioning
  isExternal: true
  name: FrameworkName
  nameWithType: FrameworkName
  fullName: System.Runtime.Versioning.FrameworkName
- uid: System.Web.Compilation.BuildManager.AddCompilationDependency*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddCompilationDependency
  nameWithType: BuildManager.AddCompilationDependency
- uid: System.Web.Compilation.BuildManager.AddReferencedAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: AddReferencedAssembly
  nameWithType: BuildManager.AddReferencedAssembly
- uid: System.Web.Compilation.BuildManager.BatchCompilationEnabled*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: BatchCompilationEnabled
  nameWithType: BuildManager.BatchCompilationEnabled
- uid: System.Web.Compilation.BuildManager.CodeAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CodeAssemblies
  nameWithType: BuildManager.CodeAssemblies
- uid: System.Web.Compilation.BuildManager.CreateCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateCachedFile
  nameWithType: BuildManager.CreateCachedFile
- uid: System.Web.Compilation.BuildManager.CreateInstanceFromVirtualPath*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: CreateInstanceFromVirtualPath
  nameWithType: BuildManager.CreateInstanceFromVirtualPath
- uid: System.Web.Compilation.BuildManager.GetCachedBuildDependencySet*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCachedBuildDependencySet
  nameWithType: BuildManager.GetCachedBuildDependencySet
- uid: System.Web.Compilation.BuildManager.GetCompiledAssembly*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledAssembly
  nameWithType: BuildManager.GetCompiledAssembly
- uid: System.Web.Compilation.BuildManager.GetCompiledCustomString*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledCustomString
  nameWithType: BuildManager.GetCompiledCustomString
- uid: System.Web.Compilation.BuildManager.GetCompiledType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetCompiledType
  nameWithType: BuildManager.GetCompiledType
- uid: System.Web.Compilation.BuildManager.GetGlobalAsaxType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetGlobalAsaxType
  nameWithType: BuildManager.GetGlobalAsaxType
- uid: System.Web.Compilation.BuildManager.GetObjectFactory*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetObjectFactory
  nameWithType: BuildManager.GetObjectFactory
- uid: System.Web.Compilation.BuildManager.GetReferencedAssemblies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetReferencedAssemblies
  nameWithType: BuildManager.GetReferencedAssemblies
- uid: System.Web.Compilation.BuildManager.GetType*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetType
  nameWithType: BuildManager.GetType
- uid: System.Web.Compilation.BuildManager.GetVirtualPathDependencies*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: GetVirtualPathDependencies
  nameWithType: BuildManager.GetVirtualPathDependencies
- uid: System.Web.Compilation.BuildManager.IsPrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsPrecompiledApp
  nameWithType: BuildManager.IsPrecompiledApp
- uid: System.Web.Compilation.BuildManager.IsUpdatablePrecompiledApp*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: IsUpdatablePrecompiledApp
  nameWithType: BuildManager.IsUpdatablePrecompiledApp
- uid: System.Web.Compilation.BuildManager.ReadCachedFile*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: ReadCachedFile
  nameWithType: BuildManager.ReadCachedFile
- uid: System.Web.Compilation.BuildManager.TargetFramework*
  parent: System.Web.Compilation.BuildManager
  isExternal: false
  name: TargetFramework
  nameWithType: BuildManager.TargetFramework
