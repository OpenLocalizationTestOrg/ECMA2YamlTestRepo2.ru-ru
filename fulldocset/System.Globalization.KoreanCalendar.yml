### YamlMime:ManagedReference
items:
- uid: System.Globalization.KoreanCalendar
  id: KoreanCalendar
  children:
  - System.Globalization.KoreanCalendar.#ctor
  - System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.KoreanCalendar.AlgorithmType
  - System.Globalization.KoreanCalendar.Eras
  - System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.GetEra(System.DateTime)
  - System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.GetMonth(System.DateTime)
  - System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.KoreanCalendar.GetYear(System.DateTime)
  - System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.KoreanEra
  - System.Globalization.KoreanCalendar.MaxSupportedDateTime
  - System.Globalization.KoreanCalendar.MinSupportedDateTime
  - System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.KoreanCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: KoreanCalendar
  nameWithType: KoreanCalendar
  fullName: System.Globalization.KoreanCalendar
  type: Class
  summary: "Представляет Корейский календарь."
  remarks: "Корейский календарь функционирует в так же, как и григорианский, за исключением года и эры.      Настроек [!NOTE] настроек сведения об использовании KoreanCalendar классов и классов календарей в платформе .NET Framework см. в разделе [работа с календарями](~/add/includes/ajax-current-ext-md.md).       Класс KoreanCalendar распознает только текущую эру.       Корейский календарь годам соответствуют же високосного года по григорианскому календарю. Високосный год по григорианскому календарю определяется как год, число которого делится на 4, за исключением того, если оно делится на 100. Тем не менее число года делится на 400, год является високосным. Общие году 365 дней, в високосном году 366 дней.       Корейский календарь имеет 12 месяцев с 28 до 31 дня: | Значение GetMonth | Месяц | Дней в обычных годах | Дни в високосного года |   |--------------------|-----------|--------------------------|------------------------|   | 1 | 1월 (январь) | 31 | 31 |   | 2 | 2월 (февраль) | 28 | 29 |   | 3 | 3월 (март) | 31 | 31 |   | 4 | 4월 (апрель) | 30 | 30 |   | 5 | 5월 (май) | 31 | 31 |   | 6 | 6월 (июнь) | 30 | 30 |   | 7 | 7월 (июль) | 31 | 31 |   | 8 | 8월 (август) | 31 | 31 |   | 9 | 9월 (сентябрь) | 30 | 30 |   | 10 | 10월 (октябрь) | 31 | 31 |   | 11 | 11월 (ноябрь) | 30 | 30 |   | 12 | 12월 (декабрь) | 31 | 31 |       Февраль — 29 дней високосного года и 28 дней.       Дата 1 января 2001 г. н. э. по григорианскому календарю соответствует первому дню января 4334 года нашей эры Корейский календарь.       Каждый <xref:System.Globalization.CultureInfo>объект поддерживает несколько календарей.</xref:System.Globalization.CultureInfo> <xref:System.Globalization.CultureInfo.Calendar%2A>Свойство возвращает календарь по умолчанию для языка и региональных параметров и <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>свойство возвращает массив, содержащий все календари, поддерживаемые языком и региональными параметрами.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Чтобы изменить используемый календарь <xref:System.Globalization.CultureInfo>приложение должно задать <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>Свойства <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>для нового <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class KoreanCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: KoreanCalendar()
  nameWithType: KoreanCalendar.KoreanCalendar()
  fullName: System.Globalization.KoreanCalendar.KoreanCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> класса."
  syntax:
    content: public KoreanCalendar ();
    parameters: []
  overload: System.Globalization.KoreanCalendar.#ctor*
  exceptions:
  - type: System.TypeInitializationException
    commentId: T:System.TypeInitializationException
    description: "Не удалось инициализировать <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> объекта из-за отсутствия сведения о культуре."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: KoreanCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.KoreanCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает <xref:System.DateTime>указанный количество месяцев от указанной <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Компонент дня <xref:System.DateTime>изменяется, если конечный день не является допустимым днем месяца и года.</xref:System.DateTime> Он заменяется последним допустимым днем месяца и года. Часть года полученный <xref:System.DateTime>изменяется, если конечный месяц находится вне диапазона года заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Эта реализация поддерживает только текущую эру. Таким образом, <xref:System.ArgumentException>создается исключение, если год результата находится за пределами эры заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Часть времени суток полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Например, если указанный месяц — октябрь, который содержит 31 день, указанный день — 31 день этого месяца, а значение `months` параметра равно 6, год результата на один больше указанного, месяц — Апрель и день — 30-й день, что последний день в апреле.       Если значение `months` параметр имеет отрицательное значение, <xref:System.DateTime>более ранняя, чем указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> полученный       <xref:System.DateTime.Kind%2A>Возвращаемое <xref:System.DateTime>значение всегда равно <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> свойство</xref:System.DateTime.Kind%2A> Можно сохранить <xref:System.DateTime.Kind%2A>свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>метода, как показано в следующем примере.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.k_3_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.k_3_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_3_2.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_3_2.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_3_2.vb)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>К которому добавляются месяцы.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Число месяцев для добавления."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Который является результатом добавления указанное число месяцев до указанного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>— меньше -120000.       - или - <code>months</code> больше 120000."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: KoreanCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.KoreanCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает, <xref:System.DateTime>то есть указанное число лет от указанного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Компонент дня <xref:System.DateTime>изменяется, если конечный день не является допустимым днем месяца и года.</xref:System.DateTime> Он заменяется последним допустимым днем месяца и года. Полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> компонент месяца Эта реализация поддерживает только текущую эру. Таким образом, <xref:System.ArgumentException>создается исключение, если год результата находится за пределами эры заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Часть времени суток полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Например февраль имеет 28 дней, за исключением високосного года, когда 29 дней. Если задана дата 29 февраля високосного года, а значение `years` равно 1, полученной дате является 28 февраля следующего года.       Если `years` отрицательное, полученный <xref:System.DateTime>более ранняя, чем указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Возвращаемое <xref:System.DateTime>значение всегда равно <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> свойство</xref:System.DateTime.Kind%2A> Можно сохранить <xref:System.DateTime.Kind%2A>свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>метода, как показано в следующем примере.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.k_2_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.k_2_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_2_2.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_2_2.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_2_2.vb)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>К которому добавляются годы.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Число лет для добавления."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Который является результатом сложения указанного числа лет на указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.AddYears*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>years</code>или <code>time</code> выходит за пределы диапазона."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: KoreanCalendar.AlgorithmType
  fullName: System.Globalization.KoreanCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение, указывающее, является ли текущий календарь солнечным, лунным или их сочетание."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.k_1_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.k_1_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Всегда возвращает <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.KoreanCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.Eras
  id: Eras
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: KoreanCalendar.Eras
  fullName: System.Globalization.KoreanCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает список эр в <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref>."
  remarks: "<xref:System.Globalization.KoreanCalendar>Класс распознает только текущую эру.</xref:System.Globalization.KoreanCalendar> Это свойство всегда возвращает массив с единственным элементом."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Массив целых чисел, представляющий эры в <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref>."
  overload: System.Globalization.KoreanCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: KoreanCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_9_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_9_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_9_1.vb)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 31, представляющее день месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: KoreanCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день недели в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Ниже приведены значения <xref:System.DayOfWeek>: | Значение DayOfWeek | Указывает, что |   |---------------------|---------------------|   | Воскресенье | 일요일 |   | Понедельник | 월요일 |   | Вторник | 화요일 |   | Среда | 수요일 |   | Четверг | 목요일 |   | Пятница | 금요일 |   | Суббота | 토요일 |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_10_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_10_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_10_1.vb)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "<xref:System.DayOfWeek>Значение, представляющее день недели в указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.KoreanCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: KoreanCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день года в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "День года определяется как число дней с первого дня года. Например GetDayOfYear за первый день первого месяца возвращает 1, и GetDayOfYear за последний день за последний месяц возвращает общее количество дней в этом году. Общее имеет то же значение, что возвращают <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>.</xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_5_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_5_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_5_1.vb)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 366, обозначающее день года в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: KoreanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число дней в указанном месяце указанных года и эры."
  remarks: "Например, этот метод возвращает 28 или 29 февраля (`month` = 2), в зависимости от ли `year` является високосным годом."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cs[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/393cfbdd-c5b5-4e14-9cac-_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/393cfbdd-c5b5-4e14-9cac-_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/393cfbdd-c5b5-4e14-9cac-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Int32
      description: "Число дней в указанном месяце указанных года и эры."
  overload: System.Globalization.KoreanCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>month</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: KoreanCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число дней в указанном году указанной эры."
  remarks: "Например, этот метод возвращает 365 или 366, в зависимости от того, следует ли `year` является високосным годом."
  example:
  - "The following example calls GetDaysInYear for five years in each era.  \n  \n [!code-vb[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.k_7_1.vb)]\n [!code-cs[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.k_7_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.k_7_1.cpp)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Int32
      description: "Число дней в указанном году указанной эры."
  overload: System.Globalization.KoreanCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: KoreanCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение эры в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "<xref:System.Globalization.KoreanCalendar>Класс распознает только текущую эру.</xref:System.Globalization.KoreanCalendar>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_1_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_1_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_1_1.vb)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число, представляющее эру в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: KoreanCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет високосный месяц для заданных года и эры."
  remarks: "В календарях, поддерживает понятие високосного года високосный месяц может возникнуть после определенного месяца или после любого месяца в году. Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>метод возвращает число от 1 до 13, указывающее месяц, связанные с указанной даты.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> Если между восьмой и девятый месяцы года, високосным месяцем <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>метод возвращает значение 8 для восьмой месяц, 9 для високосный месяц восьмой и 10 за девятый месяц.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: era
      type: System.Int32
      description: "Эра."
    return:
      type: System.Int32
      description: "Возвращаемое значение всегда равно 0 из-за <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> класс не поддерживает понятие високосного года."
  overload: System.Globalization.KoreanCalendar.GetLeapMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: KoreanCalendar.GetMonth(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_0_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_0_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_0_1.vb)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: KoreanCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число месяцев в указанном году указанной эры."
  remarks: ''
  example:
  - "The following example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.k_8_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.k_8_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.k_8_1.vb)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Int32
      description: "Число месяцев в указанном году указанной эры."
  overload: System.Globalization.KoreanCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: KoreanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.KoreanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает неделю года, который включает дату в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Этот метод можно использовать для определения количества недель в году, задав `time` параметра до последнего дня года.       <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>содержит значения конкретного языка и региональных параметров, которые можно использовать для `rule` и `firstDayOfWeek` параметров.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>       <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>Свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>содержит <xref:System.DayOfWeek>значение, представляющее первый день недели для определенной культуры, с помощью календаря, указанное в <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>свойстве <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.DayOfWeek> по умолчанию</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A>       <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>Свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>содержит <xref:System.Globalization.CalendarWeekRule>значение, которое определяет календарной недели для определенной культуры, с помощью календаря задано <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>свойство <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CalendarWeekRule> по умолчанию</xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A>       Например, в <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A>для 1 января возвращает 1.</xref:System.Globalization.Calendar.GetWeekOfYear%2A> </xref:System.Globalization.GregorianCalendar>"
  example:
  - "The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \n  \n [!code-cs[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/csharp/96e14512-2c21-42ee-8498-_1.cs)]\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/visualbasic/96e14512-2c21-42ee-8498-_1.vb)]\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/add/codesnippet/cpp/96e14512-2c21-42ee-8498-_1.cpp)]"
  syntax:
    content: public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    - id: rule
      type: System.Globalization.CalendarWeekRule
      description: "Один из <xref:System.Globalization.CalendarWeekRule>значений, определяющее календарную неделю.</xref:System.Globalization.CalendarWeekRule>"
    - id: firstDayOfWeek
      type: System.DayOfWeek
      description: "Один из <xref:System.DayOfWeek>значения, представляющее первый день недели.</xref:System.DayOfWeek>"
    return:
      type: System.Int32
      description: "От 1 целое число, представляющее неделю года, который включает дату в <code> time </code> параметра."
  overload: System.Globalization.KoreanCalendar.GetWeekOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>или <code>firstDayOfWeek</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>rule</code> не является допустимым <xref:System.Globalization.CalendarWeekRule> значение."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: KoreanCalendar.GetYear(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает год в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.k_6_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.k_6_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.k_6_1.vb)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число, представляющее год в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанная дата указанной эры високосным днем."
  remarks: "Корейский календарь годам соответствуют же високосного года по григорианскому календарю. Високосный год по григорианскому календарю определяется как год, число которого делится на 4, за исключением того, если оно делится на 100. Тем не менее число года делится на 400, год является високосным. Общие году 365 дней, в високосном году 366 дней.       День високосным является день, который возникает только в високосном году. Например февраля — 29 только день високосным."
  example:
  - "The following example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.KoreanCalendar.IsLeapDay#1](~/add/codesnippet/csharp/d8cc07a6-1692-41ee-9974-_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/d8cc07a6-1692-41ee-9974-_1.vb)]\n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapDay#1](~/add/codesnippet/cpp/d8cc07a6-1692-41ee-9974-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: day
      type: System.Int32
      description: "Целое число от 1 до 31, представляющее день."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный день — високосный день; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.KoreanCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>month</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>day</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанный месяц указанных года и эры високосным месяцем."
  remarks: "Корейский календарь годам соответствуют же високосного года по григорианскому календарю. Високосный год по григорианскому календарю определяется как год, число которого делится на 4, за исключением того, если оно делится на 100. Тем не менее число года делится на 400, год является високосным. Общие году 365 дней, в високосном году 366 дней.       Високосный месяц — целый месяц, происходит только в високосном году. Корейский календарь не поддерживает все месяцы високосным."
  example:
  - "The following example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cs[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/fbe2462c-8d1d-4e5a-bf95-_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/fbe2462c-8d1d-4e5a-bf95-_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/fbe2462c-8d1d-4e5a-bf95-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Boolean
      description: "Этот метод всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, если не переопределено в производном классе."
  overload: System.Globalization.KoreanCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>month</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанный год указанной эры високосным годом."
  remarks: "Корейский календарь годам соответствуют же високосного года по григорианскому календарю. Високосный год по григорианскому календарю определяется как год, число которого делится на 4, за исключением того, если оно делится на 100. Тем не менее число года делится на 400, год является високосным. Общие году 365 дней, в високосном году 366 дней."
  example:
  - "The following example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.k_4_1.cpp)]\n [!code-cs[System.Globalization.KoreanCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.k_4_1.cs)]\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.k_4_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный год — високосный; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.KoreanCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.KoreanEra
  id: KoreanEra
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: KoreanEra
  nameWithType: KoreanCalendar.KoreanEra
  fullName: System.Globalization.KoreanCalendar.KoreanEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Представляет текущую эру. Это поле является константой."
  remarks: "<xref:System.Globalization.KoreanCalendar>Класс распознает только текущую эру.</xref:System.Globalization.KoreanCalendar> Это поле всегда возвращает 1."
  syntax:
    content: public const int KoreanEra = 1;
    return:
      type: System.Int32
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: KoreanCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает последние дату и время, поддерживаемые <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.k_0_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.k_0_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.k_0_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Самые последние дату и время, поддерживаемые <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> класс, который эквивалентен последнему мгновению 31 декабря 9999 года нашей эры по григорианскому календарю."
  overload: System.Globalization.KoreanCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: KoreanCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает минимальное значение даты и времени, поддерживаемое <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.k_2_1.cs)]\n [!code-cpp[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.k_2_1.cpp)]\n [!code-vb[System.Globalization.KoreanCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.k_2_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Минимальное значение даты и времени, поддерживаемое <xref href=&quot;System.Globalization.KoreanCalendar&quot;> </xref> класса, что эквивалентно первому мгновению 1 января 0001 года нашей эры по григорианскому календарю."
  overload: System.Globalization.KoreanCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: KoreanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает <xref:System.DateTime>, имеет значение указанной даты и времени в заданной эре.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 12, представляющее месяц."
    - id: day
      type: System.Int32
      description: "Целое число от 1 до 31, представляющее день."
    - id: hour
      type: System.Int32
      description: "Целое число от 0 до 23, представляющее час."
    - id: minute
      type: System.Int32
      description: "Целое число от 0 до 59, представляющее минуту."
    - id: second
      type: System.Int32
      description: "Целое число от 0 до 59, представляющее секунду."
    - id: millisecond
      type: System.Int32
      description: "Целое число от 0 до 999, представляющее миллисекунду."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>, Равным указанной даты и времени в текущей эре.</xref:System.DateTime>"
  overload: System.Globalization.KoreanCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем.       - или - <code>month</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>day</code> находится вне диапазона, поддерживаемого календарем.       - или - <code>hour</code> меньше нуля или больше 23.       - или - <code>minute</code> меньше нуля или больше 59.       - или - <code>second</code> меньше нуля или больше 59.       - или - <code>millisecond</code> меньше нуля или больше 999.       - или - <code>era</code> находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: KoreanCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.KoreanCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Преобразует указанный год в четырехзначный год с помощью <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax*>для выбора века.</xref:System.Globalization.KoreanCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A>Определяет за последний год в диапазоне ста лет, которое может быть представлено ToFourDigitYear.</xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> Век определяется путем нахождения единственного двухзначного двузначный год в данном диапазоне ста лет. Например если <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A>имеет значение 2029, столетний диапазон определяется с 1930 по 2029.</xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> Двузначное значение 30 интерпретируется как 1930, а двузначное значение 29 как 2029.       ToFourDigitYear поддерживает двузначный год или год из четырех цифр. При передаче значения двух цифр года (меньше 100) вызывает метод для преобразования значения из четырех цифр значение в соответствии с <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A>значение, представляющее века.</xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> Если приложение передает значение года из четырех цифр в диапазоне поддерживаемых календаря для ToFourDigitYear, метод возвращает фактическое входное значение. Если приложение передает значение из четырех цифр, выходит за пределы поддерживаемого календарного или если он предоставляет отрицательное значение, метод создает исключение."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Двузначное или четырехзначное целое число, представляющее год для преобразования."
    return:
      type: System.Int32
      description: "Значение integer, содержащее четырехразрядное представление из <code> year </code>."
  overload: System.Globalization.KoreanCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>находится вне диапазона, поддерживаемого календарем."
  platform:
  - net462
- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.KoreanCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: KoreanCalendar.TwoDigitYearMax
  fullName: System.Globalization.KoreanCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает или задает последний год в диапазоне ста лет, который может быть представлен существует двузначное представление года."
  remarks: "Это свойство позволяет 2 цифрами правильно преобразовать 4-значный номер года. Например в григорианском календаре, если это свойство имеет значение 2029, столетний диапазон определяется с 1930 по 2029. 2-разрядное значение 30 интерпретируется как 1930, а двузначное значение 29 как 2029.       Начальное значение этого свойства является производным от параметров в списке язык и региональные параметры элемента панели управления. Тем не менее эти данные могут измениться в течение жизни <xref:System.AppDomain>.</xref:System.AppDomain> <xref:System.Globalization.KoreanCalendar>Класса не обнаруживает изменения параметров системы автоматически.</xref:System.Globalization.KoreanCalendar>       Приложения это значение равно 99 для обозначения 2 цифрами подхода к. Например если это свойство имеет значение 99, столетний диапазон — от 0 (не является допустимым значением для большинства календарей) до 99. Поэтому двухзначное значение 30 интерпретируется как 30."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Последний год в диапазоне ста лет, который может быть представлен существует двузначное представление года."
  overload: System.Globalization.KoreanCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "В операции задания указано значение меньше, чем 99.       - или - значение, указанное в операции задания больше, чем <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "В операции задания текущего экземпляра только для чтения."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.TypeInitializationException
  isExternal: true
  name: System.TypeInitializationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.KoreanCalendar.#ctor
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: KoreanCalendar()
  nameWithType: KoreanCalendar.KoreanCalendar()
  fullName: System.Globalization.KoreanCalendar.KoreanCalendar()
- uid: System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: KoreanCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.KoreanCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: KoreanCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.KoreanCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.KoreanCalendar.AlgorithmType
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: KoreanCalendar.AlgorithmType
  fullName: System.Globalization.KoreanCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.KoreanCalendar.Eras
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanCalendar.Eras
  fullName: System.Globalization.KoreanCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: KoreanCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: KoreanCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: KoreanCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: KoreanCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: KoreanCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.KoreanCalendar.GetEra(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: KoreanCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetEra(DateTime)
- uid: System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: KoreanCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.KoreanCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: KoreanCalendar.GetMonth(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetMonth(DateTime)
- uid: System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: KoreanCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  nameWithType: KoreanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
  fullName: System.Globalization.KoreanCalendar.GetWeekOfYear(DateTime,CalendarWeekRule,DayOfWeek)
- uid: System.Globalization.CalendarWeekRule
  parent: System.Globalization
  isExternal: true
  name: CalendarWeekRule
  nameWithType: CalendarWeekRule
  fullName: System.Globalization.CalendarWeekRule
- uid: System.Globalization.KoreanCalendar.GetYear(System.DateTime)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: KoreanCalendar.GetYear(DateTime)
  fullName: System.Globalization.KoreanCalendar.GetYear(DateTime)
- uid: System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: KoreanCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.KoreanCalendar.KoreanEra
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: KoreanEra
  nameWithType: KoreanCalendar.KoreanEra
  fullName: System.Globalization.KoreanCalendar.KoreanEra
- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanCalendar.MaxSupportedDateTime
- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanCalendar.MinSupportedDateTime
- uid: System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: KoreanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.KoreanCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: KoreanCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.KoreanCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: KoreanCalendar.TwoDigitYearMax
  fullName: System.Globalization.KoreanCalendar.TwoDigitYearMax
- uid: System.Globalization.KoreanCalendar.#ctor*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: KoreanCalendar
  nameWithType: KoreanCalendar.KoreanCalendar
- uid: System.Globalization.KoreanCalendar.AddMonths*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AddMonths
  nameWithType: KoreanCalendar.AddMonths
- uid: System.Globalization.KoreanCalendar.AddYears*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AddYears
  nameWithType: KoreanCalendar.AddYears
- uid: System.Globalization.KoreanCalendar.AlgorithmType*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: KoreanCalendar.AlgorithmType
- uid: System.Globalization.KoreanCalendar.Eras*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanCalendar.Eras
- uid: System.Globalization.KoreanCalendar.GetDayOfMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: KoreanCalendar.GetDayOfMonth
- uid: System.Globalization.KoreanCalendar.GetDayOfWeek*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: KoreanCalendar.GetDayOfWeek
- uid: System.Globalization.KoreanCalendar.GetDayOfYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: KoreanCalendar.GetDayOfYear
- uid: System.Globalization.KoreanCalendar.GetDaysInMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: KoreanCalendar.GetDaysInMonth
- uid: System.Globalization.KoreanCalendar.GetDaysInYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: KoreanCalendar.GetDaysInYear
- uid: System.Globalization.KoreanCalendar.GetEra*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetEra
  nameWithType: KoreanCalendar.GetEra
- uid: System.Globalization.KoreanCalendar.GetLeapMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: KoreanCalendar.GetLeapMonth
- uid: System.Globalization.KoreanCalendar.GetMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetMonth
  nameWithType: KoreanCalendar.GetMonth
- uid: System.Globalization.KoreanCalendar.GetMonthsInYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: KoreanCalendar.GetMonthsInYear
- uid: System.Globalization.KoreanCalendar.GetWeekOfYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetWeekOfYear
  nameWithType: KoreanCalendar.GetWeekOfYear
- uid: System.Globalization.KoreanCalendar.GetYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: GetYear
  nameWithType: KoreanCalendar.GetYear
- uid: System.Globalization.KoreanCalendar.IsLeapDay*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: KoreanCalendar.IsLeapDay
- uid: System.Globalization.KoreanCalendar.IsLeapMonth*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: KoreanCalendar.IsLeapMonth
- uid: System.Globalization.KoreanCalendar.IsLeapYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: KoreanCalendar.IsLeapYear
- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanCalendar.MaxSupportedDateTime
- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanCalendar.MinSupportedDateTime
- uid: System.Globalization.KoreanCalendar.ToDateTime*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: KoreanCalendar.ToDateTime
- uid: System.Globalization.KoreanCalendar.ToFourDigitYear*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: KoreanCalendar.ToFourDigitYear
- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax*
  parent: System.Globalization.KoreanCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: KoreanCalendar.TwoDigitYearMax
