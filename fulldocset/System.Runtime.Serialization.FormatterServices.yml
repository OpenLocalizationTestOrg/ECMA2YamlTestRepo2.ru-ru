### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.FormatterServices
  id: FormatterServices
  children:
  - System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)
  - System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])
  - System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)
  - System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)
  - System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)
  - System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)
  - System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)
  - System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)
  - System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])
  langs:
  - csharp
  name: FormatterServices
  nameWithType: FormatterServices
  fullName: System.Runtime.Serialization.FormatterServices
  type: Class
  summary: "Предоставляет статические методы для помощи в реализации <xref href=&quot;System.Runtime.Serialization.Formatter&quot;> </xref> для сериализации. Этот класс не наследуется."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public static class FormatterServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)
  id: CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: CheckTypeSecurity(Type,TypeFilterLevel)
  nameWithType: FormatterServices.CheckTypeSecurity(Type,TypeFilterLevel)
  fullName: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(Type,TypeFilterLevel)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Определяет, является ли указанный <xref:System.Type>может быть десериализован с <xref href=&quot;System.Runtime.Serialization.Formatters.TypeFilterLevel&quot;> </xref> свойству присвоено <xref uid=&quot;langword_csharp_Low&quot; name=&quot;Low&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  remarks: "Use this method to determine whether a specified type can be deserialized when the <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> property is set to `Low`.  \n  \n .NET Framework remoting provides two levels of automatic deserialization, <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> and <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel>. <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> helps protect against deserialization attacks by deserializing only the types associated with the most basic remoting functionality. The <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> deserialization level supports automatic deserialization of all types that remoting supports in all situations. For more information about the.NET Framework remoting types that <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> and <xref:System.Runtime.Serialization.Formatters.TypeFilterLevel> support, see [&#91;\\<topic://cpconAutomaticDeserializationInNETRemoting>&#93;](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)."
  example:
  - "This example shows how to use the <xref:System.Runtime.Serialization.FormatterServices> class to serialize or deserialize an object where the base class does not implement <xref:System.Runtime.Serialization.ISerializable> but the derived class does.  \n  \n [!code-cs[FormatterServices#1](~/add/codesnippet/csharp/5d6cca2d-3ebb-424b-bf84-_1.cs)]\n [!code-cpp[FormatterServices#1](~/add/codesnippet/cpp/5d6cca2d-3ebb-424b-bf84-_1.cpp)]"
  syntax:
    content: public static void CheckTypeSecurity (Type t, System.Runtime.Serialization.Formatters.TypeFilterLevel securityLevel);
    parameters:
    - id: t
      type: System.Type
      description: "<xref:System.Type>Для проверки возможности десериализации.</xref:System.Type>"
    - id: securityLevel
      type: System.Runtime.Serialization.Formatters.TypeFilterLevel
      description: "<xref href=&quot;System.Runtime.Serialization.Formatters.TypeFilterLevel&quot;> </xref> Значение свойства."
  overload: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<code> t </code> Параметр является дополнительным типом и не может быть десериализованный при <xref href=&quot;System.Runtime.Serialization.Formatters.TypeFilterLevel&quot;> </xref> свойству <xref uid=&quot;langword_csharp_Low&quot; name=&quot;Low&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])
  id: GetObjectData(System.Object,System.Reflection.MemberInfo[])
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetObjectData(Object,MemberInfo[])
  nameWithType: FormatterServices.GetObjectData(Object,MemberInfo[])
  fullName: System.Runtime.Serialization.FormatterServices.GetObjectData(Object,MemberInfo[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Извлекает данные из указанного объекта и возвращает его в виде массива объектов."
  remarks: "Для каждого указанного члена `members` массива метод GetObjectData извлекает значение, связанное с `obj` объекта и возвращает его. Длина возвращаемого массива является таким же, как длина `members` массива."
  example:
  - "The following example creates an instance of a Book class and sets field values on the instance. The code then gets the type information using the <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> method. The code copies the instance data into an object array using the GetObjectData method. A new uninitialized instance of the class is created using the <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> method. Finally, the data from the first instance is copied into the second instance using the <xref:System.Runtime.Serialization.FormatterServices.PopulateObjectMembers%2A> method.  \n  \n [!code-vb[FormatterServices_PopulateObjects#1](~/add/codesnippet/visualbasic/03e602a4-8dd1-4116-a11f-_1.vb)]\n [!code-cs[FormatterServices_PopulateObjects#1](~/add/codesnippet/csharp/03e602a4-8dd1-4116-a11f-_1.cs)]"
  syntax:
    content: public static object[] GetObjectData (object obj, System.Reflection.MemberInfo[] members);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект для записи в модуль форматирования."
    - id: members
      type: System.Reflection.MemberInfo[]
      description: "Члены, извлекаемые из объекта."
    return:
      type: System.Object[]
      description: "Массив <xref:System.Object>, содержащий данные, хранящиеся в <code> members </code> и связанных с <code> obj </code>.</xref:System.Object>"
  overload: System.Runtime.Serialization.FormatterServices.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> or <code>members</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       An element of <code>members</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Элемент <code> members </code> представляет поле."
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)
  id: GetSafeUninitializedObject(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetSafeUninitializedObject(Type)
  nameWithType: FormatterServices.GetSafeUninitializedObject(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Создает новый экземпляр заданного типа объекта."
  remarks: "Поскольку новый экземпляр объекта инициализируется нулевым значением, а конструкторы не запущены, объект может не представлять состояние, которое считается допустимым в этом объекте. GetSafeUninitializedObject следует использовать только для десериализации, когда пользователь намеревается немедленно заполнить все поля. Он не создает неинициализированная строка, так как создание пустого экземпляра неизменного типа бессмысленно.       GetSafeUninitializedObject преобразует все уровне класса [требования связывания](~/add/includes/ajax-current-ext-md.md) для [требования](http://msdn.microsoft.com/en-us/e5283e28-2366-4519-b27d-ef5c1ddc1f48) для убедитесь, что все прямые и непрямые вызывающие объекты имеют разрешения, указанные в требовании. Используйте GetSafeUninitializedObject для повышения уровня безопасности при десериализации из частично доверенного источника. Для повышения производительности в сценариях полного доверия используйте <xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>.</xref:System.Runtime.Serialization.FormatterServices.GetUninitializedObject%2A>"
  syntax:
    content: public static object GetSafeUninitializedObject (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Тип создаваемого объекта."
    return:
      type: System.Object
      description: "Обнуленная объект указанного типа."
  overload: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code> type </code> Параметр не является допустимым типом среды выполнения."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)
  id: GetSerializableMembers(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetSerializableMembers(Type)
  nameWithType: FormatterServices.GetSerializableMembers(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Возвращает все сериализуемые члены для класса заданного <xref:System.Type>.</xref:System.Type>"
  remarks: "Как правило сериализуемые члены класса являются члены не является временной и не статическим, например поля и свойства. Для включения свойства должны иметь свойства getter и setter. Класс, реализующий <xref:System.Runtime.Serialization.ISerializable>интерфейс или имеет сериализации символов-заместителей не требуется сериализовывать все эти элементы, или он может сериализовать дополнительные члены.</xref:System.Runtime.Serialization.ISerializable>"
  example:
  - "The following code example demonstrates implementing the GetSerializableMembers method. This code example is part of a larger example provided for the <xref:System.Runtime.Serialization.FormatterServices> class.  \n  \n [!code-cs[FormatterServices#2](~/add/codesnippet/csharp/6022ed5f-9fa6-4107-b017-_1.cs)]\n [!code-cpp[FormatterServices#2](~/add/codesnippet/cpp/6022ed5f-9fa6-4107-b017-_1.cpp)]"
  syntax:
    content: public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Сериализуемый тип."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Массив объектов типа <xref:System.Reflection.MemberInfo>непереходного, нестатических членов.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.Serialization.FormatterServices.GetSerializableMembers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)
  id: GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetSerializableMembers(Type,StreamingContext)
  nameWithType: FormatterServices.GetSerializableMembers(Type,StreamingContext)
  fullName: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Возвращает все сериализуемые члены для класса заданного <xref:System.Type>и в предоставленный <xref:System.Runtime.Serialization.StreamingContext>.</xref:System.Runtime.Serialization.StreamingContext> </xref:System.Type>"
  remarks: "Как правило сериализуемые члены класса являются члены не является временной и не статическим, например поля и свойства. Для включения свойства должны иметь свойства getter и setter. Класс, реализующий <xref:System.Runtime.Serialization.ISerializable>или имеет сериализации символов-заместителей не требуется сериализовывать все эти элементы, или он может сериализовать дополнительные члены.</xref:System.Runtime.Serialization.ISerializable>       В настоящее время не необходимо сделать что-то иначе, если не `context` имеет <xref:System.Runtime.Serialization.StreamingContextStates>значение <xref:System.Runtime.Serialization.StreamingContextStates>Задайте.</xref:System.Runtime.Serialization.StreamingContextStates> </xref:System.Runtime.Serialization.StreamingContextStates>"
  syntax:
    content: public static System.Reflection.MemberInfo[] GetSerializableMembers (Type type, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: type
      type: System.Type
      description: "Тип сериализуемых или клонировать."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Контекст, в котором происходит сериализация."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Массив объектов типа <xref:System.Reflection.MemberInfo>непереходного, нестатических членов.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.Serialization.FormatterServices.GetSerializableMembers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)
  id: GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetSurrogateForCyclicalReference(ISerializationSurrogate)
  nameWithType: FormatterServices.GetSurrogateForCyclicalReference(ISerializationSurrogate)
  fullName: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(ISerializationSurrogate)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Возвращает суррогат сериализации для указанного <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;> </xref>."
  syntax:
    content: public static System.Runtime.Serialization.ISerializationSurrogate GetSurrogateForCyclicalReference (System.Runtime.Serialization.ISerializationSurrogate innerSurrogate);
    parameters:
    - id: innerSurrogate
      type: System.Runtime.Serialization.ISerializationSurrogate
      description: "Указанный символ-заместитель."
    return:
      type: System.Runtime.Serialization.ISerializationSurrogate
      description: "An <xref href=&quot;System.Runtime.Serialization.ISerializationSurrogate&quot;></xref> for the specified <code>innerSurrogate</code>."
  overload: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)
  id: GetTypeFromAssembly(System.Reflection.Assembly,System.String)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetTypeFromAssembly(Assembly,String)
  nameWithType: FormatterServices.GetTypeFromAssembly(Assembly,String)
  fullName: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(Assembly,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Выполняет поиск <xref:System.Type>указанного объекта в указанный <xref:System.Reflection.Assembly>.</xref:System.Reflection.Assembly> </xref:System.Type>"
  syntax:
    content: public static Type GetTypeFromAssembly (System.Reflection.Assembly assem, string name);
    parameters:
    - id: assem
      type: System.Reflection.Assembly
      description: "Сборка, где вы хотите найти объект."
    - id: name
      type: System.String
      description: "Имя объекта."
    return:
      type: System.Type
      description: "<xref:System.Type>Именованного объекта.</xref:System.Type>"
  overload: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>assem</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)
  id: GetUninitializedObject(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: GetUninitializedObject(Type)
  nameWithType: FormatterServices.GetUninitializedObject(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetUninitializedObject(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Создает новый экземпляр заданного типа объекта."
  remarks: "Поскольку новый экземпляр объекта инициализируется нулевым значением, а конструкторы не запущены, объект может не представлять состояние, которое считается допустимым в этом объекте. Текущий метод следует использовать только для десериализации, когда пользователь намеревается немедленно заполнить все поля. Он не создает неинициализированная строка, так как создание пустого экземпляра неизменного типа бессмысленно.      Настроек [!NOTE] настроек метод GetUninitializedObject нельзя использовать для создания экземпляров типов, производных от <xref:System.ContextBoundObject>класса.</xref:System.ContextBoundObject>"
  syntax:
    content: public static object GetUninitializedObject (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Тип создаваемого объекта."
    return:
      type: System.Object
      description: "Обнуленная объект указанного типа."
  overload: System.Runtime.Serialization.FormatterServices.GetUninitializedObject*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  platform:
  - net462
- uid: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])
  id: PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])
  parent: System.Runtime.Serialization.FormatterServices
  langs:
  - csharp
  name: PopulateObjectMembers(Object,MemberInfo[],Object[])
  nameWithType: FormatterServices.PopulateObjectMembers(Object,MemberInfo[],Object[])
  fullName: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(Object,MemberInfo[],Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Заполняет указанный объект значения для каждого поля, скопированного из массива данных объектов."
  remarks: "Если элемент в `data` — `null`, PopulateObjectMembers ничего не записывают к этому полю."
  example:
  - "The following example creates an instance of a Book class and sets field values on the instance. The code then gets the type information using the <xref:System.Runtime.Serialization.FormatterServices.GetSerializableMembers%2A> method. The code copies the instance data into an object array using the <xref:System.Runtime.Serialization.FormatterServices.GetObjectData%2A> method. A new uninitialized instance of the class is created using the <xref:System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject%2A> method. Finally, the data from the first instance is copied into the second instance using the PopulateObjectMembers method.  \n  \n [!code-vb[FormatterServices_PopulateObjects#1](~/add/codesnippet/visualbasic/d13ec4e2-c43a-4a6e-bf79-_1.vb)]\n [!code-cs[FormatterServices_PopulateObjects#1](~/add/codesnippet/csharp/d13ec4e2-c43a-4a6e-bf79-_1.cs)]"
  syntax:
    content: public static object PopulateObjectMembers (object obj, System.Reflection.MemberInfo[] members, object[] data);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект для заполнения."
    - id: members
      type: System.Reflection.MemberInfo[]
      description: "Массив <xref:System.Reflection.MemberInfo>, описывающий, какие поля и свойства для заполнения.</xref:System.Reflection.MemberInfo>"
    - id: data
      type: System.Object[]
      description: "Массив <xref:System.Object>, задает значения для каждого поля и свойства для заполнения.</xref:System.Object>"
    return:
      type: System.Object
      description: "Вновь заполненный объект."
  overload: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code>, <code>members</code>, or <code>data</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       An element of <code>members</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Длина <code> members </code> не соответствует длине <code> data </code>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "Элемент <code> members </code> не является экземпляром <xref:System.Reflection.FieldInfo>.</xref:System.Reflection.FieldInfo>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(System.Type,System.Runtime.Serialization.Formatters.TypeFilterLevel)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: CheckTypeSecurity(Type,TypeFilterLevel)
  nameWithType: FormatterServices.CheckTypeSecurity(Type,TypeFilterLevel)
  fullName: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity(Type,TypeFilterLevel)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Serialization.Formatters.TypeFilterLevel
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: TypeFilterLevel
  nameWithType: TypeFilterLevel
  fullName: System.Runtime.Serialization.Formatters.TypeFilterLevel
- uid: System.Runtime.Serialization.FormatterServices.GetObjectData(System.Object,System.Reflection.MemberInfo[])
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetObjectData(Object,MemberInfo[])
  nameWithType: FormatterServices.GetObjectData(Object,MemberInfo[])
  fullName: System.Runtime.Serialization.FormatterServices.GetObjectData(Object,MemberInfo[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSafeUninitializedObject(Type)
  nameWithType: FormatterServices.GetSafeUninitializedObject(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject(Type)
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSerializableMembers(Type)
  nameWithType: FormatterServices.GetSerializableMembers(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type)
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(System.Type,System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSerializableMembers(Type,StreamingContext)
  nameWithType: FormatterServices.GetSerializableMembers(Type,StreamingContext)
  fullName: System.Runtime.Serialization.FormatterServices.GetSerializableMembers(Type,StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(System.Runtime.Serialization.ISerializationSurrogate)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSurrogateForCyclicalReference(ISerializationSurrogate)
  nameWithType: FormatterServices.GetSurrogateForCyclicalReference(ISerializationSurrogate)
  fullName: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference(ISerializationSurrogate)
- uid: System.Runtime.Serialization.ISerializationSurrogate
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializationSurrogate
  nameWithType: ISerializationSurrogate
  fullName: System.Runtime.Serialization.ISerializationSurrogate
- uid: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(System.Reflection.Assembly,System.String)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetTypeFromAssembly(Assembly,String)
  nameWithType: FormatterServices.GetTypeFromAssembly(Assembly,String)
  fullName: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly(Assembly,String)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Serialization.FormatterServices.GetUninitializedObject(System.Type)
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetUninitializedObject(Type)
  nameWithType: FormatterServices.GetUninitializedObject(Type)
  fullName: System.Runtime.Serialization.FormatterServices.GetUninitializedObject(Type)
- uid: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(System.Object,System.Reflection.MemberInfo[],System.Object[])
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: PopulateObjectMembers(Object,MemberInfo[],Object[])
  nameWithType: FormatterServices.PopulateObjectMembers(Object,MemberInfo[],Object[])
  fullName: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers(Object,MemberInfo[],Object[])
- uid: System.Runtime.Serialization.FormatterServices.CheckTypeSecurity*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: CheckTypeSecurity
  nameWithType: FormatterServices.CheckTypeSecurity
- uid: System.Runtime.Serialization.FormatterServices.GetObjectData*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetObjectData
  nameWithType: FormatterServices.GetObjectData
- uid: System.Runtime.Serialization.FormatterServices.GetSafeUninitializedObject*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSafeUninitializedObject
  nameWithType: FormatterServices.GetSafeUninitializedObject
- uid: System.Runtime.Serialization.FormatterServices.GetSerializableMembers*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSerializableMembers
  nameWithType: FormatterServices.GetSerializableMembers
- uid: System.Runtime.Serialization.FormatterServices.GetSurrogateForCyclicalReference*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetSurrogateForCyclicalReference
  nameWithType: FormatterServices.GetSurrogateForCyclicalReference
- uid: System.Runtime.Serialization.FormatterServices.GetTypeFromAssembly*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetTypeFromAssembly
  nameWithType: FormatterServices.GetTypeFromAssembly
- uid: System.Runtime.Serialization.FormatterServices.GetUninitializedObject*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: GetUninitializedObject
  nameWithType: FormatterServices.GetUninitializedObject
- uid: System.Runtime.Serialization.FormatterServices.PopulateObjectMembers*
  parent: System.Runtime.Serialization.FormatterServices
  isExternal: false
  name: PopulateObjectMembers
  nameWithType: FormatterServices.PopulateObjectMembers
