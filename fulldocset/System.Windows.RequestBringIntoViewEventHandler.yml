### YamlMime:ManagedReference
items:
- uid: System.Windows.RequestBringIntoViewEventHandler
  id: RequestBringIntoViewEventHandler
  langs:
  - csharp
  name: RequestBringIntoViewEventHandler
  nameWithType: RequestBringIntoViewEventHandler
  fullName: System.Windows.RequestBringIntoViewEventHandler
  type: Delegate
  summary: "Представляет метод, обрабатывающий <xref href=&quot;System.Windows.FrameworkElement.RequestBringIntoView&quot;> </xref> перенаправленного события."
  remarks: "Обработка этого события обычно выполняется только в элементах, поддерживающих прокручиваемую область, или не намеренно установлен их подготовки к просмотру размер меньше, чем объединенный нужного размера их дочернего содержимого элемента и выполняется только по намеренно обработки событий после его направил вверх в дереве элементов и был достигнут первый родительский элемент, который обеспечивает поддержку прокрутки области. Существующая реализация, обрабатывающей прокручиваемые области таким образом, требуемого для пользовательских элементов управления — <xref:System.Windows.Controls.ScrollViewer>.</xref:System.Windows.Controls.ScrollViewer> Если вы наследуете от <xref:System.Windows.Controls.ScrollViewer>, можно зарегистрировать обработчик класса для <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>и дополнять обработку базового класса события.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer> Также можно с помощью или обработки класс определен класс <xref:System.Windows.Controls.ScrollViewer.ScrollChanged>события вместо <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>.</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer.ScrollChanged> Кроме того при создании полностью пользовательский класс, который является производным от <xref:System.Windows.Controls.ScrollViewer>, можно добавить обработку путем вызова класса <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName>в вашей экземпляра класса.</xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=fullName> </xref:System.Windows.Controls.ScrollViewer>  Дополнительные сведения об обработке классов см. в разделе [как Handled и обработка класса](~/add/includes/ajax-current-ext-md.md).       Элементы содержимого может вызвать событие, которое инициируется их содержимого узлами (через вызов метода <xref:System.Windows.FrameworkContentElement.BringIntoView%2A>и вызов <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName>от узла содержимого).</xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=fullName> </xref:System.Windows.FrameworkContentElement.BringIntoView%2A> Аналогичным образом можно запросить логическое дерево элементов можно сделать с помощью вспомогательного метода <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>.</xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=fullName>       <xref:System.Windows.Controls.ListBox>Реализует метод связанных, но различные <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</xref:System.Windows.Controls.ListBox.ScrollIntoView%2A> </xref:System.Windows.Controls.ListBox>"
  syntax:
    content: public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
