### YamlMime:ManagedReference
items:
- uid: System.Data.EnumerableRowCollection
  id: EnumerableRowCollection
  children:
  - System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: EnumerableRowCollection
  nameWithType: EnumerableRowCollection
  fullName: System.Data.EnumerableRowCollection
  type: Class
  summary: "Представляет коллекцию <xref href=&quot;System.Data.DataRow&quot;> </xref> объектами, возвращаемыми [!INCLUDE[linq_dataset](~/add/includes/linq-dataset-md.md)] запроса. Этот API поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода."
  remarks: "EnumerableRowCollection предоставляет точку входа, чтобы операция приведения могут быть перехвачены внутри метода расширения. Производный класс универсального <xref:System.Data.EnumerableRowCollection%601>фактически используется платформой .NET Framework для хранения результатов запроса.</xref:System.Data.EnumerableRowCollection%601>       Не удается создать экземпляр этого класса."
  syntax:
    content: 'public abstract class EnumerableRowCollection : System.Collections.IEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Data.EnumerableRowCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: "Возвращает перечислитель для коллекции <xref href=&quot;System.Data.DataRow&quot;> </xref> объектов. Этот API поддерживает инфраструктуру .NET Framework и не предназначен для использования непосредственно из программного кода."
  remarks: "Реализация по умолчанию всегда возвращает `null`."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "<xref:System.Collections.IEnumerator>Может использоваться для перемещения по коллекции для <xref href=&quot;System.Data.DataRow&quot;> </xref> объектов.</xref:System.Collections.IEnumerator>"
  overload: System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Data.EnumerableRowCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Data.EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.EnumerableRowCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Data.EnumerableRowCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: EnumerableRowCollection.System.Collections.IEnumerable.GetEnumerator
