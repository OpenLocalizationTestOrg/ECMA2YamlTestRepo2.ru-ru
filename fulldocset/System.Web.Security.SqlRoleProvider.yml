### YamlMime:ManagedReference
items:
- uid: System.Web.Security.SqlRoleProvider
  id: SqlRoleProvider
  children:
  - System.Web.Security.SqlRoleProvider.#ctor
  - System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  - System.Web.Security.SqlRoleProvider.ApplicationName
  - System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  - System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  - System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  - System.Web.Security.SqlRoleProvider.GetAllRoles
  - System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  - System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  - System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  - System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  - System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  langs:
  - csharp
  name: SqlRoleProvider
  nameWithType: SqlRoleProvider
  fullName: System.Web.Security.SqlRoleProvider
  type: Class
  summary: "Управляет хранением сведений о членстве роли для приложения ASP.NET в базе данных SQL Server."
  remarks: "This class is used by the <xref:System.Web.Security.Roles> and <xref:System.Web.Security.RolePrincipal> classes to provide role-management services for an ASP.NET application using a SQL Server database. You can use role management to specify different levels of authorization for your application.  \n  \n To use the SqlRoleProvider class, you must first create the SQL Server database used by the SqlRoleProvider. To create the database used by the SqlRoleProvider class, run the `aspnet_regsql.exe` executable found in the C:\\WINDOWS\\Microsoft.NET\\Framework\\ `versionNumber` folder and specify the `-Ar` option (for example, `aspnet_regsql.exe -Ar`). The database created is called Aspnetdb. Alternatively, run aspnet_regsql.exe to pull up the GUI configuration mode and choose to configure all ASP.NET features.  \n  \n If the role provider is configured with a connection string that uses integrated security, the process account of the ASP.NET application must have rights to connect to the SQL Server database.  \n  \n The Machine.config file is configured with a SqlRoleProvider instance named AspNetSqlProvider that connects to the SQL Server on the local machine. You can use this instance of the provider, or specify your own in the Web.config file for your ASP.NET application. To use the AspNetSqlProvider instance, specify AspNetSqlProvider as the `defaultProvider` in your  configuration.  \n  \n You can configure the SqlRoleProvider to use the same database and user information as the <xref:System.Web.Security.SqlMembershipProvider> in order to use a single database for authentication and authorization information. To use the same database for membership and role information, run the aspnet_regsql.exe executable and install the membership feature. Then, specify the same connection string in your configuration for both your SqlRoleProvider and <xref:System.Web.Security.SqlMembershipProvider> instances. Also ensure that both provider instances are configured with the same <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>."
  example:
  - "The following example shows the Web.config file for an ASP.NET application configured to use a SqlRoleProvider object and the <xref:System.Web.Security.SqlMembershipProvider>. The  element is configured to only allow access to authenticated users in the Administrators role.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"logincs.aspx\"  \n      name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n    <authorization>  \n      <deny users=\"?\" />  \n         <allow roles=\"Administrators\" />  \n         <deny users=\"*\" />  \n    </authorization>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"15\">  \n      <providers>  \n        <add   \n          name=\"SqlProvider\"   \n          type=\"System.Web.Security.SqlMembershipProvider\"   \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"false\"  \n          requiresQuestionAndAnswer=\"false\"   \n          passwordFormat=\"Hashed\"   \n          applicationName=\"SampleApplication\" />  \n      </providers>  \n    </membership>  \n    <roleManager defaultProvider=\"SqlProvider\"   \n      enabled=\"true\"  \n      cacheRolesInCookie=\"true\"  \n      cookieName=\".ASPROLES\"  \n      cookieTimeout=\"30\"  \n      cookiePath=\"/\"  \n      cookieRequireSSL=\"true\"  \n      cookieSlidingExpiration=\"true\"  \n      cookieProtection=\"All\" >  \n      <providers>  \n        <add  \n          name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlRoleProvider\"  \n          connectionStringName=\"SqlServices\"   \n          applicationName=\"SampleApplication\" />  \n      </providers>  \n    </roleManager>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public class SqlRoleProvider : System.Web.Security.RoleProvider'
  inheritance:
  - System.Web.Security.RoleProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: SqlRoleProvider()
  nameWithType: SqlRoleProvider.SqlRoleProvider()
  fullName: System.Web.Security.SqlRoleProvider.SqlRoleProvider()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Создает экземпляр <xref href=&quot;System.Web.Security.SqlRoleProvider&quot;> </xref> класса."
  remarks: "Конструктор SqlRoleProvider вызывается ASP.NET, чтобы создать экземпляр <xref:System.Web.Security.SqlRoleProvider>класса, указанное в конфигурации для приложения.</xref:System.Web.Security.SqlRoleProvider> Этот конструктор не предназначен для использования в коде."
  syntax:
    content: public SqlRoleProvider ();
    parameters: []
  overload: System.Web.Security.SqlRoleProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  id: AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: AddUsersToRoles(String[],String[])
  nameWithType: SqlRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.AddUsersToRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Добавляет указанные имена пользователей для каждого из указанных ролей."
  remarks: "Метод AddUsersToRoles вызывается <xref:System.Web.Security.Roles>класса для связывания одного или нескольких пользователей с одной или нескольких ролей в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Roles> Этот метод вызывается методом <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>и <xref:System.Web.Security.Roles.AddUsersToRoles%2A>методов этого <xref:System.Web.Security.Roles>класса.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.AddUsersToRoles%2A> </xref:System.Web.Security.Roles.AddUsersToRole%2A> </xref:System.Web.Security.Roles.AddUserToRoles%2A> </xref:System.Web.Security.Roles.AddUserToRole%2A>       Обновления базы данных, которые выполняются во время вызова метода AddUsersToRoles выполняются в рамках транзакции. Если возникает ошибка, например имя пользователя, который уже находится в указанной роли, транзакция откатывается и обновления не выполняются.       Если <xref:System.Web.Security.SqlRoleProvider>используется с <xref:System.Web.Security.SqlMembershipProvider>и указанные имена пользователей не существуют в базе данных, имя пользователя будет автоматически добавлено в базу данных.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlRoleProvider>       Имена пользователей и роли не может содержать запятые."
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/1f379f8c-79a9-40dc-ab92-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/1f379f8c-79a9-40dc-ab92-_1.aspx)]"
  syntax:
    content: public override void AddUsersToRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Массив строк имен пользователей для добавления в указанные роли."
    - id: roleNames
      type: System.String[]
      description: "Массив строк имен ролей, чтобы добавить указанные имена пользователей."
  overload: System.Web.Security.SqlRoleProvider.AddUsersToRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the roles in <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       One of the users in <code>usernames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Одна из ролей в <code> roleNames </code> является пустой строкой или содержит запятую.       - или - один из пользователей в <code> usernames </code> является пустой строкой или содержит запятую.       - или - одна из ролей в <code> roleNames </code> имеет длину более 256 символов.       - или - один из пользователей в <code> usernames </code> имеет длину более 256 символов.       - или - <code> roleNames </code> содержит повторяющийся элемент.       - или - <code> usernames </code> содержит повторяющийся элемент."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Не найден один или несколько указанных имен роли.       - или - один или несколько указанных имен пользователя не найден.       - или - один или несколько указанных пользователей уже связан с одним или несколькими указанными именами ролей.       - или - произошла неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
  fullName: System.Web.Security.SqlRoleProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает или задает имя приложения, для которого будут сохраняться и извлекаться сведения о роли."
  remarks: "Используемые ApplicationName <xref:System.Web.Security.SqlRoleProvider>для связи с различными приложениями пользователям и ролям.</xref:System.Web.Security.SqlRoleProvider> Это позволяет нескольким приложениям использовать ту же базу данных для хранения без конфликтов между повторяющимися именами пользователей и имена ролей пользователей и сведения о роли. Несколько приложений ASP.NET могут использовать ту же базу данных, указав то же значение в свойство ApplicationName. Свойство ApplicationName могут устанавливаться программными средствами, или он может быть задано декларативно в файле конфигурации для веб-приложения с помощью `applicationName` атрибута.       Если значение не указано для `applicationName` атрибут в файле конфигурации для веб-приложения, а затем <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>значение свойства для текущего <xref:System.Web.HttpContext.Request%2A?displayProperty=fullName>объект используется.</xref:System.Web.HttpContext.Request%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName>      Настроек [!CAUTION] настроек, так как экземпляр поставщика ролей по умолчанию один используется для всех запросов, обслуживаемых <xref:System.Web.HttpApplication>объекта может быть несколько запросов, параллельном выполнении и попытка задать значение свойства ApplicationName.</xref:System.Web.HttpApplication> Свойство ApplicationName не является потокобезопасным для нескольких операций записи и изменение значения свойства ApplicationName может привести к непредвиденному поведению для нескольких пользователей приложения. Рекомендуется избегать написания кода, который позволяет пользователям задавать свойство ApplicationName без крайней необходимости. Пример приложения, где может потребоваться задать свойство ApplicationName — административное приложение, управляющее данными ролей для нескольких приложений. Такое приложение должно быть Однопользовательское приложение и не веб-приложения."
  example:
  - "The following example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies the application's <xref:System.Web.Security.SqlRoleProvider> instance and sets the ApplicationName property to `MyApplication`.  \n  \n```  \n<roleManager defaultProvider=\"SqlProvider\"   \n  enabled=\"true\"  \n  cacheRolesInCookie=\"true\"  \n  cookieName=\".ASPROLES\"  \n  cookieTimeout=\"30\"  \n  cookiePath=\"/\"  \n  cookieRequireSSL=\"false\"  \n  cookieSlidingExpiration=\"true\"  \n  cookieProtection=\"All\" >  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlRoleProvider\"  \n      connectionStringName=\"SqlServices\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</roleManager>  \n```"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Имя приложения, для которого будут сохраняться и извлекаться сведения о роли. Значение по умолчанию — &lt;xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=fullName&gt; значение свойства для текущего &lt;xref:System.Web.HttpContext.Request%2A?displayProperty=fullName&gt;."
  overload: System.Web.Security.SqlRoleProvider.ApplicationName*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Была предпринята попытка задать свойство ApplicationName вызывающим, у которого нет <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> полномочие размещения ASP.NET."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Выполнена попытка задать ApplicationName строку, длина которого превышает 256 символов."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  id: CreateRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: CreateRole(String)
  nameWithType: SqlRoleProvider.CreateRole(String)
  fullName: System.Web.Security.SqlRoleProvider.CreateRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Добавляет новую роль базы данных роли."
  remarks: "Метод CreateRole вызывается <xref:System.Web.Security.Roles>класса, чтобы создать роль базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Roles>       Максимальная длина имени роли составляет 256 символов. Имена ролей не учитывают регистр. Запятые не разрешены в именах ролей."
  example:
  - "The following code example creates a new role in the database. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.sq_6_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.sq_6_1.aspx)]"
  syntax:
    content: public override void CreateRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Имя создаваемой роли."
  overload: System.Web.Security.SqlRoleProvider.CreateRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>является пустой строкой или содержит запятую.       - или - <code>roleName</code> имеет длину более 256 символов."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>уже существует в базе данных.       - или - произошла неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  id: DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: DeleteRole(String,Boolean)
  nameWithType: SqlRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.SqlRoleProvider.DeleteRole(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Удаляет роль из базы данных роли."
  remarks: "Метод DeleteRole вызывается <xref:System.Web.Security.Roles>класса, чтобы удалить роль из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Roles> При удалении роли список пользователей, связанных с этой ролью, также удаляется из базы данных. Сведения о пользователе в базе данных не затрагивается.       Если `throwOnPopulatedRole` — `true`, затем будет создано исключение, и роль не будет удалена, если роль идентифицировано `roleName` параметр имеет один или несколько членов. Если `throwOnPopulatedRole` — `false`, то роль будет удален, является ли она пустой или нет."
  example:
  - "The following example deletes a role from the database. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/csharp/m-system.web.security.sq_0_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#2](~/add/codesnippet/visualbasic/m-system.web.security.sq_0_1.aspx)]"
  syntax:
    content: public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);
    parameters:
    - id: roleName
      type: System.String
      description: "Имя роли, которую необходимо удалить."
    - id: throwOnPopulatedRole
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, вызывает исключение, если `roleName` имеет один или несколько элементов."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если роль была успешно удалена; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlRoleProvider.DeleteRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>является пустой строкой или содержит запятую.       - или - <code>roleName</code> имеет длину более 256 символов."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>имеет один или несколько элементов и <code>throwOnPopulatedRole</code> — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       - или - произошла неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  id: FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: FindUsersInRole(String,String)
  nameWithType: SqlRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.FindUsersInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает массив имен пользователей в роли, где имя пользователя содержит совпадают с именами указанного пользователя."
  remarks: "Метод FindUsersInRole вызывается <xref:System.Web.Security.Roles>и возвращает список пользователей в роли, где имя пользователя содержит совпадения с предоставленным `usernameToMatch` для настроенного `applicationName`.</xref:System.Web.Security.Roles> <xref:System.Web.Security.SqlRoleProvider>Ищет имя пользователя, которое соответствует `usernameToMatch` значение параметра с помощью LIKE ключевое слово и поддерживает подстановочные знаки SQL Server.</xref:System.Web.Security.SqlRoleProvider> Например если `usernameToMatch` параметр имеет значение «user1», то возвращаются сведения о членстве для пользователя с именем пользователя «user1», если он существует. Если `usernameToMatch` параметр имеет значение «user %», а затем возвращаются сведений о членстве для пользователей с именем пользователя «user1», «user2», «user_admin» и т. д."
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.FindUsersInRole%2A> method to display role membership based on user input. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.Roles>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Roles#11](~/add/codesnippet/csharp/995e27e2-08d0-46c4-866e-_1.aspx)]\n [!code-vb[System.Web.Security.Roles#11](~/add/codesnippet/visualbasic/995e27e2-08d0-46c4-866e-_1.aspx)]"
  syntax:
    content: public override string[] FindUsersInRole (string roleName, string usernameToMatch);
    parameters:
    - id: roleName
      type: System.String
      description: "Роль для поиска."
    - id: usernameToMatch
      type: System.String
      description: "Имя пользователя для поиска."
    return:
      type: System.String[]
      description: "Строковый массив, содержащий имена всех пользователей, в которых имя пользователя соответствует <code> usernameToMatch </code> и пользователь является членом указанной роли."
  overload: System.Web.Security.SqlRoleProvider.FindUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref> in Visual Basic).       -or-       <code>usernameToMatch</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>является пустой строкой или содержит запятую.       - или - <code>usernameToMatch</code> — пустая строка.       - или - <code>roleName</code> имеет длину более 256 символов.       - или - <code>usernameToMatch</code> имеет длину более 256 символов."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>roleName</code>не найден в базе данных.       - или - произошла неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles
  id: GetAllRoles
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetAllRoles()
  nameWithType: SqlRoleProvider.GetAllRoles()
  fullName: System.Web.Security.SqlRoleProvider.GetAllRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает список всех ролей для приложения."
  remarks: "Метод GetAllRoles вызывается <xref:System.Web.Security.Roles>класса, чтобы получить список всех ролей базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetAllRoles%2A> method to get the list of roles for an application and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.sq_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.sq_8_1.aspx)]"
  syntax:
    content: public override string[] GetAllRoles ();
    parameters: []
    return:
      type: System.String[]
      description: "Массив строк, содержащий имена всех ролей, сохраненных в базе данных для конкретного приложения."
  overload: System.Web.Security.SqlRoleProvider.GetAllRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  id: GetRolesForUser(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetRolesForUser(String)
  nameWithType: SqlRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.SqlRoleProvider.GetRolesForUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает список ролей, в которых состоит пользователь."
  remarks: "Метод GetRolesForUser вызывается <xref:System.Web.Security.Roles>класс, чтобы получить список ролей для указанного пользователя из базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetRolesForUser%2A> method to retrieve a list of roles for a specified user and binds them to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/m-system.web.security.sq_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.sq_5_1.aspx)]"
  syntax:
    content: public override string[] GetRolesForUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "Для получения списка ролей для пользователя."
    return:
      type: System.String[]
      description: "Массив строк, содержащий имена всех ролей, в которых указанный пользователь."
  overload: System.Web.Security.SqlRoleProvider.GetRolesForUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>содержит запятую.       - или - <code>username</code> имеет длину более 256 символов."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  id: GetUsersInRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: GetUsersInRole(String)
  nameWithType: SqlRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.SqlRoleProvider.GetUsersInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает список пользователей в указанной роли."
  remarks: "Метод GetUsersInRole вызывается <xref:System.Web.Security.Roles>класса, чтобы получить список пользователей, связанных с указанной ролью базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.GetUsersInRole%2A> method to get a list of the users in a particular role and bind the results to a <xref:System.Web.UI.WebControls.GridView?displayProperty=fullName> control. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/m-system.web.security.sq_4_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/m-system.web.security.sq_4_1.aspx)]"
  syntax:
    content: public override string[] GetUsersInRole (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Имя роли, чтобы получить список пользователей."
    return:
      type: System.String[]
      description: "Массив строк, содержащий имена всех пользователей, которые являются членами указанной роли."
  overload: System.Web.Security.SqlRoleProvider.GetUsersInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>является пустой строкой или содержит запятую.       - или - <code>roleName</code> имеет длину более 256 символов."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<code>rolename</code>не найден в базе данных.       - или - произошла неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlRoleProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Инициализирует поставщика ролей SQL Server со значениями свойств, указанными в файле конфигурации приложения ASP.NET. Этот метод не предназначен для использования непосредственно из программного кода."
  remarks: "Этот метод инициализирует <xref:System.Web.Security.SqlRoleProvider>со свойством значения, указанные в файле конфигурации приложения ASP.NET (Web.config) и не предназначен для использования непосредственно из программного кода.</xref:System.Web.Security.SqlRoleProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "Имя <xref href=&quot;System.Web.Security.SqlRoleProvider&quot;> </xref> инициализация экземпляра."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Объект <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> , содержащий имена и значения параметров конфигурации для поставщика ролей."
  overload: System.Web.Security.SqlRoleProvider.Initialize*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Приложение ASP.NET не выполняется в <xref href=&quot;System.Web.AspNetHostingPermissionLevel&quot;> </xref> доверия или более поздней версии."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>config</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "<xref uid=&quot;langword_csharp_connectionStringName&quot; name=&quot;connectionStringName&quot; href=&quot;&quot;> </xref> Атрибут пуст или не существует в файле конфигурации приложения для этого <xref href=&quot;System.Web.Security.SqlRoleProvider&quot;> </xref> экземпляра.       - или - <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref> атрибута превышает 256 символов.       - или - файле конфигурации приложения для этого <xref href=&quot;System.Web.Security.SqlRoleProvider&quot;> </xref> экземпляр содержит нераспознанный атрибут."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  id: IsUserInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: IsUserInRole(String,String)
  nameWithType: SqlRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.IsUserInRole(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, является ли указанный пользователь в указанной роли."
  remarks: "Вызывается метод IsUserInRole <xref:System.Web.Security.Roles>класса и <xref:System.Security.Principal.IPrincipal.IsInRole%2A>метод <xref:System.Web.UI.Page.User%2A?displayProperty=fullName>Свойства, чтобы определить, является ли пользователь связан с ролью базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.UI.Page.User%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal.IsInRole%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example programmatically checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/csharp/m-system.web.security.sq_9_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.sq_9_1.aspx)]"
  syntax:
    content: public override bool IsUserInRole (string username, string roleName);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для поиска."
    - id: roleName
      type: System.String
      description: "Роль для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанное имя пользователя в указанной роли; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlRoleProvider.IsUserInRole*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>username</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>является пустой строкой или содержит запятую.       - или - <code>username</code> — содержит запятую.       - или - <code>roleName</code> имеет длину более 256 символов.       - или - <code>username</code> имеет длину более 256 символов."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  id: RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Удаляет указанные имена пользователей из указанных ролей."
  remarks: "Метод RemoveUsersFromRoles вызывается <xref:System.Web.Security.Roles>класса для удаления одного или нескольких пользователей из одной или нескольких ролей в базе данных SQL Server, указанную в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Roles> Этот метод вызывается методом <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>и <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A>методов этого <xref:System.Web.Security.Roles>класса.</xref:System.Web.Security.Roles> </xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> </xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> </xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> </xref:System.Web.Security.Roles.RemoveUserFromRole%2A>       Обновления базы данных, которые выполняются при вызове RemoveUsersFromRoles выполняются в рамках транзакции. Если возникает ошибка, например имя пользователя, который не существует или имя пользователя, который уже находится в указанной роли, транзакция откатывается и обновления не выполняются.       Имена пользователей и роли не может содержать запятые."
  example:
  - "The following code example adds one or more users to a role or removes a user from a role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/csharp/b95e86c3-c05c-486e-96fd-_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#3](~/add/codesnippet/visualbasic/b95e86c3-c05c-486e-96fd-_1.aspx)]"
  syntax:
    content: public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);
    parameters:
    - id: usernames
      type: System.String[]
      description: "Массив строк имен пользователей, который необходимо удалить из указанных ролей."
    - id: roleNames
      type: System.String[]
      description: "Массив строк имен ролей, чтобы удалить указанные имена пользователей из."
  overload: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "One of the roles in <code>roleNames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       One of the users in <code>usernames</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Одна из ролей в <code> roleNames </code> является пустой строкой или содержит запятую.       - или - один из пользователей в <code> usernames </code> является пустой строкой или содержит запятую.       - или - одна из ролей в <code> roleNames </code> имеет длину более 256 символов.       - или - один из пользователей в <code> usernames </code> имеет длину более 256 символов.       - или - <code> roleNames </code> содержит повторяющийся элемент.       - или - <code> usernames </code> содержит повторяющийся элемент."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Не найден один или несколько указанных имен пользователя.       - или - один или несколько указанных имен роли не найден.       - или - один или несколько указанных имен пользователя не связан с одним или несколькими указанными именами ролей.       - или - произошла неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
- uid: System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  id: RoleExists(System.String)
  parent: System.Web.Security.SqlRoleProvider
  langs:
  - csharp
  name: RoleExists(String)
  nameWithType: SqlRoleProvider.RoleExists(String)
  fullName: System.Web.Security.SqlRoleProvider.RoleExists(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Возвращает значение, указывающее, является ли указанное имя роли уже существует в роли базы данных."
  remarks: "Метод RoleExists вызывается <xref:System.Web.Security.Roles>класс, чтобы определить, существует ли имя роли базы данных SQL Server, указанной в файле конфигурации приложения ASP.NET (Web.config).</xref:System.Web.Security.Roles>"
  example:
  - "The following code example uses the <xref:System.Web.Security.Roles.RoleExists%2A> method to determine whether a role name already exists before creating the role. For an example of a Web.config file that enables role management, see <xref:System.Web.Security.SqlRoleProvider>.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/csharp/m-system.web.security.sq_1_1.aspx)]\n [!code-vb[System.Web.Security.SqlRoleProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.sq_1_1.aspx)]"
  syntax:
    content: public override bool RoleExists (string roleName);
    parameters:
    - id: roleName
      type: System.String
      description: "Имя роли для поиска в базе данных."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если имя роли уже существует в базе данных. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.SqlRoleProvider.RoleExists*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>roleName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>roleName</code>является пустой строкой или содержит запятую.       - или - <code>roleName</code> имеет длину более 256 символов."
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: "Неизвестная ошибка при обмене данными с базой данных."
  platform:
  - net462
references:
- uid: System.Web.Security.RoleProvider
  isExternal: false
  name: System.Web.Security.RoleProvider
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.SqlRoleProvider.#ctor
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: SqlRoleProvider()
  nameWithType: SqlRoleProvider.SqlRoleProvider()
  fullName: System.Web.Security.SqlRoleProvider.SqlRoleProvider()
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: AddUsersToRoles(String[],String[])
  nameWithType: SqlRoleProvider.AddUsersToRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.AddUsersToRoles(String[],String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.SqlRoleProvider.ApplicationName
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
  fullName: System.Web.Security.SqlRoleProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.SqlRoleProvider.CreateRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: CreateRole(String)
  nameWithType: SqlRoleProvider.CreateRole(String)
  fullName: System.Web.Security.SqlRoleProvider.CreateRole(String)
- uid: System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: DeleteRole(String,Boolean)
  nameWithType: SqlRoleProvider.DeleteRole(String,Boolean)
  fullName: System.Web.Security.SqlRoleProvider.DeleteRole(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: FindUsersInRole(String,String)
  nameWithType: SqlRoleProvider.FindUsersInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.FindUsersInRole(String,String)
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetAllRoles()
  nameWithType: SqlRoleProvider.GetAllRoles()
  fullName: System.Web.Security.SqlRoleProvider.GetAllRoles()
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetRolesForUser(String)
  nameWithType: SqlRoleProvider.GetRolesForUser(String)
  fullName: System.Web.Security.SqlRoleProvider.GetRolesForUser(String)
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetUsersInRole(String)
  nameWithType: SqlRoleProvider.GetUsersInRole(String)
  fullName: System.Web.Security.SqlRoleProvider.GetUsersInRole(String)
- uid: System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: SqlRoleProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Security.SqlRoleProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: IsUserInRole(String,String)
  nameWithType: SqlRoleProvider.IsUserInRole(String,String)
  fullName: System.Web.Security.SqlRoleProvider.IsUserInRole(String,String)
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles(String[],String[])
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
  fullName: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(String[],String[])
- uid: System.Web.Security.SqlRoleProvider.RoleExists(System.String)
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RoleExists(String)
  nameWithType: SqlRoleProvider.RoleExists(String)
  fullName: System.Web.Security.SqlRoleProvider.RoleExists(String)
- uid: System.Web.Security.SqlRoleProvider.#ctor*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: SqlRoleProvider
  nameWithType: SqlRoleProvider.SqlRoleProvider
- uid: System.Web.Security.SqlRoleProvider.AddUsersToRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: AddUsersToRoles
  nameWithType: SqlRoleProvider.AddUsersToRoles
- uid: System.Web.Security.SqlRoleProvider.ApplicationName*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: ApplicationName
  nameWithType: SqlRoleProvider.ApplicationName
- uid: System.Web.Security.SqlRoleProvider.CreateRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: CreateRole
  nameWithType: SqlRoleProvider.CreateRole
- uid: System.Web.Security.SqlRoleProvider.DeleteRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: DeleteRole
  nameWithType: SqlRoleProvider.DeleteRole
- uid: System.Web.Security.SqlRoleProvider.FindUsersInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: FindUsersInRole
  nameWithType: SqlRoleProvider.FindUsersInRole
- uid: System.Web.Security.SqlRoleProvider.GetAllRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetAllRoles
  nameWithType: SqlRoleProvider.GetAllRoles
- uid: System.Web.Security.SqlRoleProvider.GetRolesForUser*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetRolesForUser
  nameWithType: SqlRoleProvider.GetRolesForUser
- uid: System.Web.Security.SqlRoleProvider.GetUsersInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: GetUsersInRole
  nameWithType: SqlRoleProvider.GetUsersInRole
- uid: System.Web.Security.SqlRoleProvider.Initialize*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: Initialize
  nameWithType: SqlRoleProvider.Initialize
- uid: System.Web.Security.SqlRoleProvider.IsUserInRole*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: IsUserInRole
  nameWithType: SqlRoleProvider.IsUserInRole
- uid: System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RemoveUsersFromRoles
  nameWithType: SqlRoleProvider.RemoveUsersFromRoles
- uid: System.Web.Security.SqlRoleProvider.RoleExists*
  parent: System.Web.Security.SqlRoleProvider
  isExternal: false
  name: RoleExists
  nameWithType: SqlRoleProvider.RoleExists
