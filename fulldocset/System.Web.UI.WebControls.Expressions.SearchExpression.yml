### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.SearchExpression
  id: SearchExpression
  children:
  - System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  - System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  - System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  - System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  langs:
  - csharp
  name: SearchExpression
  nameWithType: SearchExpression
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression
  type: Class
  summary: "Предоставляет способ поиска поля или полей для строковых значений и сравните их с заданным строковым значением."
  remarks: "<xref:System.Web.UI.WebControls.QueryExtender>Элемент управления предоставляет возможность фильтрации данных в веб-страницы с помощью класса SearchExpression.</xref:System.Web.UI.WebControls.QueryExtender> Класс SearchExpression сравнивает указанной строки в поле или поля, указываемое значение. Выражение выполняет «начинается с», «содержит» или «заканчивается на» поиска. Необходимо указать значения для <xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A>и <xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A>Свойства для указания типа нужно выполнить поиск и полей данных, который требуется найти.</xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A> </xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A> Если поставщик LINQ, которое используется в <xref:System.Web.UI.WebControls.QueryExtender>элемент управления поддерживает чувствительность к регистру, можно использовать <xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A>Свойства для включения или пропуска чувствительности к регистру.</xref:System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType%2A> </xref:System.Web.UI.WebControls.QueryExtender>       Значение для поиска может быть предоставлено [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] элемента управления. Чтобы указать это, необходимо задать <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>свойство <xref:System.Web.UI.WebControls.ControlParameter>класса в объекте с идентификатором SearchExpression [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] управления.</xref:System.Web.UI.WebControls.ControlParameter> </xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> Например, если указано значение для поиска в текстовое поле <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>свойство необходимо задать идентификатор элемента управления текстовым полем.</xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> Класс SearchExpression можно использовать в сочетании с другими выражениями, <xref:System.Web.UI.WebControls.QueryExtender>поддерживает, такие как <xref:System.Web.UI.WebControls.Expressions.RangeExpression>фильтра.</xref:System.Web.UI.WebControls.Expressions.RangeExpression> </xref:System.Web.UI.WebControls.QueryExtender> Например можно поиск названий продуктов, содержащих строку «чая» и Цена по прейскуранту от 100 до 200."
  example:
  - "The following example shows how to search the Name column in the Products table of the AdventureWorks database for products whose that start with the string that is specified in the `SearchTextBox` control. The result that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: 'public class SearchExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: SearchExpression()
  nameWithType: SearchExpression.SearchExpression()
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;> </xref> класса."
  syntax:
    content: public SearchExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  id: ComparisonType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Возвращает или задает тип сравнения строк."
  remarks: "Это свойство позволяет использовать <xref:System.StringComparison>перечисления, чтобы указать, как выполняется поиск.</xref:System.StringComparison> <xref:System.StringComparison>Перечисление используется для указания того, использует ли сравнение строк текущего языка и региональных параметров или инвариантного языка и региональных параметров, и использует ли текст или правила сортировки по порядковому номеру.</xref:System.StringComparison> Если поставщик данных, <xref:System.Web.UI.WebControls.QueryExtender>использует поддерживает чувствительность к регистру, одно из свойств типа сравнения можно использовать для включения или пропуска чувствительности к регистру.</xref:System.Web.UI.WebControls.QueryExtender>"
  syntax:
    content: public StringComparison ComparisonType { get; set; }
    return:
      type: System.StringComparison
      description: "Тип сравнения строк."
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*>Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  id: DataFields
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: DataFields
  nameWithType: SearchExpression.DataFields
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Возвращает и задает одно поле или разделенный запятыми список полей для поиска."
  remarks: "<xref:System.Web.UI.WebControls.Expressions.SearchExpression>Класс выполняет поиск в одно или несколько полей данных в указанной таблице.</xref:System.Web.UI.WebControls.Expressions.SearchExpression> По крайней мере одно поле данных должно быть указано в <xref:System.Web.UI.WebControls.Expressions.SearchExpression>экземпляра.</xref:System.Web.UI.WebControls.Expressions.SearchExpression> При указании более одного поля данных разделяйте поля с помощью запятой."
  example:
  - "The following example shows how to search the Name and the ProductNumber data fields in the Products table of the AdventureWorks database for products that have names that start with a specified string. This code example is part of a larger example provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/en-us/b305ae31-1a1b-4d07-a678-51457c17614f).  \n  \n```  \n<asp:SearchExpression SearchType=\"StartsWith\"   \n      DataFields=\"Name\",\"ProductNumber\" >  \n  <asp:ControlParameter ControlID=\"SearchTextBox\" />  \n</asp:SearchExpression>  \n```"
  syntax:
    content: public string DataFields { get; set; }
    return:
      type: System.String
      description: "Одно или несколько полей для поиска."
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Свойство DataFields <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: SearchExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Применяет <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;> </xref> объект в указанный <xref:System.Linq.IQueryable>объекта, основанного на <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchType&quot;> </xref> объекта.</xref:System.Linq.IQueryable>"
  remarks: "Это свойство возвращает коллекцию параметров, используемых в <xref:System.Web.UI.WebControls.Expressions.SearchExpression>объекта и применяет выражение к <xref:System.Linq.IQueryable>объекта.</xref:System.Linq.IQueryable> </xref:System.Web.UI.WebControls.Expressions.SearchExpression> Если указано несколько полей данных, `AND` оператор применяется к полям данных."
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "Объект для использования."
    return:
      type: System.Linq.IQueryable
      description: "Экземпляр <xref:System.Linq.IQueryable>объекта, <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchExpression&quot;> </xref> была применена к.</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*>Свойство <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  id: SearchType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  langs:
  - csharp
  name: SearchType
  nameWithType: SearchExpression.SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Возвращает или задает <xref href=&quot;System.Web.UI.WebControls.Expressions.SearchType&quot;> </xref> значение, определяющее, где происходит поиск в строке."
  remarks: "<xref:System.Web.UI.WebControls.Expressions.SearchType>Свойство использует <xref:System.Web.UI.WebControls.Expressions.SearchType>перечисление, содержащее типы поиска для использования в экземпляре <xref:System.Web.UI.WebControls.Expressions.SearchExpression>класса.</xref:System.Web.UI.WebControls.Expressions.SearchExpression> </xref:System.Web.UI.WebControls.Expressions.SearchType> </xref:System.Web.UI.WebControls.Expressions.SearchType>       В следующей таблице перечислены возможные значения перечисления.      | Перечисление | Описание |   |-----------------|-----------------|   | <xref:System.Web.UI.WebControls.Expressions.SearchType>| Задает поиск, который начинается в любом месте в поле. |   | <xref:System.Web.UI.WebControls.Expressions.SearchType>| Задает поиск, который начинается с начала поля. |   | <xref:System.Web.UI.WebControls.Expressions.SearchType>| Задает поиск, в конце поля. |</xref:System.Web.UI.WebControls.Expressions.SearchType> </xref:System.Web.UI.WebControls.Expressions.SearchType> </xref:System.Web.UI.WebControls.Expressions.SearchType>"
  syntax:
    content: public System.Web.UI.WebControls.Expressions.SearchType SearchType { get; set; }
    return:
      type: System.Web.UI.WebControls.Expressions.SearchType
      description: "Тип выполняемого поиска."
  overload: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchExpression()
  nameWithType: SearchExpression.SearchExpression()
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchExpression()
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType
- uid: System.StringComparison
  parent: System
  isExternal: true
  name: StringComparison
  nameWithType: StringComparison
  fullName: System.StringComparison
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: DataFields
  nameWithType: SearchExpression.DataFields
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: SearchExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchType
  nameWithType: SearchExpression.SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType
- uid: System.Web.UI.WebControls.Expressions.SearchType
  parent: System.Web.UI.WebControls.Expressions
  isExternal: false
  name: SearchType
  nameWithType: SearchType
  fullName: System.Web.UI.WebControls.Expressions.SearchType
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchExpression
  nameWithType: SearchExpression.SearchExpression
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.ComparisonType*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: ComparisonType
  nameWithType: SearchExpression.ComparisonType
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.DataFields*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: DataFields
  nameWithType: SearchExpression.DataFields
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: GetQueryable
  nameWithType: SearchExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.SearchExpression.SearchType*
  parent: System.Web.UI.WebControls.Expressions.SearchExpression
  isExternal: false
  name: SearchType
  nameWithType: SearchExpression.SearchType
