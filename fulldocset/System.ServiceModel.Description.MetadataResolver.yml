### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataResolver
  id: MetadataResolver
  children:
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  langs:
  - csharp
  name: MetadataResolver
  nameWithType: MetadataResolver
  fullName: System.ServiceModel.Description.MetadataResolver
  type: Class
  summary: "Извлекает и импортирует метаданные в виде <xref:System.ServiceModel.Description.ServiceEndpoint>объектов.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Класс MetadataResolver позволяют быстро импортировать конечные точки службы из метаданных. Этот класс загружает и преобразовывает метаданные в <xref:System.ServiceModel.Description.ServiceEndpoint>объектов.</xref:System.ServiceModel.Description.ServiceEndpoint> Чтобы загрузить метаданные и обработать эти сведения как <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>см. в разделе <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>"
  example:
  - "The following code example shows the use of the MetadataResolver class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]  \n  \n The following code example shows the use of the MetadataResolver to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static class MetadataResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Начинает асинхронный вызов, разрешающий адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для заданных контрактов, с помощью заданного адреса и асинхронного состояния и делегата.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Параметры по умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>используемые для извлечения метаданных, а также по умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Адрес метаданных."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, который вызывается после завершения вызова."
    - id: asyncState
      type: System.Object
      description: "Состояние, связанное с асинхронным вызовом."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию разрешения.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес, контракт или обратный вызов имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>является пустым, по крайней мере один член <code>contracts</code> — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, или <code>contracts</code> содержит несколько контрактов с тем же именем и пространством имен."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Начинает асинхронный вызов, разрешающий адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта, с помощью заданного адреса и асинхронного состояния и делегата.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Параметры по умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>используемые для извлечения метаданных, а также по умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений.       Этот метод требует указания типа контракта. Можно указать контракт путем объявления интерфейса службы в коде клиента или с помощью [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] клиента, созданного программой Svcutil.exe. Если интерфейс изменился (добавлена новая операция, например) необходимо обновить интерфейс в коде клиента или создать новый [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] клиента. Если этого не сделать, создается исключение. Например имеется служба, которая реализует контракт службы, называется ICalculator и определяющий Add(), Sub(), Mult() и Div(). Создание клиентского приложения и создания [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] клиента. Затем добавьте метод к ICalculator вызывается Echo(). Затем при записи приложения, вызывающего <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>без создания нового [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] клиента возникает следующее исключение.</xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Контракт, для которого требуется загрузить и разрешить метаданные."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Адрес метаданных."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, который вызывается после завершения вызова."
    - id: asyncState
      type: System.Object
      description: "Состояние, связанное с асинхронным вызовом."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию разрешения.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес, контракт или обратный вызов имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Начинает асинхронный вызов, разрешающий адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для заданных контрактов, с помощью заданного адреса, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, асинхронного состояния и делегата.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "По умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Адрес метаданных."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> Используется для извлечения метаданных."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, который вызывается после завершения вызова."
    - id: asyncState
      type: System.Object
      description: "Состояние, связанное с асинхронным вызовом."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию разрешения.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес, контракт, клиент или обратный вызов имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>является пустым, по крайней мере один член <code>contracts</code> имеет значение null, или <code>contracts</code> содержит несколько контрактов с тем же именем и пространством имен."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Начинает асинхронный вызов, разрешающий адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для заданных контрактов, с помощью заданного адреса, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref> значение, асинхронного состояния и делегата.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Параметры по умолчанию на <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>используются для получения метаданных.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.Uri
      description: "Адрес метаданных."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Режим получения."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, который вызывается после завершения вызова."
    - id: asyncState
      type: System.Object
      description: "Состояние, связанное с асинхронным вызовом."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию разрешения.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес, контракт или обратный вызов имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>является пустым, по крайней мере один член <code>contracts</code> имеет значение null, или <code>contracts</code> содержит несколько контрактов с тем же именем и пространством имен."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Начинает асинхронный вызов, разрешающий адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта, используя указанный адрес <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, асинхронного состояния и делегата.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Параметры по умолчанию на <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>используются для получения метаданных.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "Контракт, для которого требуется загрузить и разрешить метаданные."
    - id: address
      type: System.Uri
      description: "Адрес метаданных."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Режим получения."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, который вызывается после завершения вызова."
    - id: asyncState
      type: System.Object
      description: "Состояние, связанное с асинхронным вызовом."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию разрешения.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес, контракт или обратный вызов имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Начинает асинхронный вызов, разрешающий адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для заданных контрактов, с помощью заданного адреса, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, асинхронного состояния и делегата.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.Uri
      description: "Адрес метаданных."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Режим получения."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> Используется для извлечения метаданных."
    - id: callback
      type: System.AsyncCallback
      description: "Делегат асинхронного обратного вызова, который вызывается после завершения вызова."
    - id: asyncState
      type: System.Object
      description: "Состояние, связанное с асинхронным вызовом."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Ссылается на асинхронную операцию разрешения.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес, контракт или обратный вызов имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>является пустым, по крайней мере один член <code>contracts</code> имеет значение null, или <code>contracts</code> содержит несколько контрактов с тем же именем и пространством имен."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  id: EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Завершает асинхронный вызов для разрешения метаданных в коллекцию конечных точек."
  remarks: "Завершает асинхронный вызов к одной из <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>методы.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Полученный из вызова <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*>метод.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Коллекция <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для конечных точек, содержащихся в метаданных.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Разрешает адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для заданных контрактов, с помощью заданного адреса метаданных.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Параметры по умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>используемые для извлечения метаданных, а также по умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Адрес метаданных."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Коллекция <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес или коллекция контрактов имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>является пустым, по крайней мере один член <code>contracts</code> имеет значение null, или <code>contracts</code> содержит несколько контрактов с тем же именем и пространством имен."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Загружает и разрешает адрес метаданных в коллекцию <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для заданного контракта по заданному адресу.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Метод Resolve Чтобы задать контракт и адрес метаданных для использования при загрузке и разрешении метаданных.       Параметры по умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>используемые для извлечения метаданных, а также по умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений.       Этот метод требует указания типа контракта. Можно указать контракт путем объявления интерфейса службы в коде клиента или с помощью [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] клиента, созданного программой Svcutil.exe. Если интерфейс изменился (добавлена новая операция, например) необходимо обновить интерфейс в коде клиента или создать новый [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] клиента. Если этого не сделать, создается исключение. Например имеется служба, которая реализует контракт службы, называется ICalculator и определяющий Add(), Sub(), Mult() и Div(). Создание клиентского приложения и создания [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] клиента. Затем добавьте метод к ICalculator вызывается Echo(). Затем при записи приложения, вызовы разрешать без создания нового [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] клиента возникает следующее исключение.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contract
      type: System.Type
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Адрес метаданных."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Коллекция <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес или контракт имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Разрешает адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для заданных контрактов, с помощью заданного адреса метаданных и <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "По умолчанию, <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "Адрес метаданных."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> Используется для извлечения метаданных."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Коллекция <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес, коллекция контрактов или клиент имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>является пустым, по крайней мере один член <code>contracts</code> имеет значение null, или <code>contracts</code> содержит несколько контрактов с тем же именем и пространством имен."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Разрешает адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для заданных контрактов, с помощью заданного адреса и режима передачи.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Параметры по умолчанию на <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>используются для получения метаданных.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.Uri
      description: "Адрес метаданных."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Режим получения."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Коллекция <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес или коллекция контрактов имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>является пустым, по крайней мере один член <code>contracts</code> имеет значение null, или <code>contracts</code> содержит несколько контрактов с тем же именем и пространством имен."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Разрешает адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта, с помощью заданного адреса и режима передачи.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Метод Resolve для указания контракта, а адрес и механизм загрузки для использования.       Параметры по умолчанию на <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>используются для получения метаданных.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contract
      type: System.Type
      description: "Контракт, для которого требуется загрузить и разрешить метаданные."
    - id: address
      type: System.Uri
      description: "Адрес метаданных."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Режим получения."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Коллекция <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес или контракт имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Разрешает адрес метаданных в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты для заданных контрактов, с помощью заданного адреса, режима передачи и клиента передачи.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Чтобы загрузить метаданные, не разрешая информацию в <xref:System.ServiceModel.Description.ServiceEndpoint>объекты, используют <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>напрямую.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      Настроек [!NOTE] настроек Если конечные точки не были импортированы или конечные точки не соответствует контракту, возвращается пустая коллекция. Если возвращается пустая коллекция, записывается трассировка предупреждений."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Контракты, для которых требуется загрузить и разрешить метаданные."
    - id: address
      type: System.Uri
      description: "Адрес метаданных."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "Режим получения."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "<xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> Используется для извлечения метаданных."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Коллекция <xref:System.ServiceModel.Description.ServiceEndpoint>объектов для указанного контракта.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Адрес, коллекция контрактов или клиент имеет <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>является пустым, по крайней мере один член <code>contracts</code> имеет значение null, или <code>contracts</code> содержит несколько контрактов с тем же именем и пространством имен."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ContractDescription>
  nameWithType: IEnumerable<ContractDescription>
  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve
  nameWithType: MetadataResolver.BeginResolve
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve
  nameWithType: MetadataResolver.EndResolve
- uid: System.ServiceModel.Description.MetadataResolver.Resolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve
  nameWithType: MetadataResolver.Resolve
