### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadState
  id: ThreadState
  children:
  - System.Threading.ThreadState.Aborted
  - System.Threading.ThreadState.AbortRequested
  - System.Threading.ThreadState.Background
  - System.Threading.ThreadState.Running
  - System.Threading.ThreadState.Stopped
  - System.Threading.ThreadState.StopRequested
  - System.Threading.ThreadState.Suspended
  - System.Threading.ThreadState.SuspendRequested
  - System.Threading.ThreadState.Unstarted
  - System.Threading.ThreadState.WaitSleepJoin
  langs:
  - csharp
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
  type: Enum
  summary: "Указывает состояния выполнения <xref href=&quot;System.Threading.Thread&quot;> </xref>."
  remarks: "В перечислении ThreadState имеет только в некоторых сценариях отладки. Никогда не используйте в коде состояния потоков для синхронизации действий потоков.       ThreadState определяет набор всех возможных выполнения состояний для потоков. После создания потока он находится по по крайней мере одно из состояний, до его завершения. Потоки, созданные в общеязыковой изначально находятся в `Unstarted` состоянии, пока внешние потоки, приходящие в среду выполнения уже находитесь в `Running` состояние. `Unstarted` Поток переходят в `Running` состояния путем вызова <xref:System.Threading.Thread.Start%2A>.</xref:System.Threading.Thread.Start%2A> Не все комбинации `ThreadState` значения являются допустимыми; например, поток не может быть одновременно `Aborted` и `Unstarted` состояния.      Настроек [!IMPORTANT] настроек существуют два потока состояние перечисления, ThreadState и <xref:System.Diagnostics.ThreadState?displayProperty=fullName>.</xref:System.Diagnostics.ThreadState?displayProperty=fullName>       В следующей таблице показаны действия, которые вызывают изменение состояния.      | Действие | ThreadState |   |------------|-----------------|   | Поток создается в общеязыковой. | Незапущенные |   | Другой поток вызывает метод <xref:System.Threading.Thread.Start%2A?displayProperty=fullName>в новом потоке и вызов метода.</xref:System.Threading.Thread.Start%2A?displayProperty=fullName><br /><br /> <xref:System.Threading.Thread.Start%2A>Метод не возвращает до запуска нового потока выполнения.</xref:System.Threading.Thread.Start%2A> Нет способа узнать, в какой точке новый поток начнет работать, при вызове <xref:System.Threading.Thread.Start%2A>. | Запуск |   | Поток вызывает метод <xref:System.Threading.Thread.Sleep%2A>| : WaitSleepJoin |   | Поток вызывает метод <xref:System.Threading.Monitor.Wait%2A>на другом объекте. | : WaitSleepJoin |   | Поток вызывает метод <xref:System.Threading.Thread.Join%2A>в другом потоке. | : WaitSleepJoin |   | Другой поток вызывает метод <xref:System.Threading.Thread.Interrupt%2A>| Запуск |   | Другой поток вызывает метод <xref:System.Threading.Thread.Suspend%2A>| SuspendRequested |   | Поток отвечает на запрос <xref:System.Threading.Thread.Suspend%2A>. | Приостановить |   | Другой поток вызывает метод <xref:System.Threading.Thread.Resume%2A>| Запуск |   | Другой поток вызывает метод <xref:System.Threading.Thread.Abort%2A>| AbortRequested |   | Поток отвечает на запрос <xref:System.Threading.Thread.Abort%2A>. | Остановить |   | Поток завершен. | Остановить |       Помимо состояний, приведенных выше, имеется также `Background` состояние, которое указывает, является ли поток выполняется в фоновом режиме или переднего плана.</xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Thread.Resume%2A> </xref:System.Threading.Thread.Suspend%2A> </xref:System.Threading.Thread.Suspend%2A> </xref:System.Threading.Thread.Interrupt%2A> </xref:System.Threading.Thread.Join%2A> </xref:System.Threading.Monitor.Wait%2A> </xref:System.Threading.Thread.Sleep%2A> </xref:System.Threading.Thread.Start%2A>       Поток может быть более одного состояния в определенный момент времени. Например, если поток заблокируется при вызове <xref:System.Threading.Monitor.Wait%2A>и другой поток вызывает метод <xref:System.Threading.Thread.Abort%2A>для заблокированного потока заблокированного потока будет находиться в `WaitSleepJoin` и `AbortRequested` состояний, в то же время.</xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Monitor.Wait%2A> В этом случае, как только поток возвращается из вызова <xref:System.Threading.Monitor.Wait%2A>или прервана, он будет получать <xref:System.Threading.ThreadAbortException>для начала аварийного завершения.</xref:System.Threading.ThreadAbortException> </xref:System.Threading.Monitor.Wait%2A>       <xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName>Свойства потока содержится текущее состояние потока.</xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName> Приложения должны использовать битовую маску, позволяющую определить, выполняется ли поток. Так как значение для `Running` является ноль (0), проверка поток выполняется с помощью кода C#, таких как `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` или Visual Basic, таких как `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`."
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ThreadState
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Threading.ThreadState.Aborted
  id: Aborted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Состояние потока включает AbortRequested поток теперь не работает, но его состояние еще не изменено на остановлена."
  syntax:
    content: Aborted
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.AbortRequested
  id: AbortRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "&lt;Xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; метод был вызван в потоке, но поток еще не получил ожидающие <xref href=&quot;System.Threading.ThreadAbortException&quot;> </xref> , будет предпринята попытка завершить его."
  syntax:
    content: AbortRequested
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Background
  id: Background
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Поток выполняется как фоновый поток, в отличие от основного потока. Это состояние определяется заданием &lt;xref:System.Threading.Thread.IsBackground%2A?displayProperty=fullName&gt; свойство."
  syntax:
    content: Background
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Running
  id: Running
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Поток был запущен, он не заблокирован и нет ожидающих <xref href=&quot;System.Threading.ThreadAbortException&quot;> </xref>."
  syntax:
    content: Running
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Stopped
  id: Stopped
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Поток был остановлен."
  syntax:
    content: Stopped
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.StopRequested
  id: StopRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Поток является запрос на остановку. Это только для внутреннего использования."
  syntax:
    content: StopRequested
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Suspended
  id: Suspended
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Этот поток был приостановлен."
  syntax:
    content: Suspended
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.SuspendRequested
  id: SuspendRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Поток получает запрос на приостановку."
  syntax:
    content: SuspendRequested
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Unstarted
  id: Unstarted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "&lt;Xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; не был вызван метод в потоке."
  syntax:
    content: Unstarted
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.WaitSleepJoin
  id: WaitSleepJoin
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Поток заблокирован. Это может быть результатом вызова метода &lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt; или &lt;xref:System.Threading.Thread.Join%2A?displayProperty=fullName&gt;, запрашивающих блокировки — например, вызывая &lt;xref:System.Threading.Monitor.Enter%2A?displayProperty=fullName&gt; или &lt;xref:System.Threading.Monitor.Wait%2A?displayProperty=fullName&gt; — или ожидания для объекта синхронизации потоков, например <xref:System.Threading.ManualResetEvent>.</xref:System.Threading.ManualResetEvent>"
  syntax:
    content: WaitSleepJoin
    return:
      type: System.Threading.ThreadState
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Threading.ThreadState.Aborted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
- uid: System.Threading.ThreadState
  parent: System.Threading
  isExternal: false
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
- uid: System.Threading.ThreadState.AbortRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
- uid: System.Threading.ThreadState.Background
  parent: System.Threading.ThreadState
  isExternal: false
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
- uid: System.Threading.ThreadState.Running
  parent: System.Threading.ThreadState
  isExternal: false
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
- uid: System.Threading.ThreadState.Stopped
  parent: System.Threading.ThreadState
  isExternal: false
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
- uid: System.Threading.ThreadState.StopRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
- uid: System.Threading.ThreadState.Suspended
  parent: System.Threading.ThreadState
  isExternal: false
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
- uid: System.Threading.ThreadState.SuspendRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
- uid: System.Threading.ThreadState.Unstarted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
- uid: System.Threading.ThreadState.WaitSleepJoin
  parent: System.Threading.ThreadState
  isExternal: false
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
