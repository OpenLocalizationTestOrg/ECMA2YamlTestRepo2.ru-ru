### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.PipeSecurity
  id: PipeSecurity
  children:
  - System.IO.Pipes.PipeSecurity.#ctor
  - System.IO.Pipes.PipeSecurity.AccessRightType
  - System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.IO.Pipes.PipeSecurity.AccessRuleType
  - System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.IO.Pipes.PipeSecurity.AuditRuleType
  - System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  - System.IO.Pipes.PipeSecurity.Persist(System.String)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  - System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  - System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  langs:
  - csharp
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
  type: Class
  summary: "Представляет элемент управления доступом и аудита безопасности для канала."
  remarks: "Класс PipeSecurity задает права доступа для канала и как попытки доступа подлежат аудиту.  Этот класс представляет права доступа и аудита в виде набора правил. Каждое правило доступа представлена <xref:System.IO.Pipes.PipeAccessRule>, пока объект представляется каждого правила аудита <xref:System.IO.Pipes.PipeAuditRule>объекта.</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       Класс PipeSecurity является абстракцией базовой файловой системы безопасности Microsoft Windows. В этой системе каждый канал содержит список (DACL), который контролирует доступ к каналу и системы управления доступом (SACL), в котором определяются попытки доступа элемента управления, подлежащие аудиту.  <xref:System.IO.Pipes.PipeAccessRule>И <xref:System.IO.Pipes.PipeAuditRule>классы, абстрактные классы элементов управления доступом (ACE), составляющих списки DACL и SACL.</xref:System.IO.Pipes.PipeAuditRule> </xref:System.IO.Pipes.PipeAccessRule>       Класс PipeSecurity скрывает многие детали списки DACL и SACL; не нужно беспокоиться об упорядочивании ACE или нулевой DACL.       Класс PipeSecurity используется для получения, добавления или изменения правил доступа, которые представляют DACL и SACL канала.       Для сохранения новых или измененных доступа или правила для канала аудита используйте <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>метод.</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> Чтобы получить доступ или правила аудита из существующего файла, используйте <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>метод.</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: 'public class PipeSecurity : System.Security.AccessControl.NativeObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  - System.Security.AccessControl.CommonObjectSecurity
  - System.Security.AccessControl.NativeObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.NativeObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections,System.Object)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> класса."
  remarks: "Этот конструктор создает пустой <xref:System.IO.Pipes.PipeSecurity>объект, который не основан на существующий канал.</xref:System.IO.Pipes.PipeSecurity> Затем можно заполнить этот объект сведения об управлении доступом и применить его к каналу.       Можно добавить доступ или правила для аудита <xref:System.IO.Pipes.PipeSecurity>с помощью <xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A>метод.</xref:System.IO.Pipes.PipeSecurity.AddAccessRule%2A> </xref:System.IO.Pipes.PipeSecurity> Можно удалить доступ или с помощью правил аудита <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>метод.</xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>       Для сохранения новых или измененных доступа или правила для канала аудита используйте <xref:System.IO.Pipes.PipeStream.SetAccessControl%2A>метод.</xref:System.IO.Pipes.PipeStream.SetAccessControl%2A> Чтобы получить доступ или правила аудита из существующего файла, используйте <xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>метод.</xref:System.IO.Pipes.PipeStream.GetAccessControl%2A>"
  syntax:
    content: public PipeSecurity ();
    parameters: []
  overload: System.IO.Pipes.PipeSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  id: AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает <xref:System.Type>защищаемого объекта, связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта.</xref:System.Type>"
  remarks: "Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity>класса переопределение <xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A>Свойства и возвращаемые типа, они используют для представления права доступа.</xref:System.Security.AccessControl.ObjectSecurity.AccessRightType%2A> </xref:System.Security.AccessControl.ObjectSecurity> При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения типа перечисления подходит для использования с каждым объектом безопасности."
  syntax:
    content: public override Type AccessRightType { get; }
    return:
      type: System.Type
      description: "Тип защищаемого объекта, связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  overload: System.IO.Pipes.PipeSecurity.AccessRightType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  id: AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> с указанными значениями."
  remarks: "Для создания правила управления доступом рекомендуется использовать конструкторы <xref:System.IO.Pipes.PipeAccessRule>класса.</xref:System.IO.Pipes.PipeAccessRule>"
  syntax:
    content: public override System.Security.AccessControl.AccessRule AccessRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AccessControlType type);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Удостоверение, к которому применяется правило доступа. Он должен быть объект, который может быть приведен как <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> объекта."
    - id: accessMask
      type: System.Int32
      description: "Маска доступа данного правила. Маска доступа является 32-разрядной коллекцией анонимных битов, значение каждого из которых определяется отдельными интеграторами"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если это правило наследуется от родительского контейнера; в противном случае — значение false."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> значения, которые указывает свойства наследования правила доступа."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> значения, указывает ли автоматическое распространение наследуемых правил доступа. Флаги распространения учитываются, если `inheritanceFlags` равно <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>."
    - id: type
      type: System.Security.AccessControl.AccessControlType
      description: "Указывает допустимый тип управления доступом."
    return:
      type: System.Security.AccessControl.AccessRule
      description: "<xref href=&quot;System.Security.AccessControl.AccessRule&quot;> </xref> Объект, создаваемый данным методом."
  overload: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, или <code>type</code> задает недопустимое значение."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identityReference</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>accessMask</code> равно нулю."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>identityReference</code>не является типом <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ни к типу, таких как <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>, который можно преобразовать в тип <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  id: AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает <xref:System.Type>объекта, связанного с правилами доступа текущего <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта.</xref:System.Type>"
  remarks: "Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity>класса переопределение <xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A>Свойства и возвращаемые типа, они используют для представления права доступа.</xref:System.Security.AccessControl.ObjectSecurity.AccessRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения типа перечисления подходит для использования с каждым объектом безопасности."
  syntax:
    content: public override Type AccessRuleType { get; }
    return:
      type: System.Type
      description: "Тип объекта, связанного с правилами доступа текущего <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  overload: System.IO.Pipes.PipeSecurity.AccessRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  id: AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Добавляет правило доступа в список управления доступом на уровне пользователей (DACL), связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: 'Метод AddAccessRule добавляет новое правило в список правил, которые содержит объект <xref:System.IO.Pipes.PipeSecurity>. Если список управления доступом (ACL) для указанное правило уже существует, метод AddAccessRule по-прежнему будет добавить правило, за одним исключением: <xref:System.IO.Pipes.PipeAccessRule>объект, созданный с помощью <xref:System.Security.AccessControl.AccessControlType>значение заменяет объект, который создается с помощью <xref:System.Security.AccessControl.AccessControlType>значение.</xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.IO.Pipes.PipeSecurity>'
  syntax:
    content: public void AddAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Изменяемое правило доступа."
  overload: System.IO.Pipes.PipeSecurity.AddAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  id: AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Добавляет правило аудита для системы управления доступом список (SACL), связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: "AddAuditRule, метод добавляет новое правило аудита в список правил, которые <xref:System.IO.Pipes.PipeSecurity>содержит объект.</xref:System.IO.Pipes.PipeSecurity>       Если правила аудита для указанного правила уже существует, метод AddAuditRule по-прежнему будет добавить правило."
  syntax:
    content: public void AddAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Чтобы добавить правило аудита."
  overload: System.IO.Pipes.PipeSecurity.AddAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  id: AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> с указанными значениями."
  remarks: "Для создания правила аудита рекомендуется использовать конструкторы <xref:System.IO.Pipes.PipeAuditRule>класса.</xref:System.IO.Pipes.PipeAuditRule>"
  syntax:
    content: public override sealed System.Security.AccessControl.AuditRule AuditRuleFactory (System.Security.Principal.IdentityReference identityReference, int accessMask, bool isInherited, System.Security.AccessControl.InheritanceFlags inheritanceFlags, System.Security.AccessControl.PropagationFlags propagationFlags, System.Security.AccessControl.AuditFlags flags);
    parameters:
    - id: identityReference
      type: System.Security.Principal.IdentityReference
      description: "Удостоверение, к которому применяется правило доступа. Он должен быть объект, который может быть приведен как <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> объекта."
    - id: accessMask
      type: System.Int32
      description: "Маска доступа данного правила. Маска доступа является 32-разрядной коллекцией анонимных битов, значение каждого из которых определяется отдельными интеграторами"
    - id: isInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если это правило наследуется от родительского контейнера; в противном случае — значение false."
    - id: inheritanceFlags
      type: System.Security.AccessControl.InheritanceFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref> значения, которые указывает свойства наследования правила доступа."
    - id: propagationFlags
      type: System.Security.AccessControl.PropagationFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.PropagationFlags&quot;> </xref> значения, указывает ли автоматическое распространение наследуемых правил доступа. Флаги распространения учитываются, если `inheritanceFlags` равно <xref href=&quot;System.Security.AccessControl.InheritanceFlags&quot;> </xref>."
    - id: flags
      type: System.Security.AccessControl.AuditFlags
      description: "Один из <xref href=&quot;System.Security.AccessControl.AuditFlags&quot;> </xref> значения, которые указывает доступ на допустимый тип элемента управления."
    return:
      type: System.Security.AccessControl.AuditRule
      description: "<xref href=&quot;System.Security.AccessControl.AuditRule&quot;> </xref> Объект, создаваемый данным методом."
  overload: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "The <code>accessMask</code>, <code>inheritanceFlags</code>, <code>propagationFlags</code>, or <code>flags</code> properties specify an invalid value."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>identityReference</code> property is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code> accessMask </code> свойство имеет значение&0;."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> identityReference </code> Свойство не является типом <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> ни к типу, такие как <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref>, который можно преобразовать в тип <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  id: AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Возвращает <xref:System.Type>объекта, связанного с правилами аудита текущего <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта.</xref:System.Type>"
  remarks: "Классы, производные от <xref:System.Security.AccessControl.ObjectSecurity>класса переопределение <xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A>Свойства и возвращаемые типа, они используют для представления права доступа.</xref:System.Security.AccessControl.ObjectSecurity.AuditRuleType%2A> </xref:System.Security.AccessControl.ObjectSecurity> При работе с массивами или коллекциями, содержащими объекты безопасности нескольких типов, используйте это свойство для определения типа перечисления подходит для использования с каждым объектом безопасности."
  syntax:
    content: public override Type AuditRuleType { get; }
    return:
      type: System.Type
      description: "Тип объекта, связанного с правилами аудита текущего <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  overload: System.IO.Pipes.PipeSecurity.AuditRuleType*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  id: Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Сохраняет указанные разделы дескриптора безопасности, связанный с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта в постоянном хранилище."
  syntax:
    content: protected void Persist (System.Runtime.InteropServices.SafeHandle handle);
    parameters:
    - id: handle
      type: System.Runtime.InteropServices.SafeHandle
      description: "Дескриптор защищаемого объекта, текущий <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> с которой связан объект."
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  id: Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Сохраняет указанные разделы дескриптора безопасности, связанный с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта в постоянном хранилище."
  syntax:
    content: protected void Persist (string name);
    parameters:
    - id: name
      type: System.String
      description: "Имя защищаемого объекта, текущий <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> с которой связан объект."
  overload: System.IO.Pipes.PipeSecurity.Persist*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Удаляет правило доступа из списка управления доступом на уровне пользователей (DACL), связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: "Метод RemoveAccessRule удаляет все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила доступа или все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила доступа, из текущего <xref:System.IO.Pipes.PipeSecurity>объекта.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> Например, этот метод можно использовать для удаления всех <xref:System.Security.AccessControl.AccessControlType>правила доступа для пользователя, передавая <xref:System.IO.Pipes.PipeAccessRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение <xref:System.IO.Pipes.PipeAccessRights>значение и учетной записи пользователя.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> Метод RemoveAccessRule удаляет все правила deny, укажите <xref:System.IO.Pipes.PipeAccessRights>значение или <xref:System.IO.Pipes.PipeAccessRights>значение.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public bool RemoveAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Изменяемое правило доступа."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если операция выполнена успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  id: RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Удаляет указанное правило доступа из списка управления доступом на уровне пользователей (DACL), связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: "<xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>Метод удаляет все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила доступа или все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила доступа, из текущего <xref:System.IO.Pipes.PipeSecurity>объекта.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A> Например, этот метод можно использовать для удаления всех <xref:System.Security.AccessControl.AccessControlType>правила доступа для пользователя, передавая <xref:System.IO.Pipes.PipeAccessRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение <xref:System.IO.Pipes.PipeAccessRights>значение и учетной записи пользователя.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.Security.AccessControl.AccessControlType> </xref:System.IO.Pipes.PipeAccessRule> </xref:System.Security.AccessControl.AccessControlType> <xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>Метод удаляет все правила deny, укажите <xref:System.IO.Pipes.PipeAccessRights>значение или <xref:System.IO.Pipes.PipeAccessRights>значение.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeSecurity.RemoveAccessRule%2A>"
  syntax:
    content: public void RemoveAccessRuleSpecific (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Изменяемое правило доступа."
  overload: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Удаляет правило аудита из системного списка (Управления доступом), связанный с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: "Метод RemoveAuditRule удаляет все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила аудита или все сопоставления <xref:System.Security.AccessControl.AccessControlType>правила аудита из текущего <xref:System.IO.Pipes.PipeSecurity>объекта.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Например, этот метод можно использовать для удаления всех <xref:System.Security.AccessControl.AccessControlType>правил аудита для пользователя, передавая <xref:System.Security.AccessControl.FileSystemAuditRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение <xref:System.Security.AccessControl.AuditFlags>значение и учетной записи пользователя.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  При этом метод RemoveAuditRule удаляет все правила deny, укажите <xref:System.Security.AccessControl.AuditFlags>значение или <xref:System.Security.AccessControl.AuditFlags>значение.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public bool RemoveAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Удаляемое правило аудита."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если правила аудита был удален. в противном случае<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Удаляет все правила аудита с тем же идентификатором безопасности, что указанного правила аудита из системного списка (Управления доступом), связанный с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: "Метод RemoveAuditRuleAll удаляет все правила аудита для указанного пользователя.  Игнорирует все значения в <xref:System.IO.Pipes.PipeAuditRule>объекта, за исключением учетной записи пользователя.</xref:System.IO.Pipes.PipeAuditRule>"
  syntax:
    content: public void RemoveAuditRuleAll (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Удаляемое правило аудита."
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  id: RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Удаляет указанное правило аудита из системного списка (Управления доступом), связанный с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: "Метод RemoveAuditRuleSpecific Удаляет указанный сопоставления <xref:System.Security.AccessControl.AccessControlType>аудита указанного соответствия или правило <xref:System.Security.AccessControl.AccessControlType>правила аудита из текущего <xref:System.IO.Pipes.PipeSecurity>объекта.</xref:System.IO.Pipes.PipeSecurity> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.AccessControlType>  Например, можно использовать этот метод для удаления указанного <xref:System.Security.AccessControl.AccessControlType>правило аудита для пользователя, передавая <xref:System.Security.AccessControl.FileSystemAuditRule>объектом, созданным с помощью <xref:System.Security.AccessControl.AccessControlType>значение, <xref:System.Security.AccessControl.AuditFlags>значение и учетной записи пользователя.</xref:System.Security.AccessControl.AuditFlags> </xref:System.Security.AccessControl.AccessControlType> </xref:System.Security.AccessControl.FileSystemAuditRule> </xref:System.Security.AccessControl.AccessControlType>  При этом метод RemoveAuditRuleSpecific удаляет только запрещающее правило, которое указывает <xref:System.Security.AccessControl.AuditFlags>значение.</xref:System.Security.AccessControl.AuditFlags>  Не удаляет любые deny правила, определяющие <xref:System.Security.AccessControl.AuditFlags>значение.</xref:System.Security.AccessControl.AuditFlags>"
  syntax:
    content: public void RemoveAuditRuleSpecific (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Удаляемое правило аудита."
  overload: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Удаляет все правила доступа в списке управления доступом на уровне пользователей (DACL), связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта, а затем добавляет указанное правило доступа."
  remarks: "Метод ResetAccessRule добавляет правило списка управления Доступом управления указанным доступом или перезаписывает все одинаковые правила списка управления Доступом, соответствующие `rule` параметра.  Например если `rule` указывает <xref:System.IO.Pipes.PipeAccessRights>значение, а также метод ResetAccessRule находит идентичного правила списка управления Доступом, указывающее <xref:System.IO.Pipes.PipeAccessRights>значения, идентичного правила будут перезаписаны.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Если метод ResetAccessRule находит идентичного правила списка управления Доступом, указывающий <xref:System.IO.Pipes.PipeAccessRights>значения, идентичного правила также будут перезаписаны.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void ResetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Изменяемое правило доступа."
  overload: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  id: SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Задает правило доступа в список управления доступом на уровне пользователей (DACL), связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: "Метод SetAccessRule добавляет правило списка управления Доступом управления указанным доступом или перезаписывает все одинаковые правила списка управления Доступом, соответствующие <xref:System.IO.Pipes.PipeAccessRights>значение `rule` параметр.</xref:System.IO.Pipes.PipeAccessRights>  Например если `rule` указывает <xref:System.IO.Pipes.PipeAccessRights>значение и метод SetAccessRule находит идентичного правила списка управления Доступом, указывающее <xref:System.IO.Pipes.PipeAccessRights>значения, идентичного правила будут перезаписаны.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Если метод SetAccessRule находит идентичного правила списка управления Доступом, указывающий <xref:System.IO.Pipes.PipeAccessRights>значения, идентичного правила не будут перезаписаны.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAccessRule (System.IO.Pipes.PipeAccessRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAccessRule
      description: "Правило для установки."
  overload: System.IO.Pipes.PipeSecurity.SetAccessRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  id: SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  langs:
  - csharp
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Задает правило аудита в системе управления доступом список (SACL), связанного с текущим <xref href=&quot;System.IO.Pipes.PipeSecurity&quot;> </xref> объекта."
  remarks: "Метод SetAuditRule добавляет указанное правило аудита или перезаписывает все правила аудита идентичными, соответствующих <xref:System.IO.Pipes.PipeAccessRights>значение `rule` параметр.</xref:System.IO.Pipes.PipeAccessRights>  Например если `rule` указывает <xref:System.IO.Pipes.PipeAccessRights>значение, а также метод SetAuditRule находит правило идентичные аудита, указывающее <xref:System.IO.Pipes.PipeAccessRights>значения, идентичного правила будут перезаписаны.</xref:System.IO.Pipes.PipeAccessRights> </xref:System.IO.Pipes.PipeAccessRights>  Если метод SetAuditRule находит правило аудита идентичными, указывающий <xref:System.IO.Pipes.PipeAccessRights>значения, идентичного правила не будут перезаписаны.</xref:System.IO.Pipes.PipeAccessRights>"
  syntax:
    content: public void SetAuditRule (System.IO.Pipes.PipeAuditRule rule);
    parameters:
    - id: rule
      type: System.IO.Pipes.PipeAuditRule
      description: "Правило для установки."
  overload: System.IO.Pipes.PipeSecurity.SetAuditRule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>rule</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Security.AccessControl.NativeObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.NativeObjectSecurity
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.IO.Pipes.PipeSecurity.#ctor
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity()
  nameWithType: PipeSecurity.PipeSecurity()
  fullName: System.IO.Pipes.PipeSecurity.PipeSecurity()
- uid: System.IO.Pipes.PipeSecurity.AccessRightType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
  fullName: System.IO.Pipes.PipeSecurity.AccessRightType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  nameWithType: PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AccessControlType)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.InheritanceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: InheritanceFlags
  nameWithType: InheritanceFlags
  fullName: System.Security.AccessControl.InheritanceFlags
- uid: System.Security.AccessControl.PropagationFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: PropagationFlags
  nameWithType: PropagationFlags
  fullName: System.Security.AccessControl.PropagationFlags
- uid: System.Security.AccessControl.AccessControlType
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlType
  nameWithType: AccessControlType
  fullName: System.Security.AccessControl.AccessControlType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
  fullName: System.IO.Pipes.PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.AddAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeAccessRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAccessRule
  nameWithType: PipeAccessRule
  fullName: System.IO.Pipes.PipeAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.AddAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.AddAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeAuditRule
  parent: System.IO.Pipes
  isExternal: false
  name: PipeAuditRule
  nameWithType: PipeAuditRule
  fullName: System.IO.Pipes.PipeAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  nameWithType: PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleFactory(IdentityReference,Int32,Boolean,InheritanceFlags,PropagationFlags,AuditFlags)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.AuditFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditFlags
  nameWithType: AuditFlags
  fullName: System.Security.AccessControl.AuditFlags
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
  fullName: System.IO.Pipes.PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist(System.Runtime.InteropServices.SafeHandle)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(SafeHandle)
  nameWithType: PipeSecurity.Persist(SafeHandle)
  fullName: System.IO.Pipes.PipeSecurity.Persist(SafeHandle)
- uid: System.Runtime.InteropServices.SafeHandle
  parent: System.Runtime.InteropServices
  isExternal: true
  name: SafeHandle
  nameWithType: SafeHandle
  fullName: System.Runtime.InteropServices.SafeHandle
- uid: System.IO.Pipes.PipeSecurity.Persist(System.String)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist(String)
  nameWithType: PipeSecurity.Persist(String)
  fullName: System.IO.Pipes.PipeSecurity.Persist(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(PipeAccessRule)
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(PipeAuditRule)
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.ResetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.ResetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule(System.IO.Pipes.PipeAccessRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule(PipeAccessRule)
  nameWithType: PipeSecurity.SetAccessRule(PipeAccessRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAccessRule(PipeAccessRule)
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule(System.IO.Pipes.PipeAuditRule)
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule(PipeAuditRule)
  nameWithType: PipeSecurity.SetAuditRule(PipeAuditRule)
  fullName: System.IO.Pipes.PipeSecurity.SetAuditRule(PipeAuditRule)
- uid: System.IO.Pipes.PipeSecurity.#ctor*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity.PipeSecurity
- uid: System.IO.Pipes.PipeSecurity.AccessRightType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRightType
  nameWithType: PipeSecurity.AccessRightType
- uid: System.IO.Pipes.PipeSecurity.AccessRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleFactory
  nameWithType: PipeSecurity.AccessRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AccessRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AccessRuleType
  nameWithType: PipeSecurity.AccessRuleType
- uid: System.IO.Pipes.PipeSecurity.AddAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: PipeSecurity.AddAccessRule
- uid: System.IO.Pipes.PipeSecurity.AddAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: PipeSecurity.AddAuditRule
- uid: System.IO.Pipes.PipeSecurity.AuditRuleFactory*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleFactory
  nameWithType: PipeSecurity.AuditRuleFactory
- uid: System.IO.Pipes.PipeSecurity.AuditRuleType*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: AuditRuleType
  nameWithType: PipeSecurity.AuditRuleType
- uid: System.IO.Pipes.PipeSecurity.Persist*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: Persist
  nameWithType: PipeSecurity.Persist
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: PipeSecurity.RemoveAccessRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAccessRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: PipeSecurity.RemoveAccessRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: PipeSecurity.RemoveAuditRule
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleAll*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: PipeSecurity.RemoveAuditRuleAll
- uid: System.IO.Pipes.PipeSecurity.RemoveAuditRuleSpecific*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: PipeSecurity.RemoveAuditRuleSpecific
- uid: System.IO.Pipes.PipeSecurity.ResetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: PipeSecurity.ResetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAccessRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: PipeSecurity.SetAccessRule
- uid: System.IO.Pipes.PipeSecurity.SetAuditRule*
  parent: System.IO.Pipes.PipeSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: PipeSecurity.SetAuditRule
