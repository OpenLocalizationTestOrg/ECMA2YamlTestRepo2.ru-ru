### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.Evidence
  id: Evidence
  children:
  - System.Security.Policy.Evidence.#ctor
  - System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  - System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  - System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  - System.Security.Policy.Evidence.AddAssembly(System.Object)
  - System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  - System.Security.Policy.Evidence.AddHost(System.Object)
  - System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  - System.Security.Policy.Evidence.Clear
  - System.Security.Policy.Evidence.Clone
  - System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  - System.Security.Policy.Evidence.Count
  - System.Security.Policy.Evidence.GetAssemblyEnumerator
  - System.Security.Policy.Evidence.GetAssemblyEvidence``1
  - System.Security.Policy.Evidence.GetEnumerator
  - System.Security.Policy.Evidence.GetHostEnumerator
  - System.Security.Policy.Evidence.GetHostEvidence``1
  - System.Security.Policy.Evidence.IsReadOnly
  - System.Security.Policy.Evidence.IsSynchronized
  - System.Security.Policy.Evidence.Locked
  - System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  - System.Security.Policy.Evidence.RemoveType(System.Type)
  - System.Security.Policy.Evidence.SyncRoot
  langs:
  - csharp
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
  type: Class
  summary: "Определяет набор сведений, используемых для принятия решений политики безопасности. Этот класс не наследуется."
  remarks: "Общая форма свидетельства содержит подписи и расположение исходного кода, но потенциально может быть любым. Объекты любого типа, распознаваемые политикой безопасности, представляют свидетельство.       Политика безопасности состоит из групп кода; определенная сборка (базовая единица для предоставления разрешений безопасности) является членом группы кода, если она удовлетворяет условию членства группы кода. Свидетельство — это набор входных данных для политики, условия членства для определения, к какой группе принадлежит сборки.       Класс свидетельство — это коллекция (см. <xref:System.Collections.ICollection>), содержащий набор объектов, представляющих свидетельство.</xref:System.Collections.ICollection> Этот класс содержит два набора, относящихся к источнику свидетельства: свидетельство узла и свидетельство сборки.       Политика может получить свидетельство из двух различных источников, при проверке разрешений для кода.      - `Host evidence` предоставленный средой размещения и может быть предоставлено только узлы, которые были предоставлены <xref:System.Security.Permissions.SecurityPermissionFlag>разрешение.</xref:System.Security.Permissions.SecurityPermissionFlag> Обычно это свидетельство источника кода и цифровые подписи в сборку. Свидетельство о происхождении обычно включает <xref:System.Security.Policy.Url>, <xref:System.Security.Policy.Site>, и <xref:System.Security.Policy.Zone>свидетельство.</xref:System.Security.Policy.Zone> </xref:System.Security.Policy.Site> </xref:System.Security.Policy.Url> Подписи, относящиеся к издателю программного обеспечения (подпись AuthentiCode X.509v3) и удостоверения строгого имени. Оба вида цифрового удостоверения на основе подписи встраиваются в сборку, но необходимо проверить и передаваемые политики сервера. При загрузке системы безопасности проверяет подпись. Затем система создает соответствующее свидетельство и передает его политике только в том случае, если соответствующая подпись допустима.      - `Assembly evidence` является частью самой сборки. Разработчики и Администраторы могут присоединять пользовательские свидетельства к сборке, для расширения набора свидетельств для политики. Свидетельство сборки могут добавляться только во время создания сборки, которая выполняется до подписания сборки. Политика системы безопасности по умолчанию игнорирует свидетельства, поставляемые со сборкой, но политика может быть расширена для приема."
  example:
  - "The following code example demonstrates how to create new Evidence classes with both host evidence and assembly evidence.  \n  \n [!code-vb[System.Security.Policy.Evidence#1](~/add/codesnippet/visualbasic/t-system.security.policy_1_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#1](~/add/codesnippet/cpp/t-system.security.policy_1_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#1](~/add/codesnippet/csharp/t-system.security.policy_1_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class Evidence : System.Collections.ICollection
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor
  id: '#ctor'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence()
  nameWithType: Evidence.Evidence()
  fullName: System.Security.Policy.Evidence.Evidence()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Инициализирует новый пустой экземпляр <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#15](~/add/codesnippet/visualbasic/m-system.security.policy_14_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#15](~/add/codesnippet/cpp/m-system.security.policy_14_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#15](~/add/codesnippet/csharp/m-system.security.policy_14_1.cs)]"
  syntax:
    content: public Evidence ();
    parameters: []
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  id: '#ctor(System.Security.Policy.Evidence)'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(Evidence)
  nameWithType: Evidence.Evidence(Evidence)
  fullName: System.Security.Policy.Evidence.Evidence(Evidence)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> класс из неполную копию существующего."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#12](~/add/codesnippet/visualbasic/m-system.security.policy_31_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#12](~/add/codesnippet/cpp/m-system.security.policy_31_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#12](~/add/codesnippet/csharp/m-system.security.policy_31_1.cs)]"
  syntax:
    content: public Evidence (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "<xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> Экземпляр, из которого создается новый экземпляр. Этот экземпляр не является прямая копией."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> evidence </code> Параметр не является допустимым экземпляром <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  id: '#ctor(System.Object[],System.Object[])'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(Object[],Object[])
  nameWithType: Evidence.Evidence(Object[],Object[])
  fullName: System.Security.Policy.Evidence.Evidence(Object[],Object[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> класса из нескольких наборов свидетельство узла и сборки."
  remarks: ''
  example:
  - "The following code example shows the use of the Evidence constructor. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#3](~/add/codesnippet/visualbasic/m-system.security.policy_2_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#3](~/add/codesnippet/cpp/m-system.security.policy_2_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#3](~/add/codesnippet/csharp/m-system.security.policy_2_1.cs)]"
  syntax:
    content: public Evidence (object[] hostEvidence, object[] assemblyEvidence);
    parameters:
    - id: hostEvidence
      type: System.Object[]
      description: "Свидетельство узла, которое используется для создания нового экземпляра."
    - id: assemblyEvidence
      type: System.Object[]
      description: "Свидетельство сборки, которое используется для создания нового экземпляра."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  id: '#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])'
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Evidence(EvidenceBase[],EvidenceBase[])
  nameWithType: Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  fullName: System.Security.Policy.Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> класса из нескольких наборов свидетельство узла и сборки."
  remarks: "Этот конструктор создает новый экземпляр класса с помощью объектов свидетельства, которые наследуют от <xref:System.Security.Policy.EvidenceBase>класса.</xref:System.Security.Policy.EvidenceBase>"
  syntax:
    content: public Evidence (System.Security.Policy.EvidenceBase[] hostEvidence, System.Security.Policy.EvidenceBase[] assemblyEvidence);
    parameters:
    - id: hostEvidence
      type: System.Security.Policy.EvidenceBase[]
      description: "Свидетельство узла, которое используется для создания нового экземпляра."
    - id: assemblyEvidence
      type: System.Security.Policy.EvidenceBase[]
      description: "Свидетельство сборки, которое используется для создания нового экземпляра."
  overload: System.Security.Policy.Evidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddAssembly(System.Object)
  id: AddAssembly(System.Object)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddAssembly(Object)
  nameWithType: Evidence.AddAssembly(Object)
  fullName: System.Security.Policy.Evidence.AddAssembly(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Добавляет указанное свидетельство сборки к набору свидетельств."
  remarks: "Используйте этот метод для свидетельства, производного от сборки.      Настроек [!NOTE] настроек этот метод не выполняет проверку, чтобы предотвратить добавление дублирующих типов свидетельства. Одновременно может существовать несколько объектов свидетельств сборки."
  example:
  - "The following code example shows the use of the AddAssembly method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#4](~/add/codesnippet/visualbasic/m-system.security.policy_12_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#4](~/add/codesnippet/cpp/m-system.security.policy_12_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#4](~/add/codesnippet/csharp/m-system.security.policy_12_1.cs)]"
  syntax:
    content: public void AddAssembly (object id);
    parameters:
    - id: id
      type: System.Object
      description: "Любой объект свидетельства."
  overload: System.Security.Policy.Evidence.AddAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>имеет значение null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>id</code>не является сериализуемым."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  id: AddAssemblyEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddAssemblyEvidence(T)
  nameWithType: Evidence.AddAssemblyEvidence(T)
  fullName: System.Security.Policy.Evidence.AddAssemblyEvidence(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public void AddAssemblyEvidence<T> (T evidence) where T : System.Security.Policy.EvidenceBase;'
    parameters:
    - id: evidence
      type: T
      description: "Для добавления."
  overload: System.Security.Policy.Evidence.AddAssemblyEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddHost(System.Object)
  id: AddHost(System.Object)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddHost(Object)
  nameWithType: Evidence.AddHost(Object)
  fullName: System.Security.Policy.Evidence.AddHost(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Добавляет заданное свидетельство, предоставляемое узлом для набора свидетельств."
  remarks: "Используйте этот метод для свидетельство, предоставляемое узлом.      Настроек [!NOTE] настроек этот метод не выполняет проверку, чтобы предотвратить добавление дублирующих типов свидетельства. Многие размещения свидетельства объекты могут существовать одновременно."
  example:
  - "The following code example shows the use of the AddHost method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#2](~/add/codesnippet/visualbasic/m-system.security.policy_20_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#2](~/add/codesnippet/cpp/m-system.security.policy_20_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#2](~/add/codesnippet/csharp/m-system.security.policy_20_1.cs)]"
  syntax:
    content: public void AddHost (object id);
    parameters:
    - id: id
      type: System.Object
      description: "Любой объект свидетельства."
  overload: System.Security.Policy.Evidence.AddHost*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>имеет значение null."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>id</code>не является сериализуемым."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  id: AddHostEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: AddHostEvidence(T)
  nameWithType: Evidence.AddHostEvidence(T)
  fullName: System.Security.Policy.Evidence.AddHostEvidence(T)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public void AddHostEvidence<T> (T evidence) where T : System.Security.Policy.EvidenceBase;'
    parameters:
    - id: evidence
      type: T
      description: "Для добавления."
  overload: System.Security.Policy.Evidence.AddHostEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Clear
  id: Clear
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Clear()
  nameWithType: Evidence.Clear()
  fullName: System.Security.Policy.Evidence.Clear()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Удаляет из набора свидетельств свидетельство узла и сборки."
  remarks: "CLEAR Удаляет свидетельство в перечислениях узла и сборки, установите значение оба `null`."
  example:
  - "The following code example shows the use of the Clear method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#13](~/add/codesnippet/visualbasic/m-system.security.policy_16_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#13](~/add/codesnippet/cpp/m-system.security.policy_16_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#13](~/add/codesnippet/csharp/m-system.security.policy_16_1.cs)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Security.Policy.Evidence.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Clone
  id: Clone
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Clone()
  nameWithType: Evidence.Clone()
  fullName: System.Security.Policy.Evidence.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает копию данного объекта свидетельства."
  remarks: "Копия-дубликат — полная копия, которая включает все объекты свидетельств в коллекции."
  syntax:
    content: public System.Security.Policy.Evidence Clone ();
    parameters: []
    return:
      type: System.Security.Policy.Evidence
      description: "Резервную копию данного объекта свидетельства."
  overload: System.Security.Policy.Evidence.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: Evidence.CopyTo(Array,Int32)
  fullName: System.Security.Policy.Evidence.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Копирует свидетельства объекты на <xref:System.Array>.</xref:System.Array>"
  remarks: ''
  example:
  - "The following code example shows the use of the CopyTo method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#6](~/add/codesnippet/visualbasic/m-system.security.policy_0_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#6](~/add/codesnippet/cpp/m-system.security.policy_0_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#6](~/add/codesnippet/csharp/m-system.security.policy_0_1.cs)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Массив, в который копируются объекты свидетельств."
    - id: index
      type: System.Int32
      description: "Отсчитываемая от нуля позиция в массиве, с которой начинается копирование объектов свидетельства."
  overload: System.Security.Policy.Evidence.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>имеет значение null."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index </code>выходит за пределы диапазона целевого массива<code>.</code>"
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Count
  id: Count
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Count
  nameWithType: Evidence.Count
  fullName: System.Security.Policy.Evidence.Count
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Получает число объектов свидетельств в наборе свидетельств."
  remarks: ''
  example:
  - "The following code example shows the use of the Count property. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#12](~/add/codesnippet/visualbasic/p-system.security.policy_13_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#12](~/add/codesnippet/cpp/p-system.security.policy_13_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#12](~/add/codesnippet/csharp/p-system.security.policy_13_1.cs)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "Число свидетельств в наборе свидетельств."
  overload: System.Security.Policy.Evidence.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator
  id: GetAssemblyEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetAssemblyEnumerator()
  nameWithType: Evidence.GetAssemblyEnumerator()
  fullName: System.Security.Policy.Evidence.GetAssemblyEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Перечисляет свидетельств, предоставленных сборкой."
  remarks: ''
  example:
  - "The following example shows the use of the GetAssemblyEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#3](~/add/codesnippet/visualbasic/m-system.security.policy_22_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#3](~/add/codesnippet/cpp/m-system.security.policy_22_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#3](~/add/codesnippet/csharp/m-system.security.policy_22_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetAssemblyEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Перечислитель для свидетельства, добавленного <xref:System.Security.Policy.Evidence.AddAssembly*>метод.</xref:System.Security.Policy.Evidence.AddAssembly*>"
  overload: System.Security.Policy.Evidence.GetAssemblyEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence``1
  id: GetAssemblyEvidence``1
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetAssemblyEvidence()
  nameWithType: Evidence.GetAssemblyEvidence()
  fullName: System.Security.Policy.Evidence.GetAssemblyEvidence()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public T GetAssemblyEvidence<T> () where T : System.Security.Policy.EvidenceBase;'
    parameters: []
    return:
      type: T
      description: "Для добавления."
  overload: System.Security.Policy.Evidence.GetAssemblyEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetEnumerator
  id: GetEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Evidence.GetEnumerator()
  fullName: System.Security.Policy.Evidence.GetEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Перечисляет все свидетельство в наборе, предоставленный средой размещения и, предоставленные сборке."
  remarks: ''
  example:
  - "The following code example shows the use of the GetEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#14](~/add/codesnippet/visualbasic/m-system.security.policy_5_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#14](~/add/codesnippet/cpp/m-system.security.policy_5_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#14](~/add/codesnippet/csharp/m-system.security.policy_5_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Перечислитель для свидетельства, добавленного <> </> *настроек метод и <> </> *настроек метод."
  overload: System.Security.Policy.Evidence.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetHostEnumerator
  id: GetHostEnumerator
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetHostEnumerator()
  nameWithType: Evidence.GetHostEnumerator()
  fullName: System.Security.Policy.Evidence.GetHostEnumerator()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Перечисляет свидетельство, предоставляемое узлом."
  remarks: ''
  example:
  - "The following example shows the use of the GetHostEnumerator method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#2](~/add/codesnippet/visualbasic/m-system.security.policy_35_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#2](~/add/codesnippet/cpp/m-system.security.policy_35_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#2](~/add/codesnippet/csharp/m-system.security.policy_35_1.cs)]"
  syntax:
    content: public System.Collections.IEnumerator GetHostEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Перечислитель для свидетельства, добавленного <xref:System.Security.Policy.Evidence.AddHost*>метод.</xref:System.Security.Policy.Evidence.AddHost*>"
  overload: System.Security.Policy.Evidence.GetHostEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.GetHostEvidence``1
  id: GetHostEvidence``1
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: GetHostEvidence()
  nameWithType: Evidence.GetHostEvidence()
  fullName: System.Security.Policy.Evidence.GetHostEvidence()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  syntax:
    content: 'public T GetHostEvidence<T> () where T : System.Security.Policy.EvidenceBase;'
    parameters: []
    return:
      type: T
      description: "Для добавления."
  overload: System.Security.Policy.Evidence.GetHostEvidence<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.IsReadOnly
  id: IsReadOnly
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
  fullName: System.Security.Policy.Evidence.IsReadOnly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает значение, указывающее, является ли набор свидетельств только для чтения."
  remarks: "Код приложения обычно не использует это свойство."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Всегда <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, так как не поддерживаются только для чтения свидетельства."
  overload: System.Security.Policy.Evidence.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.IsSynchronized
  id: IsSynchronized
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
  fullName: System.Security.Policy.Evidence.IsSynchronized
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает значение, указывающее, является ли набор свидетельств потокобезопасным."
  remarks: "Код приложения обычно не использует это свойство."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Всегда <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> поскольку потокобезопасные свидетельства не поддерживаются."
  overload: System.Security.Policy.Evidence.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Locked
  id: Locked
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Locked
  nameWithType: Evidence.Locked
  fullName: System.Security.Policy.Evidence.Locked
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Возвращает или задает значение, указывающее, заблокирован ли свидетельство."
  remarks: ''
  example:
  - "The following code example shows the use of the Locked property. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#7](~/add/codesnippet/visualbasic/p-system.security.policy_2_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#7](~/add/codesnippet/cpp/p-system.security.policy_2_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#7](~/add/codesnippet/csharp/p-system.security.policy_2_1.cs)]"
  syntax:
    content: public bool Locked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свидетельство заблокирован; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.Evidence.Locked*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  id: Merge(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: Merge(Evidence)
  nameWithType: Evidence.Merge(Evidence)
  fullName: System.Security.Policy.Evidence.Merge(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Выполняет слияние указанного набора текущего набора свидетельств свидетельств."
  remarks: "Каждый объект свидетельства в указанном наборе свидетельств добавляется к наборам сборки или узла текущего набора свидетельств, в зависимости от наборов, из которых он поступил.      Настроек [!NOTE] настроек этот метод не выполняет проверку, чтобы предотвратить добавление дублирующих типов свидетельства. Одновременно может существовать несколько сборки и объектов свидетельств узла."
  example:
  - "The following code example shows the use of the Merge method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#10](~/add/codesnippet/visualbasic/m-system.security.policy_9_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#10](~/add/codesnippet/cpp/m-system.security.policy_9_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#10](~/add/codesnippet/csharp/m-system.security.policy_9_1.cs)]"
  syntax:
    content: public void Merge (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Набор свидетельств, объединяемые в текущего набора свидетельств."
  overload: System.Security.Policy.Evidence.Merge*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code> evidence </code> Параметр не является допустимым экземпляром <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref>."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "<xref:System.Security.Policy.Evidence.Locked*>— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, код, который вызывает этот метод не имеет <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref>и <code> evidence </code> имеет список узлов, не являющийся пустым.</xref:System.Security.Policy.Evidence.Locked*>"
  platform:
  - net462
- uid: System.Security.Policy.Evidence.RemoveType(System.Type)
  id: RemoveType(System.Type)
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: RemoveType(Type)
  nameWithType: Evidence.RemoveType(Type)
  fullName: System.Security.Policy.Evidence.RemoveType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Удаляет свидетельство для данного типа из перечислителей узла и сборки."
  remarks: "Результаты выполнения метода RemoveType может быть подтверждена с помощью <xref:System.Security.Policy.Evidence.GetAssemblyEnumerator%2A>метод и <xref:System.Security.Policy.Evidence.GetHostEnumerator%2A>метод.</xref:System.Security.Policy.Evidence.GetHostEnumerator%2A> </xref:System.Security.Policy.Evidence.GetAssemblyEnumerator%2A>"
  example:
  - "The following code example shows the use of the RemoveType method. This example is part of a larger example provided for the <xref:System.Security.Policy.Evidence> class.  \n  \n [!code-vb[System.Security.Policy.Evidence#11](~/add/codesnippet/visualbasic/m-system.security.policy_36_1.vb)]\n [!code-cpp[System.Security.Policy.Evidence#11](~/add/codesnippet/cpp/m-system.security.policy_36_1.cpp)]\n [!code-cs[System.Security.Policy.Evidence#11](~/add/codesnippet/csharp/m-system.security.policy_36_1.cs)]"
  syntax:
    content: public void RemoveType (Type t);
    parameters:
    - id: t
      type: System.Type
      description: "Тип свидетельства для удаления."
  overload: System.Security.Policy.Evidence.RemoveType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>t</code>имеет значение null."
  platform:
  - net462
- uid: System.Security.Policy.Evidence.SyncRoot
  id: SyncRoot
  parent: System.Security.Policy.Evidence
  langs:
  - csharp
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
  fullName: System.Security.Policy.Evidence.SyncRoot
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Получает корень синхронизации."
  remarks: "Это свойство обычно не используется кодом приложения."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Всегда <xref uid=&quot;langword_csharp_this&quot; name=&quot;this&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Me&quot; name=&quot;Me&quot; href=&quot;&quot;> </xref> в Visual Basic), так как синхронизация наборов свидетельств не поддерживается."
  overload: System.Security.Policy.Evidence.SyncRoot*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Security.Policy.Evidence.#ctor
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence()
  nameWithType: Evidence.Evidence()
  fullName: System.Security.Policy.Evidence.Evidence()
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(Evidence)
  nameWithType: Evidence.Evidence(Evidence)
  fullName: System.Security.Policy.Evidence.Evidence(Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.Evidence.#ctor(System.Object[],System.Object[])
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(Object[],Object[])
  nameWithType: Evidence.Evidence(Object[],Object[])
  fullName: System.Security.Policy.Evidence.Evidence(Object[],Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.Evidence.#ctor(System.Security.Policy.EvidenceBase[],System.Security.Policy.EvidenceBase[])
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence(EvidenceBase[],EvidenceBase[])
  nameWithType: Evidence.Evidence(EvidenceBase[],EvidenceBase[])
  fullName: System.Security.Policy.Evidence.Evidence(EvidenceBase[],EvidenceBase[])
- uid: System.Security.Policy.EvidenceBase[]
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase[]
  spec.csharp:
  - uid: System.Security.Policy.EvidenceBase
    name: EvidenceBase
    nameWithType: EvidenceBase
    fullName: EvidenceBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Policy.Evidence.AddAssembly(System.Object)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssembly(Object)
  nameWithType: Evidence.AddAssembly(Object)
  fullName: System.Security.Policy.Evidence.AddAssembly(Object)
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssemblyEvidence(T)
  nameWithType: Evidence.AddAssemblyEvidence(T)
  fullName: System.Security.Policy.Evidence.AddAssemblyEvidence(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Security.Policy.Evidence.AddHost(System.Object)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHost(Object)
  nameWithType: Evidence.AddHost(Object)
  fullName: System.Security.Policy.Evidence.AddHost(Object)
- uid: System.Security.Policy.Evidence.AddHostEvidence``1(``0)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHostEvidence(T)
  nameWithType: Evidence.AddHostEvidence(T)
  fullName: System.Security.Policy.Evidence.AddHostEvidence(T)
- uid: System.Security.Policy.Evidence.Clear
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clear()
  nameWithType: Evidence.Clear()
  fullName: System.Security.Policy.Evidence.Clear()
- uid: System.Security.Policy.Evidence.Clone
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clone()
  nameWithType: Evidence.Clone()
  fullName: System.Security.Policy.Evidence.Clone()
- uid: System.Security.Policy.Evidence.CopyTo(System.Array,System.Int32)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: Evidence.CopyTo(Array,Int32)
  fullName: System.Security.Policy.Evidence.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.Evidence.Count
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Count
  nameWithType: Evidence.Count
  fullName: System.Security.Policy.Evidence.Count
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEnumerator()
  nameWithType: Evidence.GetAssemblyEnumerator()
  fullName: System.Security.Policy.Evidence.GetAssemblyEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence``1
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEvidence()
  nameWithType: Evidence.GetAssemblyEvidence()
  fullName: System.Security.Policy.Evidence.GetAssemblyEvidence()
- uid: System.Security.Policy.Evidence.GetEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetEnumerator()
  nameWithType: Evidence.GetEnumerator()
  fullName: System.Security.Policy.Evidence.GetEnumerator()
- uid: System.Security.Policy.Evidence.GetHostEnumerator
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEnumerator()
  nameWithType: Evidence.GetHostEnumerator()
  fullName: System.Security.Policy.Evidence.GetHostEnumerator()
- uid: System.Security.Policy.Evidence.GetHostEvidence``1
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEvidence()
  nameWithType: Evidence.GetHostEvidence()
  fullName: System.Security.Policy.Evidence.GetHostEvidence()
- uid: System.Security.Policy.Evidence.IsReadOnly
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
  fullName: System.Security.Policy.Evidence.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.Evidence.IsSynchronized
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
  fullName: System.Security.Policy.Evidence.IsSynchronized
- uid: System.Security.Policy.Evidence.Locked
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Locked
  nameWithType: Evidence.Locked
  fullName: System.Security.Policy.Evidence.Locked
- uid: System.Security.Policy.Evidence.Merge(System.Security.Policy.Evidence)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Merge(Evidence)
  nameWithType: Evidence.Merge(Evidence)
  fullName: System.Security.Policy.Evidence.Merge(Evidence)
- uid: System.Security.Policy.Evidence.RemoveType(System.Type)
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: RemoveType(Type)
  nameWithType: Evidence.RemoveType(Type)
  fullName: System.Security.Policy.Evidence.RemoveType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Policy.Evidence.SyncRoot
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
  fullName: System.Security.Policy.Evidence.SyncRoot
- uid: System.Security.Policy.Evidence.#ctor*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Evidence
  nameWithType: Evidence.Evidence
- uid: System.Security.Policy.Evidence.AddAssembly*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssembly
  nameWithType: Evidence.AddAssembly
- uid: System.Security.Policy.Evidence.AddAssemblyEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddAssemblyEvidence<T>
  nameWithType: Evidence.AddAssemblyEvidence<T>
- uid: System.Security.Policy.Evidence.AddHost*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHost
  nameWithType: Evidence.AddHost
- uid: System.Security.Policy.Evidence.AddHostEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: AddHostEvidence<T>
  nameWithType: Evidence.AddHostEvidence<T>
- uid: System.Security.Policy.Evidence.Clear*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clear
  nameWithType: Evidence.Clear
- uid: System.Security.Policy.Evidence.Clone*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Clone
  nameWithType: Evidence.Clone
- uid: System.Security.Policy.Evidence.CopyTo*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: CopyTo
  nameWithType: Evidence.CopyTo
- uid: System.Security.Policy.Evidence.Count*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Count
  nameWithType: Evidence.Count
- uid: System.Security.Policy.Evidence.GetAssemblyEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEnumerator
  nameWithType: Evidence.GetAssemblyEnumerator
- uid: System.Security.Policy.Evidence.GetAssemblyEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetAssemblyEvidence<T>
  nameWithType: Evidence.GetAssemblyEvidence<T>
- uid: System.Security.Policy.Evidence.GetEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetEnumerator
  nameWithType: Evidence.GetEnumerator
- uid: System.Security.Policy.Evidence.GetHostEnumerator*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEnumerator
  nameWithType: Evidence.GetHostEnumerator
- uid: System.Security.Policy.Evidence.GetHostEvidence<T>*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: GetHostEvidence<T>
  nameWithType: Evidence.GetHostEvidence<T>
- uid: System.Security.Policy.Evidence.IsReadOnly*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsReadOnly
  nameWithType: Evidence.IsReadOnly
- uid: System.Security.Policy.Evidence.IsSynchronized*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: IsSynchronized
  nameWithType: Evidence.IsSynchronized
- uid: System.Security.Policy.Evidence.Locked*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Locked
  nameWithType: Evidence.Locked
- uid: System.Security.Policy.Evidence.Merge*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: Merge
  nameWithType: Evidence.Merge
- uid: System.Security.Policy.Evidence.RemoveType*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: RemoveType
  nameWithType: Evidence.RemoveType
- uid: System.Security.Policy.Evidence.SyncRoot*
  parent: System.Security.Policy.Evidence
  isExternal: false
  name: SyncRoot
  nameWithType: Evidence.SyncRoot
