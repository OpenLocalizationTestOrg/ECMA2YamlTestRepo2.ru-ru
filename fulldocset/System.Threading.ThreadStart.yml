### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadStart
  id: ThreadStart
  langs:
  - csharp
  name: ThreadStart
  nameWithType: ThreadStart
  fullName: System.Threading.ThreadStart
  type: Delegate
  summary: "Представляет метод, который выполняется на <xref href=&quot;System.Threading.Thread&quot;> </xref>."
  remarks: "При создании управляемого потока, метод, который выполняется в потоке представлен делегатом ThreadStart или <xref:System.Threading.ParameterizedThreadStart>делегат, который передается <xref:System.Threading.Thread.%23ctor%2A>конструктор.</xref:System.Threading.Thread.%23ctor%2A> </xref:System.Threading.ParameterizedThreadStart> Поток не запускается до <xref:System.Threading.Thread.Start%2A?displayProperty=fullName>вызывается метод.</xref:System.Threading.Thread.Start%2A?displayProperty=fullName> Начинается выполнение в первой строке метода, представленного ThreadStart или <xref:System.Threading.ParameterizedThreadStart>делегировать.</xref:System.Threading.ParameterizedThreadStart>      Настроек [!NOTE] настроек пользователей Visual Basic и C# можно опустить ThreadStart или <xref:System.Threading.ParameterizedThreadStart>конструктора делегата при создании потока.</xref:System.Threading.ParameterizedThreadStart> В Visual Basic, используйте `AddressOf` оператор при передаче в метод <xref:System.Threading.Thread.%23ctor%2A>конструктор, например `Dim t As New Thread(AddressOf ThreadProc)`.</xref:System.Threading.Thread.%23ctor%2A> В C# просто укажите имя процедуры потока. Компилятор выбирает соответствующий конструктор делегата.       [C++] настроек [!NOTE] настроек в версии 2.0 платформы .NET Framework, создание делегатом ThreadStart для статического метода C++ требуется только один параметр: адрес метода обратного вызова, дополненное имя класса. В более ранних версиях требовалось два параметра при создании делегата для статического метода:&0; (ноль) и адрес метода. Для метода экземпляра, все версии требуются два параметра: переменная экземпляра и адрес метода."
  example:
  - "The following code example shows the syntax for creating and using a ThreadStart delegate with an instance method and with a static method.  \n  \n For another simple example that demonstrates how to create a ThreadStart delegate, see the <xref:System.Threading.Thread.Start?displayProperty=fullName> method overload. For more information about thread creation, see [Creating Threads and Passing Data at Start Time](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cpp[System.Threading.ThreadStart2#1](~/add/codesnippet/cpp/t-system.threading.threa_6_1.cpp)]\n [!code-cs[System.Threading.ThreadStart2#1](~/add/codesnippet/csharp/t-system.threading.threa_6_1.cs)]\n [!code-vb[System.Threading.ThreadStart2#1](~/add/codesnippet/visualbasic/t-system.threading.threa_6_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public delegate void ThreadStart();
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
