### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  id: HttpRemotingHandler
  children:
  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor
  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor(System.Type,System.Object)
  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
  - System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: HttpRemotingHandler
  nameWithType: HttpRemotingHandler
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  type: Class
  summary: "Реализует обработчик ASP.NET, который перенаправляет запросы на канал удаленного взаимодействия HTTP."
  remarks: "Пользовательские обработчики HTTP обработки заранее определенных типов HTTP-запросов. Исполняемый код, определенный в <xref:System.Web.IHttpHandler>классов, а не обычных страницах ASP или ASP.NET Web, отвечает на эти определенные запросы.</xref:System.Web.IHttpHandler> Обработчики HTTP-данных обеспечивают взаимодействие с запросом низкого уровня и сервисами IIS веб-сервера, а также функциональные возможности, аналогичные расширения ISAPI, но с упрощенной моделью программирования."
  syntax:
    content: 'public class HttpRemotingHandler : System.Web.IHttpHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor
  id: '#ctor'
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  langs:
  - csharp
  name: HttpRemotingHandler()
  nameWithType: HttpRemotingHandler.HttpRemotingHandler()
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.HttpRemotingHandler()
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpRemotingHandler&quot;> </xref> класса со значениями по умолчанию."
  syntax:
    content: public HttpRemotingHandler ();
    parameters: []
  overload: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor(System.Type,System.Object)
  id: '#ctor(System.Type,System.Object)'
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  langs:
  - csharp
  name: HttpRemotingHandler(Type,Object)
  nameWithType: HttpRemotingHandler.HttpRemotingHandler(Type,Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.HttpRemotingHandler(Type,Object)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpRemotingHandler&quot;> </xref> класса со значениями по умолчанию."
  remarks: "Используйте значение по умолчанию <xref:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler>Конструктор вместо.</xref:System.Runtime.Remoting.Channels.Http.HttpRemotingHandler>"
  syntax:
    content: public HttpRemotingHandler (Type type, object srvID);
    parameters:
    - id: type
      type: System.Type
      description: "Конструктор пропускает `type` параметра."
    - id: srvID
      type: System.Object
      description: "Конструктор пропускает `srvID` параметра."
  overload: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
  id: IsReusable
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: HttpRemotingHandler.IsReusable
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Возвращает логическое значение, указывающее, может ли другой запрос использовать <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpRemotingHandler&quot;> </xref>."
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для всех экземпляров <xref href=&quot;System.Runtime.Remoting.Channels.Http.HttpRemotingHandler&quot;> </xref>."
  overload: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: HttpRemotingHandler.ProcessRequest(HttpContext)
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels.Http
  summary: "Разрешает обработку веб-запросов НТТР текущим экземпляром."
  remarks: "Дополнительные сведения о <xref:System.Web.IHttpHandler.ProcessRequest%2A>методах, в разделе <xref:System.Web.IHttpHandler.ProcessRequest%2A?displayProperty=fullName>.</xref:System.Web.IHttpHandler.ProcessRequest%2A?displayProperty=fullName> </xref:System.Web.IHttpHandler.ProcessRequest%2A>"
  syntax:
    content: public void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Объект <xref href=&quot;System.Web.HttpContext&quot;> </xref> , предоставляющий ссылки на внутренние объекты сервера (например, <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, и <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) используется для обслуживания HTTP-запросов."
  overload: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: HttpRemotingHandler()
  nameWithType: HttpRemotingHandler.HttpRemotingHandler()
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.HttpRemotingHandler()
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor(System.Type,System.Object)
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: HttpRemotingHandler(Type,Object)
  nameWithType: HttpRemotingHandler.HttpRemotingHandler(Type,Object)
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.HttpRemotingHandler(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: IsReusable
  nameWithType: HttpRemotingHandler.IsReusable
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: HttpRemotingHandler.ProcessRequest(HttpContext)
  fullName: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest(HttpContext)
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.#ctor*
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: HttpRemotingHandler
  nameWithType: HttpRemotingHandler.HttpRemotingHandler
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.IsReusable*
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: IsReusable
  nameWithType: HttpRemotingHandler.IsReusable
- uid: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler.ProcessRequest*
  parent: System.Runtime.Remoting.Channels.Http.HttpRemotingHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: HttpRemotingHandler.ProcessRequest
