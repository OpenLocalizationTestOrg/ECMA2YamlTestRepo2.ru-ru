### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IEditableCollectionView
  id: IEditableCollectionView
  children:
  - System.ComponentModel.IEditableCollectionView.AddNew
  - System.ComponentModel.IEditableCollectionView.CanAddNew
  - System.ComponentModel.IEditableCollectionView.CanCancelEdit
  - System.ComponentModel.IEditableCollectionView.CancelEdit
  - System.ComponentModel.IEditableCollectionView.CancelNew
  - System.ComponentModel.IEditableCollectionView.CanRemove
  - System.ComponentModel.IEditableCollectionView.CommitEdit
  - System.ComponentModel.IEditableCollectionView.CommitNew
  - System.ComponentModel.IEditableCollectionView.CurrentAddItem
  - System.ComponentModel.IEditableCollectionView.CurrentEditItem
  - System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  - System.ComponentModel.IEditableCollectionView.IsAddingNew
  - System.ComponentModel.IEditableCollectionView.IsEditingItem
  - System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  - System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  - System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  langs:
  - csharp
  name: IEditableCollectionView
  nameWithType: IEditableCollectionView
  fullName: System.ComponentModel.IEditableCollectionView
  type: Interface
  summary: "Определяет методы и свойства, <xref href=&quot;System.Windows.Data.CollectionView&quot;> </xref> реализует для предоставления коллекции возможностей редактирования."
  remarks: "Если представление коллекции реализует интерфейс IEditableCollectionView, можно непосредственно изменять базовой коллекции, если он позволяет вносить изменения, с помощью методов и свойств, которые предоставляет IEditableCollectionView, независимо от типа коллекции.       Типы <xref:System.Windows.Controls.ItemCollection>, <xref:System.Windows.Data.BindingListCollectionView>, и <xref:System.Windows.Data.ListCollectionView>являются типами, которые поставляются вместе с [!INCLUDE[TLA#tla_winclient](~/add/includes/ajax-current-ext-md.md)] , наследующих от <xref:System.Windows.Data.CollectionView>.</xref:System.Windows.Data.CollectionView> </xref:System.Windows.Data.ListCollectionView> </xref:System.Windows.Data.BindingListCollectionView> </xref:System.Windows.Controls.ItemCollection>  Эти типы также реализуют IEditableCollectionView, поэтому можно изменить коллекцию, которая использует один из этих типов.  <xref:System.Windows.Controls.ItemCollection>, в частности, часто используется, поскольку <xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=fullName>свойство является <xref:System.Windows.Controls.ItemCollection>.</xref:System.Windows.Controls.ItemCollection> </xref:System.Windows.Controls.ItemsControl.Items%2A?displayProperty=fullName></xref:System.Windows.Controls.ItemCollection>"
  example:
  - "The following example shows how to add an item to a collection by using methods that are defined by IEditableCollectionView.  This application displays a list of items for sale and gives the user the option of adding, editing, or removing an item.  When the user adds or edits an item, a form prompts the user to enter a new item.  If the user submits the form, the item is committed to the collection.  If the user cancels the form, the item is discarded. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public interface IEditableCollectionView
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  id: AddNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: AddNew()
  nameWithType: IEditableCollectionView.AddNew()
  fullName: System.ComponentModel.IEditableCollectionView.AddNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Добавляет новый элемент в коллекцию."
  remarks: "Вызов AddNew начинается транзакция добавления.  Следует вызвать метод <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>или <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>для завершения транзакции добавления.</xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> </xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> Новый элемент всегда отображается в представлении коллекции. Какой-либо фильтрации, сортировки или группировки, применяется для представления применяется к новому элемента, когда <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>называется.</xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>"
  example:
  - "The following example creates a <xref:System.Windows.Window> that prompts the user to add a new item.  Then it calls AddNew to create a new object and sets the <xref:System.Windows.FrameworkElement.DataContext%2A> of the <xref:System.Windows.Window> to that object. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "Новый элемент, добавляемый в коллекцию."
  overload: System.ComponentModel.IEditableCollectionView.AddNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew
  id: CanAddNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, можно ли добавить новый элемент в коллекцию."
  remarks: "<xref:System.ComponentModel.IEditableCollectionView>Можно добавить новый элемент, если выполняются следующие:-можно добавить элемент к базовой коллекции.</xref:System.ComponentModel.IEditableCollectionView>  Например, если коллекция доступна только для чтения, CanAddNew является `false`.      - <xref:System.ComponentModel.IEditableCollectionView>Могут создать объект типа, который присутствует в коллекции.</xref:System.ComponentModel.IEditableCollectionView>  Например, если коллекция имеет тип <xref:System.Collections.ObjectModel.ObservableCollection%601>, <xref:System.ComponentModel.IEditableCollectionView>должен иметь возможность создать объект типа `T`.</xref:System.ComponentModel.IEditableCollectionView> </xref:System.Collections.ObjectModel.ObservableCollection%601>"
  example:
  - "The following example checks whether an item can be added to the collection.  If CanAddNew is `false`, the example tells the user that an item cannot be added.  Otherwise, it shows a form that prompts the user to add a new item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974) .  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public bool CanAddNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если можно добавить новый элемент в коллекцию; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.CanAddNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  id: CanCancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, может ли представление коллекции отклонить отложенные изменения и восстановить исходные значения изменяемого объекта."
  remarks: "— CanCancelEdit `true` Если представление поддерживает понятие «ожидающие изменения» на данный момент элемент.   Например, представление коллекции может возвратить `true` Если редактируемый элемент реализует <xref:System.ComponentModel.IEditableObject>, или если в представлении есть сведения о состоянии элемента, его можно использовать для наката резервное изменения.</xref:System.ComponentModel.IEditableObject> — CanCancelEdit `false` Если представление не может отменить изменения объекта.  В этом случае вызывать <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>заставить представлении, чтобы выйти из состояние редактирования и обеспечить логику, чтобы отменить изменения в объекте, который был изменен.</xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>"
  example:
  - "The following example gets CanCancelEdit to check whether the original values of the edited item can be restored before it calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.  If the values cannot be restored, you must supply additional logic to do so.  If they can be, the values are restored when the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.   For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public bool CanCancelEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если представление коллекции может отклонить отложенные изменения и восстановить исходные значения изменяемого объекта. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.CanCancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  id: CancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CancelEdit()
  nameWithType: IEditableCollectionView.CancelEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Завершает транзакцию изменения и, если это возможно, восстанавливает исходное значение для элемента."
  remarks: "Задает CancelEdit <xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A>для `null` в результате чего представление коллекции для выхода из состояние редактирования.</xref:System.ComponentModel.IEditableCollectionView.CurrentEditItem%2A>  Если <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>является `true`, CancelEdit также восстанавливает исходные значения изменяемого объекта.</xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A>"
  example:
  - "The following example gets <xref:System.ComponentModel.IEditableCollectionView.CanCancelEdit%2A> to check whether the original values of the edited item can be restored before it calls CancelEdit.  If the values cannot be restored, you must supply additional logic to do so.  If they can be, the values are restored when the example calls CancelEdit. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#canceledit)]\n [!code-vb[EditingCollectionsSnippets#CancelEdit](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#canceledit)]"
  syntax:
    content: public void CancelEdit ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CancelEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  id: CancelNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CancelNew()
  nameWithType: IEditableCollectionView.CancelNew()
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Завершает транзакцию добавления и отменяет ожидающий новый элемент."
  remarks: ''
  example:
  - "The following example displays a form that prompts the user to add a new item.  If the user submits the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> to add the item to the collection.  If the user cancels the form, the example calls CancelNew to discard the item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public void CancelNew ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CancelNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CanRemove
  id: CanRemove
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, можно ли удалить элемент из коллекции."
  remarks: "— CanRemove `false` если коллекции только для чтения."
  example:
  - "The following example calls CanRemove to check whether an item can be removed from the collection.  If an item can be removed, the example prompts the user to confirm the action and calls <xref:System.ComponentModel.IEditableCollectionView.Remove%2A> if the user clicks **Yes**. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#removeitem)]\n [!code-vb[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#removeitem)]"
  syntax:
    content: public bool CanRemove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент можно удалить из коллекции. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  id: CommitEdit
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CommitEdit()
  nameWithType: IEditableCollectionView.CommitEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Завершает транзакцию изменения и сохраняет отложенные изменения."
  remarks: ''
  example:
  - "The following example creates a form that prompts the user to edit an existing item.  If the user submits the form, the example calls CommitEdit to save the changes to the collection.  If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> to discard the changes. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#EditItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#edititem)]\n [!code-vb[EditingCollectionsSnippets#EditItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#edititem)]"
  syntax:
    content: public void CommitEdit ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CommitEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  id: CommitNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CommitNew()
  nameWithType: IEditableCollectionView.CommitNew()
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Завершает транзакцию добавления и сохраняет ожидаемый новый элемент."
  remarks: "Какой-либо фильтрации, сортировки или группировки, присваиваемое <xref:System.Windows.Data.CollectionView>применяется новый элемент, при вызове CommitNew.</xref:System.Windows.Data.CollectionView>"
  example:
  - "The following example displays a form that prompts the user to add a new item.  If the user submits the form, the example calls CommitNew to add the item to the collection.  If the user cancels the form, the example calls <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> to discard the item. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#AddItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#additem)]\n [!code-vb[EditingCollectionsSnippets#AddItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#additem)]"
  syntax:
    content: public void CommitNew ();
    parameters: []
  overload: System.ComponentModel.IEditableCollectionView.CommitNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  id: CurrentAddItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Возвращает элемент, добавляемый во время текущей транзакции добавления."
  syntax:
    content: public object CurrentAddItem { get; }
    return:
      type: System.Object
      description: "Элемент, который добавляется, если <xref:System.ComponentModel.IEditableCollectionView.IsAddingNew*>— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IEditableCollectionView.IsAddingNew*>"
  overload: System.ComponentModel.IEditableCollectionView.CurrentAddItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  id: CurrentEditItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Получает элемент в редактируемой коллекции."
  syntax:
    content: public object CurrentEditItem { get; }
    return:
      type: System.Object
      description: "Элемент в коллекции, который редактируется, если <xref:System.ComponentModel.IEditableCollectionView.IsEditingItem*>— <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IEditableCollectionView.IsEditingItem*>"
  overload: System.ComponentModel.IEditableCollectionView.CurrentEditItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  id: EditItem(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: EditItem(Object)
  nameWithType: IEditableCollectionView.EditItem(Object)
  fullName: System.ComponentModel.IEditableCollectionView.EditItem(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Начинает транзакцию изменения заданного элемента."
  remarks: ''
  example:
  - "The following example creates a form that prompts the user to edit an existing item.  If the user submits the form, the changes are committed to the collection.  If the user cancels the form, the changes are discarded. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974) .  \n  \n [!code-cs[EditingCollectionsSnippets#EditItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#edititem)]\n [!code-vb[EditingCollectionsSnippets#EditItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#edititem)]"
  syntax:
    content: public void EditItem (object item);
    parameters:
    - id: item
      type: System.Object
      description: "Элемент для изменения."
  overload: System.ComponentModel.IEditableCollectionView.EditItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew
  id: IsAddingNew
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, выполняется ли в данный момент транзакция добавления."
  remarks: "Транзакция добавления начинается с вызова <xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>и до конца транзакции добавить путем вызова <xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A>или <xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A>.</xref:System.ComponentModel.IEditableCollectionView.CancelNew%2A> </xref:System.ComponentModel.IEditableCollectionView.CommitNew%2A> </xref:System.ComponentModel.IEditableCollectionView.AddNew%2A>"
  syntax:
    content: public bool IsAddingNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если выполняется транзакция добавления выполняется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.IsAddingNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem
  id: IsEditingItem
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, выполняется ли в данный момент транзакция изменения."
  remarks: "Транзакция изменения начинается с вызова <xref:System.ComponentModel.IEditableCollectionView.EditItem%2A>и завершит транзакцию путем вызова <xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A>или <xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A>.</xref:System.ComponentModel.IEditableCollectionView.CancelEdit%2A> </xref:System.ComponentModel.IEditableCollectionView.CommitEdit%2A> </xref:System.ComponentModel.IEditableCollectionView.EditItem%2A>"
  syntax:
    content: public bool IsEditingItem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если транзакция редактирования выполняется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IEditableCollectionView.IsEditingItem*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  id: NewItemPlaceholderPosition
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Возвращает или задает положение местозаполнителя нового элемента в представлении коллекции."
  syntax:
    content: public System.ComponentModel.NewItemPlaceholderPosition NewItemPlaceholderPosition { get; set; }
    return:
      type: System.ComponentModel.NewItemPlaceholderPosition
      description: "Одно из значений перечисления, которое задает положение местозаполнителя нового элемента в представлении коллекции."
  overload: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: IEditableCollectionView.Remove(Object)
  fullName: System.ComponentModel.IEditableCollectionView.Remove(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Удаляет указанный элемент из коллекции."
  remarks: "Если `item` находится не в коллекции, удаление не выполняет никаких действий."
  example:
  - "The following example calls <xref:System.ComponentModel.IEditableCollectionView.CanRemove%2A> to check whether an item can be removed from the collection.  If an item can be removed, the example prompts the user to confirm the action and calls Remove if the user clicks **Yes**. For the entire sample, see [Changing a Collection by Using IEditableCollectionView Sample](http://go.microsoft.com/fwlink/?LinkID=159974).  \n  \n [!code-cs[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/csharp/EditingCollectionsSnippets/Window1.xaml.cs#removeitem)]\n [!code-vb[EditingCollectionsSnippets#RemoveItem](~/add/codesnippet/visualbasic/editingcollectionssnippets/window1.xaml.vb#removeitem)]"
  syntax:
    content: public void Remove (object item);
    parameters:
    - id: item
      type: System.Object
      description: "Удаляемый элемент."
  overload: System.ComponentModel.IEditableCollectionView.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.ComponentModel.IEditableCollectionView
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IEditableCollectionView.RemoveAt(Int32)
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt(Int32)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.ComponentModel
  summary: "Удаляет элемент в указанной позиции из коллекции."
  remarks: '`index`связан с представлением коллекции, а не коллекцию.  Например, если коллекция содержит 10 элементов и представление имеет <xref:System.ComponentModel.ICollectionView.Filter%2A>, чтобы отображались 7 элементов, допустимые значения `index` — от 0 до 6.</xref:System.ComponentModel.ICollectionView.Filter%2A>'
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Позиция удаляемого элемента."
  overload: System.ComponentModel.IEditableCollectionView.RemoveAt*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>значение меньше 0 или больше, чем число элементов в представлении коллекции."
  platform:
  - net462
references:
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ComponentModel.IEditableCollectionView.AddNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: AddNew()
  nameWithType: IEditableCollectionView.AddNew()
  fullName: System.ComponentModel.IEditableCollectionView.AddNew()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
  fullName: System.ComponentModel.IEditableCollectionView.CanAddNew
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
  fullName: System.ComponentModel.IEditableCollectionView.CanCancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelEdit()
  nameWithType: IEditableCollectionView.CancelEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CancelEdit()
- uid: System.ComponentModel.IEditableCollectionView.CancelNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelNew()
  nameWithType: IEditableCollectionView.CancelNew()
  fullName: System.ComponentModel.IEditableCollectionView.CancelNew()
- uid: System.ComponentModel.IEditableCollectionView.CanRemove
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
  fullName: System.ComponentModel.IEditableCollectionView.CanRemove
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitEdit()
  nameWithType: IEditableCollectionView.CommitEdit()
  fullName: System.ComponentModel.IEditableCollectionView.CommitEdit()
- uid: System.ComponentModel.IEditableCollectionView.CommitNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitNew()
  nameWithType: IEditableCollectionView.CommitNew()
  fullName: System.ComponentModel.IEditableCollectionView.CommitNew()
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentAddItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
  fullName: System.ComponentModel.IEditableCollectionView.CurrentEditItem
- uid: System.ComponentModel.IEditableCollectionView.EditItem(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: EditItem(Object)
  nameWithType: IEditableCollectionView.EditItem(Object)
  fullName: System.ComponentModel.IEditableCollectionView.EditItem(Object)
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
  fullName: System.ComponentModel.IEditableCollectionView.IsAddingNew
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
  fullName: System.ComponentModel.IEditableCollectionView.IsEditingItem
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
  fullName: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.NewItemPlaceholderPosition
  parent: System.ComponentModel
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: NewItemPlaceholderPosition
  fullName: System.ComponentModel.NewItemPlaceholderPosition
- uid: System.ComponentModel.IEditableCollectionView.Remove(System.Object)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: Remove(Object)
  nameWithType: IEditableCollectionView.Remove(Object)
  fullName: System.ComponentModel.IEditableCollectionView.Remove(Object)
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt(System.Int32)
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IEditableCollectionView.RemoveAt(Int32)
  fullName: System.ComponentModel.IEditableCollectionView.RemoveAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IEditableCollectionView.AddNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: AddNew
  nameWithType: IEditableCollectionView.AddNew
- uid: System.ComponentModel.IEditableCollectionView.CanAddNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanAddNew
  nameWithType: IEditableCollectionView.CanAddNew
- uid: System.ComponentModel.IEditableCollectionView.CanCancelEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanCancelEdit
  nameWithType: IEditableCollectionView.CanCancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelEdit
  nameWithType: IEditableCollectionView.CancelEdit
- uid: System.ComponentModel.IEditableCollectionView.CancelNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CancelNew
  nameWithType: IEditableCollectionView.CancelNew
- uid: System.ComponentModel.IEditableCollectionView.CanRemove*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CanRemove
  nameWithType: IEditableCollectionView.CanRemove
- uid: System.ComponentModel.IEditableCollectionView.CommitEdit*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitEdit
  nameWithType: IEditableCollectionView.CommitEdit
- uid: System.ComponentModel.IEditableCollectionView.CommitNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CommitNew
  nameWithType: IEditableCollectionView.CommitNew
- uid: System.ComponentModel.IEditableCollectionView.CurrentAddItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentAddItem
  nameWithType: IEditableCollectionView.CurrentAddItem
- uid: System.ComponentModel.IEditableCollectionView.CurrentEditItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: CurrentEditItem
  nameWithType: IEditableCollectionView.CurrentEditItem
- uid: System.ComponentModel.IEditableCollectionView.EditItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: EditItem
  nameWithType: IEditableCollectionView.EditItem
- uid: System.ComponentModel.IEditableCollectionView.IsAddingNew*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsAddingNew
  nameWithType: IEditableCollectionView.IsAddingNew
- uid: System.ComponentModel.IEditableCollectionView.IsEditingItem*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: IsEditingItem
  nameWithType: IEditableCollectionView.IsEditingItem
- uid: System.ComponentModel.IEditableCollectionView.NewItemPlaceholderPosition*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: NewItemPlaceholderPosition
  nameWithType: IEditableCollectionView.NewItemPlaceholderPosition
- uid: System.ComponentModel.IEditableCollectionView.Remove*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: Remove
  nameWithType: IEditableCollectionView.Remove
- uid: System.ComponentModel.IEditableCollectionView.RemoveAt*
  parent: System.ComponentModel.IEditableCollectionView
  isExternal: false
  name: RemoveAt
  nameWithType: IEditableCollectionView.RemoveAt
