### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectStateManager
  id: ObjectStateManager
  children:
  - System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  - System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  - System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  - System.Data.Objects.ObjectStateManager.MetadataWorkspace
  - System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  langs:
  - csharp
  name: ObjectStateManager
  nameWithType: ObjectStateManager
  fullName: System.Data.Objects.ObjectStateManager
  type: Class
  summary: "Осуществляет управление объектов состояния и удостоверений для экземпляров типа сущности и экземпляров связи."
  remarks: "ObjectStateManager отслеживает результаты запроса и предоставляет логику для слияния нескольких перекрывающихся результатов запросов. Он также выполняет изменений в оперативной памяти, отслеживания, когда пользователь вставляет, удаляет, или изменяет объекты и предоставляет набор изменений для обновлений. Этот набор изменений используется обработчиком изменений для сохранения внесенных изменений.       Этот класс обычно используется в <xref:System.Data.Objects.ObjectContext>и не непосредственно в приложениях.</xref:System.Data.Objects.ObjectContext>"
  example:
  - "These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The following example gets the ObjectStateManager from the <xref:System.Data.Objects.ObjectContext> and uses the state manager to access an object in the context.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> method on the returned ObjectStateManager to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public class ObjectStateManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace)'
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref> класса."
  syntax:
    content: public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);
    parameters:
    - id: metadataWorkspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>, Который предоставляет сведения о сопоставлении и метаданных."
  overload: System.Data.Objects.ObjectStateManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  id: ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Изменяет состояние <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для конкретного объекта в указанный <code> entityState </code>."
  remarks: "Вызов метода ChangeObjectState для изменения состояния объекта <xref:System.Data.EntityState>не вызывает связанные объекты в отношении ограниченного удаляемых.</xref:System.Data.EntityState>       Изменение состояния объекта не влияет на связанные объекты в графе объектов.       При изменении <xref:System.Data.EntityState>записи объект сущности для <xref:System.Data.EntityState>, все свойства объекта, отмеченные как измененные, независимо от того, текущее и исходное значения.</xref:System.Data.EntityState> </xref:System.Data.EntityState>       Когда <xref:System.Data.EntityState>объекта сущности для изменения записи <xref:System.Data.EntityState>, <xref:System.Data.EntityState>, или <xref:System.Data.EntityState>, записей связи для объекта также обновляются.</xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);
    parameters:
    - id: entity
      type: System.Object
      description: "Объект, для которого необходимо изменить состояние."
    - id: entityState
      type: System.Data.EntityState
      description: "Новое состояние объекта."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "The <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref> for the supplied <code>entity</code>."
  overload: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "При объект не отсоединен и не имеет записи в диспетчере состояния.       При попытке изменить состояние на - или - <xref href=&quot;System.Data.EntityState&quot;> </xref> от любого другого <xref:System.Data.EntityState.>- или - когда <code> state </code> не является допустимым <xref href=&quot;System.Data.EntityState&quot;> </xref> значение.</xref:System.Data.EntityState.>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Изменяет состояние отношения между двумя объектами сущностей, заданное на основании двух связанных объектов и имени свойства навигации."
  remarks: "Операции для объектов на обоих концах указанной связи должен существовать в <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>      Настроек [!NOTE] настроек этот метод не поддерживается для отношений, основанных на основе внешнего ключа."
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "Экземпляр объекта или <xref href=&quot;System.Data.EntityKey&quot;> </xref> исходной сущности на одном конце связи."
    - id: targetEntity
      type: System.Object
      description: "Экземпляр объекта или <xref href=&quot;System.Data.EntityKey&quot;> </xref> целевой сущности на другом конце связи."
    - id: navigationProperty
      type: System.String
      description: "Имя свойства навигации `source` , возвращающего указанный `target`."
    - id: relationshipState
      type: System.Data.EntityState
      description: "Запрошенный <xref href=&quot;System.Data.EntityState&quot;> </xref> указанной связи."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> Связи, которая была изменена."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "При попытке изменить состояние связи в состояние не <xref href=&quot;System.Data.EntityState&quot;> </xref> или <xref href=&quot;System.Data.EntityState&quot;> </xref> при любом <code> source </code> или <code> target </code> в <xref href=&quot;System.Data.EntityState&quot;> </xref> состояния.       При попытке изменить состояние связи в состояние не - или - <xref href=&quot;System.Data.EntityState&quot;> </xref> или <xref href=&quot;System.Data.EntityState&quot;> </xref> при любом <code> source </code> или <code> target </code> в <xref href=&quot;System.Data.EntityState&quot;> </xref> состояния.       - или - когда <code> state </code> не является допустимым <xref href=&quot;System.Data.EntityState&quot;> </xref> значение."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Изменяет состояние отношения между двумя объектами сущностей, заданное на основании двух связанных объектов и свойств отношения."
  remarks: "Операции для объектов на обоих концах указанной связи должен существовать в <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>      Настроек [!NOTE] настроек этот метод не поддерживается для связей, основанных на основе внешнего ключа. Дополнительные сведения см. в разделе [определение и управление связями](http://msdn.microsoft.com/en-us/2c92c097-56bd-4145-989e-16d92475ecda)"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "Экземпляр объекта или <xref href=&quot;System.Data.EntityKey&quot;> </xref> исходной сущности на одном конце связи."
    - id: targetEntity
      type: System.Object
      description: "Экземпляр объекта или <xref href=&quot;System.Data.EntityKey&quot;> </xref> целевой сущности на другом конце связи."
    - id: relationshipName
      type: System.String
      description: "Имя связи."
    - id: targetRoleName
      type: System.String
      description: "Имя роли в `target` связи."
    - id: relationshipState
      type: System.Data.EntityState
      description: "Запрошенный <xref href=&quot;System.Data.EntityState&quot;> </xref> указанной связи."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "<xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> Связи, которая была изменена."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "При попытке изменить состояние связи в состояние не <xref href=&quot;System.Data.EntityState&quot;> </xref> или <xref href=&quot;System.Data.EntityState&quot;> </xref> при любом <code> source </code> или <code> target </code> в <xref href=&quot;System.Data.EntityState&quot;> </xref> состояния.       При попытке изменить состояние связи в состояние не - или - <xref href=&quot;System.Data.EntityState&quot;> </xref> или <xref href=&quot;System.Data.EntityState&quot;> </xref> при любом <code> source </code> или <code> target </code> в <xref href=&quot;System.Data.EntityState&quot;> </xref> состояния.       - или - когда <code> state </code> не является допустимым <xref href=&quot;System.Data.EntityState&quot;> </xref> значение."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  id: ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: 'public System.Data.Objects.ObjectStateEntry ChangeRelationshipState<TEntity> (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression<Func<TEntity,object>> navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;'
    parameters:
    - id: sourceEntity
      type: TEntity
      description: "Для добавления."
    - id: targetEntity
      type: System.Object
      description: "Для добавления."
    - id: navigationPropertySelector
      type: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
      description: "Для добавления."
    - id: relationshipState
      type: System.Data.EntityState
      description: "Для добавления."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "Для добавления."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  id: GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Возвращает коллекцию <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> объектов для объектов или связей с заданным состоянием."
  remarks: "<xref:System.Data.EntityState>Является битовым полем, поэтому можно получить состояние операции для нескольких состояний в одном вызове, выполнив операцию побитового или над более чем одним <xref:System.Data.EntityState>значения.</xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry> GetObjectStateEntries (System.Data.EntityState state);
    parameters:
    - id: state
      type: System.Data.EntityState
      description: "<xref href=&quot;System.Data.EntityState&quot;> </xref> Используется для фильтрации возвращаемых <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> объектов."
    return:
      type: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
      description: "Коллекция <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> объектов в данной <xref href=&quot;System.Data.EntityState&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "When <code>state</code> is <xref href=&quot;System.Data.EntityState&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  id: GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Возвращает <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для записи объекта или связи с указанным ключом."
  remarks: "Используйте <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>метод для возврата <xref:System.Data.Objects.ObjectStateEntry>объект без необходимости обрабатывать <xref:System.InvalidOperationException>методом GetObjectStateEntry.</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example gets the <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>. Then it gets the current value of the `SalesOrderHeader.PurchaseOrderNumber` property, changes the property's value, and enumerates through the collection of modified properties.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstateentry)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstateentry)]"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "The <xref href=&quot;System.Data.EntityKey&quot;></xref>."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "Соответствующий <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для данного <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Если указанный <code> key </code> не удается найти в диспетчере состояния."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Сущность с указанным <xref href=&quot;System.Data.EntityKey&quot;> </xref> существует в <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  id: GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Возвращает <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для указанного объекта."
  remarks: "Используйте <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>метод для возврата <xref:System.Data.Objects.ObjectStateEntry>объект без необходимости обрабатывать <xref:System.InvalidOperationException>методом GetObjectStateEntry.</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "<xref:System.Object>К которому извлеченного <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> принадлежит.</xref:System.Object>"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "Соответствующий <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для данного <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Нет сущностей для указанного <xref:System.Object>существует в <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>.</xref:System.Object>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  id: GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Возвращает <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> , используемый указанным объектом."
  remarks: "Вызов метода GetRelationshipManager является таким же, как вызов <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>метода, за исключением того, что этот метод выдает исключение вместо возвращения `false`.</xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>       Вызовите <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>метод, чтобы избежать обработки <xref:System.InvalidOperationException>, происходящее при <xref:System.Data.Objects.DataClasses.RelationshipManager>нельзя вернуть для предоставленного объекта.</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>"
  syntax:
    content: public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "Объект, для которого требуется вернуть <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>."
    return:
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "<xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> Для указанного объекта."
  overload: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Когда <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> не могут быть возвращены для указанного <code> entity </code>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  id: MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Возвращает <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> связанные с этим диспетчером состояний."
  remarks: "<xref:System.Data.Metadata.Edm.MetadataWorkspace>Класс — центральный программный интерфейс, который можно использовать для взаимодействия с метаданными модели данных сущности (EDM) во время выполнения, а также в контексте приложения.</xref:System.Data.Metadata.Edm.MetadataWorkspace>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "<xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> Связанный с этим <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  id: ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  type: Event
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Происходит, когда сущности добавлении или удалении из диспетчера состояний."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Пытается извлечь соответствующий <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для объекта или связи с указанным <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "С помощью TryGetObjectStateEntry возвращать <xref:System.Data.Objects.ObjectStateEntry>без необходимости обрабатывать <xref:System.InvalidOperationException>вызванные <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>метод.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  example:
  - "The examples in this topic are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The example attempts to retrieve the corresponding <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the TryGetObjectStateEntry method on the returned <xref:System.Data.Objects.ObjectStateManager> to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "Данный <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "При возвращении этого метода содержит <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для данного <xref href=&quot;System.Data.EntityKey&quot;> </xref> этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "Логическое значение, которое является <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если имеется соответствующий <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для данного <xref href=&quot;System.Data.EntityKey&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Объект <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic) указано значение для <code> key </code>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Пытается извлечь соответствующий <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для указанного <xref:System.Object>.</xref:System.Object>"
  remarks: "Метод TryGetObjectStateEntry используется для возврата <xref:System.Data.Objects.ObjectStateEntry>без необходимости обрабатывать <xref:System.InvalidOperationException>вызванные <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>метод.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  syntax:
    content: public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: entity
      type: System.Object
      description: "<xref:System.Object>К которому извлеченного <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> принадлежит.</xref:System.Object>"
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "При возвращении этого метода содержит <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для данного <xref href=&quot;System.Data.EntityKey&quot;> </xref> этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "Логическое значение, которое является <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если имеется соответствующий <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> для данного объекта; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  id: TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Возвращает <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> , используемый указанным объектом."
  remarks: "<xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>Метод используется для получения <xref:System.Data.Objects.DataClasses.RelationshipManager>для объектов, игнорирующих сохраняемость.</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> При реализации объектов <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>или наследоваться от <xref:System.Data.Objects.DataClasses.EntityObject>, <xref:System.Data.Objects.DataClasses.RelationshipManager>осуществляется из <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A>свойство.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> </xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.DataClasses.EntityObject> </xref:System.Data.Objects.DataClasses.IEntityWithRelationships>       <xref:System.Data.Objects.DataClasses.RelationshipManager>Не может быть возвращен, если объект находится в <xref:System.Data.EntityState>состояние.</xref:System.Data.EntityState> </xref:System.Data.Objects.DataClasses.RelationshipManager>       Вызов метода TryGetRelationshipManager является таким же, как вызов <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>метода, за исключением того, этот метод возвращает `false` не вызывает исключения.</xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>"
  syntax:
    content: public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);
    parameters:
    - id: entity
      type: System.Object
      description: "Объект, для которого требуется вернуть <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>."
    - id: relationshipManager
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "При возвращении этого метода содержит <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> для `entity`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> был возвращен экземпляр для предоставленного <code> entity </code>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
- uid: System.Data.Objects.ObjectStateEntry
  parent: System.Data.Objects
  isExternal: false
  name: ObjectStateEntry
  nameWithType: ObjectStateEntry
  fullName: System.Data.Objects.ObjectStateEntry
- uid: System.Data.EntityState
  parent: System.Data
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: System.Data.EntityState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TEntity,Object>>
  nameWithType: Expression<Func<TEntity,Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity,System.Object>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TEntity,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TEntity,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
- uid: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ObjectStateEntry>
  nameWithType: IEnumerable<ObjectStateEntry>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Objects.ObjectStateEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Objects.ObjectStateEntry
    name: ObjectStateEntry
    nameWithType: ObjectStateEntry
    fullName: ObjectStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
- uid: System.Data.EntityKey
  parent: System.Data
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
- uid: System.Data.Objects.DataClasses.RelationshipManager
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: RelationshipManager
  nameWithType: RelationshipManager
  fullName: System.Data.Objects.DataClasses.RelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
- uid: System.Data.Objects.ObjectStateManager.#ctor*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager
  nameWithType: ObjectStateManager.ObjectStateManager
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState
  nameWithType: ObjectStateManager.ChangeObjectState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState
  nameWithType: ObjectStateManager.ChangeRelationshipState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState<TEntity>
  nameWithType: ObjectStateManager.ChangeRelationshipState<TEntity>
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries
  nameWithType: ObjectStateManager.GetObjectStateEntries
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry
  nameWithType: ObjectStateManager.GetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager
  nameWithType: ObjectStateManager.GetRelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry
  nameWithType: ObjectStateManager.TryGetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager
  nameWithType: ObjectStateManager.TryGetRelationshipManager
