### YamlMime:ManagedReference
items:
- uid: System.Configuration.IPersistComponentSettings
  id: IPersistComponentSettings
  children:
  - System.Configuration.IPersistComponentSettings.LoadComponentSettings
  - System.Configuration.IPersistComponentSettings.ResetComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveComponentSettings
  - System.Configuration.IPersistComponentSettings.SaveSettings
  - System.Configuration.IPersistComponentSettings.SettingsKey
  langs:
  - csharp
  name: IPersistComponentSettings
  nameWithType: IPersistComponentSettings
  fullName: System.Configuration.IPersistComponentSettings
  type: Interface
  summary: "Определяет стандартные функциональные возможности для элементов управления или библиотек, которые хранят и извлекают параметры приложения."
  remarks: "Как правило, можно добавить поддержку параметров приложения к приложению путем создания класса-оболочки параметров, который является производным от <xref:System.Configuration.ApplicationSettingsBase>, а затем добавить особые свойства класса</xref:System.Configuration.ApplicationSettingsBase> Тем не менее этот подход достаточным образом не инкапсулирует параметры приложения для элемента управления, чтобы контейнер защищен от деталей. Интерфейс IPersistComponentSettings предоставляет приложение со стандартным интерфейсом для запросов на изменение состояния приложения параметры в модуль управления, компонента или библиотеки. Средства разработки также зависят от этого интерфейса позволяет элементами управления и компонентов."
  syntax:
    content: public interface IPersistComponentSettings
  implements: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  id: LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Считывает параметры приложения элемента управления в их соответствующие свойства и обновляет состояние элемента управления."
  remarks: "Как правило, метод LoadComponentSettings выполняет две основные операции:-это вызывает каждый экземпляр приложения параметров, содержащихся в элементе управления для обновления значения свойства параметров приложения обычно путем вызова их <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>методы.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>      — При необходимости он обновляет эти общие свойства, которые зависят от этих перезагруженных значений свойств. Например, если содержащиеся в классе параметров `location` свойства параметров, LoadComponentSettings следует убедиться, что элемент управления <xref:System.Windows.Forms.Control.Location%2A>свойство обновляется для отображения этого параметра перезагруженных.</xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: public void LoadComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  id: ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Сбрасывает свойства параметров приложения элемента управления к значениям по умолчанию."
  remarks: "Обычно вызывает реализацию метода ResetComponentSettings <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>для каждого экземпляра класса параметров приложения, которые он содержит.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public void ResetComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  id: SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Сохраняет свойства параметров приложения элемента управления."
  remarks: "Метод SaveComponentSettings записывает значения свойств параметров приложения элемента управления в хранилище данных. Метод хранилища и сериализации данных, который использует метод определяется поставщиком параметры, связанные с каждым классом параметров через <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute> Выбор поставщика параметров можно переопределить с помощью <xref:System.Configuration.ISettingsProviderService>интерфейса.</xref:System.Configuration.ISettingsProviderService>      Настроек [!NOTE] настроек Если <xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>свойство `true`, элемент управления должен вызывать SaveComponentSettings в свой собственный <xref:System.Windows.Forms.Control.Dispose%2A>метод, чтобы данные конфигурации элемента управления автоматически сохраняются до окончания работы приложения.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveSettings%2A>"
  syntax:
    content: public void SaveComponentSettings ();
    parameters: []
  overload: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  id: SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает или задает значение, указывающее, должен ли элемент управления автоматически сохранять свойства параметров приложения."
  remarks: "Если элемент управления содержит данные конфигурации, он будет сохранен, обычно эти данные в ответ на явный вызов <xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A>метода или иногда неявно при элемента управления <xref:System.Windows.Forms.Control.Dispose%2A>вызывается метод.</xref:System.Windows.Forms.Control.Dispose%2A> </xref:System.Configuration.IPersistComponentSettings.SaveComponentSettings%2A> Свойство SaveSettings определяет, является ли элемент управления автоматически сохраняет данные о конфигурации после его удаления.       Значение по умолчанию SaveSettings зависит от реализации элемента управления. Документация по элементу управления должно быть указано, использует ли параметры приложения, какие данные сохраняются и имеет значение по умолчанию свойства SaveSettings."
  example:
  - "The following code example shows the proper way for a control to check the value of the SaveSettings property before it attempts to automatically persist its configuration data.  \n  \n `protected override void Dispose( bool disposing ) {`  \n  \n `if(disposing) {`  \n  \n `try {`  \n  \n `if (SaveSettings) {`  \n  \n `SaveComponentSettings();`  \n  \n `}`  \n  \n `}`  \n  \n `finally {`  \n  \n `//...`  \n  \n `}`  \n  \n `}`"
  syntax:
    content: public bool SaveSettings { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент управления должен автоматически сохранять состояние представления; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.IPersistComponentSettings.SaveSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  id: SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  langs:
  - csharp
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает или задает значение ключа параметров приложения для текущего экземпляра элемента управления."
  remarks: "Свойство SettingsKey для однозначного определения группы свойств параметров приложения, когда несколько экземпляров одного класса программы-оболочки. Например если элемент управления содержит связанный класс-оболочку, помещаться в одном приложении несколько экземпляров одного элемента управления обычно приведет несколько экземпляров класса-оболочки. Параметры ключа требуется только в том случае, когда данные конфигурации отличаются на основе каждого экземпляра; например расположение динамично установленных элементов управления.       Следующие общие правила применяются к использованию SettingsKey:-элемент управления, как любой класс может содержать ноль или более классов параметров приложения, производный от <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Каждый класс параметров содержит свои собственные <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>Свойства, которые помогают устранить неоднозначность несколько экземпляров этого класса.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>      -Элемент управления должен распределять данные для каждого экземпляра и общие данные в отдельные классы параметров.      -Для элемента управления с данные конфигурации для каждого экземпляра `get` метод доступа свойства SettingsKey должна использовать по умолчанию <xref:System.Windows.Forms.Control.Name%2A>элемента управления.</xref:System.Windows.Forms.Control.Name%2A> В большинстве случаев имя элемента управления будет уникальным в пределах приложения. Если элемент управления содержит только общие данные конфигурации `get` должна использовать по умолчанию `null`.      - `set` Для этого свойства метод доступа должен быть реализован для проведения различия между классами параметров, содержащих для каждого экземпляра и общие данные конфигурации. Для каждого класса параметров, содержащий данные для каждого экземпляра `set` следует просто сквозной <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName>свойство класса параметров.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A?displayProperty=fullName> Для классов параметров, содержащих общие данные `set` следует выполнять никаких действий для данного класса параметров."
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "Объект <xref:System.String>содержит ключ параметров для текущего экземпляра элемента управления.</xref:System.String>"
  overload: System.Configuration.IPersistComponentSettings.SettingsKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings()
  nameWithType: IPersistComponentSettings.LoadComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.LoadComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings()
  nameWithType: IPersistComponentSettings.ResetComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.ResetComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings()
  nameWithType: IPersistComponentSettings.SaveComponentSettings()
  fullName: System.Configuration.IPersistComponentSettings.SaveComponentSettings()
- uid: System.Configuration.IPersistComponentSettings.SaveSettings
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
  fullName: System.Configuration.IPersistComponentSettings.SaveSettings
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IPersistComponentSettings.SettingsKey
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
  fullName: System.Configuration.IPersistComponentSettings.SettingsKey
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.IPersistComponentSettings.LoadComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: LoadComponentSettings
  nameWithType: IPersistComponentSettings.LoadComponentSettings
- uid: System.Configuration.IPersistComponentSettings.ResetComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: ResetComponentSettings
  nameWithType: IPersistComponentSettings.ResetComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveComponentSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveComponentSettings
  nameWithType: IPersistComponentSettings.SaveComponentSettings
- uid: System.Configuration.IPersistComponentSettings.SaveSettings*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SaveSettings
  nameWithType: IPersistComponentSettings.SaveSettings
- uid: System.Configuration.IPersistComponentSettings.SettingsKey*
  parent: System.Configuration.IPersistComponentSettings
  isExternal: false
  name: SettingsKey
  nameWithType: IPersistComponentSettings.SettingsKey
