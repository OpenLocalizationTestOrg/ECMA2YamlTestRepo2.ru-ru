### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "Предоставляет поток, используемый для связи клиент сервер, который использует протокол безопасности Secure Socket Layer (SSL) для проверки подлинности сервера и клиента."
  remarks: "Протоколы SSL помогают обеспечить конфиденциальность и проверку целостности для сообщений, передаваемых посредством SslStream. SSL-соединением, например за счет SslStream, следует использовать при передаче конфиденциальной информации между клиентом и сервером. С помощью SslStream помогает предотвратить кем-либо чтение и изменение данных во время их прохождения через сеть.       Экземпляр SslStream передачи данных с помощью потока, указываемое при создании SslStream. При указании этого базового потока, у вас есть возможность указать, является ли закрытие SslStream также закрывает основной поток. Как правило, используется класс SslStream с <xref:System.Net.Sockets.TcpClient>и <xref:System.Net.Sockets.TcpListener>классы.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> <xref:System.Net.Sockets.TcpClient.GetStream%2A>Метод предоставляет <xref:System.Net.Sockets.NetworkStream>подходит для использования с класса SslStream.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       После создания SslStream, сервер и при необходимости клиент должен пройти проверку подлинности. Сервер должен предоставить X509 сертификата, который служит доказательством удостоверения и могут запрашивать, что клиент также выполняют это. Перед передачей данных с помощью SslStream проверки подлинности. Клиенты инициируют проверку подлинности с использованием синхронный <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>методы, которые блокировать поток до завершения проверки подлинности, или асинхронную <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>методы, которые не блокировать ожидание завершения операции проверки подлинности.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Серверы инициировать проверку подлинности с использованием синхронный <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>или асинхронным <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> Сервер и клиент должен инициировать проверку подлинности.       Проверка подлинности обеспечивается поставщиком канала поставщика поддержки безопасности (SSPI). Клиент получает возможность управления проверку сертификата сервера, указав <xref:System.Net.Security.RemoteCertificateValidationCallback>делегата при создании SslStream.</xref:System.Net.Security.RemoteCertificateValidationCallback> Сервер можно также управлять проверки, указав <xref:System.Net.Security.RemoteCertificateValidationCallback>делегировать.</xref:System.Net.Security.RemoteCertificateValidationCallback> Метод ссылается делегат включает сертификат удаленной стороной и любые ошибки SSPI, при проверке сертификата. Обратите внимание, что если сервер задает делегат, метод делегата вызывается независимо от того, является ли сервер запросил проверку подлинности клиента. Если сервер не запрашивал проверку подлинности клиента, метод делегата сервера получает нулевой сертификат и пустой массив ошибок сертификата.       Если сервер требует проверки подлинности клиента, то клиент должен указать один или несколько сертификатов для проверки подлинности. Если у клиента имеется более одного сертификата, клиент может предоставить <xref:System.Net.Security.LocalCertificateSelectionCallback>делегата, чтобы выбрать правильный сертификат для сервера.</xref:System.Net.Security.LocalCertificateSelectionCallback> Сертификаты клиента должен быть расположен в хранилище «My» сертификатов текущего пользователя. Проверка подлинности клиента с помощью сертификатов не поддерживается для <xref:System.Security.Authentication.SslProtocols>протокол (SSL версия 2).</xref:System.Security.Authentication.SslProtocols>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>, и SslStream уже не используется.</xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора.       После успешного завершения процесса проверки подлинности, также известные как SSL-подтверждения установить удостоверение сервера (и, при необходимости, клиента) и SslStream может использоваться клиентом и сервером для обмена сообщениями. До отправки или получения сведений, клиент и сервер должны проверить службы и уровни безопасности, предоставляемые SslStream, чтобы определить, является ли протокол, алгоритмы и стойкости требованиям их целостности и конфиденциальности. Если текущие настройки недостаточно, поток должен быть закрыт. Вы можете проверить службы безопасности, предоставляемые с помощью SslStream <xref:System.Net.Security.SslStream.IsEncrypted%2A>и <xref:System.Net.Security.SslStream.IsSigned%2A>Свойства.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Ниже приведены элементы, отображающие криптографические параметры, используемые для проверки подлинности, шифрования и подписывания данных.      | Элемент | Члены |   |-------------|-------------|   | Протокол безопасности, используемый для проверки подлинности сервера и, возможно, клиент. | Свойство <xref:System.Net.Security.SslStream.SslProtocol%2A>и перечисление связанных <xref:System.Security.Authentication.SslProtocols>. |   | Алгоритм обмена ключами. | Свойство <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>и перечисление связанных <xref:System.Security.Authentication.ExchangeAlgorithmType>. |   | Алгоритм проверки целостности сообщения. | Свойство <xref:System.Net.Security.SslStream.HashAlgorithm%2A>и перечисление связанных <xref:System.Security.Authentication.HashAlgorithmType>. |   | Алгоритм обеспечения конфиденциальности сообщений. | Свойство <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>и перечисление связанных <xref:System.Security.Authentication.CipherAlgorithmType>. |   | Преимущества выбранных алгоритмов. | <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> <xref:System.Net.Security.SslStream.HashStrength%2A>И свойства <xref:System.Net.Security.SslStream.CipherStrength%2A>. |       После успешной проверки подлинности, можно отправить данные, используя синхронный <xref:System.Net.Security.SslStream.Write%2A>или асинхронным <xref:System.Net.Security.SslStream.BeginWrite%2A>методы.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> Вы можете получать данные, используя синхронный <xref:System.Net.Security.SslStream.Read%2A>или асинхронным <xref:System.Net.Security.SslStream.BeginRead%2A>методы.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Если вы указали для <xref:System.Net.Security.SslStream.%23ctor%2A>базовый поток должен оставаться открытым, вы несете ответственность за закрытие потока после завершения с помощью него</xref:System.Net.Security.SslStream.%23ctor%2A>      Настроек [!NOTE] настроек Если приложение, создающее объект SslStream запускается с правами обычного пользователя, приложение не будет иметь доступ к сертификатам, установленным в хранилище локального компьютера, если только явным образом предоставлены разрешения для пользователя для этого.       SslStream предполагается, что время ожидания, наряду с другими <xref:System.IO.IOException>когда одно исключение из внутреннего потока считаются неустранимыми вызывающим кодом.</xref:System.IO.IOException> Повторное использование экземпляра SslStream после истечения времени ожидания будет возвращать сборки мусора. Приложение должно <xref:System.IO.Stream.Close%2A>SslStream и создает исключение в таких случаях.</xref:System.IO.Stream.Close%2A>       .NET Framework 4.6 включает средство безопасности, блокирует небезопасных шифрования и хэширования алгоритмы для подключений. Приложения с помощью TLS/SSL через API-интерфейсы, такие как HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, т. д. и предназначенных для .NET Framework 4.6 получить более надежные и безопасные поведение по умолчанию.       Разработчики имеют возможность отказаться от этого поведения для обеспечения взаимодействия с имеющиеся SSL3 услуги или TLS с служб RC4. [В этой статье](https://support.microsoft.com/kb/3069494) объясняется, как изменить код таким образом, чтобы отключить новое поведение.       Платформа .NET Framework 4.6.3 добавлены новые перегрузки для методов, которые проходят проверку подлинности, не указан версии TLS, но вместо этого использовать версию TLS, заданную по умолчанию в системе SslStreams [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Эти методы можно использовать в приложении, чтобы иметь возможность изменить значения по умолчанию как изменения лучший подход TLS версии со временем, без необходимости перестроения и повторного развертывания приложения."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> класса с помощью указанного <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: "Если значение не указано в файле конфигурации для encryptionpolicy, <xref:System.Net.Security.EncryptionPolicy>по умолчанию используется значение <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>для <xref:System.Net.Security.SslStream>экземпляр, который создается.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Использование шифра Null является обязательным, если политика шифрования задано значение <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>недоступен для чтения.       - или - <code>innerStream</code> недоступен для записи."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>innerStream</code> равен <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> класса с помощью указанного <xref:System.IO.Stream>и организацию потокового поведения замыкание.</xref:System.IO.Stream>"
  remarks: "При указании `true` для `leaveStreamOpen` параметра, закрытие <xref:System.Net.Security.SslStream>не оказывает влияния на `innerStream` потока; необходимо явно закрыть `innerStream` Если больше не требуется его</xref:System.Net.Security.SslStream>       Если значение не указано в файле конфигурации для encryptionpolicy, <xref:System.Net.Security.EncryptionPolicy>по умолчанию используется значение <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>для <xref:System.Net.Security.SslStream>экземпляр, который создается.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Использование шифра Null является обязательным, если политика шифрования задано значение <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Логическое значение, указывающее поведение закрытия <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream> Этот параметр указывает, если внутренний поток остается открытым."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>недоступен для чтения.       - или - <code>innerStream</code> недоступен для записи."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>innerStream</code> равен <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> класса с помощью указанного <xref:System.IO.Stream>, поток поведение закрытия и делегат проверки сертификата.</xref:System.IO.Stream>"
  remarks: "При указании `true` для `leaveStreamOpen` параметра, закрытие <xref:System.Net.Security.SslStream>не оказывает влияния на `innerStream` потока; необходимо явно закрыть `innerStream` Если больше не требуется его</xref:System.Net.Security.SslStream>       `userCertificateValidationCallback` Делегата `certificateErrors` аргумент содержит все коды ошибок Windows возвратил канал интерфейса поставщика поддержки безопасности (SSPI). Возвращаемое значение метода, вызванного `userCertificateValidationCallback` делегата определяет, является ли проверка подлинности проходит успешно.       Протокол безопасности и алгоритмов шифрования уже выбрано, если выбрано `userCertificateValidationCallback` вызывается метод делегата. Метод можно использовать для определения достаточности приложения выбранные криптографические алгоритмы и преимущества. Если нет, метод должен вернуть `false` для предотвращения <xref:System.Net.Security.SslStream>создаются.</xref:System.Net.Security.SslStream>       Если значение не указано в файле конфигурации для encryptionpolicy, <xref:System.Net.Security.EncryptionPolicy>по умолчанию используется значение <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>для <xref:System.Net.Security.SslStream>экземпляр, который создается.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Использование шифра Null является обязательным, если политика шифрования задано значение <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      Настроек [!NOTE] настроек Framework кэширует сеансы SSL при их создании и пытается повторно использовать кэшированный сеанс для нового запроса, если это возможно. При попытке повторно использовать сеанс SSL, платформа использует первый элемент <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(если есть), или не попытается повторно использовать анонимные сеансы, если <xref:System.Net.HttpWebRequest.ClientCertificates%2A>пуст.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      Настроек [!NOTE] настроек клиентские сертификаты не поддерживаются в версии 2 протокола SSL."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Логическое значение, указывающее поведение закрытия <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream> Этот параметр указывает, если внутренний поток остается открытым."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Объект <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> делегат, предназначенный для проверки сертификата, предоставленные удаленной стороной."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>недоступен для чтения.       - или - <code>innerStream</code> недоступен для записи."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>innerStream</code> равен <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> класса с помощью указанного <xref:System.IO.Stream>, передавать поведение замыкания, делегат проверки сертификата и делегат выбора сертификата.</xref:System.IO.Stream>"
  remarks: "При указании `true` для `leaveStreamOpen` параметра, закрытие <xref:System.Net.Security.SslStream>не оказывает влияния на `innerStream` потока; необходимо явно закрыть `innerStream` Если больше не требуется его</xref:System.Net.Security.SslStream>       `userCertificateValidationCallback` Делегата `certificateErrors` аргумент содержит все коды ошибок Windows возвратил канал интерфейса поставщика поддержки безопасности (SSPI). Возвращаемое значение метода, вызванного `userCertificateValidationCallback` делегата определяет, является ли проверка подлинности проходит успешно.       Протокол безопасности и алгоритмов шифрования уже выбрано, если выбрано `userCertificateValidationCallback` вызывается метод делегата. Метод можно использовать для определения достаточности приложения выбранные криптографические алгоритмы и преимущества. Если нет, метод должен вернуть `false` для предотвращения <xref:System.Net.Security.SslStream>создаются.</xref:System.Net.Security.SslStream>       `userCertificateSelectionCallback` Делегат полезно, если приложение имеет несколько сертификатов и динамически необходимо выбрать сертификат. Сертификаты в хранилище «MY» передаются в метод, вызываемый делегат.       Если значение не указано в файле конфигурации для encryptionpolicy, <xref:System.Net.Security.EncryptionPolicy>по умолчанию используется значение <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>для <xref:System.Net.Security.SslStream>экземпляр, который создается.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       Использование шифра Null является обязательным, если политика шифрования задано значение <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      Настроек [!NOTE] настроек Framework кэширует сеансы SSL при их создании и пытается повторно использовать кэшированный сеанс для нового запроса, если это возможно. При попытке повторно использовать сеанс SSL, платформа использует первый элемент P:System.Net.HttpWebRequest.ClientCertificates (если есть), либо пустое значение пытается повторно использовать анонимные сеансы, если P:System.Net.HttpWebRequest.ClientCertificates."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Логическое значение, указывающее поведение закрытия <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream> Этот параметр указывает, если внутренний поток остается открытым."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Объект <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> делегат, предназначенный для проверки сертификата, предоставленные удаленной стороной."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "Объект <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> делегат ответственность за выбор сертификата, используемого для проверки подлинности."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>недоступен для чтения.       - или - <code>innerStream</code> недоступен для записи."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>innerStream</code> равен <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> класса с помощью указанного<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "Использование шифра Null является обязательным, если `encryptionPolicy` параметра равным <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Объект <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Логическое значение, указывающее поведение закрытия <xref:System.IO.Stream>объект, используемый <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> для отправки и получения данных.</xref:System.IO.Stream> Этот параметр указывает, если внутренний поток остается открытым."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Объект <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> делегат, предназначенный для проверки сертификата, предоставленные удаленной стороной."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "Объект <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> делегат ответственность за выбор сертификата, используемого для проверки подлинности."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>недоступен для чтения.       - или - <code>innerStream</code> недоступен для записи.       - или - <code>encryptionPolicy</code> является недопустимым."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - или - <code>innerStream</code> равен <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается клиентами для проверки подлинности сервера и, при необходимости, клиента в соединении клиент сервер."
  remarks: "Этот метод выполняет проверку подлинности с помощью <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Сертификаты клиентов не используются в проверке подлинности. Список отзыва сертификатов не проверяется во время проверки подлинности. Значение, указанное для `targetHost` должно совпадать с именем сертификата сервера.       При успешной проверке подлинности, необходимо проверить <xref:System.Net.Security.SslStream.IsEncrypted%2A>и <xref:System.Net.Security.SslStream.IsSigned%2A>Свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Проверьте <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Свойства, чтобы определить, выполнена ли взаимная проверка подлинности.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Имя сервера, который использует это <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверки подлинности сервера с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается клиентами для проверки подлинности сервера и, при необходимости, клиента в соединении клиент сервер. Процесс проверки подлинности использует заданную коллекцию сертификатов и протокол SSL."
  remarks: "При успешной проверке подлинности, необходимо проверить <xref:System.Net.Security.SslStream.IsEncrypted%2A>и <xref:System.Net.Security.SslStream.IsSigned%2A>Свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Проверьте <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Свойства, чтобы определить, выполнена ли взаимная проверка подлинности.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора.      Настроек [!NOTE] настроек клиентские сертификаты не поддерживаются в версии 2 протокола SSL."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Имя сервера, на котором будут совместно использовать это <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> , Содержащий клиентские сертификаты."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Значение, представляющее протокол, используемый для проверки подлинности.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, проверяется ли список отзыва сертификатов во время проверки подлинности.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается клиентами для проверки подлинности сервера и, при необходимости, клиента в соединении клиент сервер в асинхронной операции."
  remarks: "Этот метод выполняет проверку подлинности с помощью <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Сертификаты клиентов не используются в проверке подлинности. Список отзыва сертификатов не проверяется во время проверки подлинности. Значение, указанное для `targetHost` должно совпадать с именем сертификата сервера.       При успешной проверке подлинности, необходимо проверить <xref:System.Net.Security.SslStream.IsEncrypted%2A>и <xref:System.Net.Security.SslStream.IsSigned%2A>Свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Проверьте <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Свойства, чтобы определить, выполнена ли взаимная проверка подлинности.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "Имя сервера, который использует это <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Возвращает <xref:System.Threading.Tasks.Task>объект задачи, представляющий асинхронную операцию.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверки подлинности сервера с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается клиентами для проверки подлинности сервера и, при необходимости, клиента в соединении клиент сервер в асинхронной операции. Процесс проверки подлинности использует заданную коллекцию сертификатов и протокол SSL."
  remarks: "При успешной проверке подлинности, необходимо проверить <xref:System.Net.Security.SslStream.IsEncrypted%2A>и <xref:System.Net.Security.SslStream.IsSigned%2A>Свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Проверьте <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Свойства, чтобы определить, выполнена ли взаимная проверка подлинности.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора.      Настроек [!NOTE] настроек клиентские сертификаты не поддерживаются в версии 2 протокола SSL."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "Имя сервера, на котором будут совместно использовать это <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> , Содержащий клиентские сертификаты."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Значение, представляющее протокол, используемый для проверки подлинности.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, проверяется ли список отзыва сертификатов во время проверки подлинности.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Возвращает <xref:System.Threading.Tasks.Task>объект задачи, представляющий асинхронную операцию.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается серверами для проверки подлинности сервера и клиента в соединении клиент сервер, используя указанный сертификат."
  remarks: "Этот метод выполняет проверку подлинности с помощью <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Список отзыва сертификатов не проверяется во время проверки подлинности. Укажите сертификат для проверки подлинности клиента не требуется.       Этот метод блокируется до завершения операции. Чтобы предотвратить блокировку до завершения операции, используйте один из <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>перегруженных версий метода.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Сертификат, используемый для проверки подлинности сервера."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверка подлинности клиента с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServer*>Метод не поддерживается в Windows 95, Windows 98 или Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается серверами для проверки подлинности сервера и клиента в соединении клиент сервер, с использованием указанных сертификатов, требований и протокола безопасности."
  remarks: "Этот метод блокируется до завершения операции. Чтобы предотвратить блокировку до завершения операции, используйте один из <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>перегруженных версий метода.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Объект X509Certificate, используемый для проверки подлинности сервера."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, является ли клиент получает запрос на сертификат для проверки подлинности.</xref:System.Boolean> Обратите внимание, что только запроса — Если сертификат не указано, что сервер по-прежнему принимает запрос на соединение."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Значение, представляющее протокол, используемый для проверки подлинности.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, проверяется ли список отзыва сертификатов во время проверки подлинности.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>не является допустимым <xref:System.Security.Authentication.SslProtocols> значение."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверка подлинности клиента с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServer*>Метод не поддерживается в Windows 95, Windows 98 или Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается серверами для проверки подлинности сервера и клиента в соединении клиент сервер, используя указанный сертификат в качестве асинхронной операции."
  remarks: "Этот метод выполняет проверку подлинности с помощью <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Список отзыва сертификатов не проверяется во время проверки подлинности. Укажите сертификат для проверки подлинности клиента не требуется.       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Сертификат, используемый для проверки подлинности сервера."
    return:
      type: System.Threading.Tasks.Task
      description: "Возвращает <xref:System.Threading.Tasks.Task>объект задачи, представляющий асинхронную операцию.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверка подлинности клиента с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>Метод не поддерживается в Windows 95, Windows 98 или Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается серверами для проверки подлинности сервера и клиента в соединении клиент сервер, с помощью указанных сертификатов, требований и протокола безопасности в качестве асинхронной операции."
  remarks: "Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Объект X509Certificate, используемый для проверки подлинности сервера."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, является ли клиент получает запрос на сертификат для проверки подлинности.</xref:System.Boolean> Обратите внимание, что только запроса — Если сертификат не указано, что сервер по-прежнему принимает запрос на соединение."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Значение, представляющее протокол, используемый для проверки подлинности.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, проверяется ли список отзыва сертификатов во время проверки подлинности.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Возвращает <xref:System.Threading.Tasks.Task>объект задачи, представляющий асинхронную операцию.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается клиентами для запуска асинхронной операции проверки подлинности сервера и при необходимости клиент."
  remarks: "Этот метод выполняет проверку подлинности с помощью <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Сертификаты клиентов не используются в проверке подлинности. Список отзыва сертификатов не проверяется во время проверки подлинности.       Значение, указанное для `targetHost` должно совпадать с именем сертификата сервера.       Необходимо выполнить операцию асинхронной проверки подлинности путем вызова <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>метод.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Как правило, вызывается метод `asyncCallback` делегата.       Этот метод блокируется до завершения операции. Для блокирования до завершения операции, используйте один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>перегруженных версий метода.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/add/includes/ajax-current-ext-md.md) при получении <xref:System.Security.Authentication.AuthenticationException>, то <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Имя сервера, который использует это <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, который ссылается на метод, который вызывается после завершения проверки подлинности.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Определенный пользователем объект, который содержит сведения об операции. Этот объект передается `asyncCallback` делегировать после завершения операции."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Объект, указывающий состояние асинхронной операции.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверки подлинности сервера с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается клиентами для запуска асинхронной операции проверки подлинности сервера и, при необходимости, клиента с использованием указанных сертификатов и протокола безопасности."
  remarks: "Значение, указанное для `targetHost` должно совпадать с именем сертификата сервера.       Необходимо выполнить операцию асинхронной проверки подлинности путем вызова <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>метод.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Как правило, вызывается метод `asyncCallback` делегата.       Этот метод блокируется до завершения операции. Для блокирования до завершения операции, используйте один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>перегруженных версий метода.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/add/includes/ajax-current-ext-md.md) при получении <xref:System.Security.Authentication.AuthenticationException>, то <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора.      Настроек [!NOTE] настроек клиентские сертификаты не поддерживаются в версии 2 протокола SSL."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "Имя сервера, который использует это <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> Содержащий клиентские сертификаты."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Значение, представляющее протокол, используемый для проверки подлинности.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, проверяется ли список отзыва сертификатов во время проверки подлинности.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, который ссылается на метод, который вызывается после завершения проверки подлинности.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Определенный пользователем объект, который содержит сведения об операции. Этот объект передается `asyncCallback` делегировать после завершения операции."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Объект, указывающий состояние асинхронной операции.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>не является допустимым <xref:System.Security.Authentication.SslProtocols> значение."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверки подлинности сервера с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается серверами для начала асинхронной операции для проверки подлинности клиента и при необходимости сервера в соединении клиент сервер."
  remarks: "Этот метод выполняет проверку подлинности с помощью <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Список отзыва сертификатов не проверяется во время проверки подлинности. Укажите сертификат для проверки подлинности клиента не требуется.       Необходимо выполнить операцию асинхронной проверки подлинности путем вызова <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>метод.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Как правило, вызывается метод `asyncCallback` делегата.       Этот метод блокируется до завершения операции. Для блокирования до завершения операции, используйте один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>перегруженных версий метода.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/add/includes/ajax-current-ext-md.md) при получении <xref:System.Security.Authentication.AuthenticationException>, то <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Объект X509Certificate, используемый для проверки подлинности сервера."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, который ссылается на метод, который вызывается после завершения проверки подлинности.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Определенный пользователем объект, который содержит сведения об операции. Этот объект передается `asyncCallback` делегировать после завершения операции."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Показывающий состояние асинхронной операции.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверка подлинности клиента с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>Метод не поддерживается в Windows 95, Windows 98 или Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывается серверами для начала асинхронной операции для проверки подлинности сервера и клиента с использованием указанных сертификатов, требований и протокола безопасности."
  remarks: "Необходимо выполнить операцию асинхронной проверки подлинности путем вызова <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>метод.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> Как правило, вызывается метод `asyncCallback` делегата.       Этот метод блокируется до завершения операции. Для блокирования до завершения операции, используйте один из <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>перегруженных версий метода.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/add/includes/ajax-current-ext-md.md) при получении <xref:System.Security.Authentication.AuthenticationException>, то <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Объект X509Certificate, используемый для проверки подлинности сервера."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, является ли клиент получает запрос на сертификат для проверки подлинности.</xref:System.Boolean> Обратите внимание, что только запроса — Если сертификат не указано, что сервер по-прежнему принимает запрос на соединение."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Значение, представляющее протокол, используемый для проверки подлинности.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, проверяется ли список отзыва сертификатов во время проверки подлинности.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, который ссылается на метод, который вызывается после завершения проверки подлинности.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Определенный пользователем объект, который содержит сведения об операции. Этот объект передается `asyncCallback` делегировать после завершения операции."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Объект, указывающий состояние асинхронной операции.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>не является допустимым <xref:System.Security.Authentication.SslProtocols> значение."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности уже выполнена.       - или - проверки подлинности сервера с помощью этого <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> уже выполнена попытка.       - или - проверка подлинности уже выполняется."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>Метод не поддерживается в Windows 95, Windows 98 или Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Начинает асинхронную операцию чтения, который считывает данные из потока и сохраняет его в указанном массиве."
  remarks: "Если включено шифрование и подписывание, операция чтения считывает данные из базового потока, проверяет целостность данных и расшифровывает его. Необходимо выполнить операцию асинхронного чтения путем вызова <xref:System.Net.Security.SslStream.EndRead%2A>метод.</xref:System.Net.Security.SslStream.EndRead%2A> Как правило, вызывается метод `asyncCallback` делегата.       Этот метод блокируется до завершения операции. Для блокирования до завершения операции, используйте <xref:System.Net.Security.SslStream.Read%2A>метод.</xref:System.Net.Security.SslStream.Read%2A>       Подробные сведения об использовании модели асинхронного программирования см. в разделе [асинхронный вызов синхронных методов](~/add/includes/ajax-current-ext-md.md) <xref:System.Net.Security.SslStream>класс не поддерживает несколько одновременных операций чтения.</xref:System.Net.Security.SslStream>       Этот метод нельзя вызывать до успешного выполнения проверки подлинности. Для проверки подлинности, вызовите один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, или <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, получающий байтов, считанных из потока.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Отсчитываемый от нуля расположение в `buffer` с которого начинается сохранение данных, считанных из текущего потока."
    - id: count
      type: System.Int32
      description: "Максимальное число байтов, считанных из потока."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, который ссылается на метод, который вызывается после завершения операции чтения.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Определяемые пользователем объект, содержащий сведения об операции чтения. Этот объект передается `asyncCallback` делегировать после завершения операции."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Объект, указывающий состояние асинхронной операции.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; длина <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Сбой операции чтения.       - или - используется шифрование, но не удалось расшифровать данные."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Выполняется операция чтения уже существует."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности не выполнена."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Начинает операцию асинхронной записи, которая записывает <xref:System.Byte>s из указанного буфера в поток.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, предоставляющий байтов для записи в поток.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Отсчитываемый от нуля расположение в `buffer` с которого начинается чтение байтов для записи в поток."
    - id: count
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее количество байтов, считываемых из `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "<xref:System.AsyncCallback>Делегат, который ссылается на метод, который вызывается после завершения операции записи.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Определенный пользователем объект, который содержит сведения об операции записи. Этот объект передается `asyncCallback` делегировать после завершения операции."
    return:
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>, Показывающий состояние асинхронной операции.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; длина <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Не удалось выполнить операцию записи."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Уже выполняется операция записи."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности не выполнена."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, является ли базовый поток для чтения.</xref:System.Boolean>"
  remarks: "Если проверка подлинности завершилась успешно, это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.CanRead%2A>базового потока.</xref:System.IO.Stream.CanRead%2A>       Основной поток, задается при создании экземпляра <xref:System.Net.Security.SslStream>класса.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если проверка подлинности выполнена и основной поток доступен для чтения; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, допускает ли базовый поток.</xref:System.Boolean>"
  remarks: "Не пытайтесь задать положение <xref:System.Net.Security.SslStream>объекта или его базовый поток.</xref:System.Net.Security.SslStream>       Основной поток, задается при создании экземпляра <xref:System.Net.Security.SslStream>класса.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Это свойство всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, поддерживает ли базовый поток тайм-ауты.</xref:System.Boolean>"
  remarks: "Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.CanTimeout%2A>базового потока.</xref:System.IO.Stream.CanTimeout%2A>       Основной поток, задается при создании экземпляра <xref:System.Net.Security.SslStream>класса.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если основной поток поддерживает время ожидания; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, является ли базовый поток для записи.</xref:System.Boolean>"
  remarks: "Если проверка подлинности завершилась успешно, это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.CanWrite%2A>базового потока.</xref:System.IO.Stream.CanWrite%2A>       Основной поток, задается при создании экземпляра <xref:System.Net.Security.SslStream>класса.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если проверка подлинности выполнена и основной поток доступен для записи; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, проверяется ли список отзыва сертификатов во время процесса проверки сертификатов.</xref:System.Boolean>"
  remarks: "Список отзыва сертификатов содержит сертификаты, которые были отозваны издателем. Проверка списка отрицательно влияет на производительность, но повышает безопасность приложения."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если проверяется список отзыва сертификатов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает значение, определяющее массового алгоритм шифрования, используемые этим <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Значение <xref:System.Security.Authentication.CipherAlgorithmType>для свойства CipherAlgorithm требуется при <xref:System.Net.Security.EncryptionPolicy>значение перечисления используется для создания <xref:System.Net.Security.SslStream>экземпляра.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]и [!INCLUDE[winxp](~/add/includes/winxp-md.md)] не поддерживают <xref:System.Security.Authentication.CipherAlgorithmType>значение.</xref:System.Security.Authentication.CipherAlgorithmType> Поэтому, даже если <xref:System.Security.Authentication.CipherAlgorithmType>значение используется для создания <xref:System.Net.Security.SslStream>экземпляра, <xref:System.Net.Security.EncryptionPolicy>свойство будет иметь <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.CipherAlgorithmType> <xref:System.Security.Authentication.CipherAlgorithmType>Значение возвращается только в ОС Windows Vista и более поздних версий.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "Объект <xref:System.Security.Authentication.CipherAlgorithmType>значение.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Свойство CipherAlgorithm получен до завершения процесса проверки подлинности или процесс проверки подлинности не удалось."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает значение, указывающее стойкость шифра алгоритма, используемого этим <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Значение этого свойства равно нулю, пока не будет выполнена проверка подлинности.       Это свойство возвращает одно из следующих значений: - 0 - 40-56-80-128-168 192 - 256."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее стойкость алгоритма, в битах.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод вызывается методом открытые `Dispose()`метод и <xref:System.Object.Finalize%2A>метод.</xref:System.Object.Finalize%2A> `Dispose()`вызывает защищенный `Dispose(Boolean)` метод с `disposing` равным `true`. <xref:System.Object.Finalize%2A>вызывает `Dispose` с `disposing` значение `false`.</xref:System.Object.Finalize%2A>       При `disposing` параметр имеет значение true, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Net.Security.SslStream>ссылки.</xref:System.Net.Security.SslStream> Этот метод вызывает `Dispose()` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Завершает операцию ожидания асинхронного сервера проверки подлинности, работы с предыдущим вызовом <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  remarks: "Если операция не завершена, этот метод блокируется до завершения удаления. При успешной проверке подлинности, необходимо проверить <xref:System.Net.Security.SslStream.IsEncrypted%2A>и <xref:System.Net.Security.SslStream.IsSigned%2A>Свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Проверьте <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Свойства, чтобы определить, выполнена ли взаимная проверка подлинности.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора.       Для выполнения этой операции в синхронном режиме, воспользуйтесь одним из <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Экземпляр, возвращаемый вызовом <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>не был создан с помощью вызова <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Нет проверки подлинности сервера для выполнения."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Завершает операцию ожидания асинхронного клиента проверки подлинности, работы с предыдущим вызовом <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>"
  remarks: "Если операция не завершена, этот метод блокируется до завершения удаления. При успешной проверке подлинности, необходимо проверить <xref:System.Net.Security.SslStream.IsEncrypted%2A>и <xref:System.Net.Security.SslStream.IsSigned%2A>Свойства, чтобы определить, какие службы безопасности используются <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> Проверьте <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>Свойства, чтобы определить, выполнена ли взаимная проверка подлинности.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Если происходит сбой проверки подлинности, вы получите <xref:System.Security.Authentication.AuthenticationException>и это <xref:System.Net.Security.SslStream>уже не используется.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Необходимо закрыть этот объект и удалить все ссылки на него, чтобы его сможет собрать сборщик мусора.       Для выполнения этой операции в синхронном режиме, воспользуйтесь одним из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>метод.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Экземпляр, возвращаемый вызовом <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>не был создан с помощью вызова <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "Не удалось выполнить проверку подлинности, а данный объект остался в нерабочем состоянии."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Нет проверки подлинности клиентов, ожидающих завершения."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Завершает асинхронную операцию чтения работы с предыдущим вызовом <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*>"
  remarks: "Если операция не завершена, этот метод блокируется до завершения удаления.       Для синхронного выполнения этой операции, используйте <xref:System.Net.Security.SslStream.Read%2A>метод.</xref:System.Net.Security.SslStream.Read%2A>       Этот метод нельзя вызывать до успешного выполнения проверки подлинности. Для проверки подлинности, вызовите один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, или <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Экземпляр, возвращаемый вызовом <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "Объект <xref:System.Int32>, указывающее число байтов, считанное из базового потока.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>не был создан с помощью вызова <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности не выполнена."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Сбой операции чтения."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Заканчивает операцию асинхронной записи, работы с предыдущим вызовом <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*>"
  remarks: "Если операция не завершена, этот метод блокируется до завершения удаления.       Приложение не может вызвать этот метод до успешного выполнения проверки подлинности. Для проверки подлинности, вызовите один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, или <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Для синхронного выполнения этой операции, используйте <xref:System.Net.Security.SslStream.Write%2A>метод.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Экземпляр, возвращаемый вызовом <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>не был создан с помощью вызова <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности не выполнена."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Не удалось выполнить операцию записи."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывает запись всех буферизованных данных в базовое устройство."
  remarks: "Этот метод вызывает <xref:System.IO.Stream.Flush%2A>базового потока.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает алгоритм, используемый для создания кодов проверки подлинности сообщения (Mac)."
  remarks: "Алгоритмы проверки подлинности сообщений создают хэши и подписи используются для выявления искажения или подделки."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "Объект <xref:System.Security.Authentication.HashAlgorithmType>значение.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Свойство HashAlgorithm получен до завершения процесса проверки подлинности или процесс проверки подлинности не удалось."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает значение, указывающее стойкость хэш-алгоритм, используемый данным экземпляром."
  remarks: "Значение этого свойства равно нулю, пока не будет выполнена проверка подлинности."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее степень <xref:System.Security.Authentication.HashAlgorithmType>алгоритма, в битах.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> Допустимые значения: 128 или 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, успешно ли выполнена проверка подлинности.</xref:System.Boolean>"
  remarks: "Проверка подлинности клиентов путем вызова <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>или <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Серверы, проверку подлинности путем вызова <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>или <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если произошла Успешная проверка подлинности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, является ли это <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> использует шифрование данных.</xref:System.Boolean>"
  remarks: "Шифрование помогает защитить конфиденциальность данных, а именно, помогает убедиться, что время во время передачи данных, его невозможно расшифровать третьей стороной."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если данные шифруются до передачи по сети и расшифровываются при достижении удаленной конечной точки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, является ли сервер и клиент прошедшие проверку подлинности.</xref:System.Boolean>"
  remarks: "Взаимная проверка подлинности задается сервером, если серверу требуется клиент предоставлял сертификат для проверки подлинности."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если сервер прошел проверку подлинности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, является ли на локальной стороне соединения, используемые этим экземпляром <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> была выполнена проверка подлинности, что и сервер.</xref:System.Boolean>"
  remarks: "Если проверка подлинности не удалось или не применялась, это свойство возвращает `false`.       Для проверки подлинности, что и сервер, вызовите <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>или <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если локальная конечная точка была успешно прошел проверку подлинности как серверная сторона соединения с проверкой подлинности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Boolean>значение, указывающее, подписан ли данные, отправляемые с помощью этого потока.</xref:System.Boolean>"
  remarks: "Подписывание данных помогает защитить целостность данных, а именно, помогает получатель мог определить, является ли данные подделки во время передачи."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если данные были подписаны перед передачей; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает алгоритм обмена ключами, используемые этим <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Значение этого свойства — <xref:System.Security.Authentication.ExchangeAlgorithmType>пока не будет выполнена проверка подлинности.</xref:System.Security.Authentication.ExchangeAlgorithmType>       Алгоритм обмена ключами защищает данные, используемые для создания общих ключей."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "<xref:System.Security.Authentication.ExchangeAlgorithmType>Значение.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает значение, указывающее стойкость алгоритма обмена ключами, используемое этим экземпляром."
  remarks: "Значение этого свойства равно нулю, пока не будет выполнена проверка подлинности.       В общих сценариях, значение этого свойства является одним из следующих: - 512 768-1024 2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Значение, указывающее степень <xref:System.Security.Authentication.ExchangeAlgorithmType>алгоритма, в битах.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает длину базового потока."
  remarks: "Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.Length%2A>базового потока.</xref:System.IO.Stream.Length%2A> Если базовый поток недоступен для поиска, этот метод обычно создает исключение. Тип времени выполнения базового потока определяет тип времени выполнения исключение создается."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Длина базового потока."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Получение значения данного свойства не поддерживается, если базовый поток не <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает сертификат, используемый для проверки подлинности локальной конечной точки."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Объект X509Certificate, представляющий сертификат, предоставленный для проверки подлинности или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если сертификат не был передан."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удалось выполнить проверку подлинности, или не произошло."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает или задает текущую позицию в базовом потоке."
  remarks: "Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.Position%2A>базового потока.</xref:System.IO.Stream.Position%2A> Если базовый поток недоступен для поиска, этот метод обычно создает исключение. Тип времени выполнения базового потока определяет тип времени выполнения исключение создается."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       Текущая позиция в базовый поток."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Задание этого свойства не поддерживается.       Получение значения данного свойства не поддерживается, если базовый поток не - или - <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Считывает данные из текущего потока и сохраняет его в указанном массиве."
  remarks: "Этот метод считывает более `count` байт из потока и сохраняет их в `buffer` начиная `offset`. Нельзя выполнять несколько одновременных операций чтения.       Этот метод нельзя вызывать до успешного выполнения проверки подлинности. Для проверки подлинности, вызовите один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, или <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Чтобы выполнить эту операцию асинхронно, используйте <xref:System.Net.Security.SslStream.BeginRead%2A>метод.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, получающий байтов, считанное из текущего потока.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Объект <xref:System.Int32>, содержащее расположение (с нуля) в `buffer` с которого начинается сохранение данных, считанных из текущего потока.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "Объект <xref:System.Int32>, содержащий максимальное количество байтов, считанное из текущего потока.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "Объект <xref:System.Int32>значение, указывающее число считанных байтов.</xref:System.Int32> Если нет дополнительных данных для чтения, возвращает значение 0."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; длина <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Сбой операции чтения. Проверьте внутреннее исключение, если присутствует, чтобы определить причину сбоя."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Выполняется операция чтения уже существует."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности не выполнена."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает или задает время, операции чтения блокирует ожидание данных."
  remarks: "Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.ReadTimeout%2A>базового потока.</xref:System.IO.Stream.ReadTimeout%2A> Если значение этого свойства <xref:System.IO.Stream.ReadTimeout%2A>базового потока будет присвоено указанное значение.</xref:System.IO.Stream.ReadTimeout%2A>       Если базовый поток <xref:System.Net.Sockets.NetworkStream>, ReadTimeout указывается в миллисекундах, а также равен <xref:System.Threading.Timeout.Infinite>по умолчанию, поэтому, читать операций выполните времени ожидания.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Объект <xref:System.Int32>, указывающий количество времени, по истечении синхронное чтение завершается с ошибкой.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает сертификат, используемый для проверки подлинности удаленной конечной точки."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Объект X509Certificate, представляющий сертификат, предоставленный для проверки подлинности или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если сертификат не был передан."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Не удалось выполнить проверку подлинности, или не произошло."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Вызывает <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Не вызывайте этот метод. Он наследуется, но не поддерживается <xref:System.Net.Security.SslStream>классом.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Это значение игнорируется."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Это значение игнорируется."
    return:
      type: System.Int64
      description: "Всегда создает исключение <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Поиск не поддерживается <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> объектов."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Задает длину базового потока."
  remarks: "Этот метод вызывает <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>базового потока указан, если это <xref:System.Net.Security.SslStream>был создан.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "<xref:System.Int64>Значение, указывающее длину потока.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает значение, указывающее протокол безопасности, используемый для проверки подлинности этого подключения."
  remarks: "Протоколы безопасности, поддерживаемые задаются при <xref:System.Net.Security.SslStream>создается.</xref:System.Net.Security.SslStream> Если протокол безопасности не было передано в конструктор, экземпляр создается с помощью <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Фактический протокол, используемый для проверки подлинности выбран на основе протоколов, поддерживаемых клиентом и сервером."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "<xref:System.Security.Authentication.SslProtocols>Значение, представляющее протокол, используемый для проверки подлинности.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает <xref:System.Net.TransportContext>используется для проверки подлинности с использованием расширенной защиты.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "<xref:System.Net.TransportContext>, Содержащий токен привязки канала (CBT), который используется для расширенной защиты.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Записывает указанные данные в этот поток."
  remarks: "Этот метод блокируется, пока выполняется операция. Чтобы предотвратить блокировку во время завершения операции, используйте <xref:System.Net.Security.SslStream.BeginWrite%2A>метод.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Этот метод нельзя вызывать до успешного выполнения проверки подлинности. Для проверки подлинности, вызовите один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, или <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       <xref:System.Net.Security.SslStream>Класс не поддерживает несколько одновременных записи операций.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, предоставляющий байты для записи в поток.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Не удалось выполнить операцию записи."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Уже выполняется операция записи."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности не выполнена."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Записи указанного числа <xref:System.Byte>s в основной поток, используя указанный буфер и смещение.</xref:System.Byte>"
  remarks: "Этот метод блокируется, пока выполняется операция. Чтобы предотвратить блокировку во время операции завершения операции завершения, используйте <xref:System.Net.Security.SslStream.BeginWrite%2A>метод.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Этот метод нельзя вызывать до успешного выполнения проверки подлинности. Для проверки подлинности, вызовите один из <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, или <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>методы.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       <xref:System.Net.Security.SslStream>Класс не поддерживает несколько одновременных записи операций.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Объект <xref:System.Byte>массив, предоставляющий байты для записи в поток.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Объект <xref:System.Int32>, содержащее расположение (с нуля) в `buffer` с которого начинается чтение байтов для записи в поток.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "Объект <xref:System.Int32>, содержащее число байтов, считываемых из `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; длина <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Не удалось выполнить операцию записи."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Уже выполняется операция записи."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Этот объект был закрыт."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Проверка подлинности не выполнена."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Возвращает или задает время, операции записи блокируется, ожидая получения данных."
  remarks: "Это свойство возвращает значение, возвращаемое вызовом <xref:System.IO.Stream.WriteTimeout%2A>базового потока.</xref:System.IO.Stream.WriteTimeout%2A> Набор операций, задает указанное значение <xref:System.IO.Stream.WriteTimeout%2A>значение базового потока.</xref:System.IO.Stream.WriteTimeout%2A>       Если базовый поток <xref:System.Net.Sockets.NetworkStream>, WriteTimeout указывается в миллисекундах, а также равен <xref:System.Threading.Timeout.Infinite>по умолчанию, поэтому, используемых для записи операций выполните времени ожидания.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Объект <xref:System.Int32>, указывающий количество времени, по истечении которого происходит сбой синхронной операции записи.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
