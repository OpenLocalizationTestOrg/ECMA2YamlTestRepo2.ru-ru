### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IContractBehaviorAttribute
  id: IContractBehaviorAttribute
  children:
  - System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
  langs:
  - csharp
  name: IContractBehaviorAttribute
  nameWithType: IContractBehaviorAttribute
  fullName: System.ServiceModel.Description.IContractBehaviorAttribute
  type: Interface
  summary: "Указывает контракт, для которого атрибут, реализующий &lt;xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName&gt; интерфейс активен."
  remarks: "Реализовать интерфейс IContractBehaviorAttribute на атрибут, который также является <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>объект для использования этого атрибута поведение контракта типа службы, но ограничить его применение для контракта, заданного в <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A>свойство.</xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A> </xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>       Не требуется для реализации IContractBehaviorAttribute на атрибутов поведения пользовательского контракта и при применении атрибута к интерфейсу контракта или дуплексного обратного вызова классу значение <xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A>свойство игнорируется.</xref:System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract%2A>       Дополнительные сведения см. в разделе <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>.</xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>"
  example:
  - "The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=fullName> implementation called `ObjectProviderBehavior` that provides a \"singleton\" behavior; it always returns the same service instance and does not recycle it.  \n  \n To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> to insert the custom service instance provider. It also implements IContractBehaviorAttribute, which binds its application to the `ISampleService` contract.  \n  \n [!code-cs[IContractBehavior#2](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#2)]\n [!code-vb[IContractBehavior#2](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#2)]"
  syntax:
    content: public interface IContractBehaviorAttribute
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
  id: TargetContract
  parent: System.ServiceModel.Description.IContractBehaviorAttribute
  langs:
  - csharp
  name: TargetContract
  nameWithType: IContractBehaviorAttribute.TargetContract
  fullName: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Получает тип контракта, к которому могут применяться расширения функциональности контракта."
  remarks: "Реализует свойство TargetContract для указания контракта, к которому поведение контракта не применяется при реализации <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>атрибут применяется к классу службы.</xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName>"
  example:
  - "The following code example assumes a custom <xref:System.ServiceModel.Dispatcher.IInstanceProvider?displayProperty=fullName> implementation called `ObjectProviderBehavior` that provides a \"singleton\" behavior; it always returns the same service instance and does not recycle it.  \n  \n To insert the instance provider customization, the example shows how to implement a custom attribute (`SingletonBehaviorAttribute`) that implements <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> to insert the custom service instance provider. It also implements <xref:System.ServiceModel.Description.IContractBehaviorAttribute>, which binds its application to the `ISampleService` contract.  \n  \n [!code-cs[IContractBehavior#2](~/add/codesnippet/csharp/icontractbehavior.client/objectproviderbehavior.cs#2)]\n [!code-vb[IContractBehavior#2](~/add/codesnippet/visualbasic/icontractbehavior.client/objectproviderbehavior.vb#2)]"
  syntax:
    content: public Type TargetContract { get; }
    return:
      type: System.Type
      description: "Контракт, к которому могут применяться расширения функциональности контракта."
  overload: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
  parent: System.ServiceModel.Description.IContractBehaviorAttribute
  isExternal: false
  name: TargetContract
  nameWithType: IContractBehaviorAttribute.TargetContract
  fullName: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.IContractBehaviorAttribute.TargetContract*
  parent: System.ServiceModel.Description.IContractBehaviorAttribute
  isExternal: false
  name: TargetContract
  nameWithType: IContractBehaviorAttribute.TargetContract
