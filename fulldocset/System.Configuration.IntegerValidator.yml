### YamlMime:ManagedReference
items:
- uid: System.Configuration.IntegerValidator
  id: IntegerValidator
  children:
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  - System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  - System.Configuration.IntegerValidator.CanValidate(System.Type)
  - System.Configuration.IntegerValidator.Validate(System.Object)
  langs:
  - csharp
  name: IntegerValidator
  nameWithType: IntegerValidator
  fullName: System.Configuration.IntegerValidator
  type: Class
  summary: "Выполняет проверку <xref:System.Int32>значение.</xref:System.Int32>"
  remarks: "Класс IntegerValidator используется для целого числа удовлетворяет определенным критериям. Для проверки критериев устанавливаются при создании экземпляра класса IntegerValidator. <xref:System.Configuration.IntegerValidator.%23ctor%2A>Конструктор с двумя параметрами гарантирует, что выполняется проверка целое число соответствует минимальным и максимальным значениями,.</xref:System.Configuration.IntegerValidator.%23ctor%2A> <xref:System.Configuration.IntegerValidator.%23ctor%2A>Конструктор с тремя параметрами проверяет минимальной и максимальной <xref:System.Int32>значений, а также ли проверяемое значение находится в пределах указанного диапазона.</xref:System.Int32> </xref:System.Configuration.IntegerValidator.%23ctor%2A> <xref:System.Configuration.IntegerValidator.%23ctor%2A>Конструктор с параметрами четыре проверяет предыдущих трех параметров, а также проверяет ли <xref:System.Int32>значение равно определенным разрешением.</xref:System.Int32> </xref:System.Configuration.IntegerValidator.%23ctor%2A>       <xref:System.Configuration.IntegerValidator.CanValidate%2A>Метод определяет, совпадает ли тип проверяемого ожидаемого типа.</xref:System.Configuration.IntegerValidator.CanValidate%2A> Проверяемый объект передается как параметр <xref:System.Configuration.IntegerValidator.Validate%2A>метод.</xref:System.Configuration.IntegerValidator.Validate%2A>"
  example:
  - "The following code example demonstrates how to use the IntegerValidator type.  \n  \n [!code-vb[System.Configuration.IntegerValidator#1](~/add/codesnippet/visualbasic/t-system.configuration.i_3_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#1](~/add/codesnippet/csharp/t-system.configuration.i_3_1.cs)]"
  syntax:
    content: 'public class IntegerValidator : System.Configuration.ConfigurationValidatorBase'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationValidatorBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> класса."
  remarks: "Этот конструктор IntegerValidator гарантирует, что выполняется проверка целое число соответствует минимальная и максимальная длина."
  syntax:
    content: public IntegerValidator (int minValue, int maxValue);
    parameters:
    - id: minValue
      type: System.Int32
      description: "<xref:System.Int32>Объект, который определяет минимальное значение.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "<xref:System.Int32>Объект, который определяет максимальное значение.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Int32,System.Boolean)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> класса."
  remarks: "При создании экземпляра <xref:System.Configuration.IntegerValidator>класс, конструктор IntegerValidator проверяет минимальной и максимальной <xref:System.Int32>значений, а также проверки, состоит ли диапазон монопольного.</xref:System.Int32> </xref:System.Configuration.IntegerValidator> Когда `rangeIsExclusive` параметра равным `true`, <xref:System.Int32>значение не должно быть между `minValue` и `maxValue` значения параметров.</xref:System.Int32>"
  example:
  - "The following code example demonstrates how to use the IntegerValidator constructor. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#2](~/add/codesnippet/visualbasic/39b5b9f2-305e-4ede-8502-_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#2](~/add/codesnippet/csharp/39b5b9f2-305e-4ede-8502-_1.cs)]"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive);
    parameters:
    - id: minValue
      type: System.Int32
      description: "<xref:System.Int32>Объект, который определяет минимальное значение.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "<xref:System.Int32>Объект, который определяет максимальное значение.</xref:System.Int32>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы указать монопольный диапазон проверки. Включительно означает значение для проверки должен быть в пределах указанного диапазона; эксклюзивное означает, что он должен быть меньше минимального или больше максимально."
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)'
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Configuration.IntegerValidator&quot;> </xref> класса."
  remarks: "<xref:System.Int32>Проверяемое значение должно быть равно `resolution` значение, чтобы пройти проверку.</xref:System.Int32>"
  syntax:
    content: public IntegerValidator (int minValue, int maxValue, bool rangeIsExclusive, int resolution);
    parameters:
    - id: minValue
      type: System.Int32
      description: "<xref:System.Int32>Объект, который указывает минимальную длину значения целого числа.</xref:System.Int32>"
    - id: maxValue
      type: System.Int32
      description: "<xref:System.Int32>Объект, который указывает максимальную длину значения целого числа.</xref:System.Int32>"
    - id: rangeIsExclusive
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, которое указывает, является ли диапазон проверки монопольного.</xref:System.Boolean>"
    - id: resolution
      type: System.Int32
      description: "<xref:System.Int32>Объект, который указывает значение, которое необходимо сопоставить.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>resolution</code> is less than <xref uid=\"langword_csharp_0\" name=\"0\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>minValue</code> is greater than <code>maxValue</code>."
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  id: CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Определяет, можно ли проверить тип объекта."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the CanValidate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#3](~/add/codesnippet/visualbasic/m-system.configuration.i_1_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#3](~/add/codesnippet/csharp/m-system.configuration.i_1_1.cs)]"
  syntax:
    content: public override bool CanValidate (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Тип объекта."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> type </code> параметр соответствует <xref:System.Int32>значение; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Int32>"
  overload: System.Configuration.IntegerValidator.CanValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  id: Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  langs:
  - csharp
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Определяет, является ли допустимым значение объекта."
  remarks: "<xref:System.Configuration.IntegerValidator>Объект содержит правила, которые необходимо проверить целое число со знаком.</xref:System.Configuration.IntegerValidator> Правила, устанавливаются при создании экземпляра <xref:System.Configuration.IntegerValidator>создан класс.</xref:System.Configuration.IntegerValidator> Целое число со знаком для проверки передается как параметр метода проверки."
  example:
  - "The following code example demonstrates how to use the Validate method. This code example is part of a larger example provided for the <xref:System.Configuration.IntegerValidator> class.  \n  \n [!code-vb[System.Configuration.IntegerValidator#4](~/add/codesnippet/visualbasic/m-system.configuration.i_6_1.vb)]\n [!code-cs[System.Configuration.IntegerValidator#4](~/add/codesnippet/csharp/m-system.configuration.i_6_1.cs)]"
  syntax:
    content: public override void Validate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Значение для проверки."
  overload: System.Configuration.IntegerValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorBase
  isExternal: false
  name: System.Configuration.ConfigurationValidatorBase
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.IntegerValidator.#ctor(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator(Int32,Int32,Boolean,Int32)
  nameWithType: IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
  fullName: System.Configuration.IntegerValidator.IntegerValidator(Int32,Int32,Boolean,Int32)
- uid: System.Configuration.IntegerValidator.CanValidate(System.Type)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate(Type)
  nameWithType: IntegerValidator.CanValidate(Type)
  fullName: System.Configuration.IntegerValidator.CanValidate(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Configuration.IntegerValidator.Validate(System.Object)
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate(Object)
  nameWithType: IntegerValidator.Validate(Object)
  fullName: System.Configuration.IntegerValidator.Validate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.IntegerValidator.#ctor*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: IntegerValidator
  nameWithType: IntegerValidator.IntegerValidator
- uid: System.Configuration.IntegerValidator.CanValidate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: CanValidate
  nameWithType: IntegerValidator.CanValidate
- uid: System.Configuration.IntegerValidator.Validate*
  parent: System.Configuration.IntegerValidator
  isExternal: false
  name: Validate
  nameWithType: IntegerValidator.Validate
