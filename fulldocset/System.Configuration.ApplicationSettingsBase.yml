### YamlMime:ManagedReference
items:
- uid: System.Configuration.ApplicationSettingsBase
  id: ApplicationSettingsBase
  children:
  - System.Configuration.ApplicationSettingsBase.#ctor
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  - System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  - System.Configuration.ApplicationSettingsBase.Context
  - System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  - System.Configuration.ApplicationSettingsBase.Item(System.String)
  - System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  - System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  - System.Configuration.ApplicationSettingsBase.Properties
  - System.Configuration.ApplicationSettingsBase.PropertyChanged
  - System.Configuration.ApplicationSettingsBase.PropertyValues
  - System.Configuration.ApplicationSettingsBase.Providers
  - System.Configuration.ApplicationSettingsBase.Reload
  - System.Configuration.ApplicationSettingsBase.Reset
  - System.Configuration.ApplicationSettingsBase.Save
  - System.Configuration.ApplicationSettingsBase.SettingChanging
  - System.Configuration.ApplicationSettingsBase.SettingsKey
  - System.Configuration.ApplicationSettingsBase.SettingsLoaded
  - System.Configuration.ApplicationSettingsBase.SettingsSaving
  - System.Configuration.ApplicationSettingsBase.Upgrade
  langs:
  - csharp
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase
  fullName: System.Configuration.ApplicationSettingsBase
  type: Class
  summary: "Действует как базовый класс для извлечения конкретного класса-оболочки для реализации функциональностью параметров приложения в приложениях Windows Forms."
  remarks: "ApplicationSettingsBase добавляет следующие функциональные возможности для <xref:System.Configuration.SettingsBase>класс, который используется веб-приложениями:-возможность определять атрибуты в производном класса-оболочки параметров.</xref:System.Configuration.SettingsBase> ApplicationSettingsBase поддерживает декларативной модели, используемой для свойства класса программы-оболочки, как описано далее.      -Более высокого уровня <xref:System.Configuration.ApplicationSettingsBase.Save%2A>и <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>методы.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Save%2A>      -События дополнительные проверки, которые можно обрабатывать для обеспечения правильного отдельных параметров.       В архитектуре параметров приложения для доступа к группе свойств параметров необходимо унаследовать класс-оболочку конкретные ApplicationSettingsBase. Класс-оболочку настраивает ApplicationSettingsBase одним из следующих способов: - для каждого свойства параметров для доступа, строго типизированными соответствующего открытого свойство добавлено в класс-оболочку. Это свойство имеет `get` и `set` методы доступа для чтения и записи параметров приложения, но только `get` метод доступа для параметры только для чтения.      -Выделенные атрибуты должны применяться к общим свойствам класса-оболочки для указания характеристики свойства параметров, таких как область действия (приложение или пользователь), является ли параметр должен поддерживать роуминг, значение по умолчанию для параметра поставщика параметров для использования и т. д. Каждое свойство необходимо задать ее области действия с помощью либо <xref:System.Configuration.ApplicationScopedSettingAttribute>или <xref:System.Configuration.UserScopedSettingAttribute>.</xref:System.Configuration.UserScopedSettingAttribute> </xref:System.Configuration.ApplicationScopedSettingAttribute> Параметры приложения доступны только для чтения если значение по умолчанию <xref:System.Configuration.LocalFileSettingsProvider>используется.</xref:System.Configuration.LocalFileSettingsProvider>       Класс ApplicationSettingsBase использует отражение для обнаружения этих атрибутов во время выполнения. Большая часть этой информации предается на уровень поставщика параметров, который отвечает за хранение, формат хранения и т. д.       Если приложение имеет несколько классов-оболочек параметров, каждый класс определяет *группы параметров*. Каждая группа имеет следующие характеристики:-группа может содержать любое число или тип параметров свойств.      — Если имя группы не задано явным образом с помощью класса-оболочки с оформления <xref:System.Configuration.SettingsGroupNameAttribute>, то имя создается автоматически.</xref:System.Configuration.SettingsGroupNameAttribute>       По умолчанию все клиентские приложения используют <xref:System.Configuration.LocalFileSettingsProvider>для обеспечения хранилища.</xref:System.Configuration.LocalFileSettingsProvider> При необходимости поставщик параметров альтернативного затем класс-оболочку или свойства должен быть снабжен атрибутом соответствующего <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Дополнительные сведения об использовании параметров приложения см. в разделе [параметры приложения для Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of application settings to persist the following attributes of the main form: location, size, background color, and title bar text. All of these attributes are persisted as single application settings properties in the `FormSettings` class, named `FormLocation`, `FormSize`, `FormBackColor` and `FormText`, respectively. All except for `FormText` and `Size` are data bound to their associated form properties and have a default setting value applied using <xref:System.Configuration.DefaultSettingValueAttribute>.  \n  \n The form contains four child controls that have the following names and functions:  \n  \n-   A button named `btnBackColor` used to display the **Color** common dialog box.  \n  \n-   A button named `btnReload` used to <xref:System.Configuration.ApplicationSettingsBase.Reload%2A> the application settings.  \n  \n-   A button named `btnReset` used to <xref:System.Configuration.ApplicationSettingsBase.Reset%2A> the application settings.  \n  \n-   A textbox named `tbStatus` used to display status information about the program.  \n  \n Notice that after every execution of the application, an additional period character is appended to the title text of the form.  \n  \n This code example requires a Form with a <xref:System.Windows.Forms.ColorDialog> class named `colorDialog1`, and a <xref:System.Windows.Forms.StatusStrip> control with a <xref:System.Windows.Forms.ToolStripStatusLabel> named `tbStatus`. Additionally, it requires three <xref:System.Windows.Forms.Button> objects named `btnReload`, `btnReset`, and `btnBackColor`.  \n  \n [!code-cpp[AppSettingsSample#1](~/add/codesnippet/cpp/t-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#1](~/add/codesnippet/csharp/t-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#1](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#1)]"
  syntax:
    content: 'public abstract class ApplicationSettingsBase : System.Configuration.SettingsBase, System.ComponentModel.INotifyPropertyChanged'
  inheritance:
  - System.Object
  - System.Configuration.SettingsBase
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> класса в состояние по умолчанию."
  remarks: "Конструктор по умолчанию было разработано для работы в предположении, что имеется компонент, не связанные с текущей параметры класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase>       При создании экземпляра класса-оболочки, наследованный код автоматически выполнит следующие действия: 1.  Отображение класса.      2.  Для каждого свойства в оболочку отмечены либо `[UserScopedSettingAttribute]` или `[ApplicationScopedSettingAttribute]`, соответствующий <xref:System.Configuration.SettingsProperty>создается.</xref:System.Configuration.SettingsProperty>      3.  Каждый <xref:System.Configuration.SettingsProperty>имеет некоторые его свойства набора данных на основе других атрибутов, которые при необходимости присутствуют в свойства программы-оболочки, такие как значение по умолчанию или поставщик параметров.</xref:System.Configuration.SettingsProperty>      4.  Все остальные атрибуты, просто помещаются в контейнер атрибут, а <xref:System.Configuration.SettingsProperty.Attributes%2A>свойство <xref:System.Configuration.SettingsProperty>класса.</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsProperty.Attributes%2A>      5.  Все <xref:System.Configuration.SettingsProperty>объекты добавляются в <xref:System.Configuration.SettingsPropertyCollection>представляемое <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>Свойства <xref:System.Configuration.ApplicationSettingsBase>класса.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.SettingsPropertyCollection> </xref:System.Configuration.SettingsProperty> Эта коллекция передается в <xref:System.Configuration.SettingsBase.Initialize%2A>метод.</xref:System.Configuration.SettingsBase.Initialize%2A>       Как следует из шага 3 было сказано ранее, <xref:System.Configuration.ApplicationSettingsBase>работает в собственном коде с несколькими атрибутами свойства, в частности следующие: <xref:System.Configuration.SettingsProviderAttribute>, <xref:System.Configuration.DefaultSettingValueAttribute>и <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> </xref:System.Configuration.DefaultSettingValueAttribute> </xref:System.Configuration.SettingsProviderAttribute> </xref:System.Configuration.ApplicationSettingsBase> Все другие параметры атрибутов просто передается в соответствующий базовый поставщик."
  syntax:
    content: protected ApplicationSettingsBase ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  id: '#ctor(System.ComponentModel.IComponent)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> класса с помощью компонента указанного владельца."
  remarks: "Этот конструктор полностью эквивалентен <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>конструктор с помощью вызова: `ApplicationSettingsBase(owner, String.Empty)` сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor>конструктор.</xref:System.Configuration.ApplicationSettingsBase.%23ctor> </xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.ComponentModel.IComponent%2CSystem.String%29>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "Компонент, который будет выступать в качестве владельца объекта параметров приложения."
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> класса с помощью предоставленных параметров ключа."
  remarks: "Этот конструктор инициализирует <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>значение из свойства `settingsKey` параметра.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Это свойство полезно при устранении неоднозначности различных экземпляров класса-оболочки параметров в том же домене приложения.       Дополнительные сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor>конструктор.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (string settingsKey);
    parameters:
    - id: settingsKey
      type: System.String
      description: ", <xref:System.String>Которое однозначно определяет отдельные экземпляры класса-оболочки.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  id: '#ctor(System.ComponentModel.IComponent,System.String)'
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Инициализирует новый экземпляр класса <xref href=&quot;System.Configuration.ApplicationSettingsBase&quot;> </xref> класса, используя компонент указанного владельца и параметры ключ."
  remarks: "<xref:System.ComponentModel.IComponent>Объекта, указанного параметром `owner` параметр выступает в качестве владельца текущего экземпляра этого класса параметры приложений</xref:System.ComponentModel.IComponent> Во время инициализации параметров класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>, владелец сайта запрашиваются <xref:System.Configuration.ISettingsProviderService>.</xref:System.Configuration.ISettingsProviderService> </xref:System.Configuration.ApplicationSettingsBase> Если оно существует, он используется вместо поставщика собственного параметров для всех свойств класса-оболочки, в соответствии с <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Этот конструктор инициализирует <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>значение из свойства `settingsKey` параметра.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A> Это свойство полезно при устранении неоднозначности различных экземпляров класса-оболочки в одном домене приложения.       Дополнительные сведения об использовании отражения во время создания экземпляра класса-оболочки, см. по умолчанию <xref:System.Configuration.ApplicationSettingsBase.%23ctor>конструктор.</xref:System.Configuration.ApplicationSettingsBase.%23ctor>"
  syntax:
    content: protected ApplicationSettingsBase (System.ComponentModel.IComponent owner, string settingsKey);
    parameters:
    - id: owner
      type: System.ComponentModel.IComponent
      description: "Компонент, который будет выступать в качестве владельца объекта параметров приложения."
    - id: settingsKey
      type: System.String
      description: ", <xref:System.String>Которое однозначно определяет отдельные экземпляры класса-оболочки.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>owner</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Context
  id: Context
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает контекст параметров приложения, связанный с группой."
  remarks: "Каждый класс-оболочку параметров производными <xref:System.Configuration.ApplicationSettingsBase>имеет контекст, связанный с ним.</xref:System.Configuration.ApplicationSettingsBase> Контекст, передаваемый поставщику параметров для каждого свойства, чтобы определить, как используется свойство. Поэтому контекст действует как подсказка, чтобы помочь определить наилучший способ сохранения связанных значений параметров приложения поставщика параметров.       В отличие от этого, <xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>свойство позволяет поставщику параметров для устранения неоднозначности между несколькими экземплярами одного класса-оболочки.</xref:System.Configuration.ApplicationSettingsBase.SettingsKey%2A>"
  syntax:
    content: public override System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "Объект <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> связанные с группой."
  overload: System.Configuration.ApplicationSettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  id: GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает значение именованного свойства параметров для более ранней версии того же приложения."
  remarks: "Метод GetPreviousVersion часто используется в сочетании с <xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>метод при переносе параметров приложения во время установки новой версии приложения.</xref:System.Configuration.ApplicationSettingsBase.Upgrade%2A>"
  syntax:
    content: public object GetPreviousVersion (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "Объект <xref:System.String>содержит имя свойства параметров, значение которого является должны быть возвращены.</xref:System.String>"
    return:
      type: System.Object
      description: "<xref:System.Object>Содержащий значение указанного <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> Если элемент найден; в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Свойство не существует. Число свойств равно нулю или не удается найти свойство в хранилище данных."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает или задает значение указанного свойства параметров приложения."
  remarks: "Свойство элемента, также известные как индексатор, обычно используется в параметры класс-оболочку, производный от <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> Элемент открытого свойства класса-оболочки привязывает к соответствующему свойству параметры.       Элемент вызывает несколько событий в зависимости от выполняемой операции: - первый раз, получить свойство, <xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>событие.</xref:System.Configuration.ApplicationSettingsBase.SettingsLoaded>      -Если свойству присвоено значение, <xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A>событие.</xref:System.Configuration.ApplicationSettingsBase.OnSettingChanging%2A> Если обработчик не отменяет событие, а затем задать значение свойства и <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>события.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  syntax:
    content: public override object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Объект <xref:System.String>содержит имя свойства для доступа к.</xref:System.String>"
    return:
      type: System.Object
      description: "Если найдено, значение именованного свойства параметров; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ApplicationSettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Нет свойств, связанных с текущей программой-оболочкой, или не удалось найти указанное свойство."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "Была предпринята попытка задать свойство только для чтения."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "Указанное значение имеет тип, несовместимый со свойством параметров во время операции установки."
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Не удалось выполнить разбор файла конфигурации."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Вызывает <xref href=&quot;System.Configuration.ApplicationSettingsBase.PropertyChanged&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       OnPropertyChanged-метод также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnPropertyChanged (object sender, System.ComponentModel.PropertyChangedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Источник события."
    - id: e
      type: System.ComponentModel.PropertyChangedEventArgs
      description: "Объект <xref:System.ComponentModel.PropertyChangedEventArgs>, содержащий данные события.</xref:System.ComponentModel.PropertyChangedEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  id: OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Вызывает <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingChanging&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnSettingChanging также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnSettingChanging (object sender, System.Configuration.SettingChangingEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Источник события."
    - id: e
      type: System.Configuration.SettingChangingEventArgs
      description: "Объект <xref href=&quot;System.Configuration.SettingChangingEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  id: OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Вызывает <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsLoaded&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnSettingsLoaded также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnSettingsLoaded (object sender, System.Configuration.SettingsLoadedEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Источник события."
    - id: e
      type: System.Configuration.SettingsLoadedEventArgs
      description: "Объект <xref href=&quot;System.Configuration.SettingsLoadedEventArgs&quot;> </xref> , содержащий данные события."
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  id: OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Вызывает <xref href=&quot;System.Configuration.ApplicationSettingsBase.SettingsSaving&quot;> </xref> событий."
  remarks: "При возникновении события вызывается обработчик события в делегате. Дополнительные сведения см. в разделе [NIB: при возникновении события](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       Метод OnSettingsSaving также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе."
  syntax:
    content: protected virtual void OnSettingsSaving (object sender, System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "Источник события."
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "Объект <xref:System.ComponentModel.CancelEventArgs>, содержащий данные события.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Properties
  id: Properties
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает коллекцию свойств параметров в программе-оболочке."
  remarks: "`get` Метод доступа свойства свойства исследует метаданные класса-оболочки параметров, который является производным от <xref:System.Configuration.ApplicationSettingsBase>, динамически определите набор свойств параметров приложения.</xref:System.Configuration.ApplicationSettingsBase>       <xref:System.Configuration.ApplicationSettingsBase>Класс изначально распознает определенные характеристики параметра приложения, например его имя, тип свойства, поставщик параметров, значение по умолчанию считать только состояния и преимущество сериализации.</xref:System.Configuration.ApplicationSettingsBase> Эти характеристики отражаются как свойства в <xref:System.Configuration.SettingsProperty>классе.</xref:System.Configuration.SettingsProperty> Все другие атрибуты свойства параметров просто передаются связанному поставщику параметров."
  syntax:
    content: public override System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> содержит все <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> объекты, используемые в текущей программой-оболочкой."
  overload: System.Configuration.ApplicationSettingsBase.Properties*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Связанный поставщик параметров не найден или не удалось создать экземпляр."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  id: PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Происходит после изменения значения свойства параметров приложения."
  remarks: "Событие PropertyChanged, которое возникает при изменении свойства параметров через `set` доступа <xref:System.Configuration.ApplicationSettingsBase.Item%2A>метод, или для любого свойства, которое восстанавливается при вызове <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>или <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>методы.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Item%2A>       Соответствующее отсутствует `PropertyChanging` событий для данного класса; вместо этого в разделе <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>событий.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging>"
  syntax:
    content: public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает коллекцию значений свойств."
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> значений свойств."
  overload: System.Configuration.ApplicationSettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Providers
  id: Providers
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает коллекцию поставщиков параметров приложения, используемые программой-оболочкой."
  remarks: "<xref:System.Configuration.SettingsProviderAttribute>Определяет, какой поставщик параметра используется класс-оболочку параметров или свойства отдельных параметров.</xref:System.Configuration.SettingsProviderAttribute> Если этот атрибут не указан, клиентское приложение будет использовать <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider>"
  syntax:
    content: public override System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "Объект <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref> содержит все <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> объектов, используемых свойства параметров текущей настройки оболочки."
  overload: System.Configuration.ApplicationSettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reload
  id: Reload
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Обновляет значения свойства параметров приложения из постоянного хранилища."
  remarks: "Метод Reload очищает в настоящее время кэшированные значения свойств, вызывает перезагрузка этих значений из постоянного хранилища, если впоследствии осуществляется. Этот метод выполняет следующие действия:-очищается, сняв коллекции, представленной в настоящее время кэшированные свойства <xref:System.Configuration.SettingsBase.PropertyValues%2A>свойство.</xref:System.Configuration.SettingsBase.PropertyValues%2A>      -Он выдает <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>событий для каждого члена <xref:System.Configuration.ApplicationSettingsBase.Properties%2A>коллекции.</xref:System.Configuration.ApplicationSettingsBase.Properties%2A> </xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>       Перезагрузить отличается от <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>в том, что первый из них будет загружать последний набор приложения сохраненные значения параметров, в то время как второй загрузить сохраненные значения по умолчанию.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  example:
  - "The following code example shows the Reload method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReload`. As a result of this call, the currently stored values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#6](~/add/codesnippet/cpp/m-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#6](~/add/codesnippet/csharp/m-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#6](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#6)]"
  syntax:
    content: public void Reload ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Reset
  id: Reset
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Восстанавливает постоянные значения параметров приложения соответствующих свойств по умолчанию."
  remarks: "Метод Reset перезаписывает свойства параметров пользователя путем восстановления в данный момент сохраненного значения параметров каждого приложения. Этот метод выполняет следующие действия:-он вызывает <xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>метод на каждый параметры поставщика, который поддерживает этот метод необязательно.</xref:System.Configuration.IApplicationSettingsProvider.Reset%2A?displayProperty=fullName>      — Вызывается <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>способ принудительного обновления значений свойств параметров.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>       <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>отличается от сброса в том, что первый загрузить последний набор приложения сохраненные значения параметров, а второй будет загрузить сохраненные значения по умолчанию.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A>"
  example:
  - "The following code example shows the Reset method being invoked in the body of the <xref:System.Windows.Forms.Control.Click> event handler for a button named `btnReset`. As a result of this call, the stored default values for the application settings are reloaded into their corresponding properties. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#5](~/add/codesnippet/cpp/m-system.configuration.a_3_1.cpp)]\n [!code-cs[AppSettingsSample#5](~/add/codesnippet/csharp/m-system.configuration.a_3_1.cs)]\n [!code-vb[AppSettingsSample#5](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#5)]"
  syntax:
    content: public void Reset ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Не удалось выполнить разбор файла конфигурации."
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Save
  id: Save
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Сохраняет текущие значения свойств параметров приложения."
  remarks: "Метод Save записывает текущее значение каждого свойства параметров к своему хранилищу данных. Для каждого свойства, этот метод вызывает метод <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>метод на связанный поставщик параметров.</xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       Этот метод отличается от реализации базового класса, он выдает <xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>перед значения записываются события.</xref:System.Configuration.ApplicationSettingsBase.SettingsSaving>       Если только параметры, определенные приложения параметры сохранения будет не влияют и возвращать никакого сообщения об ошибке, если вызывается со значением по умолчанию <xref:System.Configuration.LocalFileSettingsProvider>.</xref:System.Configuration.LocalFileSettingsProvider> <xref:System.Configuration.LocalFileSettingsProvider>сохраняет только параметры пользователя.</xref:System.Configuration.LocalFileSettingsProvider>      Настроек [!IMPORTANT] настроек нет соответствующего метода загрузки, так как значения параметров приложения автоматически загружаются во время настройки класса-оболочки. В отличие от этого эти значения не сохраняются автоматически при завершении приложения. Таким образом необходимо явно вызвать метод Save для сохранения текущих значений параметров приложения. Это обычно выполняется в <xref:System.Windows.Forms.Form.Closing>первичном обработчике событий или содержащие <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form.Closing>"
  example:
  - "The following code example shows the Save method being called from the <xref:System.Windows.Forms.Form.Closing> event handler for the primary form. This method also appends an extra period to the settings property that is associated with the form's <xref:System.Windows.Forms.Control.Text%2A> property.  \n  \n The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#3](~/add/codesnippet/cpp/m-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#3](~/add/codesnippet/csharp/m-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#3](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#3)]"
  syntax:
    content: public override void Save ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  id: SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Происходит перед изменением значения свойства параметров приложения."
  remarks: "Событие SettingChanging возникает перед изменением значения свойства параметров приложения через <xref:System.Configuration.ApplicationSettingsBase.Item%2A>метод.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Данное событие не возникает, когда <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>или <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>методы вызываются.</xref:System.Configuration.ApplicationSettingsBase.Reset%2A> </xref:System.Configuration.ApplicationSettingsBase.Reload%2A> SettingChanging может быть отменено через <xref:System.Configuration.SettingChangingEventArgs>класса событий данных.</xref:System.Configuration.SettingChangingEventArgs>       Событие SettingChanging обычно используется для обработки оперативной проверки свойства отдельных параметров. Дополнительные сведения о проверке см. в разделе [как: проверка параметров приложения](~/add/includes/ajax-current-ext-md.md).       Соответствующее отсутствует `SettingChanged` событий для данного класса; вместо этого в разделе <xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>событий.</xref:System.Configuration.ApplicationSettingsBase.PropertyChanged>"
  example:
  - "The following code example shows the SettingChanging event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler displays the event information in a textbox named `tbStatus`. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#7](~/add/codesnippet/cpp/e-system.configuration.a_0_1.cpp)]\n [!code-cs[AppSettingsSample#7](~/add/codesnippet/csharp/e-system.configuration.a_0_1.cs)]\n [!code-vb[AppSettingsSample#7](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#7)]"
  syntax:
    content: public event System.Configuration.SettingChangingEventHandler SettingChanging;
    return:
      type: System.Configuration.SettingChangingEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  id: SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Возвращает или задает ключ параметров для группы параметров приложения."
  remarks: "Свойство SettingsKey предоставляется для обеспечения клиентского кода, в частности для устранения неоднозначности между несколькими экземплярами одного класса параметров приложения поставщика параметров.       Если класс-оболочку параметров разработано с использованием единый шаблон, может быть несколько экземпляров одного класса параметров приложения в одном приложении. Значение SettingsKey задается в соответствии с как значения свойств, предназначены для совместного использования.      -Если свойства параметров оболочки должны быть совместно используется всеми экземплярами оболочки в одном приложении, то SettingsKey должен иметь то же значение во всех экземплярах. Это поведение по умолчанию для <xref:System.Configuration.ApplicationSettingsBase>класса.</xref:System.Configuration.ApplicationSettingsBase>      -Если свойства параметров оболочки предназначены для каждого экземпляра, то SettingsKey должен иметь уникальное значение для каждого экземпляра. <xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>Версия конструктора позволяет инициализировать SettingsKey уникальная строка.</xref:System.Configuration.ApplicationSettingsBase.%23ctor%28System.String%29>       Напротив <xref:System.Configuration.ApplicationSettingsBase.Context%2A>указания предоставляет свойство поставщику параметров, чтобы он мог сохранять значения эффективного и управляемым штатным образом.</xref:System.Configuration.ApplicationSettingsBase.Context%2A>       <xref:System.Configuration.SettingChangingEventArgs>Класс содержит аналогичное <xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A>свойство, которое помогает выявить источник <xref:System.Configuration.ApplicationSettingsBase.SettingChanging>события.</xref:System.Configuration.ApplicationSettingsBase.SettingChanging> </xref:System.Configuration.SettingChangingEventArgs.SettingKey%2A> </xref:System.Configuration.SettingChangingEventArgs>"
  syntax:
    content: public string SettingsKey { get; set; }
    return:
      type: System.String
      description: "Объект <xref:System.String>содержит ключ параметров для текущей группы параметров.</xref:System.String>"
  overload: System.Configuration.ApplicationSettingsBase.SettingsKey*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  id: SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Происходит после извлечения параметров приложения из хранилища."
  remarks: "Событие SettingsLoaded возникает только после первоначального `get` доступа первого свойства конфигурации, используемые, обычно с помощью <xref:System.Configuration.ApplicationSettingsBase.Item%2A>метод.</xref:System.Configuration.ApplicationSettingsBase.Item%2A> Последующие доступы используют значения свойства параметров, которые локально кэшируются. <xref:System.Configuration.ApplicationSettingsBase.Reset%2A>И <xref:System.Configuration.ApplicationSettingsBase.Reload%2A>методы будут удалены все кэшированные значения, это событие будет вызываться снова при последующих свойство доступе.</xref:System.Configuration.ApplicationSettingsBase.Reload%2A> </xref:System.Configuration.ApplicationSettingsBase.Reset%2A>"
  syntax:
    content: public event System.Configuration.SettingsLoadedEventHandler SettingsLoaded;
    return:
      type: System.Configuration.SettingsLoadedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  id: SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
  type: Event
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Происходит перед сохранением значений в хранилище данных."
  remarks: "Вызывает событие SettingsSaving <xref:System.Configuration.ApplicationSettingsBase.Save%2A>метода, прежде чем он сохраняет свойства параметров приложения в магазин связанные данные.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> Соответствующий обработчик событий может отменить это событие."
  example:
  - "The following code example shows the SettingsSaving event handler for object of type `FormSettings`, which is a wrapper class derived from <xref:System.Configuration.ApplicationSettingsBase>. The handler queries the user to save the current application settings property values. The full code example is listed in the <xref:System.Configuration.ApplicationSettingsBase> class overview.  \n  \n [!code-cpp[AppSettingsSample#8](~/add/codesnippet/cpp/e-system.configuration.a_1_1.cpp)]\n [!code-cs[AppSettingsSample#8](~/add/codesnippet/csharp/e-system.configuration.a_1_1.cs)]\n [!code-vb[AppSettingsSample#8](~/add/codesnippet/visualbasic/AppSettingsSample/Form1.vb#8)]"
  syntax:
    content: public event System.Configuration.SettingsSavingEventHandler SettingsSaving;
    return:
      type: System.Configuration.SettingsSavingEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  id: Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  langs:
  - csharp
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Обновляет параметры приложения в соответствии с последней установки приложения."
  remarks: "Метод обновления выполняет два действия, чтобы обеспечить плавный переход на новую версию приложения:-уведомляет о всех поставщиков соответствующие параметры наличия обновленного приложения посредством вызова их <xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName>метод, при условии, что они реализованы <xref:System.Configuration.IApplicationSettingsProvider>интерфейса.</xref:System.Configuration.IApplicationSettingsProvider> </xref:System.Configuration.IApplicationSettingsProvider.Upgrade%2A?displayProperty=fullName> Это действие не выполняется, если класс-оболочку параметров помечается <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>.</xref:System.Configuration.NoSettingsVersionUpgradeAttribute>      — Перезагружает значения для всех параметров приложения.       Можно переопределить поведение по умолчанию обновления для реализации пользовательских обновление или слияние поведение. Используйте <xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A>метод для извлечения отдельных значений для параметра для более ранней версии приложения.</xref:System.Configuration.ApplicationSettingsBase.GetPreviousVersion%2A> Примеры обновления пользовательского режима работы:-с помощью новой политики по умолчанию, переопределите один или несколько предыдущих значений, определяемый пользователем или предыдущего значения по умолчанию.      -Специальный перевод старых значений для обеспечения совместимости с новой диапазоны, группой различных свойств параметров и т. д."
  syntax:
    content: public virtual void Upgrade ();
    parameters: []
  overload: System.Configuration.ApplicationSettingsBase.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Не удалось выполнить разбор файла конфигурации."
  platform:
  - net462
references:
- uid: System.Configuration.SettingsBase
  isExternal: false
  name: System.Configuration.SettingsBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.ApplicationSettingsBase.#ctor
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase()
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase()
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase()
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.ApplicationSettingsBase.#ctor(System.ComponentModel.IComponent,System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase(IComponent,String)
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
  fullName: System.Configuration.ApplicationSettingsBase.ApplicationSettingsBase(IComponent,String)
- uid: System.Configuration.ApplicationSettingsBase.Context
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
  fullName: System.Configuration.ApplicationSettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion(String)
  nameWithType: ApplicationSettingsBase.GetPreviousVersion(String)
  fullName: System.Configuration.ApplicationSettingsBase.GetPreviousVersion(String)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Configuration.ApplicationSettingsBase.Item(System.String)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: ApplicationSettingsBase.Item(String)
  fullName: System.Configuration.ApplicationSettingsBase.Item(String)
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged(Object,PropertyChangedEventArgs)
  nameWithType: ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnPropertyChanged(Object,PropertyChangedEventArgs)
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventArgs
  nameWithType: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging(System.Object,System.Configuration.SettingChangingEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging(Object,SettingChangingEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingChanging(Object,SettingChangingEventArgs)
- uid: System.Configuration.SettingChangingEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventArgs
  nameWithType: SettingChangingEventArgs
  fullName: System.Configuration.SettingChangingEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(System.Object,System.Configuration.SettingsLoadedEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded(Object,SettingsLoadedEventArgs)
- uid: System.Configuration.SettingsLoadedEventArgs
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventArgs
  nameWithType: SettingsLoadedEventArgs
  fullName: System.Configuration.SettingsLoadedEventArgs
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(System.Object,System.ComponentModel.CancelEventArgs)
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving(Object,CancelEventArgs)
  nameWithType: ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
  fullName: System.Configuration.ApplicationSettingsBase.OnSettingsSaving(Object,CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Configuration.ApplicationSettingsBase.Properties
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
  fullName: System.Configuration.ApplicationSettingsBase.Properties
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.ApplicationSettingsBase.PropertyChanged
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyChanged
  nameWithType: ApplicationSettingsBase.PropertyChanged
  fullName: System.Configuration.ApplicationSettingsBase.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
  fullName: System.Configuration.ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.ApplicationSettingsBase.Providers
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
  fullName: System.Configuration.ApplicationSettingsBase.Providers
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.ApplicationSettingsBase.Reload
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload()
  nameWithType: ApplicationSettingsBase.Reload()
  fullName: System.Configuration.ApplicationSettingsBase.Reload()
- uid: System.Configuration.ApplicationSettingsBase.Reset
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset()
  nameWithType: ApplicationSettingsBase.Reset()
  fullName: System.Configuration.ApplicationSettingsBase.Reset()
- uid: System.Configuration.ApplicationSettingsBase.Save
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save()
  nameWithType: ApplicationSettingsBase.Save()
  fullName: System.Configuration.ApplicationSettingsBase.Save()
- uid: System.Configuration.ApplicationSettingsBase.SettingChanging
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingChanging
  nameWithType: ApplicationSettingsBase.SettingChanging
  fullName: System.Configuration.ApplicationSettingsBase.SettingChanging
- uid: System.Configuration.SettingChangingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingChangingEventHandler
  nameWithType: SettingChangingEventHandler
  fullName: System.Configuration.SettingChangingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
  fullName: System.Configuration.ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.SettingsLoaded
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsLoaded
  nameWithType: ApplicationSettingsBase.SettingsLoaded
  fullName: System.Configuration.ApplicationSettingsBase.SettingsLoaded
- uid: System.Configuration.SettingsLoadedEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsLoadedEventHandler
  nameWithType: SettingsLoadedEventHandler
  fullName: System.Configuration.SettingsLoadedEventHandler
- uid: System.Configuration.ApplicationSettingsBase.SettingsSaving
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsSaving
  nameWithType: ApplicationSettingsBase.SettingsSaving
  fullName: System.Configuration.ApplicationSettingsBase.SettingsSaving
- uid: System.Configuration.SettingsSavingEventHandler
  parent: System.Configuration
  isExternal: false
  name: SettingsSavingEventHandler
  nameWithType: SettingsSavingEventHandler
  fullName: System.Configuration.SettingsSavingEventHandler
- uid: System.Configuration.ApplicationSettingsBase.Upgrade
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade()
  nameWithType: ApplicationSettingsBase.Upgrade()
  fullName: System.Configuration.ApplicationSettingsBase.Upgrade()
- uid: System.Configuration.ApplicationSettingsBase.#ctor*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: ApplicationSettingsBase
  nameWithType: ApplicationSettingsBase.ApplicationSettingsBase
- uid: System.Configuration.ApplicationSettingsBase.Context*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Context
  nameWithType: ApplicationSettingsBase.Context
- uid: System.Configuration.ApplicationSettingsBase.GetPreviousVersion*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: GetPreviousVersion
  nameWithType: ApplicationSettingsBase.GetPreviousVersion
- uid: System.Configuration.ApplicationSettingsBase.Item*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Item
  nameWithType: ApplicationSettingsBase.Item
- uid: System.Configuration.ApplicationSettingsBase.OnPropertyChanged*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnPropertyChanged
  nameWithType: ApplicationSettingsBase.OnPropertyChanged
- uid: System.Configuration.ApplicationSettingsBase.OnSettingChanging*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingChanging
  nameWithType: ApplicationSettingsBase.OnSettingChanging
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsLoaded*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsLoaded
  nameWithType: ApplicationSettingsBase.OnSettingsLoaded
- uid: System.Configuration.ApplicationSettingsBase.OnSettingsSaving*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: OnSettingsSaving
  nameWithType: ApplicationSettingsBase.OnSettingsSaving
- uid: System.Configuration.ApplicationSettingsBase.Properties*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Properties
  nameWithType: ApplicationSettingsBase.Properties
- uid: System.Configuration.ApplicationSettingsBase.PropertyValues*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: ApplicationSettingsBase.PropertyValues
- uid: System.Configuration.ApplicationSettingsBase.Providers*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Providers
  nameWithType: ApplicationSettingsBase.Providers
- uid: System.Configuration.ApplicationSettingsBase.Reload*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reload
  nameWithType: ApplicationSettingsBase.Reload
- uid: System.Configuration.ApplicationSettingsBase.Reset*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Reset
  nameWithType: ApplicationSettingsBase.Reset
- uid: System.Configuration.ApplicationSettingsBase.Save*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Save
  nameWithType: ApplicationSettingsBase.Save
- uid: System.Configuration.ApplicationSettingsBase.SettingsKey*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: SettingsKey
  nameWithType: ApplicationSettingsBase.SettingsKey
- uid: System.Configuration.ApplicationSettingsBase.Upgrade*
  parent: System.Configuration.ApplicationSettingsBase
  isExternal: false
  name: Upgrade
  nameWithType: ApplicationSettingsBase.Upgrade
