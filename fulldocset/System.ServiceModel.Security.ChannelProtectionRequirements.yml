### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.ChannelProtectionRequirements
  id: ChannelProtectionRequirements
  children:
  - System.ServiceModel.Security.ChannelProtectionRequirements.#ctor
  - System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)
  - System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)
  - System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)
  - System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse
  - System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  - System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts
  - System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly
  - System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly
  - System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  - System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  langs:
  - csharp
  name: ChannelProtectionRequirements
  nameWithType: ChannelProtectionRequirements
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements
  type: Class
  summary: "Описывает шифрования и подписи требованиях, предъявляемых к различным частям сообщений, передаваемых по этому каналу."
  remarks: "При расширении <xref:System.ServiceModel.Channels.BindingElement>, необходимо реализовать <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29>, чтобы он возвращал экземпляр данного класса, соответствующий элементу привязки.</xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> </xref:System.ServiceModel.Channels.BindingElement>"
  syntax:
    content: public class ChannelProtectionRequirements
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: ChannelProtectionRequirements()
  nameWithType: ChannelProtectionRequirements.ChannelProtectionRequirements()
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.ChannelProtectionRequirements()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Initializes a new instance of the <xref href=&quot;System.ServiceModel.Security.ChannelProtectionRequirements&quot;></xref> class."
  remarks: "Этот конструктор по умолчанию устанавливает следующие свойства для нового экземпляра <xref:System.ServiceModel.Security.ScopedMessagePartSpecification>, — это класс, который определяет, какие элементы необходимо включить в сообщение:- <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts%2A>, - <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts%2A>, - <xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts%2A>и - <xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts%2A>.</xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts%2A> </xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts%2A> </xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts%2A> </xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts%2A> </xref:System.ServiceModel.Security.ScopedMessagePartSpecification>"
  syntax:
    content: public ChannelProtectionRequirements ();
    parameters: []
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)
  id: '#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)'
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: ChannelProtectionRequirements(ChannelProtectionRequirements)
  nameWithType: ChannelProtectionRequirements.ChannelProtectionRequirements(ChannelProtectionRequirements)
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.ChannelProtectionRequirements(ChannelProtectionRequirements)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ServiceModel.Security.ChannelProtectionRequirements&quot;> </xref> класса из другого экземпляра этого класса."
  remarks: "Этот конструктор задает следующие свойства для нового экземпляра <xref:System.ServiceModel.Security.ScopedMessagePartSpecification>, с использованием <xref:System.ServiceModel.Security.ScopedMessagePartSpecification.%23ctor%2A>конструктор, с `other` как входной параметр.</xref:System.ServiceModel.Security.ScopedMessagePartSpecification.%23ctor%2A> </xref:System.ServiceModel.Security.ScopedMessagePartSpecification> <xref:System.ServiceModel.Security.ScopedMessagePartSpecification>является классом, который определяет, какие элементы необходимо включить в сообщение:- <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts%2A>, - <xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts%2A>, - <xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts%2A>и - <xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts%2A>.</xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts%2A> </xref:System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts%2A> </xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts%2A> </xref:System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts%2A></xref:System.ServiceModel.Security.ScopedMessagePartSpecification>"
  syntax:
    content: public ChannelProtectionRequirements (System.ServiceModel.Security.ChannelProtectionRequirements other);
    parameters:
    - id: other
      type: System.ServiceModel.Security.ChannelProtectionRequirements
      description: "Другой экземпляр класса <xref href=&quot;System.ServiceModel.Security.ChannelProtectionRequirements&quot;> </xref>."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>other</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)
  id: Add(System.ServiceModel.Security.ChannelProtectionRequirements)
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: Add(ChannelProtectionRequirements)
  nameWithType: ChannelProtectionRequirements.Add(ChannelProtectionRequirements)
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.Add(ChannelProtectionRequirements)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Добавляет коллекции частей сообщения из указанного <xref href=&quot;System.ServiceModel.Security.ChannelProtectionRequirements&quot;> </xref> на текущий экземпляр этого класса."
  syntax:
    content: public void Add (System.ServiceModel.Security.ChannelProtectionRequirements protectionRequirements);
    parameters:
    - id: protectionRequirements
      type: System.ServiceModel.Security.ChannelProtectionRequirements
      description: "Указанный <xref href=&quot;System.ServiceModel.Security.ChannelProtectionRequirements&quot;> </xref>."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)
  id: Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: Add(ChannelProtectionRequirements,Boolean)
  nameWithType: ChannelProtectionRequirements.Add(ChannelProtectionRequirements,Boolean)
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.Add(ChannelProtectionRequirements,Boolean)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Добавляет коллекции частей сообщения из указанного <xref href=&quot;System.ServiceModel.Security.ChannelProtectionRequirements&quot;> </xref> на текущий экземпляр этого класса."
  syntax:
    content: public void Add (System.ServiceModel.Security.ChannelProtectionRequirements protectionRequirements, bool channelScopeOnly);
    parameters:
    - id: protectionRequirements
      type: System.ServiceModel.Security.ChannelProtectionRequirements
      description: "Указанный <xref href=&quot;System.ServiceModel.Security.ChannelProtectionRequirements&quot;> </xref>."
    - id: channelScopeOnly
      type: System.Boolean
      description: "Указывает, является ли область только каналом."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.Add*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse
  id: CreateInverse
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: CreateInverse()
  nameWithType: ChannelProtectionRequirements.CreateInverse()
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Создает новый экземпляр этого класса с входящие и исходящие части поменяны местами."
  remarks: "Входящие части текущего экземпляра данного класса становятся исходящими частями для нового экземпляра. Исходящие части текущего экземпляра данного класса становятся входящими частями для нового экземпляра."
  syntax:
    content: public System.ServiceModel.Security.ChannelProtectionRequirements CreateInverse ();
    parameters: []
    return:
      type: System.ServiceModel.Security.ChannelProtectionRequirements
      description: "Новый экземпляр этого класса с входящими и исходящими частями в обратном направлении."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  id: IncomingEncryptionParts
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: IncomingEncryptionParts
  nameWithType: ChannelProtectionRequirements.IncomingEncryptionParts
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает коллекцию частей сообщения, зашифрованных в сообщениях от клиента серверу."
  remarks: "Это свойство задается в конструкторе."
  syntax:
    content: public System.ServiceModel.Security.ScopedMessagePartSpecification IncomingEncryptionParts { get; }
    return:
      type: System.ServiceModel.Security.ScopedMessagePartSpecification
      description: "Объект <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;> </xref> коллекции."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts
  id: IncomingSignatureParts
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: IncomingSignatureParts
  nameWithType: ChannelProtectionRequirements.IncomingSignatureParts
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает коллекцию частей сообщения, подписанных в сообщениях от клиента серверу."
  remarks: "Это свойство задается в конструкторе."
  syntax:
    content: public System.ServiceModel.Security.ScopedMessagePartSpecification IncomingSignatureParts { get; }
    return:
      type: System.ServiceModel.Security.ScopedMessagePartSpecification
      description: "Объект <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;> </xref> коллекции."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly
  id: IsReadOnly
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ChannelProtectionRequirements.IsReadOnly
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает значение, указывающее, является ли этот экземпляр класса только для чтения."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот экземпляр класса только для чтения. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly
  id: MakeReadOnly
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: ChannelProtectionRequirements.MakeReadOnly()
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Делает этот класс и его коллекцию частей доступными только для чтения."
  remarks: "<xref:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly%2A>имеет значение true, поскольку существуют соответствующие свойства в коллекциях частей.</xref:System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly%2A>"
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  id: OutgoingEncryptionParts
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: OutgoingEncryptionParts
  nameWithType: ChannelProtectionRequirements.OutgoingEncryptionParts
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает коллекцию частей сообщения, зашифрованных в сообщениях от сервера клиенту."
  remarks: "Это свойство задается в конструкторе."
  syntax:
    content: public System.ServiceModel.Security.ScopedMessagePartSpecification OutgoingEncryptionParts { get; }
    return:
      type: System.ServiceModel.Security.ScopedMessagePartSpecification
      description: "Объект <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;> </xref> коллекции."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  id: OutgoingSignatureParts
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  langs:
  - csharp
  name: OutgoingSignatureParts
  nameWithType: ChannelProtectionRequirements.OutgoingSignatureParts
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Возвращает коллекцию частей сообщения, подписанных в сообщениях от сервера клиенту."
  remarks: "Это свойство задается в конструкторе."
  syntax:
    content: public System.ServiceModel.Security.ScopedMessagePartSpecification OutgoingSignatureParts { get; }
    return:
      type: System.ServiceModel.Security.ScopedMessagePartSpecification
      description: "Объект <xref href=&quot;System.ServiceModel.Security.ScopedMessagePartSpecification&quot;> </xref> коллекции."
  overload: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.#ctor
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: ChannelProtectionRequirements()
  nameWithType: ChannelProtectionRequirements.ChannelProtectionRequirements()
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.ChannelProtectionRequirements()
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.#ctor(System.ServiceModel.Security.ChannelProtectionRequirements)
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: ChannelProtectionRequirements(ChannelProtectionRequirements)
  nameWithType: ChannelProtectionRequirements.ChannelProtectionRequirements(ChannelProtectionRequirements)
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.ChannelProtectionRequirements(ChannelProtectionRequirements)
- uid: System.ServiceModel.Security.ChannelProtectionRequirements
  parent: System.ServiceModel.Security
  isExternal: false
  name: ChannelProtectionRequirements
  nameWithType: ChannelProtectionRequirements
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements)
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: Add(ChannelProtectionRequirements)
  nameWithType: ChannelProtectionRequirements.Add(ChannelProtectionRequirements)
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.Add(ChannelProtectionRequirements)
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.Add(System.ServiceModel.Security.ChannelProtectionRequirements,System.Boolean)
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: Add(ChannelProtectionRequirements,Boolean)
  nameWithType: ChannelProtectionRequirements.Add(ChannelProtectionRequirements,Boolean)
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.Add(ChannelProtectionRequirements,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: CreateInverse()
  nameWithType: ChannelProtectionRequirements.CreateInverse()
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse()
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: IncomingEncryptionParts
  nameWithType: ChannelProtectionRequirements.IncomingEncryptionParts
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts
- uid: System.ServiceModel.Security.ScopedMessagePartSpecification
  parent: System.ServiceModel.Security
  isExternal: false
  name: ScopedMessagePartSpecification
  nameWithType: ScopedMessagePartSpecification
  fullName: System.ServiceModel.Security.ScopedMessagePartSpecification
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: IncomingSignatureParts
  nameWithType: ChannelProtectionRequirements.IncomingSignatureParts
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: IsReadOnly
  nameWithType: ChannelProtectionRequirements.IsReadOnly
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: MakeReadOnly()
  nameWithType: ChannelProtectionRequirements.MakeReadOnly()
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly()
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: OutgoingEncryptionParts
  nameWithType: ChannelProtectionRequirements.OutgoingEncryptionParts
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: OutgoingSignatureParts
  nameWithType: ChannelProtectionRequirements.OutgoingSignatureParts
  fullName: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.#ctor*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: ChannelProtectionRequirements
  nameWithType: ChannelProtectionRequirements.ChannelProtectionRequirements
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.Add*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: Add
  nameWithType: ChannelProtectionRequirements.Add
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.CreateInverse*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: CreateInverse
  nameWithType: ChannelProtectionRequirements.CreateInverse
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingEncryptionParts*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: IncomingEncryptionParts
  nameWithType: ChannelProtectionRequirements.IncomingEncryptionParts
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IncomingSignatureParts*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: IncomingSignatureParts
  nameWithType: ChannelProtectionRequirements.IncomingSignatureParts
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.IsReadOnly*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: IsReadOnly
  nameWithType: ChannelProtectionRequirements.IsReadOnly
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.MakeReadOnly*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: MakeReadOnly
  nameWithType: ChannelProtectionRequirements.MakeReadOnly
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingEncryptionParts*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: OutgoingEncryptionParts
  nameWithType: ChannelProtectionRequirements.OutgoingEncryptionParts
- uid: System.ServiceModel.Security.ChannelProtectionRequirements.OutgoingSignatureParts*
  parent: System.ServiceModel.Security.ChannelProtectionRequirements
  isExternal: false
  name: OutgoingSignatureParts
  nameWithType: ChannelProtectionRequirements.OutgoingSignatureParts
