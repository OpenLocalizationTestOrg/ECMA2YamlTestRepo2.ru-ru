### YamlMime:ManagedReference
items:
- uid: System.Runtime.Hosting.ApplicationActivator
  id: ApplicationActivator
  children:
  - System.Runtime.Hosting.ApplicationActivator.#ctor
  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  - System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  langs:
  - csharp
  name: ApplicationActivator
  nameWithType: ApplicationActivator
  fullName: System.Runtime.Hosting.ApplicationActivator
  type: Class
  summary: "Предоставляет базовый класс для активации на основе манифеста сборки."
  remarks: "Один экземпляр указанного класса ApplicationActivator в каждом <xref:System.AppDomain>какие активацию все вызовы будут маршрутизированы.</xref:System.AppDomain> <xref:System.AppDomainManager>Для текущего <xref:System.AppDomain>может предоставить свои собственные пользовательские ApplicationActivator для этой цели.</xref:System.AppDomain> </xref:System.AppDomainManager> Если пользовательские ApplicationActivator не указано, экземпляр по умолчанию создается ApplicationActivator.       Следующие шаги описывают поведение по умолчанию <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>реализации метода: 1.</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>  Проверяет, если <xref:System.ActivationContext>надстройки для активации совпадений <xref:System.ActivationContext>текущего домена; в противном случае переходит к шагу 2.</xref:System.ActivationContext> </xref:System.ActivationContext> В противном случае выполняет сборку и возвращает результат, заключенное в дескриптор объекта.      2.  Активирует надстройку в новый <xref:System.AppDomain>.</xref:System.AppDomain> Следующие действия выполняются для инициализации нового <xref:System.AppDomain>с помощью <xref:System.Runtime.Hosting.ActivationArguments>для надстройки.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.AppDomain>          1.  Создает новый <xref:System.AppDomainSetup>объект, используя <xref:System.Runtime.Hosting.ActivationArguments>объект, содержащий контекст активации для надстройки.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.AppDomainSetup>          2.  Вызовы <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>метод для создания нового домена с помощью <xref:System.AppDomainSetup>объекта.</xref:System.AppDomainSetup> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>          3.  <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>Метод вызывает <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName>метод для получения <xref:System.Security.Policy.ApplicationTrust>объекта надстройки.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> Если <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>возвращает `true`, надстройка выполняется.</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> В противном случае <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>вызывает <xref:System.Security.Policy.PolicyException>, указывающее, что разрешение на выполнение не может быть получена.</xref:System.Security.Policy.PolicyException> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>          4.  Если надстройка является доверенным для выполнения, а затем новый <xref:System.AppDomain>создается и настраивается для <xref:System.ActivationContext>надстройки, и надстройка загружается и выполняется.</xref:System.ActivationContext> </xref:System.AppDomain>          5.  Возвращается результат активации надстройки, заключенное в дескриптор объекта.       Пользовательский активатор может использоваться для активации надстройки уровня приложения для определенного набора обстоятельств. Например, пользовательский активатор может найти существующий <xref:System.AppDomain>для активации этой надстройки вместо создания нового домена каждый раз.</xref:System.AppDomain>       Следующие шаги описывают поведение пользовательской ApplicationActivator, который активирует надстройки в существующем <xref:System.AppDomain>: 1.</xref:System.AppDomain>  Пользовательским активатором выполняется поиск домена с таким же <xref:System.ActivationContext>как надстройка активируется.</xref:System.ActivationContext>      2.  Если <xref:System.ActivationContext>никогда не было выявлено, прежде чем в процессе пользовательского активатора создаст новый <xref:System.AppDomain>для этой <xref:System.ActivationContext>путем вызова <xref:System.AppDomain.CreateDomain%2A>метода напрямую, или делегирование это действие для <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>базового класса.</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> </xref:System.AppDomain.CreateDomain%2A> </xref:System.ActivationContext> </xref:System.AppDomain> </xref:System.ActivationContext>      3.  При наличии существующего домена с тем же <xref:System.ActivationContext>, а затем можно делегировать активатор <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>вызова метода ApplicationActivator в целевом домене.</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> </xref:System.ActivationContext> Обратите внимание, что эта возможность вызова между доменами ApplicationActivator, который находится в целевом <xref:System.AppDomain>.</xref:System.AppDomain>"
  example:
  - "The following code example shows how to obtain an ApplicationActivator object from the current <xref:System.AppDomain.DomainManager%2A> for a manifest-based application.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/visualbasic/t-system.runtime.hosting_0_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/csharp/t-system.runtime.hosting_0_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ApplicationActivator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor
  id: '#ctor'
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: ApplicationActivator()
  nameWithType: ApplicationActivator.ApplicationActivator()
  fullName: System.Runtime.Hosting.ApplicationActivator.ApplicationActivator()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Runtime.Hosting.ApplicationActivator&quot;> </xref> класса."
  syntax:
    content: public ApplicationActivator ();
    parameters: []
  overload: System.Runtime.Hosting.ApplicationActivator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  id: CreateInstance(System.ActivationContext)
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstance(ActivationContext)
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Создает экземпляр приложения для активации, используя указанный контекст активации."
  remarks: "Этот метод предназначен для активации на основе манифестов приложений."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "<xref href=&quot;System.ActivationContext&quot;> </xref> , Определяющий приложение для активации."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "<xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> , Программа-оболочка для возвращаемого значения выполнения приложения. Возвращаемое значение должно быть оболочки для доступа к реальному объекту."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  id: CreateInstance(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstance(ActivationContext,String[])
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Создает экземпляр приложения, которое необходимо активировать, используя заданный контекст активации и пользовательские данные активации."
  remarks: "Этот метод предназначен для активации на основе манифестов приложений. Данные активации состоят из сведений, таких как часть строки запроса URL-адреса."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "<xref href=&quot;System.ActivationContext&quot;> </xref> , Определяющий приложение для активации."
    - id: activationCustomData
      type: System.String[]
      description: "Пользовательские данные активации."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "<xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> , Программа-оболочка для возвращаемого значения выполнения приложения. Возвращаемое значение должно быть оболочки для доступа к реальному объекту."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  id: CreateInstanceHelper(System.AppDomainSetup)
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstanceHelper(AppDomainSetup)
  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Создает экземпляр приложения с использованием указанного <xref href=&quot;System.AppDomainSetup&quot;> </xref> объекта."
  remarks: "Этот метод предназначен для активации на основе манифестов приложений."
  syntax:
    content: protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);
    parameters:
    - id: adSetup
      type: System.AppDomainSetup
      description: "<xref href=&quot;System.AppDomainSetup&quot;> </xref> Которого <xref:System.AppDomainSetup.ActivationArguments*>свойство определяет приложение, чтобы активировать.</xref:System.AppDomainSetup.ActivationArguments*>"
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "<xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> , Программа-оболочка для возвращаемого значения выполнения приложения. Возвращаемое значение должно быть оболочки для доступа к реальному объекту."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.AppDomainSetup.ActivationArguments*> property of <code>adSetup </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.AppDomainSetup.ActivationArguments*>"
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "Сбой при выполнении настройки политики в текущем домене приложения не имеют разрешения для этого приложения для запуска экземпляра приложения."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: ApplicationActivator()
  nameWithType: ApplicationActivator.ApplicationActivator()
  fullName: System.Runtime.Hosting.ApplicationActivator.ApplicationActivator()
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance(ActivationContext)
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance(ActivationContext,String[])
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstanceHelper(AppDomainSetup)
  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
- uid: System.AppDomainSetup
  parent: System
  isExternal: false
  name: AppDomainSetup
  nameWithType: AppDomainSetup
  fullName: System.AppDomainSetup
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: ApplicationActivator
  nameWithType: ApplicationActivator.ApplicationActivator
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance
  nameWithType: ApplicationActivator.CreateInstance
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstanceHelper
  nameWithType: ApplicationActivator.CreateInstanceHelper
