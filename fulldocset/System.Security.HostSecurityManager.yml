### YamlMime:ManagedReference
items:
- uid: System.Security.HostSecurityManager
  id: HostSecurityManager
  children:
  - System.Security.HostSecurityManager.#ctor
  - System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  - System.Security.HostSecurityManager.DomainPolicy
  - System.Security.HostSecurityManager.Flags
  - System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  - System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  - System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  - System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  - System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  langs:
  - csharp
  name: HostSecurityManager
  nameWithType: HostSecurityManager
  fullName: System.Security.HostSecurityManager
  type: Class
  summary: "Позволяет настраивать работу системы безопасности для доменов приложений и управления."
  remarks: "При создании новой <xref:System.AppDomain>общеязыковая среда выполнения отправляет запрос <xref:System.AppDomainManager>на наличие HostSecurityManager, который участвует в принятии решений по безопасности для <xref:System.AppDomain>.</xref:System.AppDomain> </xref:System.AppDomainManager> </xref:System.AppDomain>  Поставщики узла должен реализовывать диспетчер безопасности узла, который наследует от класса HostSecurityManager."
  example:
  - "The following example shows a very simple implementation of a HostSecurityManager.  \n  \n [!code-cs[System.Security.HostSecurityManager#1](~/add/codesnippet/csharp/t-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#1](~/add/codesnippet/visualbasic/t-system.security.hostse_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class HostSecurityManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.#ctor
  id: '#ctor'
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Security.HostSecurityManager&quot;> </xref> класса."
  syntax:
    content: public HostSecurityManager ();
    parameters: []
  overload: System.Security.HostSecurityManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  id: DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Определяет, следует ли выполнять приложения."
  remarks: "Этот метод может быть переопределен в производном классе. Базовая реализация вызывает диспетчер безопасности приложения, чтобы определить, если приложения должны быть выполнены.       Базовая реализация не используется свидетельство активатора. Однако переопределенная реализация может использовать свидетельство активатора для определения безопасности свидетельство для домена приложения, предпринимается попытка активировать приложение."
  example:
  - "The following example shows how to override the DetermineApplicationTrust method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#3](~/add/codesnippet/csharp/c64c31c7-d035-4489-84b0-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#3](~/add/codesnippet/visualbasic/c64c31c7-d035-4489-84b0-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.ApplicationTrust DetermineApplicationTrust (System.Security.Policy.Evidence applicationEvidence, System.Security.Policy.Evidence activatorEvidence, System.Security.Policy.TrustManagerContext context);
    parameters:
    - id: applicationEvidence
      type: System.Security.Policy.Evidence
      description: "Свидетельство для активируемого приложения."
    - id: activatorEvidence
      type: System.Security.Policy.Evidence
      description: "При необходимости свидетельство для активации домена приложения."
    - id: context
      type: System.Security.Policy.TrustManagerContext
      description: "Контекст доверия."
    return:
      type: System.Security.Policy.ApplicationTrust
      description: "Объект, содержащий доверие сведения о приложении."
  overload: System.Security.HostSecurityManager.DetermineApplicationTrust*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>applicationEvidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<xref href=&quot;System.Runtime.Hosting.ActivationArguments&quot;> </xref> Не удалось найти объект свидетельства приложения.       - или - <xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>является свойство аргументы активизации <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.Hosting.ActivationArguments.ActivationContext*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<xref href=&quot;System.Security.Policy.ApplicationTrust&quot;> </xref> Предоставить набор не содержит минимального набора заданные запросов <xref href=&quot;System.ActivationContext&quot;> </xref>."
  platform:
  - net462
- uid: System.Security.HostSecurityManager.DomainPolicy
  id: DomainPolicy
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "При переопределении в производном классе получает политику безопасности для текущего домена приложения."
  remarks: "Это свойство может быть переопределено в производном классе. Базовая реализация всегда возвращает `null`.       Это свойство может вызываться в <xref:System.AppDomain>время создания.</xref:System.AppDomain> Это позволяет ведущему приложению задать политику для текущего <xref:System.AppDomain>.</xref:System.AppDomain>  Уровень политики состоит из следующих действий:-набор групп кода, организованных в виде единого дерева административным доступом.      -Набор именованных наборов разрешений, на которые ссылается группы кода, чтобы указать разрешения для предоставления кода, входящие в группу кода.      -Список сборок с полным доверием.      Настроек [!IMPORTANT] настроек см. примечания для наследующих объектов для <xref:System.Security.HostSecurityManager>класс для реализации критические сведения.</xref:System.Security.HostSecurityManager>"
  syntax:
    content: public virtual System.Security.Policy.PolicyLevel DomainPolicy { get; }
    return:
      type: System.Security.Policy.PolicyLevel
      description: "Политика безопасности для текущего домена приложения. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.HostSecurityManager.DomainPolicy*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Этот метод использует политику разграничения доступа кода, которая является устаревшим в [!INCLUDE[net_v40_long](~/add/includes/net-v40-long-md.md)]. Чтобы включить политику CAS для обеспечения совместимости с предыдущими версиями платформы .NET Framework, используйте [ &lt;legacyCasPolicy&gt; элемент](../Topic/%3CNetFx40_LegacySecurityPolicy%3E%20Element.md)."
  platform:
  - net462
- uid: System.Security.HostSecurityManager.Flags
  id: Flags
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Получает флаги, представляющие компоненты политики безопасности на узел."
  remarks: "Это свойство может быть переопределено в производном классе. Базовая реализация всегда возвращает <xref:System.Security.HostSecurityManagerOptions>.</xref:System.Security.HostSecurityManagerOptions>       Унаследованный узел можно изменить значение этого свойства, если только подмножество <xref:System.Security.HostSecurityManagerOptions>представляет интерес.</xref:System.Security.HostSecurityManagerOptions>  Возможные подмножеств включают none, отклоненный набор, уровень политики и свидетельство сборки."
  example:
  - "The following example shows how to override the Flags property for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#2](~/add/codesnippet/csharp/p-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#2](~/add/codesnippet/visualbasic/p-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.HostSecurityManagerOptions Flags { get; }
    return:
      type: System.Security.HostSecurityManagerOptions
      description: "Одно из значений перечисления, указывающее компоненты политики безопасности. Значение по умолчанию — <xref href=&quot;System.Security.HostSecurityManagerOptions&quot;> </xref>."
  overload: System.Security.HostSecurityManager.Flags*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  id: GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Запрашивает определенный тип свидетельства для домена приложения."
  remarks: "Этот метод может быть переопределен в производном классе. Возвращает базовую реализацию `null`.       Среда вызывает этот метод при необходимости свидетельства указанного типа для текущего <xref:System.AppDomain>.</xref:System.AppDomain> Возвращаемое значение используется в качестве узла предоставленное свидетельство и хранится в <xref:System.AppDomain.Evidence%2A>коллекцию <xref:System.AppDomain.CurrentDomain%2A>свойство.</xref:System.AppDomain.CurrentDomain%2A> </xref:System.AppDomain.Evidence%2A> Можно использовать <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>метод, чтобы получить свидетельство, созданный из коллекции.</xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>       Чтобы получить обратный вызов этого метода, необходимо указать узлы <xref:System.Security.HostSecurityManagerOptions>флаг в <xref:System.Security.HostSecurityManager.Flags%2A>свойство.</xref:System.Security.HostSecurityManager.Flags%2A> </xref:System.Security.HostSecurityManagerOptions>       Этот метод создания свидетельства позволяет хостам отложить создание свидетельство для <xref:System.AppDomain>пока потребуется свидетельство.</xref:System.AppDomain> В .NET Framework версии 3.5 и более ранних версиях необходимо было предоставить <xref:System.AppDomain>свидетельства во время загрузки, переопределив <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>метод.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> </xref:System.AppDomain> Мы рекомендуем использовать GenerateAppDomainEvidence свидетельство вместо переопределения <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>       Метод GenerateAppDomainEvidence вызывается обратно в только для типов свидетельств, которые определены в переопределении <xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>метод.</xref:System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes%2A>       Возвращаемое значение `null` указывает, что узел не может создать свидетельство указанного типа."
  example:
  - "The following example shows how to override the <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#6](~/add/codesnippet/csharp/m-system.security.hostse_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#6](~/add/codesnippet/visualbasic/m-system.security.hostse_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAppDomainEvidence (Type evidenceType);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "Тип свидетельства."
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Запрошенное приложение свидетельство домена."
  overload: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  id: GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Запрашивает определенный тип свидетельства для сборки."
  remarks: "Этот метод может быть переопределен в производном классе. Возвращает базовую реализацию `null`.       Среда вызывает этот метод при необходимости свидетельства указанного типа для текущей сборки. Возвращаемое значение используется в качестве узла предоставленное свидетельство и хранится в <xref:System.Reflection.Assembly.Evidence%2A>свойство.</xref:System.Reflection.Assembly.Evidence%2A> Можно использовать <xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>метод, чтобы получить свидетельство, созданный из <xref:System.Reflection.Assembly.Evidence%2A>свойство.</xref:System.Reflection.Assembly.Evidence%2A> </xref:System.Security.Policy.Evidence.GetAssemblyEvidence%2A?displayProperty=fullName>       Чтобы получить обратный вызов этого метода, необходимо указать узлы <xref:System.Security.HostSecurityManagerOptions>флаг в <xref:System.Security.HostSecurityManager.Flags%2A>свойство.</xref:System.Security.HostSecurityManager.Flags%2A> </xref:System.Security.HostSecurityManagerOptions>       Этот метод создания свидетельства позволяет хостам отложить создание свидетельство для <xref:System.AppDomain>пока потребуется свидетельство.</xref:System.AppDomain> В .NET Framework 3.5 и более ранних версиях необходимо было предоставить <xref:System.AppDomain>свидетельства во время загрузки, переопределив <xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A>метод.</xref:System.Security.HostSecurityManager.ProvideAppDomainEvidence%2A> </xref:System.AppDomain> Мы рекомендуем использовать GenerateAssemblyEvidence свидетельство вместо переопределения <xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>.</xref:System.Security.HostSecurityManager.ProvideAssemblyEvidence%2A>       Метод GenerateAssemblyEvidence вызывается обратно в только для типов свидетельств, которые определены в переопределении <xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>метод.</xref:System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes%2A>       Возвращаемое значение `null` указывает, что узел не может создать свидетельство указанного типа."
  syntax:
    content: public virtual System.Security.Policy.EvidenceBase GenerateAssemblyEvidence (Type evidenceType, System.Reflection.Assembly assembly);
    parameters:
    - id: evidenceType
      type: System.Type
      description: "Тип свидетельства."
    - id: assembly
      type: System.Reflection.Assembly
      description: "Целевая сборка."
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Запрошенное свидетельство сборки."
  overload: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  id: GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Определяет типы свидетельства узел может предоставить для домена приложения, при запросе."
  remarks: "Этот метод может быть переопределен в производном классе. Возвращает базовую реализацию `null`.       Типы, возвращаемый этим методом, определяют ли <xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A>метод вызывается обратно в.</xref:System.Security.HostSecurityManager.GenerateAppDomainEvidence%2A> Присутствие этого типа в этом списке не означает узла необходимо сможет создать этот тип свидетельства, однако, он может быть установлено для. По этой причине лучше чрезмерно вместо в задавать типы в этом списке."
  syntax:
    content: public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Массив типов свидетельства."
  overload: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  id: GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Определяет типы свидетельства узел может предоставить сборке при запросе."
  remarks: "Этот метод может быть переопределен в производном классе. Возвращает базовую реализацию `null`.       Типы, возвращаемый этим методом, определяют ли <xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A>метод вызывается обратно в.</xref:System.Security.HostSecurityManager.GenerateAssemblyEvidence%2A> Присутствие этого типа в этом списке не означает узла необходимо сможет создать этот тип свидетельства, однако, он может быть установлено для. По этой причине лучше чрезмерно вместо в задавать типы в этом списке."
  syntax:
    content: public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "Целевая сборка."
    return:
      type: System.Type[]
      description: "Массив типов свидетельства."
  overload: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  id: ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Предоставляет свидетельство домена приложения для загружаемой сборки."
  remarks: "Этот метод может быть переопределен в производном классе.       Этот метод вызывается каждый раз, когда <xref:System.AppDomain>создан объект.</xref:System.AppDomain> `inputEvidence` Параметр является вычисленное свидетельство общеязыковая среда выполнения. Реализация узла можно расширить или сократить свидетельство. Возвращает значение, свидетельство для домена приложения.  Базовая реализация всегда возвращает объект свидетельства, переданных в качестве `inputEvidence` параметра.      Настроек [!IMPORTANT] настроек см. примечания для наследующих объектов для <xref:System.Security.HostSecurityManager>класс для реализации критические сведения.</xref:System.Security.HostSecurityManager>"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAppDomainEvidence (System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "Дополнительные данные, чтобы добавить <xref href=&quot;System.AppDomain&quot;> </xref> свидетельства."
    return:
      type: System.Security.Policy.Evidence
      description: "Свидетельство, используемое для <xref href=&quot;System.AppDomain&quot;> </xref>."
  overload: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  id: ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Предоставляет свидетельство сборки для загружаемой сборки."
  remarks: "Этот метод может быть переопределен в производном классе.       Этот метод вызывается каждый раз, когда загружена сборка, явно или неявно. В качестве параметров являются загружаемая сборка и вычисленное свидетельство общеязыковая среда выполнения. Реализация узла можно расширить или сократить свидетельство. Возвращает значение, свидетельство для сборки.  Базовая реализация всегда возвращает объект свидетельства, переданных в качестве `inputEvidence` параметра.      Настроек [!IMPORTANT] настроек см. примечания для наследующих объектов для <xref:System.Security.HostSecurityManager>класс для реализации критические сведения.</xref:System.Security.HostSecurityManager>"
  example:
  - "The following example shows how to override the ProvideAssemblyEvidence method for a custom host security manager. This example is part of a larger example provided for the <xref:System.Security.HostSecurityManager> class.  \n  \n [!code-cs[System.Security.HostSecurityManager#5](~/add/codesnippet/csharp/b37483ba-2dfe-4c5d-87e6-_1.cs)]\n [!code-vb[System.Security.HostSecurityManager#5](~/add/codesnippet/visualbasic/b37483ba-2dfe-4c5d-87e6-_1.vb)]"
  syntax:
    content: public virtual System.Security.Policy.Evidence ProvideAssemblyEvidence (System.Reflection.Assembly loadedAssembly, System.Security.Policy.Evidence inputEvidence);
    parameters:
    - id: loadedAssembly
      type: System.Reflection.Assembly
      description: "Загруженная сборка."
    - id: inputEvidence
      type: System.Security.Policy.Evidence
      description: "Дополнительные свидетельство добавляемый свидетельство сборки."
    return:
      type: System.Security.Policy.Evidence
      description: "Свидетельство для сборки."
  overload: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  exceptions: []
  platform:
  - net462
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  id: ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  langs:
  - csharp
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Определяет, какие разрешения для предоставления кода на основе заданного свидетельства."
  remarks: "Этот метод вызывает обработчик политики безопасности, передавая ему указанное свидетельство. Результат определяется политикой безопасности."
  syntax:
    content: public virtual System.Security.PermissionSet ResolvePolicy (System.Security.Policy.Evidence evidence);
    parameters:
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Набор свидетельств, используемых для оценки политики."
    return:
      type: System.Security.PermissionSet
      description: "Набор разрешений, которые могут быть предоставлены системой безопасности."
  overload: System.Security.HostSecurityManager.ResolvePolicy*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>evidence</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.HostSecurityManager.#ctor
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager()
  nameWithType: HostSecurityManager.HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust(System.Security.Policy.Evidence,System.Security.Policy.Evidence,System.Security.Policy.TrustManagerContext)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  nameWithType: HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
  fullName: System.Security.HostSecurityManager.DetermineApplicationTrust(Evidence,Evidence,TrustManagerContext)
- uid: System.Security.Policy.ApplicationTrust
  parent: System.Security.Policy
  isExternal: false
  name: ApplicationTrust
  nameWithType: ApplicationTrust
  fullName: System.Security.Policy.ApplicationTrust
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Security.Policy.TrustManagerContext
  parent: System.Security.Policy
  isExternal: false
  name: TrustManagerContext
  nameWithType: TrustManagerContext
  fullName: System.Security.Policy.TrustManagerContext
- uid: System.Security.HostSecurityManager.DomainPolicy
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
  fullName: System.Security.HostSecurityManager.DomainPolicy
- uid: System.Security.Policy.PolicyLevel
  parent: System.Security.Policy
  isExternal: false
  name: PolicyLevel
  nameWithType: PolicyLevel
  fullName: System.Security.Policy.PolicyLevel
- uid: System.Security.HostSecurityManager.Flags
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
  fullName: System.Security.HostSecurityManager.Flags
- uid: System.Security.HostSecurityManagerOptions
  parent: System.Security
  isExternal: false
  name: HostSecurityManagerOptions
  nameWithType: HostSecurityManagerOptions
  fullName: System.Security.HostSecurityManagerOptions
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence(Type)
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(Type)
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  name: EvidenceBase
  nameWithType: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence(Type,Assembly)
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(Type,Assembly)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes()
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(Assembly)
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence(Evidence)
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(Evidence)
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence(Assembly,Evidence)
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(Assembly,Evidence)
- uid: System.Security.HostSecurityManager.ResolvePolicy(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy(Evidence)
  nameWithType: HostSecurityManager.ResolvePolicy(Evidence)
  fullName: System.Security.HostSecurityManager.ResolvePolicy(Evidence)
- uid: System.Security.PermissionSet
  parent: System.Security
  isExternal: false
  name: PermissionSet
  nameWithType: PermissionSet
  fullName: System.Security.PermissionSet
- uid: System.Security.HostSecurityManager.#ctor*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: HostSecurityManager
  nameWithType: HostSecurityManager.HostSecurityManager
- uid: System.Security.HostSecurityManager.DetermineApplicationTrust*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DetermineApplicationTrust
  nameWithType: HostSecurityManager.DetermineApplicationTrust
- uid: System.Security.HostSecurityManager.DomainPolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: DomainPolicy
  nameWithType: HostSecurityManager.DomainPolicy
- uid: System.Security.HostSecurityManager.Flags*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: Flags
  nameWithType: HostSecurityManager.Flags
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAppDomainEvidence
  nameWithType: HostSecurityManager.GenerateAppDomainEvidence
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GenerateAssemblyEvidence
  nameWithType: HostSecurityManager.GenerateAssemblyEvidence
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAppDomainEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: GetHostSuppliedAssemblyEvidenceTypes
  nameWithType: HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAppDomainEvidence
  nameWithType: HostSecurityManager.ProvideAppDomainEvidence
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ProvideAssemblyEvidence
  nameWithType: HostSecurityManager.ProvideAssemblyEvidence
- uid: System.Security.HostSecurityManager.ResolvePolicy*
  parent: System.Security.HostSecurityManager
  isExternal: false
  name: ResolvePolicy
  nameWithType: HostSecurityManager.ResolvePolicy
