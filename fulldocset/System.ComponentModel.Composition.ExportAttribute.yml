### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ExportAttribute
  id: ExportAttribute
  children:
  - System.ComponentModel.Composition.ExportAttribute.#ctor
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ExportAttribute.ContractName
  - System.ComponentModel.Composition.ExportAttribute.ContractType
  langs:
  - csharp
  name: ExportAttribute
  nameWithType: ExportAttribute
  fullName: System.ComponentModel.Composition.ExportAttribute
  type: Class
  summary: "Указывает, что тип, свойство, поле или метод предоставляется определенный экспорт."
  remarks: "В модели атрибутивного программирования ExportAttribute объявляет, что экспортирует часть, или предоставляет в контейнер композиции, объект, который выполняет определенный контракт. Во время компоновки частей с импортами, которым соответствуют контракты будет иметь эти зависимости, заполненной экспортируемого объекта.       ExportAttribute может декорировать всему классу или свойству, полю или методу класса. Если помечено весь класс, экземпляр класса будет экспортируемый объект. Если отмеченный член класса, экспортируемого объекта будет значение декорированного члена.       Ли соответствие контракта, определяется в первую очередь имя контракта и тип контракта. Дополнительные сведения см. в разделе <xref:System.ComponentModel.Composition.ImportAttribute>.</xref:System.ComponentModel.Composition.ImportAttribute>"
  example:
  - "The following example shows three classes decorated with the ExportAttribute, and three imports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=true, Inherited=false)]

      public class ExportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> класса, экспорт типа или члена помеченной этим атрибутом в группе по умолчанию имя контракта."
  remarks: "По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метод, свойство или поле, тип или тип, отмеченный этим атрибутом.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Методы, помеченные с помощью этого атрибута необходимо указать имя контракта или тип, используя либо <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>или <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29> </xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> класса, экспорт типа или члена помеченной этим атрибутом под именем указанного контракта."
  remarks: "По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метод, свойство или поле типа или типа, что это помечен с помощью этого атрибута.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Методы, помеченные с помощью этого атрибута необходимо указать имя контракта или тип с помощью ExportAttribute или <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.Type%29>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Имя контракта, который используется для экспорта типа или члена, помеченной этим атрибутом или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (&quot;») для использования имени контракта по умолчанию."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> класса, экспорт типа или члена помеченной этим атрибутом с именем контракта, производным от указанного типа."
  remarks: "Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метод `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метод, свойство или поле, тип или тип, отмеченный этим атрибутом.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Методы, помеченные с помощью этого атрибута необходимо указать имя контракта или тип с помощью <xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>или ExportAttribute.</xref:System.ComponentModel.Composition.ExportAttribute.%23ctor%28System.String%29>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ExportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Тип, из которой извлекается имя контракта, который используется для экспорта типа или члена, помеченной этим атрибутом или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для использования имени контракта по умолчанию."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ExportAttribute&quot;> </xref> класса, экспорт указанного типа с именем указанного контракта."
  syntax:
    content: public ExportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "Имя контракта, который используется для экспорта типа или члена, помеченной этим атрибутом или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (&quot;») для использования имени контракта по умолчанию."
    - id: contractType
      type: System.Type
      description: "Тип для экспорта."
  overload: System.ComponentModel.Composition.ExportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает имя контракта, который используется для экспорта типа или члена, помеченной этим атрибутом."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "Имя контракта, который используется для экспорта типа или члена, помеченной этим атрибутом. Значение по умолчанию — пустая строка (»»)."
  overload: System.ComponentModel.Composition.ExportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Получает тип контракта, экспортируемый элемент, этот атрибут, к которому присоединена."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "Тип предоставляемого экспорта. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, что означает, что тип будет получен путем определения типа для члена, данный экспорт, к которому присоединена."
  overload: System.ComponentModel.Composition.ExportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute()
  nameWithType: ExportAttribute.ExportAttribute()
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute()
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String)
  nameWithType: ExportAttribute.ExportAttribute(String)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(Type)
  nameWithType: ExportAttribute.ExportAttribute(Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute(String,Type)
  nameWithType: ExportAttribute.ExportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ExportAttribute.ExportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ExportAttribute.ContractType
- uid: System.ComponentModel.Composition.ExportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ExportAttribute
  nameWithType: ExportAttribute.ExportAttribute
- uid: System.ComponentModel.Composition.ExportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ExportAttribute.ContractName
- uid: System.ComponentModel.Composition.ExportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ExportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ExportAttribute.ContractType
