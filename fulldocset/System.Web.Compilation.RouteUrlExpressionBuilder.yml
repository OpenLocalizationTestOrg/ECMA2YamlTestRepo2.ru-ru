### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.RouteUrlExpressionBuilder
  id: RouteUrlExpressionBuilder
  children:
  - System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  - System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  - System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  - System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  langs:
  - csharp
  name: RouteUrlExpressionBuilder
  nameWithType: RouteUrlExpressionBuilder
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder
  type: Class
  summary: "Создает URL-адрес, соответствующий заданным значениям параметров URL-адрес."
  remarks: "Класс RouteUrlExpressionBuilder позволяет задать свойства серверного элемента управления URL-адрес маршрута, предоставляя список значений параметров URL-адрес."
  example:
  - "The following example shows how to create markup that generates a hyperlink with a URL that is formatted for a route. The route is defined by using `http://www.contoso.com/search/{searchterm}` as the URL pattern.  \n  \n```  \n<asp:HyperLink ID=\"HyperLink1\" runat=\"server\"  \n               NavigateUrl=\"<%$ RouteUrl:searchterm=Bicycles %>\">  \n  Search for Bicycles  \n</asp:HyperLink>  \n```  \n  \n The URL generated for this hyperlink would be `http://www.contoso.com/search/Bicycles`.  \n  \n If the URL parameters provided to the `RouteUrl` expression are not sufficient to uniquely identify a route, you must include the route name. For example, if a Web application has two routes with `searchterm` as the sole URL parameter, the routes would have to be defined by using route names, and the hyperlink markup would resemble the following example:  \n  \n```  \n<asp:HyperLink ID=\"HyperLink1\" runat=\"server\"  \n               NavigateUrl=\"<%$ RouteUrl:searchterm=Bicycles,  \n               routename=BasicSearchRoute %>\">  \n  Search for Bicycles  \n</asp:HyperLink>  \n```"
  syntax:
    content: >-
      [System.Web.Compilation.ExpressionEditor("System.Web.UI.Design.RouteUrlExpressionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.Compilation.ExpressionPrefix("Routes")]

      public class RouteUrlExpressionBuilder : System.Web.Compilation.ExpressionBuilder
  inheritance:
  - System.Object
  - System.Web.Compilation.ExpressionBuilder
  implements: []
  inheritedMembers:
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: RouteUrlExpressionBuilder()
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Compilation.RouteUrlExpressionBuilder&quot;> </xref> класса."
  syntax:
    content: public RouteUrlExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Создает URL-адрес, соответствующий заданным значениям параметров URL-адреса и в формате URL-адрес маршрута."
  remarks: "ASP.NET вызывает этот метод при обнаружении разметки выражения следующего вида: `<%$ RouteUrl: urlparameter=value %>` этот метод создает соответствующий URL-адрес для указанных значений ключей маршрута для текущего <xref:System.Web.Routing.Route>объекта.</xref:System.Web.Routing.Route> Этот метод переопределяет <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>метод.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Он получает от `entry` параметр ссылку на элемент управления, к которой он связан, он получает от `context` вычисляемое выражение, который вызывает <xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>метод для создания URL-адрес.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl%2A>"
  syntax:
    content: public override object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "В данной реализации не используется."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Свойство, к которому привязан выражение."
    - id: parsedData
      type: System.Object
      description: "В данной реализации не используется."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Свойства для элемента управления или страницы."
    return:
      type: System.Object
      description: "URL-адрес, соответствующий заданным значениям параметров URL-адреса и для выбранного маршрута. Маршрут выбирается путем сопоставления шаблонов URL-адресов для указанного списка параметров. В случае, если несколько маршрутов соответствует заданному списку параметров, имя маршрута также может быть указан для указать маршрут для выбора."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает выражение кода, который используется для присвоения свойства в созданном классе страницы."
  remarks: "Этот метод вызывается при создании CodeDOM для страницы или элемента управления. <xref:System.CodeDom.CodeExpression>Представляет объект, возвращаемый выражения кода, чтобы добавить назначение свойства страницы созданного класса.</xref:System.CodeDom.CodeExpression>"
  syntax:
    content: public override System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "Свойство, к которому привязан выражение."
    - id: parsedData
      type: System.Object
      description: "Объект, представляющий синтаксический анализ данных, возвращенный <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Свойства для элемента управления или страницы."
    return:
      type: System.CodeDom.CodeExpression
      description: "Объект <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> экземпляр, используемый в назначение свойства."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  id: GetRouteUrl(System.Web.UI.Control,System.String)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: GetRouteUrl(Control,String)
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Создает URL-адрес, соответствующий заданным ключам маршрута для формата URL-адрес маршрута."
  remarks: "Этот метод создает соответствующее значение URL-адреса путем вызова <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>метод <xref:System.Web.Routing.RouteCollection>объекта.</xref:System.Web.Routing.RouteCollection> </xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> Он возвращает <xref:System.Web.Routing.RequestContext>объекта из `control` , который выполняет синтаксический анализ параметров имени и маршрута маршрута из `expression` параметр.</xref:System.Web.Routing.RequestContext>"
  syntax:
    content: public static string GetRouteUrl (System.Web.UI.Control control, string expression);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Элемент управления, к которому привязан выражение."
    - id: expression
      type: System.String
      description: "Выражение, заданное в разметке."
    return:
      type: System.String
      description: "URL-адрес, соответствующий формат URL-адреса маршрута текущего <xref:System.Web.Routing.Route>объекта.</xref:System.Web.Routing.Route>"
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>control</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод не удалось выполнить синтаксический анализ выражения, который указан в разметке. Дополнительные сведения см. в разделе <xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*>"
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Возвращает значение, указывающее, можно ли вычислить выражение на странице, не компилируется."
  remarks: "Свойство SupportsEvaluate указывает, является ли <xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A>метод реализован в классе и может возвращать значение для выражения, на странице, не компилируется.</xref:System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression%2A> <xref:System.Web.Compilation.RouteUrlExpressionBuilder>Класса можно вычислить выражение на странице, не компилируется.</xref:System.Web.Compilation.RouteUrlExpressionBuilder> Таким образом, всегда возвращает свойство SupportsEvaluate `true`."
  syntax:
    content: public override bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  id: TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  langs:
  - csharp
  name: TryParseRouteExpression(String,RouteValueDictionary,String)
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Выполняет синтаксический анализ выражения в виде коллекции ключей маршрута и значений и при необходимости имени маршрута."
  remarks: "Метод TryParseRouteExpression удаляет начальные и конечные пробелы из выражения и разделяет их в пары &quot;ключ значение&quot;, используя запятые в качестве разделителей. Если ключ маршрута с именем `RouteName` обнаруживается, что значение передается обратно в `routeName` параметр и не в `routeValues`. В противном случае `null` возвращается для `routeName`. Также начальные и конечные пробелы удаляются из отдельных ключей и значений.       Возвращает метод TryParseRouteExpression `false` Если выражение не состоит из пары по крайней мере один ключ значение в формате *ключ*`=`*значение*, и использует запятые для разделения нескольких пар."
  syntax:
    content: public static bool TryParseRouteExpression (string expression, System.Web.Routing.RouteValueDictionary routeValues, out string routeName);
    parameters:
    - id: expression
      type: System.String
      description: "Выражение, заданное в разметке."
    - id: routeValues
      type: System.Web.Routing.RouteValueDictionary
      description: "Коллекция ключей маршрута и связанные с ними значения."
    - id: routeName
      type: System.String
      description: "По возвращении из этого метода содержит строку, представляющую имя маршрута, если `expression` содержит ключ маршрута с именем `RouteName`. Этот параметр передается неинициализированным."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если синтаксический анализ выполнен успешно; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: System.Web.Compilation.ExpressionBuilder
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: RouteUrlExpressionBuilder()
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.RouteUrlExpressionBuilder()
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(System.Web.UI.Control,System.String)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetRouteUrl(Control,String)
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl(Control,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(System.String,System.Web.Routing.RouteValueDictionary,System.String@)
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: TryParseRouteExpression(String,RouteValueDictionary,String)
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
  fullName: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression(String,RouteValueDictionary,String)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.#ctor*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: RouteUrlExpressionBuilder
  nameWithType: RouteUrlExpressionBuilder.RouteUrlExpressionBuilder
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: RouteUrlExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: RouteUrlExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.GetRouteUrl*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: GetRouteUrl
  nameWithType: RouteUrlExpressionBuilder.GetRouteUrl
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: RouteUrlExpressionBuilder.SupportsEvaluate
- uid: System.Web.Compilation.RouteUrlExpressionBuilder.TryParseRouteExpression*
  parent: System.Web.Compilation.RouteUrlExpressionBuilder
  isExternal: false
  name: TryParseRouteExpression
  nameWithType: RouteUrlExpressionBuilder.TryParseRouteExpression
