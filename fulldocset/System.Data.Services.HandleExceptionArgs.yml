### YamlMime:ManagedReference
items:
- uid: System.Data.Services.HandleExceptionArgs
  id: HandleExceptionArgs
  children:
  - System.Data.Services.HandleExceptionArgs.Exception
  - System.Data.Services.HandleExceptionArgs.ResponseContentType
  - System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  - System.Data.Services.HandleExceptionArgs.ResponseWritten
  - System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  langs:
  - csharp
  name: HandleExceptionArgs
  nameWithType: HandleExceptionArgs
  fullName: System.Data.Services.HandleExceptionArgs
  type: Class
  summary: "Указывает сведения о возникшего исключения и данные HTTP-ответа, связанный."
  syntax:
    content: public class HandleExceptionArgs
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.Exception
  id: Exception
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
  fullName: System.Data.Services.HandleExceptionArgs.Exception
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Возвращает или задает исключение, которое будет обработано и возвращается в ответе."
  remarks: "Если исключение <xref:System.Data.Services.DataServiceException>, сообщение об исключении всегда возвращается клиенту, вне зависимости от <xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>значение.</xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A> </xref:System.Data.Services.DataServiceException> Если <xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>имеет значение true, внутренние исключения также будет возвращен клиенту; в противном случае единственным <xref:System.Data.Services.DataServiceException>будет возвращаться сообщение.</xref:System.Data.Services.DataServiceException> </xref:System.Data.Services.HandleExceptionArgs.UseVerboseErrors%2A>"
  syntax:
    content: public Exception Exception { get; set; }
    return:
      type: System.Exception
      description: "Исключение, которое будет обработано и возвращается в ответе."
  overload: System.Data.Services.HandleExceptionArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType
  id: ResponseContentType
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
  fullName: System.Data.Services.HandleExceptionArgs.ResponseContentType
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Возвращает тип содержимого ответа."
  remarks: "Все ошибки приводят к ошибке полезные данные, отправляемые службой. Это свойство информирует автора службы в формате ошибки, которое будет отправляться обратно. Значение этого свойства всегда будет допустимым типом mime Internet назначенный Numbers Authority (IANA)."
  syntax:
    content: public string ResponseContentType { get; }
    return:
      type: System.String
      description: "Строковое значение, указывающее формат ответа."
  overload: System.Data.Services.HandleExceptionArgs.ResponseContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  id: ResponseStatusCode
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
  fullName: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Возвращает код состояния, которое будет отправляться обратно в HTTP-заголовке ответа при возникновении ошибки в службе данных."
  syntax:
    content: public int ResponseStatusCode { get; }
    return:
      type: System.Int32
      description: "Целочисленное значение код состояния HTTP-ответа."
  overload: System.Data.Services.HandleExceptionArgs.ResponseStatusCode*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten
  id: ResponseWritten
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
  fullName: System.Data.Services.HandleExceptionArgs.ResponseWritten
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Возвращает значение, указывающее, записан ли ответ."
  remarks: "Если значение равно true, заголовки HTTP-ответа и, возможно, часть текста ответа уже были отправлены клиенту и не могут быть изменены."
  syntax:
    content: public bool ResponseWritten { get; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, записан ли ответ."
  overload: System.Data.Services.HandleExceptionArgs.ResponseWritten*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  id: UseVerboseErrors
  parent: System.Data.Services.HandleExceptionArgs
  langs:
  - csharp
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
  fullName: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  type: Property
  assemblies:
  - System.Data.Services
  namespace: System.Data.Services
  summary: "Возвращает или задает логическое значение, указывающее, будет ли возвращаться подробные ошибки."
  remarks: 'Если UseVerboseErrors имеет значение true, все исключения, сведения будут возвращены в ответе. Примечание по безопасности: Задание этого значения true может раскрывать сведения, которые должны быть частными к службе.'
  syntax:
    content: public bool UseVerboseErrors { get; set; }
    return:
      type: System.Boolean
      description: "Логическое значение, указывающее, будет ли возвращаться подробные ошибки."
  overload: System.Data.Services.HandleExceptionArgs.UseVerboseErrors*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Data.Services.HandleExceptionArgs.Exception
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
  fullName: System.Data.Services.HandleExceptionArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
  fullName: System.Data.Services.HandleExceptionArgs.ResponseContentType
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
  fullName: System.Data.Services.HandleExceptionArgs.ResponseStatusCode
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
  fullName: System.Data.Services.HandleExceptionArgs.ResponseWritten
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
  fullName: System.Data.Services.HandleExceptionArgs.UseVerboseErrors
- uid: System.Data.Services.HandleExceptionArgs.Exception*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: Exception
  nameWithType: HandleExceptionArgs.Exception
- uid: System.Data.Services.HandleExceptionArgs.ResponseContentType*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseContentType
  nameWithType: HandleExceptionArgs.ResponseContentType
- uid: System.Data.Services.HandleExceptionArgs.ResponseStatusCode*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseStatusCode
  nameWithType: HandleExceptionArgs.ResponseStatusCode
- uid: System.Data.Services.HandleExceptionArgs.ResponseWritten*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: ResponseWritten
  nameWithType: HandleExceptionArgs.ResponseWritten
- uid: System.Data.Services.HandleExceptionArgs.UseVerboseErrors*
  parent: System.Data.Services.HandleExceptionArgs
  isExternal: false
  name: UseVerboseErrors
  nameWithType: HandleExceptionArgs.UseVerboseErrors
