### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.Pkcs.SignedCms
  id: SignedCms
  children:
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.Certificates
  - System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  - System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  - System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  - System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  - System.Security.Cryptography.Pkcs.SignedCms.Detached
  - System.Security.Cryptography.Pkcs.SignedCms.Encode
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  - System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  - System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  - System.Security.Cryptography.Pkcs.SignedCms.Version
  langs:
  - csharp
  name: SignedCms
  nameWithType: SignedCms
  fullName: System.Security.Cryptography.Pkcs.SignedCms
  type: Class
  summary: 'Класс SignedCms позволяет подписании и проверке сообщения CMS/PKCS 7.'
  remarks: "CMS RFC определяет следующие типы MIME и расширения имен файлов для сообщения CMS/PKCS 7 с содержимым этих типов.      | Тип содержимого | Тип MIME | Расширение |   |------------------|---------------|---------------|   | envelopedData | приложения/pkcs7-mime |. p7m |   | signedData | подпись приложения или pkcs7 |. p7s.p7c|"
  syntax:
    content: public sealed class SignedCms
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Конструктор SignedCms создает экземпляр <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> класса."
  remarks: "<xref:System.Security.Cryptography.Pkcs.SignedCms>Класс имеет следующие значения свойств по умолчанию.</xref:System.Security.Cryptography.Pkcs.SignedCms>      | Свойство | Значение по умолчанию |   |--------------|-------------------|   | <xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>| 1.2.840.113549.1.7.1 (данные), длина: нулевой |   | <xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A>| Отсоединенное состояние: `false` содержимое, которое подписывается включается в сообщения CMS/PKCS 7 вместе с информацией подписи. |       Значение по умолчанию <xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType>для авторов — SubjectIdentifierType.IssuerAndSerialNumber.</xref:System.Security.Cryptography.Pkcs.SubjectIdentifierType> </xref:System.Security.Cryptography.Pkcs.SignedCms.Detached%2A> </xref:System.Security.Cryptography.Pkcs.SignedCms.ContentInfo%2A>       Если свойство detached `false` (по умолчанию), подписанное содержимое включается в сообщение CMS/PKCS 7 вместе с информацией подписи. Если свойство detached `true`, клиенты, которые не удается декодировать S/MIME сообщения по-прежнему можно просмотреть содержимое сообщения, если оно передается отдельно. Это может быть полезно в средствах архивации, которая архивирует содержимое сообщения ли можно проверить подлинность отправителя сообщения."
  syntax:
    content: public SignedCms ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Конструктор SignedCms создает экземпляр <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> , используя указанные сведения об содержимого как внутреннее содержимое."
  remarks: "Значения свойств по умолчанию, используемые конструктором в разделе <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Если свойство detached `false` (по умолчанию), содержимое, которое подписывается включается в сообщения CMS/PKCS 7 вместе с информацией подписи. Если свойство detached `true`, клиенты, которые не удается декодировать S/MIME сообщения по-прежнему можно просмотреть содержимое сообщения, если оно передается отдельно. Это может быть полезно в средствах архивации, которая архивирует содержимое сообщения ли можно проверить подлинность отправителя сообщения."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> , указывающий сведения о содержимом как внутреннее содержимое <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> сообщения."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Конструктор SignedCms создает экземпляр <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> , используя тип идентификатора темы, указанного как тип идентификатора темы по умолчанию для авторов."
  remarks: "Значения свойств по умолчанию, используемые конструктором в разделе <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Если свойство detached `false` (по умолчанию), содержимое, которое подписывается включается в сообщения CMS/PKCS 7 вместе с информацией подписи. Если свойство detached `true`, клиенты, которые не удается декодировать S/MIME сообщения по-прежнему можно просмотреть содержимое сообщения, если оно передается отдельно. Это может быть полезно в средствах архивации, которая архивирует содержимое сообщения ли можно проверить подлинность отправителя сообщения."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> член, который указывает тип идентификатора темы по умолчанию для авторов."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Конструктор SignedCms создает экземпляр <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> класса, используя указанные сведения об содержимого как внутреннее содержимое и с помощью отсоединенном состоянии."
  remarks: "Значения свойств по умолчанию, используемые конструктором в разделе <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Если свойство detached `false` (по умолчанию), содержимое, которое подписывается включается в сообщения CMS/PKCS 7 вместе с информацией подписи. Если свойство detached `true`, клиенты, которые не удается декодировать S/MIME сообщения по-прежнему можно просмотреть содержимое сообщения, если оно передается отдельно. Это может быть полезно в средствах архивации, которая архивирует содержимое сообщения ли можно проверить подлинность отправителя сообщения."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> , указывающий сведения о содержимом как внутреннее содержимое <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> сообщения."
    - id: detached
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, является ли <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> представляет отсоединенной подписи.</xref:System.Boolean> Если `detached` — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, подпись отсоединяется. Если `detached` — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, подпись не отсоединяется."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Конструктор SignedCms создает экземпляр <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> , используя тип идентификатора темы, указанного как тип идентификатора темы по умолчанию для авторов и сведения о содержимом как внутреннее содержимое."
  remarks: "Значения свойств по умолчанию, используемые конструктором в разделе <xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>.</xref:System.Security.Cryptography.Pkcs.SignedCms.%23ctor>       Если свойство detached `false` (по умолчанию), содержимое, которое подписывается включается в сообщения CMS/PKCS 7 вместе с информацией подписи. Если свойство detached `true`, клиенты, которые не удается декодировать S/MIME сообщения по-прежнему можно просмотреть содержимое сообщения, если оно передается отдельно. Это может быть полезно в средствах архивации, которая архивирует содержимое сообщения ли можно проверить подлинность отправителя сообщения."
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> член, который указывает тип идентификатора темы по умолчанию для авторов."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> , указывающий сведения о содержимом как внутреннее содержимое <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> сообщения."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  id: '#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)'
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  type: Constructor
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Конструктор SignedCms создает экземпляр <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> класса с помощью тип идентификатора темы, указанного как тип идентификатора темы по умолчанию для авторов, сведения о содержимом как внутреннее содержимое и с помощью отсоединенном состоянии."
  remarks: 'Если свойство detached `false` (по умолчанию), содержимое, которое подписывается включается в сообщения CMS/PKCS 7 вместе с информацией подписи. Если свойство detached `true`, клиенты, которые не удается декодировать S/MIME сообщения по-прежнему можно просмотреть содержимое сообщения, если оно передается отдельно. Это может быть полезно в средствах архивации, которая архивирует содержимое сообщения, независимо от того, имеется ли можно проверить подлинность отправителя сообщения.'
  syntax:
    content: public SignedCms (System.Security.Cryptography.Pkcs.SubjectIdentifierType signerIdentifierType, System.Security.Cryptography.Pkcs.ContentInfo contentInfo, bool detached);
    parameters:
    - id: signerIdentifierType
      type: System.Security.Cryptography.Pkcs.SubjectIdentifierType
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.SubjectIdentifierType&quot;> </xref> член, который указывает тип идентификатора темы по умолчанию для авторов."
    - id: contentInfo
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> , указывающий сведения о содержимом как внутреннее содержимое <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> сообщения."
    - id: detached
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, является ли <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> представляет отсоединенной подписи.</xref:System.Boolean> Если `detached` — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, подпись отсоединяется. Если отсоединить — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, подпись не отсоединяется."
  overload: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  id: Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Свойство сертификаты извлекает сертификаты, связанные с закодированное сообщение CMS/PKCS 7.'
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2Collection Certificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: '<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> Коллекцию, представляющую набор сертификатов для закодированное сообщение CMS/PKCS 7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  id: CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Метод CheckHash проверяет целостность данных сообщения CMS/PKCS 7. CheckHash является специальным методом, использовать в приложениях инфраструктуры безопасности, требуется только проверить хэш сообщения CMS, вместо выполнения проверки полной цифровой подписи. CheckHash не выполняет проверку подлинности автор ни отправителя сообщения, так как этот метод не выполняется проверка цифровой подписи. Для общего назначения проверки целостности и подлинности сообщения CMS/PKCS #7, используйте &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; или &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Security.Cryptography.X509Certificates.X509Certificate2Collection%2CSystem.Boolean%29&gt; методы.'
  remarks: 'Этот метод не выполняет проверку подлинности сообщения CMS/PKCS 7.'
  syntax:
    content: public void CheckHash ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов метода недопустим для текущего состояния объекта."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  id: CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message and, optionally, validates the signers'' certificates.'
  remarks: "Этот метод проверяет все подписи, включая скрепляющая подпись сообщения CMS/PKCS 7. Если сообщение подписанные атрибуты, эти атрибуты также проходят проверку. Если вы выбрали параметр для проверки сертификатов, проверяется весь включенный фрагмент цепочки сертификатов.       Этот метод создает исключение при сбое проверки цифровой подписи или любые требования проверки не выполняются."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached. The message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_31_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_31_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_31_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_31_2.cs)]"
  syntax:
    content: public void CheckSignature (bool verifySignatureOnly);
    parameters:
    - id: verifySignatureOnly
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, проверяются ли только цифровые подписи без проверки сертификатов авторов.</xref:System.Boolean>       Если `verifySignatureOnly` — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, проверяются только цифровые подписи. Если это <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, проверяются цифровые подписи, используется для проверки сертификатов авторов и проверяются назначения сертификатов. Назначение сертификата считаются допустимыми, если сертификат нет ключ или если ключ поддерживает цифровые подписи или неподдельность."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов метода недопустим для текущего состояния объекта."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  id: CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'The CheckSignature method verifies the digital signatures on the signed CMS/PKCS #7 message by using the specified collection of certificates and, optionally, validates the signers'' certificates.'
  remarks: "Этот метод проверяет все подписи, включая скрепляющая подпись сообщения CMS/PKCS 7. Если сообщение подписанные атрибуты, эти атрибуты также проходят проверку. Если вы выбрали параметр для проверки сертификатов, проверяется весь включенный фрагмент цепочки сертификатов.       Этот метод создает исключение при сбое проверки цифровой подписи или любые требования проверки не выполняются."
  example:
  - "The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_1.cs)]  \n  \n The following example shows the placement of CheckSignature among the steps necessary to verify the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/3c3d2469-0f69-4cc2-8a35-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/3c3d2469-0f69-4cc2-8a35-_2.cs)]"
  syntax:
    content: public void CheckSignature (System.Security.Cryptography.X509Certificates.X509Certificate2Collection extraStore, bool verifySignatureOnly);
    parameters:
    - id: extraStore
      type: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
      description: "<xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2Collection&quot;> </xref> Объекта, который может использоваться для проверки цепочки сертификатов. Если дополнительные сертификаты не будут использоваться для проверки цепочки сертификатов, используйте &lt;xref:System.Security.Cryptography.Pkcs.SignedCms.CheckSignature%28System.Boolean%29&gt; вместо CheckSignature."
    - id: verifySignatureOnly
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, проверяются ли только цифровые подписи без проверки сертификатов авторов.</xref:System.Boolean>       Если `verifySignatureOnly` — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, проверяются только цифровые подписи. Если это <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, проверяются цифровые подписи, используется для проверки сертификатов авторов и проверяются назначения сертификатов. Назначение сертификата считаются допустимыми, если сертификат нет ключ или если ключ поддерживает цифровые подписи или неподдельность."
  overload: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов метода недопустим для текущего состояния объекта."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  id: ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Метод ComputeSignature предлагает пользователю выбрать сертификат для подписи, создает подпись и добавляет подписи сообщения CMS/PKCS 7.'
  remarks: "Этот метод отображает пользовательский интерфейс, в котором выбираются авторов для данного сообщения. Это требует, что текущий процесс работает в *режиме взаимодействия с пользователем*, то есть, <xref:System.Environment.UserInteractive%2A?displayProperty=fullName>свойству `true`.</xref:System.Environment.UserInteractive%2A?displayProperty=fullName> Процесс обычно выполняется в режиме взаимодействия с пользователем, если он не является процессом службы или выполнения внутри веб-приложения.       В списке будет отображаться авторов, чьи сертификаты удовлетворяют следующим условиям:-сертификат имеет соответствующий закрытый ключ.      — Сертификат находится в пределах срока его действия.      — Сертификат имеет без использования ключа или использования ключа, который поддерживает цифровые подписи или неподдельность.       Сертификаты подписавшего выбираются из хранилища My.      ## Безопасность платформы .NET framework для отображения пользовательского интерфейса требуются следующие разрешения:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>для доступа к ключу подписи требуются следующие разрешения:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/m-system.security.crypto_77_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/m-system.security.crypto_77_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/m-system.security.crypto_77_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/m-system.security.crypto_77_2.cs)]"
  syntax:
    content: public void ComputeSignature ();
    parameters: []
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Метод ComputeSignature создает подпись для указанного подписавшего и добавляет подписи сообщения CMS/PKCS 7.'
  remarks: "## Безопасность платформы .NET framework для доступа к ключу подписи требуются следующие разрешения:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>"
  example:
  - "The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is not detached. In this case, the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#3](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_1.vb)]\n [!code-cs[mpkcs_SignedCMS#3](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_1.cs)]  \n  \n The following example shows the steps to compute a signature on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message with message content that is detached. In this case, the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#4](~/add/codesnippet/visualbasic/07c3dd2c-cd35-4b97-996c-_2.vb)]\n [!code-cs[mpkcs_SignedCMS#4](~/add/codesnippet/csharp/07c3dd2c-cd35-4b97-996c-_2.cs)]"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> , представляющий подписывающего лица."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  id: ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Создает подпись для указанного подписавшего и добавляет подписи сообщения CMS/PKCS 7. Если значение параметра автоматического <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> и <xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>свойство <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> объекта, указанного в параметре подписавшего установлен действительный сертификат, этот метод предлагает пользователю выбрать сертификат для подписи.</xref:System.Security.Cryptography.Pkcs.CmsSigner.Certificate*>'
  remarks: "## Безопасность платформы .NET framework для отображения пользовательского интерфейса требуются следующие разрешения:- <xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>для доступа к ключу подписи требуются следующие разрешения:- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName>- <xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName></xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.KeyContainerPermissionFlags?displayProperty=fullName> </xref:System.Security.Permissions.UIPermissionWindow?displayProperty=fullName>"
  syntax:
    content: public void ComputeSignature (System.Security.Cryptography.Pkcs.CmsSigner signer, bool silent);
    parameters:
    - id: signer
      type: System.Security.Cryptography.Pkcs.CmsSigner
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.CmsSigner&quot;> </xref> , представляющий подписывающего лица."
    - id: silent
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Чтобы предложить пользователю выбрать сертификат для подписи."
  overload: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Значение <code> silent </code> параметр <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> и сертификат подписи не указан."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  id: ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Свойство данных содержимого извлекает внутреннее содержимое закодированное сообщение CMS/PKCS 7.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.ContentInfo ContentInfo { get; }
    return:
      type: System.Security.Cryptography.Pkcs.ContentInfo
      description: 'Объект <xref href=&quot;System.Security.Cryptography.Pkcs.ContentInfo&quot;> </xref> объект, представляющий содержимое закодированное сообщение CMS/PKCS 7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  id: Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Метод декодирования декодирует закодированный <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> сообщения. После успешного раскодирования декодированный сведения можно получить из свойства <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> объекта."
  remarks: "Этот метод сбрасывает все переменные-члены объекта, используя информацию, полученную в результате успешного раскодирования."
  example:
  - "The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is not detached, so the message content is included in the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#1](~/add/codesnippet/visualbasic/m-system.security.crypto_48_1.vb)]\n [!code-cs[mpkcs_SignedCMS#1](~/add/codesnippet/csharp/m-system.security.crypto_48_1.cs)]  \n  \n The following example shows the placement of the Decode method in the process of verifying the signatures on a <xref:System.Security.Cryptography.Pkcs.SignedCms> message. In this example, the message content is detached, so the message content must be verified independently of the <xref:System.Security.Cryptography.Pkcs.SignedCms> message.  \n  \n [!code-vb[mpkcs_SignedCMS#2](~/add/codesnippet/visualbasic/m-system.security.crypto_48_2.vb)]\n [!code-cs[mpkcs_SignedCMS#2](~/add/codesnippet/csharp/m-system.security.crypto_48_2.cs)]"
  syntax:
    content: public void Decode (byte[] encodedMessage);
    parameters:
    - id: encodedMessage
      type: System.Byte[]
      description: 'Массив байтовых значений, представляющий закодированное сообщение CMS/PKCS #7 для декодирования.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  id: Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Извлекает свойство отсоединенных ли <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> представляет отсоединенной подписи."
  syntax:
    content: public bool Detached { get; }
    return:
      type: System.Boolean
      description: "Объект <xref:System.Boolean>значение, указывающее, является ли <xref href=&quot;System.Security.Cryptography.Pkcs.SignedCms&quot;> </xref> представляет отсоединенной подписи.</xref:System.Boolean> Если это свойство имеет <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, подпись отсоединяется. Если это свойство имеет <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, подпись не отсоединяется."
  overload: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  id: Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Метод кодирования кодирует сведения в объекте в сообщения CMS/PKCS 7.'
  syntax:
    content: public byte[] Encode ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Массив байтовых значений, представляющий закодированное сообщение. Закодированное сообщение может расшифровываться <xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>метод.</xref:System.Security.Cryptography.Pkcs.SignedCms.Decode*>"
  overload: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  exceptions:
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Вызов метода недопустим для текущего состояния объекта."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  id: RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Удаляет подпись по указанному индексу из <xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>коллекции.</xref:System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*>"
  syntax:
    content: public void RemoveSignature (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс удаляемого подписи."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: 'Не имеет подписи сообщения CMS/PKCS #7, и <code> index </code> является недопустимым.'
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>меньше нуля.       - или - <code>index</code> больше, чем число подписи минус 1."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось удалить подпись.       - или - произошла внутренняя ошибка шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  id: RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
  type: Method
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: "Метод RemoveSignature удаляет подпись для указанного <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> объекта."
  syntax:
    content: public void RemoveSignature (System.Security.Cryptography.Pkcs.SignerInfo signerInfo);
    parameters:
    - id: signerInfo
      type: System.Security.Cryptography.Pkcs.SignerInfo
      description: "Объект <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfo&quot;> </xref> , представляющий удаляемый скрепляющая подпись."
  overload: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Указатель null был передан метод, который не принимает ее как допустимый аргумент."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Значение аргумента было вне допустимого диапазона значений в соответствии с определением вызываемого метода."
  - type: System.Security.Cryptography.CryptographicException
    commentId: T:System.Security.Cryptography.CryptographicException
    description: "Не удалось выполнить операцию шифрования."
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  id: SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Извлекает свойство SignerInfos <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> коллекцию, связанную с сообщения CMS/PKCS 7.'
  syntax:
    content: public System.Security.Cryptography.Pkcs.SignerInfoCollection SignerInfos { get; }
    return:
      type: System.Security.Cryptography.Pkcs.SignerInfoCollection
      description: 'Объект <xref href=&quot;System.Security.Cryptography.Pkcs.SignerInfoCollection&quot;> </xref> , представляющий информацию о подписавшем сообщения CMS/PKCS 7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  id: Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  langs:
  - csharp
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
  type: Property
  assemblies:
  - System.Security
  namespace: System.Security.Cryptography.Pkcs
  summary: 'Свойство Version Возвращает версию сообщения CMS/PKCS 7.'
  remarks: 'Версия определяет, является ли сообщение PKCS #7 сообщения или сообщения шифрования Message Syntax (CMS). CMS является надмножеством новой PKCS #7.'
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: 'Целочисленное значение, представляющее версию сообщения CMS/PKCS 7.'
  overload: System.Security.Cryptography.Pkcs.SignedCms.Version*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Cryptography.CryptographicException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicException
  nameWithType: CryptographicException
  fullName: System.Security.Cryptography.CryptographicException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms()
  nameWithType: SignedCms.SignedCms()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms()
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo)
  nameWithType: SignedCms.SignedCms(ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo)
- uid: System.Security.Cryptography.Pkcs.ContentInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: ContentInfo
  nameWithType: ContentInfo
  fullName: System.Security.Cryptography.Pkcs.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType)
- uid: System.Security.Cryptography.Pkcs.SubjectIdentifierType
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SubjectIdentifierType
  nameWithType: SubjectIdentifierType
  fullName: System.Security.Cryptography.Pkcs.SubjectIdentifierType
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(ContentInfo,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo)
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor(System.Security.Cryptography.Pkcs.SubjectIdentifierType,System.Security.Cryptography.Pkcs.ContentInfo,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  nameWithType: SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignedCms(SubjectIdentifierType,ContentInfo,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Certificates
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2Collection
  nameWithType: X509Certificate2Collection
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2Collection
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash()
  nameWithType: SignedCms.CheckHash()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckHash()
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(Boolean)
  nameWithType: SignedCms.CheckSignature(Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(System.Security.Cryptography.X509Certificates.X509Certificate2Collection,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature(X509Certificate2Collection,Boolean)
  nameWithType: SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature(X509Certificate2Collection,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature()
  nameWithType: SignedCms.ComputeSignature()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature()
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner)
  nameWithType: SignedCms.ComputeSignature(CmsSigner)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner)
- uid: System.Security.Cryptography.Pkcs.CmsSigner
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: CmsSigner
  nameWithType: CmsSigner
  fullName: System.Security.Cryptography.Pkcs.CmsSigner
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(System.Security.Cryptography.Pkcs.CmsSigner,System.Boolean)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature(CmsSigner,Boolean)
  nameWithType: SignedCms.ComputeSignature(CmsSigner,Boolean)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature(CmsSigner,Boolean)
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
  fullName: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode(System.Byte[])
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode(Byte[])
  nameWithType: SignedCms.Decode(Byte[])
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Decode(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode()
  nameWithType: SignedCms.Encode()
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Encode()
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Int32)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(Int32)
  nameWithType: SignedCms.RemoveSignature(Int32)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(System.Security.Cryptography.Pkcs.SignerInfo)
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature(SignerInfo)
  nameWithType: SignedCms.RemoveSignature(SignerInfo)
  fullName: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature(SignerInfo)
- uid: System.Security.Cryptography.Pkcs.SignerInfo
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfo
  nameWithType: SignerInfo
  fullName: System.Security.Cryptography.Pkcs.SignerInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
  fullName: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignerInfoCollection
  parent: System.Security.Cryptography.Pkcs
  isExternal: false
  name: SignerInfoCollection
  nameWithType: SignerInfoCollection
  fullName: System.Security.Cryptography.Pkcs.SignerInfoCollection
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
  fullName: System.Security.Cryptography.Pkcs.SignedCms.Version
- uid: System.Security.Cryptography.Pkcs.SignedCms.#ctor*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignedCms
  nameWithType: SignedCms.SignedCms
- uid: System.Security.Cryptography.Pkcs.SignedCms.Certificates*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Certificates
  nameWithType: SignedCms.Certificates
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckHash*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckHash
  nameWithType: SignedCms.CheckHash
- uid: System.Security.Cryptography.Pkcs.SignedCms.CheckSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: CheckSignature
  nameWithType: SignedCms.CheckSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ComputeSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ComputeSignature
  nameWithType: SignedCms.ComputeSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.ContentInfo*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: ContentInfo
  nameWithType: SignedCms.ContentInfo
- uid: System.Security.Cryptography.Pkcs.SignedCms.Decode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Decode
  nameWithType: SignedCms.Decode
- uid: System.Security.Cryptography.Pkcs.SignedCms.Detached*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Detached
  nameWithType: SignedCms.Detached
- uid: System.Security.Cryptography.Pkcs.SignedCms.Encode*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Encode
  nameWithType: SignedCms.Encode
- uid: System.Security.Cryptography.Pkcs.SignedCms.RemoveSignature*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: RemoveSignature
  nameWithType: SignedCms.RemoveSignature
- uid: System.Security.Cryptography.Pkcs.SignedCms.SignerInfos*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: SignerInfos
  nameWithType: SignedCms.SignerInfos
- uid: System.Security.Cryptography.Pkcs.SignedCms.Version*
  parent: System.Security.Cryptography.Pkcs.SignedCms
  isExternal: false
  name: Version
  nameWithType: SignedCms.Version
