### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateStoreProviderBase
  id: SessionStateStoreProviderBase
  children:
  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  langs:
  - csharp
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase
  fullName: System.Web.SessionState.SessionStateStoreProviderBase
  type: Class
  summary: "Задает необходимых членов поставщика состояния сеанса для хранилища данных."
  remarks: "Состояние сеанса ASP.NET считывает и записывает, что поставщик хранилища данных сеанса в хранилище данных, с помощью состояния сеанса. Поставщик хранилища состояний сеанса — это класс, наследующий абстрактный класс SessionStateStoreProviderBase и приоритетнее с реализациями, определенных в хранилище данных. Поставщик хранилища состояний сеанса вызывается методом <xref:System.Web.SessionState.SessionStateModule>класса во время обработки страницы ASP.NET для взаимодействия с хранилищем данных для хранения и получения переменных сеанса и соответствующего сеанса сведения, такие как значение тайм-аута.</xref:System.Web.SessionState.SessionStateModule>       Данные сеанса в рамках каждого приложения ASP.NET хранятся отдельно для каждого <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>свойство.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Приложения ASP.NET не использует данные сеанса совместно.       Пользовательская реализация SessionStateStoreProviderBase для приложений ASP.NET можно настроить, задав `mode` атрибут `sessionState` элемент конфигурации, <xref:System.Web.SessionState.SessionStateMode>и `customProvider` атрибут к имени пользовательского поставщика, как показано в примере этого раздела.</xref:System.Web.SessionState.SessionStateMode>      ## Блокировки сеанса хранилища данных из-за приложения ASP.NET являются многопоточными для поддержки ответов на параллельные запросы, возможно, что параллельные запросы могут попытаться получить доступ к тем же данным сеанса. Рассмотрим сценарий, в котором рамки из набора рамок к того же приложения. Отдельные запросы каждого фрейма в наборе может выполняться на веб-сервере одновременно в разных потоках. Если страницы ASP.NET для каждого источника кадра доступ к переменным состояния сеанса, может иметь несколько потоков, параллельный доступ к хранилищу сеанса.       Во избежание конфликтов данных в хранилище сеанса и непредвиденное поведение состояния сеанса, <xref:System.Web.SessionState.SessionStateModule>и SessionStateStoreProviderBase классам относятся функции блокировки монопольной блокировки элемент хранилища сеанса для определенного сеанса на время выполнения страницы ASP.NET.</xref:System.Web.SessionState.SessionStateModule> Обратите внимание, что даже если <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>атрибут помечен как `ReadOnly`, может быть возможность записи в хранилище сеанса, поэтому запрос для сеанса только для чтения данных из хранилища будут помещаться ожидание блокировки данных для освобождения других страниц ASP.NET в том же приложении.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Блокировка устанавливается на данных в хранилище сеанса в начале запроса, в вызове <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>метода.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> По завершении выполнения запроса блокировка снимается при вызове <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>метода.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>       Если <xref:System.Web.SessionState.SessionStateModule>объект обнаруживает заблокированные данные сеанса при вызове либо <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>или <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>метод, он повторно запрашивает данные сеанса интервалы полсекунды до снятия блокировки или значение превышает количество времени, который был заблокирован данные сеанса <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>свойство.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> В случае превышения времени ожидания выполнения <xref:System.Web.SessionState.SessionStateModule>вызывает объект <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>метод освободить данные хранилища сеанса и запросить данные хранилища сеанса в этот момент.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       Из-за блокировки сеанса хранилища данных можно освободить путем вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>метод в отдельном потоке перед вызовом <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>метод для текущего ответа может быть предпринята попытка задать и освободит данные хранилища состояний сеанса, которые уже были освобождены и изменены в другом сеансе.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Чтобы избежать такой ситуации <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>и <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>методы возвращают идентификатор блокировки.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Этот идентификатор блокировки должен быть включен во все запросы на изменение данных в хранилище заблокированных сеансов. Хранилище сеанса данные изменяются только в том случае, если идентификатор блокировки в хранилище данных совпадает с идентификатором блокировки, предоставляемые <xref:System.Web.SessionState.SessionStateModule>.</xref:System.Web.SessionState.SessionStateModule>      ## Удаление истек срок действия сеанса хранения данных при <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>метод вызывается для конкретного сеанса, данные для этого сеанса удаляются из хранилища данных с помощью <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>метода; в противном случае данные сохраняются в хранилище данных сеанса для будущих запросов сервера для сеанса.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Это зависит от реализации SessionStateStoreProviderBase для удаления данных сеанса с истекшим сроком действия."
  example:
  - "For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"OdbcSessionServices\" connectionString=\"DSN=SessionState;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <sessionState   \n      mode=\"Custom\"  \n      customProvider=\"OdbcSessionProvider\">  \n      <providers>  \n        <add name=\"OdbcSessionProvider\"  \n             type=\"Samples.AspNet.Session.OdbcSessionStateStore\"  \n             connectionStringName=\"OdbcSessionServices\" />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> класса."
  remarks: "Не требуются для реализации конструктора для класса, который наследует <xref:System.Web.SessionState.SessionStateStoreProviderBase>абстрактный класс.</xref:System.Web.SessionState.SessionStateStoreProviderBase> Инициализация значений для <xref:System.Web.SessionState.SessionStateStoreProviderBase>передаются реализации <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>реализации метода.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: protected SessionStateStoreProviderBase ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Создает новый <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> объект, используемый для текущего запроса."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод CreateNewStoreData в начале запроса для страницы ASP.NET, во время <xref:System.Web.HttpApplication.AcquireRequestState>событий.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Если вызывается метод CreateNewStoreData: - во входящем запросе есть отсутствует идентификатор сеанса, или - входящий запрос содержит идентификатор, но сеанс не найден в хранилище данных сеанса.       Метод CreateNewStoreData создает новый <xref:System.Web.SessionState.SessionStateStoreData>объекта с пустым <xref:System.Web.SessionState.ISessionStateItemCollection>объекта, <xref:System.Web.HttpStaticObjectsCollection>коллекции и указанным `timeout` значение.</xref:System.Web.HttpStaticObjectsCollection> </xref:System.Web.SessionState.ISessionStateItemCollection> </xref:System.Web.SessionState.SessionStateStoreData> <xref:System.Web.HttpStaticObjectsCollection>Коллекции для приложения ASP.NET можно получить с помощью <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>метод.</xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
    - id: timeout
      type: System.Int32
      description: "Состояние сеанса <xref:System.Web.SessionState.HttpSessionState.Timeout*>значение для нового <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Новый <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> для текущего запроса."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Добавляет новый элемент состояния сеанса в хранилище данных."
  remarks: "Метод CreateUninitializedItem используется с сеансами при `cookieless` и `regenerateExpiredSessionId` атрибуты являются оба `true`. Наличие `regenerateExpiredSessionId attribute` значение `true` вызывает <xref:System.Web.SessionState.SessionStateModule>объект для создания нового <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значение при просроченным <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>встретится значение.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       Процесс создания нового <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значения требуется перенаправления браузера на URL-адрес, содержащий вновь созданным <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значение.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Метод CreateUninitializedItem вызывается во время начального запроса, содержащего просроченным <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значение.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> После <xref:System.Web.SessionState.SessionStateModule>получает новый <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значений для замены значения истекшим сроком действия, он вызывает метод CreateUninitializedItem, чтобы добавить неинициализированную запись в хранилище данных состояния сеанса.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule> Затем браузер перенаправляется по URL-адресу, содержащему созданное <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значение.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Наличие неинициализированной записи в хранилище данных сеанса гарантирует, что перенаправленный запрос, включающий только что созданный <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значение не будет по ошибке запрос просроченного сеанса и вместо этого рассматривается как новый сеанс.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       Неинициализированная запись в хранилище данных сеанса связана с созданным <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>значение и содержит только значения по умолчанию, включая дату окончания срока действия и время, а также значение, соответствующее `actionFlags` параметр <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>и <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>методы.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Неинициализированная запись в хранилище состояния сеанса должны включать `actionFlags` значением, равным <xref:System.Web.SessionState.SessionStateActions>значение перечисления.</xref:System.Web.SessionState.SessionStateActions> Это значение передается <xref:System.Web.SessionState.SessionStateModule>объекта по <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>и <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>методов и уведомляет <xref:System.Web.SessionState.SessionStateModule>объекта, но новый текущий сеанс не инициализирована сеанса.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> <xref:System.Web.SessionState.SessionStateModule>Объект затем инициализировать новый сеанс и вызывать `Session_OnStart` событий.</xref:System.Web.SessionState.SessionStateModule>       Дополнительные сведения о сеансах без поддержки файлов cookie см. в разделе <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>свойство.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>Для текущего запроса.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: timeout
      type: System.Int32
      description: "Сеанс <xref:System.Web.SessionState.HttpSessionState.Timeout*>для текущего запроса.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Освобождает все ресурсы, используемые <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> реализации."
  remarks: "Метод Dispose вызывается, когда <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>метод выполняется в закрывающем домена приложения.</xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> Классы, наследующие <xref:System.Web.SessionState.SessionStateStoreProviderBase>класс может использовать этот метод для освобождения любых ресурсов неиспользуемые.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  id: EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Вызывается методом <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> объект в конец запроса."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод EndRequest в конце запроса для страницы ASP.NET, во время <xref:System.Web.HttpApplication.EndRequest>событий.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.SessionState.SessionStateModule> Метод EndRequest выполнить очистку для каждого запроса, необходимые для конкретного поставщика хранилища состояний сеанса."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void EndRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает данные о состоянии сеанса только для чтения из хранилища данных сеанса."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод GetItem в начале запроса во время <xref:System.Web.HttpApplication.AcquireRequestState>событие, когда <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>атрибута задано значение `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Если <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>атрибута задано значение `true`, <xref:System.Web.SessionState.SessionStateModule>вместо объекта вызовы <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>метод.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Метод GetItem возвращает <xref:System.Web.SessionState.SessionStateStoreData>объект со сведениями сеанса из хранилища данных и обновляет дату истечения срока действия данных сеанса.</xref:System.Web.SessionState.SessionStateStoreData> Если элемент сеанса данные не найдены в хранилище данных, метод GetItem задает `locked``out` параметр `false` и возвращает `null`. В результате <xref:System.Web.SessionState.SessionStateModule>для вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>метод для создания нового сеанса элемента в хранилище данных.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule>       Если элемент сеанса данных находится в хранилище данных, но данные заблокированы, метода задает GetItem `locked``out` параметр `true`, задает `lockAge``out` параметр текущую дату и время за вычетом даты и времени, когда элемент был заблокирован (которого извлекается из хранилища данных), задает `lockId``out` параметр идентификатор блокировки, полученные из хранилища данных и возвращает `null`. В результате <xref:System.Web.SessionState.SessionStateModule>объекта для вызова метода GetItem после половина секундный интервал, чтобы попытаться извлечь сведения об элементе сеанса.</xref:System.Web.SessionState.SessionStateModule>       Если значение, `lockAge``out` установлено значение превышает <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>значение, то <xref:System.Web.SessionState.SessionStateModule>вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>метод, чтобы снять блокировку данных элемента сеанса и вызывает метод GetItem.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       `actionFlags` Параметр используется при как `cookieless` и `regenerateExpiredSessionId` атрибуты имеют значения `true`. `actionFlags` Значение <xref:System.Web.SessionState.SessionStateActions>Указывает, что запись в хранилище данных сеанса новый сеанс, требующий инициализации.</xref:System.Web.SessionState.SessionStateActions> Неинициализированные записи в хранилище данных сеанса создаются путем вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>метод.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Если элемент из хранилища данных сеанса не является неинициализированным `actionFlags` параметр будет равен нулю.       Исполнители настраиваемое хранилище состояния сеанса, поддерживающих сеансы без файлов cookie должны задать `actionFlags` `out` параметр со значением, полученное из хранилища данных сеанса для текущего элемента. Если `actionFlags` элемента имеет значение параметра для запрошенного хранилища сеанса <xref:System.Web.SessionState.SessionStateActions>значение перечисления, а затем метод GetItem следует задать значение в хранилище данных после присвоения `actionFlags` `out` параметр.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>Для текущего запроса.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "По возвращении из этого метода содержит логическое значение, равное <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> Если запрашиваемый элемент сеанса заблокирован в хранилище данных сеанса; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "При возвращении этого метода содержит <xref:System.TimeSpan>объекта, которому присвоены временной интервал, который был заблокирован элемента в хранилище данных сеанса.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "По возвращении из этого метода содержит объект, которой присваивается идентификатор блокировки для текущего запроса. Подробнее о идентификатор блокировки, в разделе «Блокировки данных хранилища сеанса» в <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> класс сводки."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "По возвращении из этого метода содержит одно из <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> значения, показывающего, является неинициализированным, без поддержки файлов cookie сеанса в текущем сеансе."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Объект <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> заполняется значения сеанса и данные из хранилища данных сеанса."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Возвращает данные о состоянии сеанса только для чтения из хранилища данных сеанса."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод GetItemExclusive в начале запроса во время <xref:System.Web.HttpApplication.AcquireRequestState>событие, когда <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>атрибута задано значение `true`, используемого по умолчанию.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Если <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>атрибута задано значение `ReadOnly`, <xref:System.Web.SessionState.SessionStateModule>вместо объекта вызовы <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>метод.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Метод GetItemExclusive возвращает <xref:System.Web.SessionState.SessionStateStoreData>объект со сведениями сеанса из хранилища данных обновляет дату истечения срока действия сохраненных данных и блокирует элемент сеанса данные в хранилище данных на время выполнения запроса.</xref:System.Web.SessionState.SessionStateStoreData> Если элемент сеанса данные не найдены в хранилище данных, метод GetItemExclusive задает `locked` `out` параметр `false` и возвращает `null`. В результате <xref:System.Web.SessionState.SessionStateModule>для вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>метод для создания нового сеанса элемента в хранилище данных.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule> Если элемент сеанса данных находится в хранилище данных, но данные заблокированы, метода задает GetItemExclusive `locked` `out` параметр `true`, задает `lockAge` `out` параметр текущую дату и время за вычетом даты и времени, когда элемент был заблокирован (которого извлекается из хранилища данных), задает `lockId` `out` параметр идентификатор блокировки, полученные из хранилища данных и возвращает `null`. В результате <xref:System.Web.SessionState.SessionStateModule>объекта для вызова метода GetItemExclusive после попытки извлечь сведения об элементе сеанса и получить блокировку на данных с интервалом полсекунды.</xref:System.Web.SessionState.SessionStateModule> Если значение, `lockAge` `out` установлено значение превышает <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>значение, то <xref:System.Web.SessionState.SessionStateModule>вызовы <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>метод, чтобы снять блокировку данных элемента сеанса и вызывается метод GetItemExclusive.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       `actionFlags` Параметр используется при `cookieless` и `regenerateExpiredSessionId` атрибуты имеют значения `true`. `actionFlags` Значение <xref:System.Web.SessionState.SessionStateActions>Указывает, что запись в хранилище данных сеанса новый сеанс, требующий инициализации.</xref:System.Web.SessionState.SessionStateActions> Неинициализированные записи в хранилище данных сеанса создаются путем вызова <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>метод.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Если элемент из хранилища данных сеанса не является неинициализированным `actionFlags` параметр будет равен нулю.       Исполнители настраиваемое хранилище состояния сеанса, поддерживающих сеансы без файлов cookie должны задать `actionFlags` `out` параметр со значением, полученное из хранилища данных сеанса для текущего элемента. Если `actionFlags` элемента имеет значение параметра для запрошенного хранилища сеанса <xref:System.Web.SessionState.SessionStateActions>значение перечисления, а затем метод GetItemExclusive следует задать значение в хранилище данных после присвоения `actionFlags` `out` параметр.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
    - id: id
      type: System.String
      description: "<xref:System.Web.SessionState.HttpSessionState.SessionID*>Для текущего запроса.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "По возвращении из этого метода содержит логическое значение, равное <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> в случае блокировки получены успешно, в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "При возвращении этого метода содержит <xref:System.TimeSpan>объекта, которому присвоены временной интервал, который был заблокирован элемента в хранилище данных сеанса.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "По возвращении из этого метода содержит объект, которой присваивается идентификатор блокировки для текущего запроса. Подробнее о идентификатор блокировки, в разделе «Блокировки данных хранилища сеанса» в <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> класс сводки."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "По возвращении из этого метода содержит одно из <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> значения, показывающего, является неинициализированным, без поддержки файлов cookie сеанса в текущем сеансе."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Объект <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> заполняется значения сеанса и данные из хранилища данных сеанса."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  id: InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Вызывается методом <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> объекта для инициализации каждого запроса."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод InitializeRequest перед вызовом любой другой <xref:System.Web.SessionState.SessionStateStoreProviderBase>метод.</xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule> Метод InitializeRequest можно использовать для выполнения любой инициализации для каждого запроса, необходимые для конкретного поставщика хранилища состояний сеанса."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void InitializeRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Выпуски хранить блокировку элемента в данных сеанса."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод ReleaseItemExclusive, чтобы обновить дату истечения срока действия и снять блокировку для элемента в хранилище данных сеанса.</xref:System.Web.SessionState.SessionStateModule> Она вызывается в конце запроса, во время <xref:System.Web.HttpApplication.ReleaseRequestState>события, если значения сеанса не изменяются.</xref:System.Web.HttpApplication.ReleaseRequestState> Если были изменены значения сеанса, <xref:System.Web.SessionState.SessionStateModule>вместо объекта вызовы <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>метод.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       <xref:System.Web.SessionState.SessionStateModule>Объекта также вызывает метод ReleaseItemExclusive при блокировку элемента в хранилище данных сеанса превысило <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>значение.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateModule> Дополнительные сведения о блокировке и подробности о идентификатор блокировки, в разделе «Блокировки сеанса хранилища данных» <xref:System.Web.SessionState.SessionStateStoreProviderBase>Общие сведения о классе.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Метод ReleaseItemExclusive только удаление блокировки с элемента в хранилище данных сеанса для текущего приложения, которое соответствует указанный сеанс `id` и `lockId` значения. Если `lockId` не соответствует один в хранилище данных, ReleaseItemExclusive метод не выполняет никаких действий."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
    - id: id
      type: System.String
      description: "Идентификатор сеанса для текущего запроса."
    - id: lockId
      type: System.Object
      description: "Идентификатор блокировки для текущего запроса."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Удаление элемента данных из хранилища данных сеанса."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод RemoveItem в конце запроса, во время <xref:System.Web.HttpApplication.ReleaseRequestState>событий для удаления данных для элемента сеанса из хранилища данных сеанса, если <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>был вызван метод.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Только данные сеанса для текущего приложения, соответствующий сеанс предоставленного `id` и `lockId` значения удалены. Дополнительные сведения о блокировке и подробности о идентификатор блокировки, в разделе «Блокировки сеанса хранилища данных» <xref:System.Web.SessionState.SessionStateStoreProviderBase>Общие сведения о классе.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
    - id: id
      type: System.String
      description: "Идентификатор сеанса для текущего запроса."
    - id: lockId
      type: System.Object
      description: "Идентификатор блокировки для текущего запроса."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> , Представляющий элемент, чтобы удалить из хранилища данных."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  id: ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Обновляет дату истечения срока действия и время записи в хранилище данных сеанса."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод ResetItemTimeout, чтобы обновить дату окончания и время сеанса до текущей даты и времени, а также сеанс <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>значения при либо: - <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>атрибут `true`, или - запроса не вызывало <xref:System.Web.HttpApplication.AcquireRequestState>и <xref:System.Web.HttpApplication.ReleaseRequestState>событий из-за ошибки.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.SessionState.HttpSessionState.Timeout%2A> </xref:System.Web.SessionState.SessionStateModule>       При запросе страницы ASP.NET и <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>атрибута задано значение `false`, метод ResetItemTimeout по-прежнему вызывается для обновления, срок действия и время данных в хранилище данных сеанса.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
    - id: id
      type: System.String
      description: "Идентификатор сеанса для текущего запроса."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Обновляет сведения об элементе сеанса в хранилище данных состояния сеанса значениями из текущего запроса и снимает блокировку данных."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод SetAndReleaseItemExclusive в конце запроса, во время <xref:System.Web.HttpApplication.ReleaseRequestState>событий для текущего элемента из сеанса данные вставляются в хранилище данных или обновлять существующие данные элемента сеанса в хранилище данных текущими значениями, для обновления срока действия для элемента, а также для снятия блокировки с данными.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Только данные сеанса для текущего приложения, соответствующий сеанс предоставленного `id` и `lockId` значения обновлены. Дополнительные сведения о блокировках см. в разделе «Блокировки хранилища данных сеанса» в <xref:System.Web.SessionState.SessionStateStoreProviderBase>Общие сведения о классе.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Если не были изменены значения сеанса для текущего запроса, метод SetAndReleaseItemExclusive не вызывается. Вместо этого <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>вызывается метод.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>       Если <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>был вызван метод, вызывается метод SetAndReleaseItemExclusive.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Вместо этого <xref:System.Web.SessionState.SessionStateModule>вызывает <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>метод для удаления сеанса элемента данных из источника данных.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Для текущего запроса."
    - id: id
      type: System.String
      description: "Идентификатор сеанса для текущего запроса."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "<xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> Объект, содержащий значения для сохранения текущего сеанса."
    - id: lockId
      type: System.Object
      description: "Идентификатор блокировки для текущего запроса."
    - id: newItem
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы определить элемент сеанса как новый элемент; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для идентификации элемента сеанса как существующий элемент."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Задает ссылку на <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> делегат для <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> события, определенного в файле Global.asax."
  remarks: "<xref:System.Web.SessionState.SessionStateModule>Объект вызывает метод SetItemExpireCallback при инициализации модуля для определения ли вызовы `Session_OnEnd` событий поддерживаются <xref:System.Web.SessionState.SessionStateStoreProviderBase>реализацию и связывания <xref:System.Web.SessionState.SessionStateItemExpireCallback>делегат со `Session_OnEnd` событий.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule>       При реализации поставщиков хранилища пользовательских состояний следует использовать метод SetItemExpireCallback для информирования <xref:System.Web.SessionState.SessionStateModule>объекта ли вызовы `Session_OnEnd` событий поддерживаются и задать локальную ссылку <xref:System.Web.SessionState.SessionStateItemExpireCallback>предоставляемые делегат `expireCallback` параметр.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateModule> Пользовательская реализация необходимо решить, когда локальный <xref:System.Web.SessionState.SessionStateItemExpireCallback>делегат будет вызываться.</xref:System.Web.SessionState.SessionStateItemExpireCallback> Например, можно вызывать при вызове делегата <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>метод, который вызывается, когда сеанс будет сброшен.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    parameters:
    - id: expireCallback
      type: System.Web.SessionState.SessionStateItemExpireCallback
      description: "<xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> Делегат для <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> события, определенного в файле Global.asax."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если поставщик хранилища состояний сеанса поддерживает вызов метода <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> события; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
- uid: System.Web.SessionState.SessionStateStoreData
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateStoreData
  nameWithType: SessionStateStoreData
  fullName: System.Web.SessionState.SessionStateStoreData
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.SessionStateActions
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateActions
  nameWithType: SessionStateActions
  fullName: System.Web.SessionState.SessionStateActions
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
- uid: System.Web.SessionState.SessionStateItemExpireCallback
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateItemExpireCallback
  nameWithType: SessionStateItemExpireCallback
  fullName: System.Web.SessionState.SessionStateItemExpireCallback
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose
  nameWithType: SessionStateStoreProviderBase.Dispose
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest
  nameWithType: SessionStateStoreProviderBase.EndRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem
  nameWithType: SessionStateStoreProviderBase.GetItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionStateStoreProviderBase.InitializeRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem
  nameWithType: SessionStateStoreProviderBase.RemoveItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback
