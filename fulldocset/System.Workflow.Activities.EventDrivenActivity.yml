### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.EventDrivenActivity
  id: EventDrivenActivity
  children:
  - System.Workflow.Activities.EventDrivenActivity.#ctor
  - System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  - System.Workflow.Activities.EventDrivenActivity.EventActivity
  langs:
  - csharp
  name: EventDrivenActivity
  nameWithType: EventDrivenActivity
  fullName: System.Workflow.Activities.EventDrivenActivity
  type: Class
  summary: "Создает оболочку для <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> , выполнение которого инициализируется событием. Этот класс не наследуется."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Это <xref:System.Workflow.ComponentModel.CompositeActivity>, используется для обработки события; обычно оно может быть создано ведущим приложением или средой выполнения, срабатывает таймер задержки.</xref:System.Workflow.ComponentModel.CompositeActivity> Наследуется от <xref:System.Workflow.Activities.SequenceActivity>; таким образом, представляет собой последовательность, которая имеет дополнительное ограничение, что первая операция должна быть <xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity> </xref:System.Workflow.Activities.SequenceActivity> EventDrivenActivity       — EventDrivenActivity <xref:System.Workflow.ComponentModel.CompositeActivity>, что означает EventDrivenActivity может содержать другие действия.</xref:System.Workflow.ComponentModel.CompositeActivity> Аналогично EventDrivenActivity <xref:System.Workflow.Activities.SequenceActivity>действия с дополнительными характеристиками.</xref:System.Workflow.Activities.SequenceActivity>       EventDrivenActivity должен иметь родительский класс, который является либо <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, или <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.</xref:System.Workflow.Activities.StateMachineWorkflowActivity> </xref:System.Workflow.Activities.StateActivity> </xref:System.Workflow.Activities.ListenActivity>       Первым дочерним элементом действия EventDrivenActivity должно быть действие, которое наследует от <xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity> Все последующие дочерние элементы могут быть действиями любого типа. <xref:System.Workflow.Activities.IEventActivity>Блокирует и ожидает ожидающих вхождения некоторые события, например запуска таймера или получения сообщения.</xref:System.Workflow.Activities.IEventActivity> При возникновении события, <xref:System.Workflow.Activities.IEventActivity>завершении, запущены и все последующие операции выполняются.</xref:System.Workflow.Activities.IEventActivity>       Если <xref:System.Workflow.Activities.StateMachineWorkflowActivity>содержит EventDrivenActivity EventDrivenActivity имеет некоторые ограничения:-EventDrivenActivity может содержать одно и только одно действие типа <xref:System.Workflow.Activities.IEventActivity>.</xref:System.Workflow.Activities.IEventActivity> </xref:System.Workflow.Activities.StateMachineWorkflowActivity>      - <xref:System.Workflow.Activities.HandleExternalEventActivity>Должен быть первое дочернее действие.</xref:System.Workflow.Activities.HandleExternalEventActivity> <xref:System.Workflow.Activities.HandleExternalEventActivity>Дочернее действие обработчика событий не может быть и не может быть дочерним для EventDrivenActivity, если <xref:System.Workflow.Activities.HandleExternalEventActivity>не является первым дочерним элементом.</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.HandleExternalEventActivity>      — При условии, что первым действием является <xref:System.Workflow.Activities.HandleExternalEventActivity>, обработчик событий может содержать любые действия.</xref:System.Workflow.Activities.HandleExternalEventActivity> Если такое действие, отличное от <xref:System.Workflow.Activities.HandleExternalEventActivity>содержится в EventDrivenActivity, что действие не может иметь обработчик событий.</xref:System.Workflow.Activities.HandleExternalEventActivity>       Например действий, которые поддерживают обработку событий можно использовать внутри EventDrivenActivity, но действие не может иметь прикреплены обработчики событий.       Еще один пример — что EventDrivenActivity может содержать <xref:System.Workflow.Activities.ConditionedActivityGroup>, но <xref:System.Workflow.Activities.ConditionedActivityGroup>сам не может содержать <xref:System.Workflow.Activities.HandleExternalEventActivity>классы.</xref:System.Workflow.Activities.HandleExternalEventActivity> </xref:System.Workflow.Activities.ConditionedActivityGroup> </xref:System.Workflow.Activities.ConditionedActivityGroup>"
  example:
  - "The following code example shows how to use the EventDrivenActivity to perform state machine transitions. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#185](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#185)]\n [!code-vb[wf_samples#185](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#185)]"
  syntax:
    content: >-
      [System.ComponentModel.Designer(typeof(System.Workflow.Activities.EventDrivenDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventDrivenActivity), "Resources.EventDriven.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventDrivenValidator))]

      public sealed class EventDrivenActivity : System.Workflow.Activities.SequenceActivity
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  - System.Workflow.ComponentModel.Activity
  - System.Workflow.ComponentModel.CompositeActivity
  - System.Workflow.Activities.SequenceActivity
  implements: []
  inheritedMembers:
  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  - System.Workflow.ComponentModel.CompositeActivity.Activities
  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)
  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities
  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities
  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)
  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventDrivenActivity()
  nameWithType: EventDrivenActivity.EventDrivenActivity()
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.EventDrivenActivity> class.  This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \n  \n [!code-cs[wf_samples#187](~/add/codesnippet/csharp/wf_snippets/snippets19.cs#187)]\n [!code-vb[wf_samples#187](~/add/codesnippet/visualbasic/wf_snippets/snippets19.vb#187)]"
  syntax:
    content: public EventDrivenActivity ();
    parameters: []
  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventDrivenActivity(String)
  nameWithType: EventDrivenActivity.EventDrivenActivity(String)
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity(String)
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Workflow.Activities.EventDrivenActivity&quot;> </xref> класса, используя имя действия."
  syntax:
    content: public EventDrivenActivity (string name);
    parameters:
    - id: name
      type: System.String
      description: "Пользовательское имя действия."
  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity
  id: EventActivity
  parent: System.Workflow.Activities.EventDrivenActivity
  langs:
  - csharp
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
  fullName: System.Workflow.Activities.EventDrivenActivity.EventActivity
  type: Property
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities
  summary: "Возвращает событие действия, вызывающее изменение."
  syntax:
    content: public System.Workflow.Activities.IEventActivity EventActivity { get; }
    return:
      type: System.Workflow.Activities.IEventActivity
      description: "Событие действия, вызывающее изменение."
  overload: System.Workflow.Activities.EventDrivenActivity.EventActivity*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.SequenceActivity
  isExternal: false
  name: System.Workflow.Activities.SequenceActivity
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity()
  nameWithType: EventDrivenActivity.EventDrivenActivity()
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity()
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity(String)
  nameWithType: EventDrivenActivity.EventDrivenActivity(String)
  fullName: System.Workflow.Activities.EventDrivenActivity.EventDrivenActivity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
  fullName: System.Workflow.Activities.EventDrivenActivity.EventActivity
- uid: System.Workflow.Activities.IEventActivity
  parent: System.Workflow.Activities
  isExternal: false
  name: IEventActivity
  nameWithType: IEventActivity
  fullName: System.Workflow.Activities.IEventActivity
- uid: System.Workflow.Activities.EventDrivenActivity.#ctor*
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventDrivenActivity
  nameWithType: EventDrivenActivity.EventDrivenActivity
- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity*
  parent: System.Workflow.Activities.EventDrivenActivity
  isExternal: false
  name: EventActivity
  nameWithType: EventDrivenActivity.EventActivity
