### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._MethodInfo
  id: _MethodInfo
  children:
  - System.Runtime.InteropServices._MethodInfo.Attributes
  - System.Runtime.InteropServices._MethodInfo.CallingConvention
  - System.Runtime.InteropServices._MethodInfo.DeclaringType
  - System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  - System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  - System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.GetHashCode
  - System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  - System.Runtime.InteropServices._MethodInfo.GetParameters
  - System.Runtime.InteropServices._MethodInfo.GetType
  - System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._MethodInfo.IsAbstract
  - System.Runtime.InteropServices._MethodInfo.IsAssembly
  - System.Runtime.InteropServices._MethodInfo.IsConstructor
  - System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._MethodInfo.IsFamily
  - System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  - System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  - System.Runtime.InteropServices._MethodInfo.IsFinal
  - System.Runtime.InteropServices._MethodInfo.IsHideBySig
  - System.Runtime.InteropServices._MethodInfo.IsPrivate
  - System.Runtime.InteropServices._MethodInfo.IsPublic
  - System.Runtime.InteropServices._MethodInfo.IsSpecialName
  - System.Runtime.InteropServices._MethodInfo.IsStatic
  - System.Runtime.InteropServices._MethodInfo.IsVirtual
  - System.Runtime.InteropServices._MethodInfo.MemberType
  - System.Runtime.InteropServices._MethodInfo.MethodHandle
  - System.Runtime.InteropServices._MethodInfo.Name
  - System.Runtime.InteropServices._MethodInfo.ReflectedType
  - System.Runtime.InteropServices._MethodInfo.ReturnType
  - System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  - System.Runtime.InteropServices._MethodInfo.ToString
  langs:
  - csharp
  name: _MethodInfo
  nameWithType: _MethodInfo
  fullName: System.Runtime.InteropServices._MethodInfo
  type: Interface
  summary: "Предоставляет открытые элементы &lt;xref:System.Reflection.MethodInfo?displayProperty=fullName&gt; класса в неуправляемый код."
  remarks: "Этот интерфейс для доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       Этот интерфейс сохраняет порядок таблицы vtable <xref:System.Reflection.MethodInfo?displayProperty=fullName>члены класса, осуществляемым при помощи неуправляемый COM-объектов.</xref:System.Reflection.MethodInfo?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("FFCC1B5D-ECB8-38DD-9B01-3DC8ABC2AA5F")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Reflection.MethodInfo))]

      public interface _MethodInfo
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Attributes
  nameWithType: _MethodInfo.Attributes
  fullName: System.Runtime.InteropServices._MethodInfo.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.Attributes*>свойство.</xref:System.Reflection.MethodBase.Attributes*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.Attributes%2A>Свойство возвращает атрибуты, связанные с этим методом.</xref:System.Reflection.MethodBase.Attributes%2A>"
  syntax:
    content: public System.Reflection.MethodAttributes Attributes { get; }
    return:
      type: System.Reflection.MethodAttributes
      description: "Один из <xref:System.Reflection.MethodAttributes>значений.</xref:System.Reflection.MethodAttributes>"
  overload: System.Runtime.InteropServices._MethodInfo.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention
  id: CallingConvention
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
  fullName: System.Runtime.InteropServices._MethodInfo.CallingConvention
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.CallingConvention*>свойство.</xref:System.Reflection.MethodBase.CallingConvention*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.CallingConvention%2A>Свойство возвращает значение, указывающее, соглашения о вызовах для этого метода.</xref:System.Reflection.MethodBase.CallingConvention%2A>"
  syntax:
    content: public System.Reflection.CallingConventions CallingConvention { get; }
    return:
      type: System.Reflection.CallingConventions
      description: "Один из <xref:System.Reflection.CallingConventions>значений.</xref:System.Reflection.CallingConventions>"
  overload: System.Runtime.InteropServices._MethodInfo.CallingConvention*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
  fullName: System.Runtime.InteropServices._MethodInfo.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MemberInfo.DeclaringType*>свойство.</xref:System.Reflection.MemberInfo.DeclaringType*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.DeclaringType%2A>Свойство возвращает класс, который объявляет этот член.</xref:System.Reflection.MemberInfo.DeclaringType%2A>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> Объектов для класса, который объявляет этот член."
  overload: System.Runtime.InteropServices._MethodInfo.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _MethodInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodInfo.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Object.Equals*>метод.</xref:System.Object.Equals*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Object.Equals%2A>Метод определяет, является ли указанный <xref:System.Object>совпадает с текущим <xref:System.Object>.</xref:System.Object> </xref:System.Object> </xref:System.Object.Equals%2A>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "<xref:System.Object>Для сравнения с текущим <xref:System.Object>.</xref:System.Object> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный <xref:System.Object>совпадает с текущим <xref:System.Object>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object> </xref:System.Object>"
  overload: System.Runtime.InteropServices._MethodInfo.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  id: GetBaseDefinition
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetBaseDefinition()
  nameWithType: _MethodInfo.GetBaseDefinition()
  fullName: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodInfo.GetBaseDefinition*>метод.</xref:System.Reflection.MethodInfo.GetBaseDefinition*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodInfo.GetBaseDefinition%2A>Возвращает метод <xref:System.Reflection.MethodInfo>объекта метода на прямой или косвенный базовый класс, в котором был первый метод, представленный этим экземпляром, объявленных.</xref:System.Reflection.MethodInfo> </xref:System.Reflection.MethodInfo.GetBaseDefinition%2A>"
  syntax:
    content: public System.Reflection.MethodInfo GetBaseDefinition ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo
      description: "Объект <xref:System.Reflection.MethodInfo>для первой реализации этого метода.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MemberInfo.GetCustomAttributes*>метод.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>Метод возвращает массив, содержащий все настраиваемые атрибуты.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для поиска цепочки наследования этого члена для поиска атрибутов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object[]
      description: "Массив, содержащий все настраиваемые атрибуты, или массив нулей (0), если атрибуты не определены."
  overload: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MemberInfo.GetCustomAttributes*>метод.</xref:System.Reflection.MemberInfo.GetCustomAttributes*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>Метод возвращает массив настраиваемых атрибутов, которые идентифицируют <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.Emit.MethodBuilder.GetCustomAttributes%2A>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "Тип атрибута для поиска. Возвращаются только те атрибуты, которые можно назначить этот тип."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для поиска цепочки наследования этого члена для поиска атрибутов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object[]
      description: "Массив настраиваемых атрибутов, примененных к данному члену, или массив нулей (0), если атрибуты не были применены."
  overload: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _MethodInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodInfo.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Object.GetHashCode*>метод.</xref:System.Object.GetHashCode*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Object.GetHashCode%2A>Метод служит хэш-функцией для определенного типа.</xref:System.Object.GetHashCode%2A> <xref:System.Object.GetHashCode%2A>подходит для использования в алгоритмах и структурах данных хэширования например хэш-таблице.</xref:System.Object.GetHashCode%2A>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для текущего экземпляра."
  overload: System.Runtime.InteropServices._MethodInfo.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Сопоставляет набор имен соответствующему набору идентификаторов диспетчеризации."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода. Дополнительные сведения о `IDispatch::GetIDsOfNames`, см. в библиотеке MSDN."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Зарезервировано для использования в будущем. Должно быть равным IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "Массив имен для сопоставления."
    - id: cNames
      type: System.UInt32
      description: "Количество сопоставляемых имен."
    - id: lcid
      type: System.UInt32
      description: "Контекст языкового стандарта для интерпретации имен."
    - id: rgDispId
      type: System.IntPtr
      description: "Массив, зарезервированный вызывающим объектом, который помещаются идентификаторы, соответствующие именам."
  overload: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  id: GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetMethodImplementationFlags()
  nameWithType: _MethodInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>метод.</xref:System.Reflection.MethodBase.GetMethodImplementationFlags*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>Элемент возвращает <xref:System.Reflection.MethodImplAttributes>флаги.</xref:System.Reflection.MethodImplAttributes> </xref:System.Reflection.MethodBase.GetMethodImplementationFlags%2A>"
  syntax:
    content: public System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();
    parameters: []
    return:
      type: System.Reflection.MethodImplAttributes
      description: "Один из <xref:System.Reflection.MethodImplAttributes>значений.</xref:System.Reflection.MethodImplAttributes>"
  overload: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters
  id: GetParameters
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetParameters()
  nameWithType: _MethodInfo.GetParameters()
  fullName: System.Runtime.InteropServices._MethodInfo.GetParameters()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.GetParameters*>метод.</xref:System.Reflection.MethodBase.GetParameters*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.GetParameters%2A>Метод возвращает параметры заданного метода или конструктора.</xref:System.Reflection.MethodBase.GetParameters%2A>"
  syntax:
    content: public System.Reflection.ParameterInfo[] GetParameters ();
    parameters: []
    return:
      type: System.Reflection.ParameterInfo[]
      description: "Массив объектов типа <xref:System.Reflection.ParameterInfo>содержащий сведения, соответствующие сигнатуре метода (или конструктор) отраженный этим экземпляром.</xref:System.Reflection.ParameterInfo>"
  overload: System.Runtime.InteropServices._MethodInfo.GetParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetType
  id: GetType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetType()
  nameWithType: _MethodInfo.GetType()
  fullName: System.Runtime.InteropServices._MethodInfo.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Type.GetType*>метод.</xref:System.Type.GetType*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Type.GetType%2A>Метод возвращает тип текущего экземпляра.</xref:System.Type.GetType%2A>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "Объект <xref:System.Type>объекта.</xref:System.Type>"
  overload: System.Runtime.InteropServices._MethodInfo.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Извлекает сведения о типе объекта, который может использоваться для получения сведений о типе интерфейса."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода. Дополнительные сведения о `IDispatch::GetTypeInfo`, см. в библиотеке MSDN."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "Возвращаемые сведения о типе."
    - id: lcid
      type: System.UInt32
      description: "Идентификатор языкового стандарта для сведений о типе."
    - id: ppTInfo
      type: System.IntPtr
      description: "Указатель на объект сведений о запрошенного типа."
  overload: System.Runtime.InteropServices._MethodInfo.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Возвращает число интерфейсов сведения о типе, предоставляемых объектом (0 или 1)."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода. Дополнительные сведения о `IDispatch::GetTypeInfoCount`, см. в библиотеке MSDN."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "По возвращении из этого метода содержит указатель, к которому записывается число предоставляемых объектом интерфейсов сведения о типе. Этот параметр передается неинициализированным."
  overload: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  id: Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(Object,Object[])
  nameWithType: _MethodInfo.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.Invoke*>метод.</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "<xref:System.Reflection.MethodBase.Invoke%2A>Метод вызывает метод или конструктор, представленный этим объектом, используя указанные параметры.</xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke (object obj, object[] parameters);
    parameters:
    - id: obj
      type: System.Object
      description: "Экземпляр, который создал этот метод."
    - id: parameters
      type: System.Object[]
      description: "Список аргументов для вызываемого метода или конструктора. Это массив объектов, содержащих число, порядок и тип в качестве параметров метода или конструктора. Если параметров нет, `parameters` должно быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       Если метод или конструктор, представленный экземпляром принимает <xref uid=&quot;langword_csharp_ref&quot; name=&quot;ref&quot; href=&quot;&quot;> </xref> параметра (<xref uid=&quot;langword_csharp_ByRef&quot; name=&quot;ByRef&quot; href=&quot;&quot;> </xref> в Visual Basic), нет специальные атрибуты не требуются для этого параметра для вызова метода или конструктора с использованием этой функции. Любой объект в этом массиве, который явно не инициализирован со значением будет содержать значение по умолчанию для данного типа объекта. Для элементов ссылочного типа это значение равно <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Для элементов типа значения, это значение равно 0, 0,0 или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, в зависимости от заданного типа элемента."
    return:
      type: System.Object
      description: "Экземпляр класса, связанного с конструктором."
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.Invoke*>метод.</xref:System.Reflection.MethodBase.Invoke*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.Invoke%2A>Метод вызывает конструктор, отраженный этим экземпляром <xref:System.Reflection.ConstructorInfo>объекта с заданными аргументами, с учетом ограничений заданного <xref:System.Reflection.Binder>объекта.</xref:System.Reflection.Binder> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodBase.Invoke%2A>"
  syntax:
    content: public object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);
    parameters:
    - id: obj
      type: System.Object
      description: "Экземпляр, который создал этот метод."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Один из <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;> </xref> значений, определяющее тип привязки."
    - id: binder
      type: System.Reflection.Binder
      description: "Объект <xref uid=&quot;langword_csharp_Binder&quot; name=&quot;Binder&quot; href=&quot;&quot;> </xref> , определяющий набор свойств и разрешающий привязку, приведение типов аргументов и вызов членов с помощью отражения. If `binder` is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, then <xref uid=&quot;langword_csharp_Binder.DefaultBinding&quot; name=&quot;Binder.DefaultBinding&quot; href=&quot;&quot;></xref> is used."
    - id: parameters
      type: System.Object[]
      description: "Массив объектов типа <xref uid=&quot;langword_csharp_Object&quot; name=&quot;Object&quot; href=&quot;&quot;> </xref> соответствует число, порядок и тип параметров для этого конструктора, с учетом ограничений `binder`. Если этот конструктор не требует параметров, передается массив с нулевыми элементами, как и в `Object[] parameters = new Object[0]`. Любой объект в этом массиве, который явно не инициализирован со значением будет содержать значение по умолчанию для данного типа объекта. Для элементов ссылочного типа это значение равно <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Для элементов типа значения, это значение равно 0, 0,0 или <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, в зависимости от заданного типа элемента."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Объект <xref:System.Globalization.CultureInfo>объект, используемый для управления приведением типов.</xref:System.Globalization.CultureInfo> Если это <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.Globalization.CultureInfo>для текущего потока используется.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Экземпляр класса, связанного с конструктором."
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет доступ к свойствам и методам, предоставляемым объекта."
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода. Дополнительные сведения о `IDispatch::Invoke`, см. в библиотеке MSDN."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Идентификатор элемента."
    - id: riid
      type: System.Guid
      description: "Зарезервировано для использования в будущем. Должно быть равным IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "Контекст языкового стандарта, в котором следует интерпретировать аргументы."
    - id: wFlags
      type: System.Int16
      description: "Флаги, описывающие контекст вызова."
    - id: pDispParams
      type: System.IntPtr
      description: "Указатель на структуру, содержащую массив аргументов, массив DISPID для именованных аргументов, а также счетчики количества элементов в массивах."
    - id: pVarResult
      type: System.IntPtr
      description: "Указатель на место хранения результата."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Указатель на структуру, содержащую сведения об исключении."
    - id: puArgErr
      type: System.IntPtr
      description: "Индекс первого аргумента, вызвавшего ошибку."
  overload: System.Runtime.InteropServices._MethodInfo.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
  fullName: System.Runtime.InteropServices._MethodInfo.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsAbstract*>свойство.</xref:System.Reflection.MethodBase.IsAbstract*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsAbstract%2A>Свойство получает значение, указывающее, является ли метод является абстрактным.</xref:System.Reflection.MethodBase.IsAbstract%2A>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если метод является абстрактным. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly
  id: IsAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsAssembly*>свойство.</xref:System.Reflection.MethodBase.IsAssembly*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsAssembly%2A>Получает значение, указывающее, является ли этот метод может вызываться другими классами в той же сборке</xref:System.Reflection.MethodBase.IsAssembly%2A>"
  syntax:
    content: public bool IsAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот метод может вызываться другими классами в той же сборке; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor
  id: IsConstructor
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
  fullName: System.Runtime.InteropServices._MethodInfo.IsConstructor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsConstructor*>свойство.</xref:System.Reflection.MethodBase.IsConstructor*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsConstructor%2A>Свойство получает значение, указывающее, является ли метод конструктором.</xref:System.Reflection.MethodBase.IsConstructor%2A>"
  syntax:
    content: public bool IsConstructor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот метод является конструктором; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MemberInfo.IsDefined*>метод.</xref:System.Reflection.MemberInfo.IsDefined*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.IsDefined%2A>Элемент указывает ли один или несколько экземпляров `attributeType` параметра применяются к этому члену.</xref:System.Reflection.MemberInfo.IsDefined%2A>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> Объекта, к которому применяются настраиваемые атрибуты."
    - id: inherit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для поиска цепочки наследования этого члена для поиска атрибутов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если один или несколько экземпляров <code> attributeType </code> параметров, примененных к этому члену; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily
  id: IsFamily
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsFamily*>свойство.</xref:System.Reflection.MethodBase.IsFamily*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsFamily%2A>Свойство получает значение, указывающее, ограничен ли доступ к этому методу для членов класса и члены из его производных классов.</xref:System.Reflection.MethodBase.IsFamily%2A>"
  syntax:
    content: public bool IsFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступ к классу ограничен для членов данного класса и членов производных классов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  id: IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>свойство.</xref:System.Reflection.MethodBase.IsFamilyAndAssembly*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>Свойство возвращает значение, определяющее этот метод может быть вызван для членов данного класса и производных классов, если они находятся в той же сборке</xref:System.Reflection.MethodBase.IsFamilyAndAssembly%2A>"
  syntax:
    content: public bool IsFamilyAndAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот метод ограничен доступ для членов данного класса и элементам производных классов, которые находятся в одной и той же сборки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  id: IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>свойство.</xref:System.Reflection.MethodBase.IsFamilyOrAssembly*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>Свойство получает значение, указывающее, может ли этот метод вызывается производными классами, где они находятся и всеми классами в той же сборке.</xref:System.Reflection.MethodBase.IsFamilyOrAssembly%2A>"
  syntax:
    content: public bool IsFamilyOrAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступ к этому методу только члены самого класса, членов производных классов везде, где они находятся и членов класса в той же сборке; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal
  id: IsFinal
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
  fullName: System.Runtime.InteropServices._MethodInfo.IsFinal
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsFinal*>свойство.</xref:System.Reflection.MethodBase.IsFinal*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsFinal%2A>Свойство получает значение, указывающее, является ли этот метод `final`.</xref:System.Reflection.MethodBase.IsFinal%2A>"
  syntax:
    content: public bool IsFinal { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот метод <xref uid=&quot;langword_csharp_final&quot; name=&quot;final&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsFinal*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  id: IsHideBySig
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsHideBySig*>свойство.</xref:System.Reflection.MethodBase.IsHideBySig*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsHideBySig%2A>Получает значение, указывающее, скрывается ли только член с тем же именем, с точно такой же сигнатурой в производном классе.</xref:System.Reflection.MethodBase.IsHideBySig%2A>"
  syntax:
    content: public bool IsHideBySig { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если элемент скрыт на основе подписи; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsHideBySig*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate
  id: IsPrivate
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
  fullName: System.Runtime.InteropServices._MethodInfo.IsPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsPrivate*>свойство.</xref:System.Reflection.MethodBase.IsPrivate*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsPrivate%2A>Свойство получает значение, указывающее, является ли этот член является закрытым.</xref:System.Reflection.MethodBase.IsPrivate%2A>"
  syntax:
    content: public bool IsPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если доступ к этому методу разрешен только элементам данного класса; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
  fullName: System.Runtime.InteropServices._MethodInfo.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsPublic*>свойство.</xref:System.Reflection.MethodBase.IsPublic*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsPublic%2A>Свойство получает значение, указывающее, является ли этот метод является открытым.</xref:System.Reflection.MethodBase.IsPublic%2A>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот метод является общим; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsSpecialName*>свойство.</xref:System.Reflection.MethodBase.IsSpecialName*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsSpecialName%2A>Свойство получает значение, указывающее, имеет ли этот метод специальное имя.</xref:System.Reflection.MethodBase.IsSpecialName%2A>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот метод имеет специальное имя; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic
  id: IsStatic
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
  fullName: System.Runtime.InteropServices._MethodInfo.IsStatic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsStatic*>свойство.</xref:System.Reflection.MethodBase.IsStatic*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsStatic%2A>Свойство получает значение, указывающее, является ли метод `static`.</xref:System.Reflection.MethodBase.IsStatic%2A>"
  syntax:
    content: public bool IsStatic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот метод <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsStatic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual
  id: IsVirtual
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
  fullName: System.Runtime.InteropServices._MethodInfo.IsVirtual
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.IsVirtual*>свойство.</xref:System.Reflection.MethodBase.IsVirtual*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.IsVirtual%2A>Свойство получает значение, указывающее, является ли метод `virtual`.</xref:System.Reflection.MethodBase.IsVirtual%2A>"
  syntax:
    content: public bool IsVirtual { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если этот метод <xref uid=&quot;langword_csharp_virtual&quot; name=&quot;virtual&quot; href=&quot;&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._MethodInfo.IsVirtual*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: MemberType
  nameWithType: _MethodInfo.MemberType
  fullName: System.Runtime.InteropServices._MethodInfo.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MemberInfo.MemberType*>свойство.</xref:System.Reflection.MemberInfo.MemberType*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.MemberType%2A>Возвращает свойство <xref:System.Reflection.MemberTypes>значение, указывающее тип члена — метод, конструктор, события и т. д.</xref:System.Reflection.MemberTypes> </xref:System.Reflection.MemberInfo.MemberType%2A>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "Один из <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> значения, указывающие тип члена."
  overload: System.Runtime.InteropServices._MethodInfo.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle
  id: MethodHandle
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
  fullName: System.Runtime.InteropServices._MethodInfo.MethodHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodBase.MethodHandle*>свойство.</xref:System.Reflection.MethodBase.MethodHandle*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodBase.MethodHandle%2A>Свойство получает дескриптор представления внутренних метаданных метода.</xref:System.Reflection.MethodBase.MethodHandle%2A>"
  syntax:
    content: public RuntimeMethodHandle MethodHandle { get; }
    return:
      type: System.RuntimeMethodHandle
      description: "Объект <xref:System.RuntimeMethodHandle>объекта.</xref:System.RuntimeMethodHandle>"
  overload: System.Runtime.InteropServices._MethodInfo.MethodHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.Name
  id: Name
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: Name
  nameWithType: _MethodInfo.Name
  fullName: System.Runtime.InteropServices._MethodInfo.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MemberInfo.Name*>свойство.</xref:System.Reflection.MemberInfo.Name*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.Name%2A>Свойство возвращает имя текущего члена.</xref:System.Reflection.MemberInfo.Name%2A>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Объект <xref:System.String>объект, содержащий имя данного элемента.</xref:System.String>"
  overload: System.Runtime.InteropServices._MethodInfo.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
  fullName: System.Runtime.InteropServices._MethodInfo.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MemberInfo.ReflectedType*>свойство.</xref:System.Reflection.MemberInfo.ReflectedType*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MemberInfo.ReflectedType%2A>Свойство возвращает объект класса, который использовался для получения этого `MemberInfo` объекта.</xref:System.Reflection.MemberInfo.ReflectedType%2A>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "<xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> Объект, который был использован для получения этого <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;> </xref> объекта."
  overload: System.Runtime.InteropServices._MethodInfo.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType
  id: ReturnType
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodInfo.ReturnType*>свойство.</xref:System.Reflection.MethodInfo.ReturnType*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodInfo.ReturnType%2A>Свойство возвращает тип возвращаемого значения этого метода.</xref:System.Reflection.MethodInfo.ReturnType%2A>"
  syntax:
    content: public Type ReturnType { get; }
    return:
      type: System.Type
      description: "Тип возвращаемого значения этого метода."
  overload: System.Runtime.InteropServices._MethodInfo.ReturnType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  id: ReturnTypeCustomAttributes
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes*>свойство.</xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes*>"
  remarks: "Это свойство предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода.       <xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A>Свойство получает настраиваемые атрибуты возвращаемого типа.</xref:System.Reflection.MethodInfo.ReturnTypeCustomAttributes%2A>"
  syntax:
    content: public System.Reflection.ICustomAttributeProvider ReturnTypeCustomAttributes { get; }
    return:
      type: System.Reflection.ICustomAttributeProvider
      description: "<xref href=&quot;System.Reflection.ICustomAttributeProvider&quot;> </xref> Объект, представляющий пользовательские атрибуты возвращаемого типа."
  overload: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._MethodInfo.ToString
  id: ToString
  parent: System.Runtime.InteropServices._MethodInfo
  langs:
  - csharp
  name: ToString()
  nameWithType: _MethodInfo.ToString()
  fullName: System.Runtime.InteropServices._MethodInfo.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Предоставляет COM-объекты с независящим от версии доступом к <xref:System.Object.ToString*>метод.</xref:System.Object.ToString*>"
  remarks: "Этот метод предназначен для обеспечения доступа к управляемым классам из неуправляемого кода и не должен вызываться из управляемого кода."
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строка, представляющая текущий <xref:System.Object>.</xref:System.Object>"
  overload: System.Runtime.InteropServices._MethodInfo.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._MethodInfo.Attributes
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Attributes
  nameWithType: _MethodInfo.Attributes
  fullName: System.Runtime.InteropServices._MethodInfo.Attributes
- uid: System.Reflection.MethodAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodAttributes
  nameWithType: MethodAttributes
  fullName: System.Reflection.MethodAttributes
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
  fullName: System.Runtime.InteropServices._MethodInfo.CallingConvention
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
  fullName: System.Runtime.InteropServices._MethodInfo.DeclaringType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._MethodInfo.Equals(System.Object)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Equals(Object)
  nameWithType: _MethodInfo.Equals(Object)
  fullName: System.Runtime.InteropServices._MethodInfo.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetBaseDefinition()
  nameWithType: _MethodInfo.GetBaseDefinition()
  fullName: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition()
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _MethodInfo.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetHashCode()
  nameWithType: _MethodInfo.GetHashCode()
  fullName: System.Runtime.InteropServices._MethodInfo.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetMethodImplementationFlags()
  nameWithType: _MethodInfo.GetMethodImplementationFlags()
  fullName: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags()
- uid: System.Reflection.MethodImplAttributes
  parent: System.Reflection
  isExternal: true
  name: MethodImplAttributes
  nameWithType: MethodImplAttributes
  fullName: System.Reflection.MethodImplAttributes
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetParameters()
  nameWithType: _MethodInfo.GetParameters()
  fullName: System.Runtime.InteropServices._MethodInfo.GetParameters()
- uid: System.Reflection.ParameterInfo[]
  parent: System.Reflection
  isExternal: true
  name: ParameterInfo
  nameWithType: ParameterInfo
  fullName: System.Reflection.ParameterInfo[]
  spec.csharp:
  - uid: System.Reflection.ParameterInfo
    name: ParameterInfo
    nameWithType: ParameterInfo
    fullName: ParameterInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._MethodInfo.GetType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetType()
  nameWithType: _MethodInfo.GetType()
  fullName: System.Runtime.InteropServices._MethodInfo.GetType()
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _MethodInfo.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Object[])
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(Object,Object[])
  nameWithType: _MethodInfo.Invoke(Object,Object[])
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,Object[])
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  nameWithType: _MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(Object,BindingFlags,Binder,Object[],CultureInfo)
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._MethodInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._MethodInfo.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
  fullName: System.Runtime.InteropServices._MethodInfo.IsAbstract
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
  fullName: System.Runtime.InteropServices._MethodInfo.IsConstructor
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _MethodInfo.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._MethodInfo.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamily
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
  fullName: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
  fullName: System.Runtime.InteropServices._MethodInfo.IsFinal
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
  fullName: System.Runtime.InteropServices._MethodInfo.IsHideBySig
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
  fullName: System.Runtime.InteropServices._MethodInfo.IsPrivate
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
  fullName: System.Runtime.InteropServices._MethodInfo.IsPublic
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
  fullName: System.Runtime.InteropServices._MethodInfo.IsSpecialName
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
  fullName: System.Runtime.InteropServices._MethodInfo.IsStatic
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
  fullName: System.Runtime.InteropServices._MethodInfo.IsVirtual
- uid: System.Runtime.InteropServices._MethodInfo.MemberType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MemberType
  nameWithType: _MethodInfo.MemberType
  fullName: System.Runtime.InteropServices._MethodInfo.MemberType
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
  fullName: System.Runtime.InteropServices._MethodInfo.MethodHandle
- uid: System.RuntimeMethodHandle
  parent: System
  isExternal: true
  name: RuntimeMethodHandle
  nameWithType: RuntimeMethodHandle
  fullName: System.RuntimeMethodHandle
- uid: System.Runtime.InteropServices._MethodInfo.Name
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Name
  nameWithType: _MethodInfo.Name
  fullName: System.Runtime.InteropServices._MethodInfo.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
  fullName: System.Runtime.InteropServices._MethodInfo.ReflectedType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
  fullName: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes
- uid: System.Reflection.ICustomAttributeProvider
  parent: System.Reflection
  isExternal: false
  name: ICustomAttributeProvider
  nameWithType: ICustomAttributeProvider
  fullName: System.Reflection.ICustomAttributeProvider
- uid: System.Runtime.InteropServices._MethodInfo.ToString
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ToString()
  nameWithType: _MethodInfo.ToString()
  fullName: System.Runtime.InteropServices._MethodInfo.ToString()
- uid: System.Runtime.InteropServices._MethodInfo.Attributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Attributes
  nameWithType: _MethodInfo.Attributes
- uid: System.Runtime.InteropServices._MethodInfo.CallingConvention*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: CallingConvention
  nameWithType: _MethodInfo.CallingConvention
- uid: System.Runtime.InteropServices._MethodInfo.DeclaringType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: DeclaringType
  nameWithType: _MethodInfo.DeclaringType
- uid: System.Runtime.InteropServices._MethodInfo.Equals*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Equals
  nameWithType: _MethodInfo.Equals
- uid: System.Runtime.InteropServices._MethodInfo.GetBaseDefinition*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetBaseDefinition
  nameWithType: _MethodInfo.GetBaseDefinition
- uid: System.Runtime.InteropServices._MethodInfo.GetCustomAttributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _MethodInfo.GetCustomAttributes
- uid: System.Runtime.InteropServices._MethodInfo.GetHashCode*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetHashCode
  nameWithType: _MethodInfo.GetHashCode
- uid: System.Runtime.InteropServices._MethodInfo.GetIDsOfNames*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _MethodInfo.GetIDsOfNames
- uid: System.Runtime.InteropServices._MethodInfo.GetMethodImplementationFlags*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetMethodImplementationFlags
  nameWithType: _MethodInfo.GetMethodImplementationFlags
- uid: System.Runtime.InteropServices._MethodInfo.GetParameters*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetParameters
  nameWithType: _MethodInfo.GetParameters
- uid: System.Runtime.InteropServices._MethodInfo.GetType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetType
  nameWithType: _MethodInfo.GetType
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfo*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfo
  nameWithType: _MethodInfo.GetTypeInfo
- uid: System.Runtime.InteropServices._MethodInfo.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _MethodInfo.GetTypeInfoCount
- uid: System.Runtime.InteropServices._MethodInfo.Invoke*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Invoke
  nameWithType: _MethodInfo.Invoke
- uid: System.Runtime.InteropServices._MethodInfo.IsAbstract*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAbstract
  nameWithType: _MethodInfo.IsAbstract
- uid: System.Runtime.InteropServices._MethodInfo.IsAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsAssembly
  nameWithType: _MethodInfo.IsAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsConstructor*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsConstructor
  nameWithType: _MethodInfo.IsConstructor
- uid: System.Runtime.InteropServices._MethodInfo.IsDefined*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsDefined
  nameWithType: _MethodInfo.IsDefined
- uid: System.Runtime.InteropServices._MethodInfo.IsFamily*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamily
  nameWithType: _MethodInfo.IsFamily
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyAndAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyAndAssembly
  nameWithType: _MethodInfo.IsFamilyAndAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFamilyOrAssembly*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFamilyOrAssembly
  nameWithType: _MethodInfo.IsFamilyOrAssembly
- uid: System.Runtime.InteropServices._MethodInfo.IsFinal*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsFinal
  nameWithType: _MethodInfo.IsFinal
- uid: System.Runtime.InteropServices._MethodInfo.IsHideBySig*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsHideBySig
  nameWithType: _MethodInfo.IsHideBySig
- uid: System.Runtime.InteropServices._MethodInfo.IsPrivate*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPrivate
  nameWithType: _MethodInfo.IsPrivate
- uid: System.Runtime.InteropServices._MethodInfo.IsPublic*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsPublic
  nameWithType: _MethodInfo.IsPublic
- uid: System.Runtime.InteropServices._MethodInfo.IsSpecialName*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsSpecialName
  nameWithType: _MethodInfo.IsSpecialName
- uid: System.Runtime.InteropServices._MethodInfo.IsStatic*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsStatic
  nameWithType: _MethodInfo.IsStatic
- uid: System.Runtime.InteropServices._MethodInfo.IsVirtual*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: IsVirtual
  nameWithType: _MethodInfo.IsVirtual
- uid: System.Runtime.InteropServices._MethodInfo.MemberType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MemberType
  nameWithType: _MethodInfo.MemberType
- uid: System.Runtime.InteropServices._MethodInfo.MethodHandle*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: MethodHandle
  nameWithType: _MethodInfo.MethodHandle
- uid: System.Runtime.InteropServices._MethodInfo.Name*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: Name
  nameWithType: _MethodInfo.Name
- uid: System.Runtime.InteropServices._MethodInfo.ReflectedType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReflectedType
  nameWithType: _MethodInfo.ReflectedType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnType*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnType
  nameWithType: _MethodInfo.ReturnType
- uid: System.Runtime.InteropServices._MethodInfo.ReturnTypeCustomAttributes*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ReturnTypeCustomAttributes
  nameWithType: _MethodInfo.ReturnTypeCustomAttributes
- uid: System.Runtime.InteropServices._MethodInfo.ToString*
  parent: System.Runtime.InteropServices._MethodInfo
  isExternal: false
  name: ToString
  nameWithType: _MethodInfo.ToString
