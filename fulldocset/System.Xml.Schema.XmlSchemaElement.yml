### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaElement
  id: XmlSchemaElement
  children:
  - System.Xml.Schema.XmlSchemaElement.#ctor
  - System.Xml.Schema.XmlSchemaElement.Block
  - System.Xml.Schema.XmlSchemaElement.BlockResolved
  - System.Xml.Schema.XmlSchemaElement.Constraints
  - System.Xml.Schema.XmlSchemaElement.DefaultValue
  - System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  - System.Xml.Schema.XmlSchemaElement.ElementType
  - System.Xml.Schema.XmlSchemaElement.Final
  - System.Xml.Schema.XmlSchemaElement.FinalResolved
  - System.Xml.Schema.XmlSchemaElement.FixedValue
  - System.Xml.Schema.XmlSchemaElement.Form
  - System.Xml.Schema.XmlSchemaElement.IsAbstract
  - System.Xml.Schema.XmlSchemaElement.IsNillable
  - System.Xml.Schema.XmlSchemaElement.Name
  - System.Xml.Schema.XmlSchemaElement.QualifiedName
  - System.Xml.Schema.XmlSchemaElement.RefName
  - System.Xml.Schema.XmlSchemaElement.SchemaType
  - System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  - System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  langs:
  - csharp
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement
  fullName: System.Xml.Schema.XmlSchemaElement
  type: Class
  summary: "Представляет <xref uid=&quot;langword_csharp_element&quot; name=&quot;element&quot; href=&quot;&quot;> </xref> элемента из XML-схемы в соответствии с консорциума World Wide Web (W3C). Этот класс является базовым классом для всех примитивных типов и используется для описания элемента в XML-документа."
  remarks: "> [!IMPORTANT]Настроек-не использовать схемы из неизвестных или ненадежных источников или расположения. Это приведет к компрометации вашего кода.   Настроек-XML-схем (включая встроенные схемы) по своей природе уязвимы для атак; не принимать их в недоверенных сценариях.   Настроек-сообщений об ошибках проверки схемы и исключения могут предоставлять конфиденциальных сведений о модели содержимого или пути URI к файлу схемы. Будьте внимательны и не предоставлять эту информацию для ненадежных вызывающих объектов."
  example:
  - "The following example creates the `element` element.  \n  \n [!code-cs[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_2_1.cs)]\n [!code-cpp[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_2_1.cpp)]\n [!code-vb[Classic WebData XmlSchemaElement Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_2_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic WebData XmlSchemaElement Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_2_2.xsd)]"
  syntax:
    content: 'public class XmlSchemaElement : System.Xml.Schema.XmlSchemaParticle'
  inheritance:
  - System.Object
  - System.Xml.Schema.XmlSchemaObject
  - System.Xml.Schema.XmlSchemaAnnotated
  - System.Xml.Schema.XmlSchemaParticle
  implements: []
  inheritedMembers:
  - System.Xml.Schema.XmlSchemaAnnotated.Annotation
  - System.Xml.Schema.XmlSchemaAnnotated.Id
  - System.Xml.Schema.XmlSchemaAnnotated.UnhandledAttributes
  - System.Xml.Schema.XmlSchemaObject.LineNumber
  - System.Xml.Schema.XmlSchemaObject.LinePosition
  - System.Xml.Schema.XmlSchemaObject.Namespaces
  - System.Xml.Schema.XmlSchemaObject.Parent
  - System.Xml.Schema.XmlSchemaObject.SourceUri
  - System.Xml.Schema.XmlSchemaParticle.MaxOccurs
  - System.Xml.Schema.XmlSchemaParticle.MaxOccursString
  - System.Xml.Schema.XmlSchemaParticle.MinOccurs
  - System.Xml.Schema.XmlSchemaParticle.MinOccursString
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: XmlSchemaElement()
  nameWithType: XmlSchemaElement.XmlSchemaElement()
  fullName: System.Xml.Schema.XmlSchemaElement.XmlSchemaElement()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Initializes a new instance of the <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;></xref> class."
  syntax:
    content: public XmlSchemaElement ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Block
  id: Block
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Block
  nameWithType: XmlSchemaElement.Block
  fullName: System.Xml.Schema.XmlSchemaElement.Block
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;> </xref> наследования."
  remarks: "Этот атрибут может содержать следующие значения: | Перечисление | Описание |   |----------|-----------------|   | `None`| Использование производного ограничения, определяемые `BlockDefault` свойство схемы, если он существует. |   | `Empty`| Нет ограничений на замещение этого элемента. |   | `Substitution`| Этот элемент нельзя заменять типом, производным от подстановки. |   | `Extension`| Этот элемент нельзя заменять типом, производным от расширения. |   | `Restriction`| Этот элемент нельзя заменять типом, производным от ограничения. |   | `All`|`#all`. Этот элемент не может быть замещен любого типа, независимо от метода выведения. |       Это свойство не предотвращает наследование, но не дает производному заменять этот тип в экземпляре. Значения списков и объединений не поддерживаются для `block` свойства."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Block { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "Атрибут, используемый для блокировки создания производных типов. Значение по умолчанию — <xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;> </xref>.       Необязательный параметр."
  overload: System.Xml.Schema.XmlSchemaElement.Block*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved
  id: BlockResolved
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaElement.BlockResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает значение после компиляции <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;> </xref> свойство."
  remarks: "Это значение указывает, каким образом обеспечивается соответствие типов при `xsi:type` используется в экземпляре документа. Например, если значение ограничено, может использоваться только конкретно определенный тип, не типы, полученные путем ограничения от конкретного определенного типа.       Это свойство может содержать значения, указанные в следующей таблице. Значение по умолчанию — `None`. Список и методы получения путем объединения не допускаются для данного свойства.      | Перечисление | Описание |   |----------|-----------------|   | `Empty`| Нет ограничений на замещение этого элемента. |   | `Substitution`| Этот элемент нельзя заменять типом, производным от подстановки. |   | `Extension`| Этот элемент нельзя заменять типом, производным от расширения. |   | `Restriction`| Этот элемент нельзя заменять типом, производным от ограничения. |   | `All`|`#all`. Этот элемент не может быть замещен любого типа, независимо от метода выведения. |"
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod BlockResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "Значение после компиляции <xref uid=&quot;langword_csharp_Block&quot; name=&quot;Block&quot; href=&quot;&quot;> </xref> свойство. Значение по умолчанию — <xref uid=&quot;langword_csharp_BlockDefault&quot; name=&quot;BlockDefault&quot; href=&quot;&quot;> </xref> значение на <xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Xml.Schema.XmlSchemaElement.BlockResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Constraints
  id: Constraints
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
  fullName: System.Xml.Schema.XmlSchemaElement.Constraints
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает коллекцию ограничений, применяемых для элемента."
  remarks: "Возвращает коллекцию ограничений, применяемых для элемента. Can be any of `XmlSchemaKey`, `XmlSchemaKeyref`, or `XmlSchemaUnique`."
  syntax:
    content: public System.Xml.Schema.XmlSchemaObjectCollection Constraints { get; }
    return:
      type: System.Xml.Schema.XmlSchemaObjectCollection
      description: "Коллекция ограничений."
  overload: System.Xml.Schema.XmlSchemaElement.Constraints*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue
  id: DefaultValue
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaElement.DefaultValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает значение по умолчанию элемента, если его содержимое является простым типом или содержимое элемента <xref uid=&quot;langword_csharp_textOnly&quot; name=&quot;textOnly&quot; href=&quot;&quot;> </xref>."
  remarks: "`fixed` И `default` атрибуты являются взаимоисключающими. Если элемент содержит простой тип, это значение должно быть допустимое значение этого типа."
  syntax:
    content: public string DefaultValue { get; set; }
    return:
      type: System.String
      description: "Значение по умолчанию для элемента. Значение по умолчанию — пустая ссылка.       Необязательный параметр."
  overload: System.Xml.Schema.XmlSchemaElement.DefaultValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  id: ElementSchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает <xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref> объект, представляющий тип элемента на основе <> </> *настроек или <> </> *настроек значения элемента."
  remarks: "Это свойство является свойством информационный набор после проверки."
  syntax:
    content: public System.Xml.Schema.XmlSchemaType ElementSchemaType { get; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaType&quot;> </xref> Объекта."
  overload: System.Xml.Schema.XmlSchemaElement.ElementSchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.ElementType
  id: ElementType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Получает объект среды выполнения (CLR) на основании <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> или <xref href=&quot;System.Xml.Schema.XmlSchemaElement&quot;> </xref> элемента, который содержит значение после компиляции <xref uid=&quot;langword_csharp_ElementType&quot; name=&quot;ElementType&quot; href=&quot;&quot;> </xref> свойство."
  remarks: "Этот объект может быть <xref:System.Xml.Schema.XmlSchemaDatatype>Если элемент имеет встроенный тип XML-схемы или <xref:System.Xml.Schema.XmlSchemaSimpleType>Если элемент имеет определяемый пользователем тип.</xref:System.Xml.Schema.XmlSchemaSimpleType> </xref:System.Xml.Schema.XmlSchemaDatatype>       Это свойство является свойством информационный набор после проверки.      Настроек [!IMPORTANT] настроек свойство ElementType в версии платформы .NET Framework 2.0 является устаревшим и будет заменен <xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A>свойство.</xref:System.Xml.Schema.XmlSchemaElement.ElementSchemaType%2A>"
  syntax:
    content: public object ElementType { get; }
    return:
      type: System.Object
      description: "Объект среды выполнения. Значение после компиляции <xref uid=&quot;langword_csharp_ElementType&quot; name=&quot;ElementType&quot; href=&quot;&quot;> </xref> свойство."
  overload: System.Xml.Schema.XmlSchemaElement.ElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Final
  id: Final
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Final
  nameWithType: XmlSchemaElement.Final
  fullName: System.Xml.Schema.XmlSchemaElement.Final
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref> свойство, чтобы показать, что никакие дальнейшие преобразования."
  remarks: "Этот атрибут может содержать значения, указанные в следующей таблице.      | Перечисление | Описание |   |----------|-----------------|   | `None`| Использование производного ограничения, определяемые `FinalDefault` свойство схемы, если он существует. |   | `Empty`| Нет ограничений на производные этого элемента. |   | `Extension`| Этот элемент не может быть наследуемых через расширение. |   | `Restriction`| Этот элемент не может быть производным путем ограничения. |   | `All`|`#all`. Этот элемент не может наследоваться любым способом создания производных. |       См. также <xref:System.Xml.Schema.XmlSchemaElement>.</xref:System.Xml.Schema.XmlSchemaElement> `Substitution`, `List`, и `Union` методам создания производных типов запрещены для этого свойства."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod Final { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "<xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref> Свойство. Значение по умолчанию — <xref uid=&quot;langword_csharp_XmlSchemaDerivationMethod.None&quot; name=&quot;XmlSchemaDerivationMethod.None&quot; href=&quot;&quot;> </xref>.       Необязательный параметр."
  overload: System.Xml.Schema.XmlSchemaElement.Final*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved
  id: FinalResolved
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaElement.FinalResolved
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает значение после компиляции <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref> свойство."
  remarks: "Это значение указывает, каким образом ограничивается при расширении типа посредством ограничения. Это свойство может содержать следующие значения.      | Перечисление | Описание |   |----------|-----------------|   | `Empty`| Нет ограничений на производные этого элемента. |   | `Extension`| Этот элемент не может быть наследуемых через расширение. |   | `Restriction`| Этот элемент не может быть производным путем ограничения. |   | `All`|`#all`. Этот элемент не может наследоваться любым способом создания производных. |       Подстановки, список и объединения наследования методов не разрешены для этого свойства."
  syntax:
    content: public System.Xml.Schema.XmlSchemaDerivationMethod FinalResolved { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDerivationMethod
      description: "Значение после компиляции <xref uid=&quot;langword_csharp_Final&quot; name=&quot;Final&quot; href=&quot;&quot;> </xref> свойство. Значение по умолчанию — <xref uid=&quot;langword_csharp_FinalDefault&quot; name=&quot;FinalDefault&quot; href=&quot;&quot;> </xref> значение на <xref uid=&quot;langword_csharp_schema&quot; name=&quot;schema&quot; href=&quot;&quot;> </xref> элемента."
  overload: System.Xml.Schema.XmlSchemaElement.FinalResolved*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue
  id: FixedValue
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
  fullName: System.Xml.Schema.XmlSchemaElement.FixedValue
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает фиксированное значение."
  remarks: "Содержимое должно быть простым типом или `textOnly`. `fixed` И `default` атрибуты являются взаимоисключающими."
  syntax:
    content: public string FixedValue { get; set; }
    return:
      type: System.String
      description: "Фиксированное значение является предопределенным и неизменным. Значение по умолчанию — пустая ссылка.       Необязательный параметр."
  overload: System.Xml.Schema.XmlSchemaElement.FixedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Form
  id: Form
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Form
  nameWithType: XmlSchemaElement.Form
  fullName: System.Xml.Schema.XmlSchemaElement.Form
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает форму для элемента."
  remarks: "Значение по умолчанию является значение `elementFormDefault` для атрибута `schema` элемента, содержащего элемент. Значение по умолчанию — `Unqualified`.      | Перечисление | Описание |   |----------|-----------------|   | `Qualified`| Элемент должны быть дополнены префикс пространства имен. |   | `Unqualified`| Элемент не должен иметь префикс пространства имен. |       Не удается задать значение, если элемент, имеющий `schema` элемента."
  syntax:
    content: public System.Xml.Schema.XmlSchemaForm Form { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaForm
      description: "Форма для элемента. Значение по умолчанию — &lt;xref:System.Xml.Schema.XmlSchema.ElementFormDefault%2A?displayProperty=fullName&gt; значение.       Необязательный параметр."
  overload: System.Xml.Schema.XmlSchemaElement.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract
  id: IsAbstract
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaElement.IsAbstract
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает сведения, определяющие, может ли элемент использоваться в экземпляре документа."
  syntax:
    content: public bool IsAbstract { get; set; }
    return:
      type: System.Boolean
      description: "Если <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, элемент не может находиться в экземпляре документа. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Необязательный параметр."
  overload: System.Xml.Schema.XmlSchemaElement.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable
  id: IsNillable
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
  fullName: System.Xml.Schema.XmlSchemaElement.IsNillable
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает сведения о том, если <xref uid=&quot;langword_csharp_xsi:nil&quot; name=&quot;xsi:nil&quot; href=&quot;&quot;> </xref> может произойти в данных экземпляра. Указывает, если явное значение nil можно назначить на элемент."
  remarks: "Это относится к содержимому элемента, а не атрибуты элемента."
  syntax:
    content: public bool IsNillable { get; set; }
    return:
      type: System.Boolean
      description: "Если nillable <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, это позволяет экземпляру элемента иметь <xref uid=&quot;langword_csharp_nil&quot; name=&quot;nil&quot; href=&quot;&quot;> </xref> атрибута <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_nil&quot; name=&quot;nil&quot; href=&quot;&quot;> </xref> Атрибут определен как часть пространства имен схемы XML для экземпляров. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Необязательный параметр."
  overload: System.Xml.Schema.XmlSchemaElement.IsNillable*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.Name
  id: Name
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: Name
  nameWithType: XmlSchemaElement.Name
  fullName: System.Xml.Schema.XmlSchemaElement.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает имя элемента."
  remarks: "Имя должно быть типа NCName (имя без двоеточия), как определено в спецификации пространств имен XML консорциума World Wide Web (W3C). `Name`и `RefName` атрибуты являются взаимоисключающими."
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Имя элемента. Значение по умолчанию — <xref uid=&quot;langword_csharp_String.Empty&quot; name=&quot;String.Empty&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName
  id: QualifiedName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaElement.QualifiedName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает фактическое полное имя для данного элемента."
  remarks: "Полное имя — это имя, `ref` атрибут ссылается на. Полное имя состоит из NCName элемента. Например, имя элемента = «NCName» и префикс, используемый для описания `targetNamespace` схемы. Это свойство содержит значение после компиляции `QualifiedName` свойство."
  syntax:
    content: public System.Xml.XmlQualifiedName QualifiedName { get; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "Полное имя элемента. Значение после компиляции <xref uid=&quot;langword_csharp_QualifiedName&quot; name=&quot;QualifiedName&quot; href=&quot;&quot;> </xref> свойство."
  overload: System.Xml.Schema.XmlSchemaElement.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.RefName
  id: RefName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: RefName
  nameWithType: XmlSchemaElement.RefName
  fullName: System.Xml.Schema.XmlSchemaElement.RefName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает имя ссылки элемента, объявленного в данной схеме (или иной схеме, указанной заданным пространством имен)."
  remarks: "`RefName` Должно быть QName. `RefName` Может включать префикс пространства имен. If `RefName` attribute is present, all `complexType`, `simpleType`, `key`, `keyref`, `unique`, `nillable`, `default`, `fixed`, `form`, `block`, and `type` must be absent. Если `RefName` присутствует, `minOccurs`, `maxOccurs`, и `id` разрешены. Чтобы объявить элемент с помощью существующего определения элемента, используйте `RefName` атрибут для указания существующего определения элемента.       Не удается задать значение, если элемент, имеющий `schema` элемента."
  syntax:
    content: public System.Xml.XmlQualifiedName RefName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "Ссылочное имя элемента."
  overload: System.Xml.Schema.XmlSchemaElement.RefName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType
  id: SchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает тип элемента. Это может быть сложный тип или простой тип."
  remarks: "Для объявления элемента с помощью существующей `simpleType` или `complexType` определение, используйте `SchemaType` свойство, чтобы указать существующий тип. Если `RefName` присутствует атрибут `complexType`, `simpleType`, `key`, `keyref`, и `unique` элементы и `nillable`, `default`, `fixed`, `form`, `block`, и `SchemaType` не может иметь атрибутов."
  syntax:
    content: public System.Xml.Schema.XmlSchemaType SchemaType { get; set; }
    return:
      type: System.Xml.Schema.XmlSchemaType
      description: "Тип элемента."
  overload: System.Xml.Schema.XmlSchemaElement.SchemaType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  id: SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает имя встроенного типа, определенного в этой схеме или в другой схеме, задаваемой указанным пространством имен."
  syntax:
    content: public System.Xml.XmlQualifiedName SchemaTypeName { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "Имя встроенного типа данных."
  overload: System.Xml.Schema.XmlSchemaElement.SchemaTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  id: SubstitutionGroup
  parent: System.Xml.Schema.XmlSchemaElement
  langs:
  - csharp
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
  fullName: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает или задает имя элемента, заменяемого этим элементом."
  remarks: "Этот элемент должен иметь тот же тип или тип, производный от типа указанного элемента. Это значение должно быть QName.       Не удается задать значение, если элемент, имеющий `schema` элемента."
  syntax:
    content: public System.Xml.XmlQualifiedName SubstitutionGroup { get; set; }
    return:
      type: System.Xml.XmlQualifiedName
      description: "Полное имя элемента, заменяемого этим элементом.       Необязательный параметр."
  overload: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.Schema.XmlSchemaParticle
  isExternal: false
  name: System.Xml.Schema.XmlSchemaParticle
- uid: System.Xml.Schema.XmlSchemaElement.#ctor
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: XmlSchemaElement()
  nameWithType: XmlSchemaElement.XmlSchemaElement()
  fullName: System.Xml.Schema.XmlSchemaElement.XmlSchemaElement()
- uid: System.Xml.Schema.XmlSchemaElement.Block
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Block
  nameWithType: XmlSchemaElement.Block
  fullName: System.Xml.Schema.XmlSchemaElement.Block
- uid: System.Xml.Schema.XmlSchemaDerivationMethod
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDerivationMethod
  nameWithType: XmlSchemaDerivationMethod
  fullName: System.Xml.Schema.XmlSchemaDerivationMethod
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
  fullName: System.Xml.Schema.XmlSchemaElement.BlockResolved
- uid: System.Xml.Schema.XmlSchemaElement.Constraints
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
  fullName: System.Xml.Schema.XmlSchemaElement.Constraints
- uid: System.Xml.Schema.XmlSchemaObjectCollection
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaObjectCollection
  nameWithType: XmlSchemaObjectCollection
  fullName: System.Xml.Schema.XmlSchemaObjectCollection
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
  fullName: System.Xml.Schema.XmlSchemaElement.DefaultValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementSchemaType
- uid: System.Xml.Schema.XmlSchemaType
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaType
  nameWithType: XmlSchemaType
  fullName: System.Xml.Schema.XmlSchemaType
- uid: System.Xml.Schema.XmlSchemaElement.ElementType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
  fullName: System.Xml.Schema.XmlSchemaElement.ElementType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xml.Schema.XmlSchemaElement.Final
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Final
  nameWithType: XmlSchemaElement.Final
  fullName: System.Xml.Schema.XmlSchemaElement.Final
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
  fullName: System.Xml.Schema.XmlSchemaElement.FinalResolved
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
  fullName: System.Xml.Schema.XmlSchemaElement.FixedValue
- uid: System.Xml.Schema.XmlSchemaElement.Form
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Form
  nameWithType: XmlSchemaElement.Form
  fullName: System.Xml.Schema.XmlSchemaElement.Form
- uid: System.Xml.Schema.XmlSchemaForm
  parent: System.Xml.Schema
  isExternal: true
  name: XmlSchemaForm
  nameWithType: XmlSchemaForm
  fullName: System.Xml.Schema.XmlSchemaForm
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
  fullName: System.Xml.Schema.XmlSchemaElement.IsAbstract
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
  fullName: System.Xml.Schema.XmlSchemaElement.IsNillable
- uid: System.Xml.Schema.XmlSchemaElement.Name
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Name
  nameWithType: XmlSchemaElement.Name
  fullName: System.Xml.Schema.XmlSchemaElement.Name
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
  fullName: System.Xml.Schema.XmlSchemaElement.QualifiedName
- uid: System.Xml.XmlQualifiedName
  parent: System.Xml
  isExternal: true
  name: XmlQualifiedName
  nameWithType: XmlQualifiedName
  fullName: System.Xml.XmlQualifiedName
- uid: System.Xml.Schema.XmlSchemaElement.RefName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaElement.RefName
  fullName: System.Xml.Schema.XmlSchemaElement.RefName
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaType
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
  fullName: System.Xml.Schema.XmlSchemaElement.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
  fullName: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup
- uid: System.Xml.Schema.XmlSchemaElement.#ctor*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: XmlSchemaElement
  nameWithType: XmlSchemaElement.XmlSchemaElement
- uid: System.Xml.Schema.XmlSchemaElement.Block*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Block
  nameWithType: XmlSchemaElement.Block
- uid: System.Xml.Schema.XmlSchemaElement.BlockResolved*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: BlockResolved
  nameWithType: XmlSchemaElement.BlockResolved
- uid: System.Xml.Schema.XmlSchemaElement.Constraints*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Constraints
  nameWithType: XmlSchemaElement.Constraints
- uid: System.Xml.Schema.XmlSchemaElement.DefaultValue*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: DefaultValue
  nameWithType: XmlSchemaElement.DefaultValue
- uid: System.Xml.Schema.XmlSchemaElement.ElementSchemaType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementSchemaType
  nameWithType: XmlSchemaElement.ElementSchemaType
- uid: System.Xml.Schema.XmlSchemaElement.ElementType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: ElementType
  nameWithType: XmlSchemaElement.ElementType
- uid: System.Xml.Schema.XmlSchemaElement.Final*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Final
  nameWithType: XmlSchemaElement.Final
- uid: System.Xml.Schema.XmlSchemaElement.FinalResolved*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FinalResolved
  nameWithType: XmlSchemaElement.FinalResolved
- uid: System.Xml.Schema.XmlSchemaElement.FixedValue*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: FixedValue
  nameWithType: XmlSchemaElement.FixedValue
- uid: System.Xml.Schema.XmlSchemaElement.Form*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Form
  nameWithType: XmlSchemaElement.Form
- uid: System.Xml.Schema.XmlSchemaElement.IsAbstract*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsAbstract
  nameWithType: XmlSchemaElement.IsAbstract
- uid: System.Xml.Schema.XmlSchemaElement.IsNillable*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: IsNillable
  nameWithType: XmlSchemaElement.IsNillable
- uid: System.Xml.Schema.XmlSchemaElement.Name*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: Name
  nameWithType: XmlSchemaElement.Name
- uid: System.Xml.Schema.XmlSchemaElement.QualifiedName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: QualifiedName
  nameWithType: XmlSchemaElement.QualifiedName
- uid: System.Xml.Schema.XmlSchemaElement.RefName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: RefName
  nameWithType: XmlSchemaElement.RefName
- uid: System.Xml.Schema.XmlSchemaElement.SchemaType*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaType
  nameWithType: XmlSchemaElement.SchemaType
- uid: System.Xml.Schema.XmlSchemaElement.SchemaTypeName*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SchemaTypeName
  nameWithType: XmlSchemaElement.SchemaTypeName
- uid: System.Xml.Schema.XmlSchemaElement.SubstitutionGroup*
  parent: System.Xml.Schema.XmlSchemaElement
  isExternal: false
  name: SubstitutionGroup
  nameWithType: XmlSchemaElement.SubstitutionGroup
