### YamlMime:ManagedReference
items:
- uid: System.Threading.Overlapped
  id: Overlapped
  children:
  - System.Threading.Overlapped.#ctor
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  - System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  - System.Threading.Overlapped.AsyncResult
  - System.Threading.Overlapped.EventHandle
  - System.Threading.Overlapped.EventHandleIntPtr
  - System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.OffsetHigh
  - System.Threading.Overlapped.OffsetLow
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  - System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  - System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  langs:
  - csharp
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
  type: Class
  summary: "Предоставляет управляемый представление Win32 `OVERLAPPED` структуры, включая методы для передачи данных из экземпляра Overlapped для <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры."
  remarks: "<xref:System.Threading.Overlapped.Pack%2A>И <xref:System.Threading.Overlapped.UnsafePack%2A>методы передачи информации из объекта Overlapped <xref:System.Threading.NativeOverlapped>Ввод/вывод файла структуры, можно передать функции Win32 API для асинхронного.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A> <xref:System.Threading.Overlapped.Unpack%2A>Сведения о методе передачи <xref:System.Threading.NativeOverlapped>структуры с экземпляром класса Overlapped.</xref:System.Threading.NativeOverlapped> </xref:System.Threading.Overlapped.Unpack%2A>       Изменения свойств объекта Overlapped на связанный с ним <xref:System.Threading.NativeOverlapped>структуры и наоборот.</xref:System.Threading.NativeOverlapped>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class Overlapped
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor
  id: '#ctor'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Инициализирует новый пустой экземпляр <xref href=&quot;System.Threading.Overlapped&quot;> </xref> класса."
  syntax:
    content: public Overlapped ();
    parameters: []
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Threading.Overlapped&quot;> </xref> класса с указанным файлом положение дескриптора 32-разрядное целое число, которому отправляется сигнал при завершении операции ввода-вывода и интерфейсом, через который возвращаются результаты операции."
  remarks: "<xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>Чтобы получить дескриптор любого управляемого синхронизации события, производный от <xref:System.Threading.WaitHandle>класса.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>       Реализация <xref:System.IAsyncResult>предоставляет сведения о состоянии на операции ввода-вывода.</xref:System.IAsyncResult> Передать конструктору в `ar` параметра и получить позже с помощью <xref:System.Threading.Overlapped.AsyncResult%2A>свойство.</xref:System.Threading.Overlapped.AsyncResult%2A> Если метод обратного вызова для <xref:System.Threading.Overlapped.Pack%2A>или <xref:System.Threading.Overlapped.UnsafePack%2A>метод, получающий обратный вызов к <xref:System.IAsyncResult>по распаковке <xref:System.Threading.NativeOverlapped>структуры, он получает.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, int hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "Младшее слово позиции файла, с которого следует начать передачу."
    - id: offsetHi
      type: System.Int32
      description: "Старшее слово позиции файла, с которого следует начать передачу."
    - id: hEvent
      type: System.Int32
      description: "Дескриптор события, получает сигнал после завершения операции ввода-вывода."
    - id: ar
      type: System.IAsyncResult
      description: "Объект, реализующий интерфейс <xref:System.IAsyncResult>интерфейсов и предоставляет сведения о состоянии на операции ввода-вывода.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  id: '#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)'
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Threading.Overlapped&quot;> </xref> класса с указанным файлом положение дескриптора, которому отправляется сигнал при завершении операции ввода-вывода и интерфейсом, через который возвращаются результаты операции."
  remarks: "Для получения дескриптора синхронизации управляемого объекта, который является производным от <xref:System.Threading.WaitHandle>класса, используйте <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>Свойства <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>объекта, а затем вызвать <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>метод.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>       Реализация <xref:System.IAsyncResult>предоставляет сведения о состоянии на операции ввода-вывода.</xref:System.IAsyncResult> Передать конструктору в `ar` параметра и получить позже с помощью <xref:System.Threading.Overlapped.AsyncResult%2A>свойство.</xref:System.Threading.Overlapped.AsyncResult%2A> Если метод обратного вызова для <xref:System.Threading.Overlapped.Pack%2A>или <xref:System.Threading.Overlapped.UnsafePack%2A>метод, получающий обратный вызов к <xref:System.IAsyncResult>по распаковке <xref:System.Threading.NativeOverlapped>структуры, он получает.</xref:System.Threading.NativeOverlapped> </xref:System.IAsyncResult> </xref:System.Threading.Overlapped.UnsafePack%2A> </xref:System.Threading.Overlapped.Pack%2A>"
  syntax:
    content: public Overlapped (int offsetLo, int offsetHi, IntPtr hEvent, IAsyncResult ar);
    parameters:
    - id: offsetLo
      type: System.Int32
      description: "Младшее слово позиции файла, с которого следует начать передачу."
    - id: offsetHi
      type: System.Int32
      description: "Старшее слово позиции файла, с которого следует начать передачу."
    - id: hEvent
      type: System.IntPtr
      description: "Дескриптор события, получает сигнал после завершения операции ввода-вывода."
    - id: ar
      type: System.IAsyncResult
      description: "Объект, реализующий интерфейс <xref:System.IAsyncResult>интерфейсов и предоставляет сведения о состоянии на операции ввода-вывода.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.AsyncResult
  id: AsyncResult
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Возвращает или задает объект, предоставляющий сведения о состоянии на операции ввода-вывода."
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Объект, реализующий интерфейс <xref:System.IAsyncResult>интерфейс.</xref:System.IAsyncResult>"
  overload: System.Threading.Overlapped.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandle
  id: EventHandle
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Возвращает или задает дескриптор 32-разрядное целое число для события синхронизации, которому отправляется сигнал при завершении операции ввода-вывода."
  remarks: "Это свойство не может использоваться на 64-разрядных платформах. Используйте <xref:System.Threading.Overlapped.EventHandleIntPtr%2A>свойство вместо.</xref:System.Threading.Overlapped.EventHandleIntPtr%2A>       <xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>Чтобы получить дескриптор любого управляемого синхронизации события, производный от <xref:System.Threading.WaitHandle>класса.</xref:System.Threading.WaitHandle> </xref:System.Threading.WaitHandle.Handle%2A?displayProperty=fullName>"
  syntax:
    content: public int EventHandle { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Значение, представляющее дескриптор события синхронизации.</xref:System.Int32>"
  overload: System.Threading.Overlapped.EventHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.EventHandleIntPtr
  id: EventHandleIntPtr
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Возвращает или задает дескриптор для события синхронизации, которому отправляется сигнал при завершении операции ввода-вывода."
  remarks: "Для получения дескриптора синхронизации управляемого объекта, который является производным от <xref:System.Threading.WaitHandle>класса, используйте <xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName>Свойства <xref:Microsoft.Win32.SafeHandles.SafeWaitHandle>объекта, а затем вызвать <xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A>метод.</xref:System.Runtime.InteropServices.SafeHandle.DangerousGetHandle%2A> </xref:Microsoft.Win32.SafeHandles.SafeWaitHandle> </xref:System.Threading.WaitHandle.SafeWaitHandle%2A?displayProperty=fullName> </xref:System.Threading.WaitHandle>"
  syntax:
    content: public IntPtr EventHandleIntPtr { get; set; }
    return:
      type: System.IntPtr
      description: "<xref:System.IntPtr>Представляет дескриптор события.</xref:System.IntPtr>"
  overload: System.Threading.Overlapped.EventHandleIntPtr*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  id: Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Освобождает неуправляемые памяти, связанной с собственного перекрывающихся структуры, выделенной с помощью <xref:System.Threading.Overlapped.Pack*>метод.</xref:System.Threading.Overlapped.Pack*>"
  remarks: "Необходимо вызвать метод свободного ровно один раз на каждый <xref:System.Threading.NativeOverlapped>указатель, полученные из <xref:System.Threading.Overlapped.Pack%2A>метод.</xref:System.Threading.Overlapped.Pack%2A> </xref:System.Threading.NativeOverlapped> Если вы не вызываете метод бесплатно, будет происходит утечка памяти. При вызове метода освобождения более одного раза, память будет повреждена."
  syntax:
    content: public static void Free (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Указатель на <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры для освобождения."
  overload: System.Threading.Overlapped.Free*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetHigh
  id: OffsetHigh
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Возвращает или задает старшее слово позиции файла, с которого следует начать передачу данных. Позиция в файле — это смещение в байтах от начала файла."
  syntax:
    content: public int OffsetHigh { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Значение, представляющее старшее слово позиции файла.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetHigh*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.OffsetLow
  id: OffsetLow
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Возвращает или задает младшее слово позиции файла, с которого следует начать передачу данных. Позиция в файле — это смещение в байтах от начала файла."
  syntax:
    content: public int OffsetLow { get; set; }
    return:
      type: System.Int32
      description: "<xref:System.Int32>Значение, представляющее младшее слово позиции файла.</xref:System.Int32>"
  overload: System.Threading.Overlapped.OffsetLow*
  exceptions: []
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  id: Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Текущий экземпляр в пакеты <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуру, определяющую делегата, вызываемый при завершении асинхронной операции ввода-вывода."
  remarks: "Неуправляемый указатель, возвращаемый этим методом может передаваться в операционную систему в перекрывающихся операций ввода-вывода. <xref:System.Threading.NativeOverlapped>В физической памяти, пока не имеет фиксированную структуру <xref:System.Threading.Overlapped.Unpack%2A>называется.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>      Настроек [!IMPORTANT] настроек вызывающий объект отвечает за закрепление буфера. Если домен приложения выгружается, дескриптор закрепленного буфера уничтожается и освобождается буфера, оставляя операции ввода-вывода для записи освобождаемого адреса. По этой причине лучше использовать <xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>перегрузку метода, в котором среда выполнения закрепляет буфер.</xref:System.Threading.Overlapped.Pack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>"
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "<xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> Делегат, представляющий метод обратного вызова вызывается при завершении асинхронной операции ввода-вывода."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Неуправляемый указатель <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий <xref href=&quot;System.Threading.Overlapped&quot;> </xref> уже упакован."
  platform:
  - net462
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  id: Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Текущий экземпляр в пакеты <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры, указав делегат, вызываемый при завершении асинхронной операции ввода-вывода и управляемый объект, который служит буфером."
  remarks: "Неуправляемый указатель, возвращаемый этим методом может передаваться в операционную систему в перекрывающихся операций ввода-вывода. <xref:System.Threading.NativeOverlapped>В физической памяти, пока не имеет фиксированную структуру <xref:System.Threading.Overlapped.Unpack%2A>называется.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Буфер или буферы, заданные в `userData` должен совпадать с те, которые передавались в неуправляемую функцию операционной системы, выполняющий асинхронного ввода-вывода.      Настроек [!NOTE] настроек среды выполнения закрепляет буфер или буферы, заданные в `userData` на время операции ввода-вывода. Если домен приложения выгружается, среда выполнения хранит память прикрепленной до завершения операции ввода-вывода."
  syntax:
    content: public System.Threading.NativeOverlapped* Pack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "<xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> Делегат, представляющий метод обратного вызова вызывается при завершении асинхронной операции ввода-вывода."
    - id: userData
      type: System.Object
      description: "Объект или массив объектов, представляющих входного или выходного буфера для операции. Каждый объект представляет буфер, например в массив байтов."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Неуправляемый указатель <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры."
  overload: System.Threading.Overlapped.Pack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий <xref href=&quot;System.Threading.Overlapped&quot;> </xref> уже упакован."
  platform:
  - net462
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  id: Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Распаковывает указанного неуправляемого <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуру в управляемом <xref href=&quot;System.Threading.Overlapped&quot;> </xref> объекта."
  remarks: "<xref:System.Threading.NativeOverlapped>Структура не освобождается от физической памяти, пока не будет вызван <xref:System.Threading.Overlapped.Free%2A>метод.</xref:System.Threading.Overlapped.Free%2A> </xref:System.Threading.NativeOverlapped>"
  syntax:
    content: public static System.Threading.Overlapped Unpack (System.Threading.NativeOverlapped* nativeOverlappedPtr);
    parameters:
    - id: nativeOverlappedPtr
      type: System.Threading.NativeOverlapped*
      description: "Неуправляемый указатель <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры."
    return:
      type: System.Threading.Overlapped
      description: "<xref href=&quot;System.Threading.Overlapped&quot;> </xref> Объект, содержащий сведения о распаковать из собственной структуре."
  overload: System.Threading.Overlapped.Unpack*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>nativeOverlappedPtr</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  id: UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Текущий экземпляр в пакеты <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структура делегат, вызываемый при завершении асинхронной операции ввода-вывода. Не распространяет вызывающий стек."
  remarks: "Неуправляемый указатель, возвращаемый этим методом может передаваться в операционную систему в перекрывающихся операций ввода-вывода. <xref:System.Threading.NativeOverlapped>В физической памяти, пока не имеет фиксированную структуру <xref:System.Threading.Overlapped.Unpack%2A>называется.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Вызывающий объект отвечает за закрепление буфера. Если домен приложения выгружается, дескриптор закрепленного буфера уничтожается и освобождается буфера, оставляя операции ввода-вывода для записи освобождаемого адреса. По этой причине лучше использовать <xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>перегрузку метода, в котором среда выполнения закрепляет буфер.</xref:System.Threading.Overlapped.UnsafePack%28System.Threading.IOCompletionCallback%2CSystem.Object%29>      Настроек [!CAUTION] настроек с помощью <xref:System.Threading.Overlapped.UnsafePack%2A>метод может случайно открываются брешь в системе безопасности.</xref:System.Threading.Overlapped.UnsafePack%2A> Управление доступом для кода сформирует его проверки разрешений всех вызывающих объектов разрешений в стеке. <xref:System.Threading.Overlapped.UnsafePack%2A>Метод не распространяет вызывающий стек.</xref:System.Threading.Overlapped.UnsafePack%2A> Вредоносный код может иметь возможность использовать этот параметр, чтобы избежать проверки разрешений."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "<xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> Делегат, представляющий метод обратного вызова вызывается при завершении асинхронной операции ввода-вывода."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Неуправляемый указатель <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий <xref href=&quot;System.Threading.Overlapped&quot;> </xref> уже упакован."
  platform:
  - net462
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  id: UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  langs:
  - csharp
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "Текущий экземпляр в пакеты <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры, указав делегат, вызываемый при завершении асинхронной операции ввода-вывода и управляемый объект, который служит буфером. Не распространяет вызывающий стек."
  remarks: "Неуправляемый указатель, возвращаемый этим методом может передаваться в операционную систему в перекрывающихся операций ввода-вывода. <xref:System.Threading.NativeOverlapped>В физической памяти, пока не имеет фиксированную структуру <xref:System.Threading.Overlapped.Unpack%2A>называется.</xref:System.Threading.Overlapped.Unpack%2A> </xref:System.Threading.NativeOverlapped>       Буфер или буферы, заданные в `userData` должен совпадать с те, которые передавались в неуправляемую функцию операционной системы, выполняющий асинхронного ввода-вывода.       Среда выполнения закрепляет буфер или буферы, заданные в`userData` на время операции ввода-вывода. Если домен приложения выгружается, среда выполнения хранит память прикрепленной до завершения операции ввода-вывода.      Настроек [!CAUTION] настроек с помощью UnsafePack метод может случайно открываются брешь в системе безопасности. Управление доступом для кода сформирует его проверки разрешений всех вызывающих объектов разрешений в стеке. Метод UnsafePack не распространяет вызывающий стек. Вредоносный код может иметь возможность использовать этот параметр, чтобы избежать проверки разрешений."
  syntax:
    content: public System.Threading.NativeOverlapped* UnsafePack (System.Threading.IOCompletionCallback iocb, object userData);
    parameters:
    - id: iocb
      type: System.Threading.IOCompletionCallback
      description: "<xref href=&quot;System.Threading.IOCompletionCallback&quot;> </xref> Делегат, представляющий метод обратного вызова вызывается при завершении асинхронной операции ввода-вывода."
    - id: userData
      type: System.Object
      description: "Объект или массив объектов, представляющих входного или выходного буфера для операции. Каждый объект представляет буфер, например в массив байтов."
    return:
      type: System.Threading.NativeOverlapped*
      description: "Неуправляемый указатель <xref href=&quot;System.Threading.NativeOverlapped&quot;> </xref> структуры."
  overload: System.Threading.Overlapped.UnsafePack*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "Вызывающий объект не имеет необходимых разрешений."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий <xref href=&quot;System.Threading.Overlapped&quot;> </xref> уже упакованы."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Threading.Overlapped.#ctor
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped()
  nameWithType: Overlapped.Overlapped()
  fullName: System.Threading.Overlapped.Overlapped()
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.Int32,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,Int32,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,Int32,IAsyncResult)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Threading.Overlapped.#ctor(System.Int32,System.Int32,System.IntPtr,System.IAsyncResult)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  nameWithType: Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
  fullName: System.Threading.Overlapped.Overlapped(Int32,Int32,IntPtr,IAsyncResult)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Threading.Overlapped.AsyncResult
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
  fullName: System.Threading.Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
  fullName: System.Threading.Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
  fullName: System.Threading.Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free(NativeOverlapped*)
  nameWithType: Overlapped.Free(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Free(NativeOverlapped*)
- uid: System.Threading.Overlapped.OffsetHigh
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
  fullName: System.Threading.Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
  fullName: System.Threading.Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback)
  nameWithType: Overlapped.Pack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback)
- uid: System.Threading.IOCompletionCallback
  parent: System.Threading
  isExternal: false
  name: IOCompletionCallback
  nameWithType: IOCompletionCallback
  fullName: System.Threading.IOCompletionCallback
- uid: System.Threading.Overlapped.Pack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack(IOCompletionCallback,Object)
  nameWithType: Overlapped.Pack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.Pack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.Unpack(System.Threading.NativeOverlapped*)
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack(NativeOverlapped*)
  nameWithType: Overlapped.Unpack(NativeOverlapped*)
  fullName: System.Threading.Overlapped.Unpack(NativeOverlapped*)
- uid: System.Threading.Overlapped
  parent: System.Threading
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped
  fullName: System.Threading.Overlapped
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback)
- uid: System.Threading.Overlapped.UnsafePack(System.Threading.IOCompletionCallback,System.Object)
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack(IOCompletionCallback,Object)
  nameWithType: Overlapped.UnsafePack(IOCompletionCallback,Object)
  fullName: System.Threading.Overlapped.UnsafePack(IOCompletionCallback,Object)
- uid: System.Threading.Overlapped.#ctor*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Overlapped
  nameWithType: Overlapped.Overlapped
- uid: System.Threading.Overlapped.AsyncResult*
  parent: System.Threading.Overlapped
  isExternal: false
  name: AsyncResult
  nameWithType: Overlapped.AsyncResult
- uid: System.Threading.Overlapped.EventHandle*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandle
  nameWithType: Overlapped.EventHandle
- uid: System.Threading.Overlapped.EventHandleIntPtr*
  parent: System.Threading.Overlapped
  isExternal: false
  name: EventHandleIntPtr
  nameWithType: Overlapped.EventHandleIntPtr
- uid: System.Threading.Overlapped.Free*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Free
  nameWithType: Overlapped.Free
- uid: System.Threading.Overlapped.OffsetHigh*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetHigh
  nameWithType: Overlapped.OffsetHigh
- uid: System.Threading.Overlapped.OffsetLow*
  parent: System.Threading.Overlapped
  isExternal: false
  name: OffsetLow
  nameWithType: Overlapped.OffsetLow
- uid: System.Threading.Overlapped.Pack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Pack
  nameWithType: Overlapped.Pack
- uid: System.Threading.Overlapped.Unpack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: Unpack
  nameWithType: Overlapped.Unpack
- uid: System.Threading.Overlapped.UnsafePack*
  parent: System.Threading.Overlapped
  isExternal: false
  name: UnsafePack
  nameWithType: Overlapped.UnsafePack
