### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IPlaybackControl
  id: IPlaybackControl
  children:
  - System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  - System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  langs:
  - csharp
  name: IPlaybackControl
  nameWithType: IPlaybackControl
  fullName: System.EnterpriseServices.IPlaybackControl
  type: Interface
  summary: "Функции в компонентах в очередь в неправильной обработке ошибок воспроизведения на стороне сервера и на клиентские сбои механизме доставки очереди сообщений."
  remarks: "Класс исключения, определенные для компонента в каталоге COM + реализует IPlaybackControl и интерфейс для исходного класса. Реализации методов интерфейса исходного класса используются для обработки для неудачных методов в самом классе исключений. Они будут вызываться после <xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>или <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>для обработки исключений для метода исходное название.</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A> </xref:System.EnterpriseServices.IPlaybackControl.FinalClientRetry%2A>       Проигрыватель очередей компонентов вызывает методы IPlaybackControl для оповещения объекта обработчика исключений, что сообщение будет помещено в очередь окончательного хранения или недоставленных сообщений. Проигрыватель очередей компонентов тот же метод вызывает в объекте обработчика исключений при вызове исходного метода которого возникла ошибка. Объект обработчика исключений для реализации вместо того, к примеру, можно собирать сведения диагностики проблем, либо создавать объект или сообщение, оповещающее клиента о проблеме. Если приложение не реализует IPlaybackControl, проигрыватель очередей компонентов выполнит все повторы подозрительное сообщение помещается в очередь окончательного хранения или недоставленных сообщений.       Сообщение считается подозрительным, исключающий по какой-либо причине, возможно из-за проблемы с сервером или системы очереди сообщения. Откат транзакции, и сообщение о сбое переходит в начало очереди. При повторном выводе сообщения из очереди происходит одно условие. Это сообщение может повторяться бесконечно, пока предпринимаются действия для устранения проблемы. Служба очередей компонентов обрабатывает сообщение о повреждении с помощью ряда повторов. После нескольких неудачных попыток сообщение перемещается в очередь для окончательного хранения. Подозрительные сообщения остаются в очереди на хранение до переместить вручную с помощью средства программы перемещения сообщений в очереди компонентов.       Подозрительное сообщение ситуации можно также разрешить программно, с помощью <xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>метод, который уведомляет создатель серверный компонент, все попытки воспроизведения отложенной активации не были выполнены.</xref:System.EnterpriseServices.IPlaybackControl.FinalServerRetry%2A>       Если вы обнаружили подозрительных сообщений, можно быстро выяснить основную причину проблемы. Например если сервер находился в автономном режиме для какой-либо причине, можно подключить к сети сервера. Если быстро решить проблему невозможно, можно автоматически создать другую транзакцию, которая уведомляет запрашивающую сторону, транзакция не выполнена. Инициатор запроса можно внести компенсирующие транзакции, которая отменяет эффект зафиксированной транзакции."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("51372AFD-CAE7-11CF-BE81-00AA00A2FA25")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IPlaybackControl
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  id: FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Информирует клиентский компонент обработки исключений, все попытки доставить сообщение на сервер Message Queuing были отклонены, и сообщение в очередь недоставленных сообщений Xact клиентские."
  remarks: "При получении сообщений в очереди недоставленных сообщений Xact, COM + пытается вызвать обработчик исключений клиента, связанный с классом сервера для доставки уведомления. Это происходит, сначала вызов FinalClientRetry, а затем вызывать версию обработки исключений сбой метода в объекте обработчика исключений. Метод исключений может использоваться действие исключения, например, запись о сбое, отправить сообщение электронной почты администратору или выполнить компенсирующее действие на стороне клиента (Отмена результата более ранней транзакции). Если метод исключения не был выполнен успешно, сообщение остается в очереди недоставленных сообщений активной транзакции.       Очереди недоставленных сообщений Xact можно просмотреть в обозревателе очереди сообщений Microsoft (MSMQ)."
  syntax:
    content: public void FinalClientRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  id: FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  langs:
  - csharp
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Информирует реализацию класса исключений на стороне сервера, все попытки воспроизведения отложенной активации на сервере произошел сбой, что сообщение является перемещаемой его очередь для окончательного хранения."
  remarks: "При получении сообщений в очереди недоставленных сообщений Xact, COM + пытается вызвать обработчик исключений на стороне сервера, связанный с классом сервера для доставки уведомления. Это происходит, сначала вызов FinalServerRetry, а затем вызов версия сбой метода в объекте обработчика исключений обработки исключений. Метод исключений может использоваться действие исключения, например, запись о сбое, отправить сообщение электронной почты администратору или выполнить компенсирующее действие на стороне клиента (Отмена результата более ранней транзакции). Объект сервера следует сделать все усилия для успешного завершения транзакции. В противном случае — для повторной обработки сообщения требуется ручное вмешательство. Если метод исключения не был выполнен успешно, сообщение перемещается в очередь для окончательного хранения."
  syntax:
    content: public void FinalServerRetry ();
    parameters: []
  overload: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry()
  nameWithType: IPlaybackControl.FinalClientRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalClientRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry()
  nameWithType: IPlaybackControl.FinalServerRetry()
  fullName: System.EnterpriseServices.IPlaybackControl.FinalServerRetry()
- uid: System.EnterpriseServices.IPlaybackControl.FinalClientRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalClientRetry
  nameWithType: IPlaybackControl.FinalClientRetry
- uid: System.EnterpriseServices.IPlaybackControl.FinalServerRetry*
  parent: System.EnterpriseServices.IPlaybackControl
  isExternal: false
  name: FinalServerRetry
  nameWithType: IPlaybackControl.FinalServerRetry
