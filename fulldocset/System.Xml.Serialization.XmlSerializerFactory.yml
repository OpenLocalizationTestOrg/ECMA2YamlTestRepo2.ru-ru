### YamlMime:ManagedReference
items:
- uid: System.Xml.Serialization.XmlSerializerFactory
  id: XmlSerializerFactory
  children:
  - System.Xml.Serialization.XmlSerializerFactory.#ctor
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  - System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  langs:
  - csharp
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory
  fullName: System.Xml.Serialization.XmlSerializerFactory
  type: Class
  summary: "Создает типизированные версии <xref:System.Xml.Serialization.XmlSerializer>для более эффективной сериализации.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public class XmlSerializerFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  id: '#ctor'
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> класса."
  syntax:
    content: public XmlSerializerFactory ();
    parameters: []
  overload: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  id: CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> класс, используемый для сериализации указанного типа."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для сериализации.</xref:System.Type>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>класс, созданный специально для сериализации указанного типа.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  id: CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> класса, используя объект, который сопоставляет один тип в другой."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (System.Xml.Serialization.XmlTypeMapping xmlTypeMapping);
    parameters:
    - id: xmlTypeMapping
      type: System.Xml.Serialization.XmlTypeMapping
      description: "<xref:System.Xml.Serialization.XmlTypeMapping>Сопоставляемого одного типа в другой.</xref:System.Xml.Serialization.XmlTypeMapping>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>класс, созданный специально для сериализации сопоставленный тип.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  id: CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> класс, используемый для сериализации указанного типа и пространство имен."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для сериализации.</xref:System.Type>"
    - id: defaultNamespace
      type: System.String
      description: "Пространство имен по умолчанию для всех элементов XML."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>класс, созданный специально для сериализации указанного типа.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  id: CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref href=&quot;System.Xml.Serialization.XmlSerializerFactory&quot;> </xref> класс, используемый для сериализации указанного типа. Если свойство или поле возвращает массив, <code> extraTypes </code> определяет объекты, которые могут быть вставлены в массив."
  remarks: "Вызов этой перегрузки аналогично вызову [XmlSerializer (тип, тип\\[\\])](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Type[])?qualifyHint=False&autoUpgrade=False) для создания экземпляра <xref:System.Xml.Serialization.XmlSerializer>класса.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, Type[] extraTypes);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для сериализации.</xref:System.Type>"
    - id: extraTypes
      type: System.Type[]
      description: "Объект <xref:System.Type>массив дополнительных типов объектов для сериализации.</xref:System.Type>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref:System.Xml.Serialization.XmlSerializer>класса, который может сериализовать объекты заданного типа в XML-документы, и наоборот.</xref:System.Xml.Serialization.XmlSerializer> Каждый сериализуемый объект может сам содержать экземпляры классов, которые можно переопределить эту перегрузку с другими классами."
  remarks: "Вызов этой перегрузки аналогичен вызову <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29>для создания экземпляра <xref:System.Xml.Serialization.XmlSerializer>класса.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlAttributeOverrides%29>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для сериализации.</xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>, Содержащий поля, которые переопределяют поведение сериализации по умолчанию.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref:System.Xml.Serialization.XmlSerializer>класса, который может сериализовать объекты заданного типа в XML-документы, и наоборот.</xref:System.Xml.Serialization.XmlSerializer> Указывает объект, представляющий корневой элемент XML."
  remarks: "Вызов этой перегрузки аналогичен вызову <xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName>для создания экземпляра <xref:System.Xml.Serialization.XmlSerializer>класса.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Xml.Serialization.XmlSerializer.%23ctor%28System.Type%2CSystem.Xml.Serialization.XmlRootAttribute%29?displayProperty=fullName>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlRootAttribute root);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для сериализации.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>, Представляющий корневой элемент XML.</xref:System.Xml.Serialization.XmlRootAttribute>"
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref:System.Xml.Serialization.XmlSerializer>класса, который может сериализовать объекты заданного типа в XML-документы, и наоборот.</xref:System.Xml.Serialization.XmlSerializer> Каждый сериализуемый объект может сам содержать экземпляры классов, которые можно переопределить эту перегрузку с другими классами. Эта перегрузка также указывает пространство имен по умолчанию для всех элементов XML и класс для использования в качестве корневого элемента XML."
  remarks: "Вызов этой перегрузки аналогично вызову [XmlSerializer (типа XmlAttributeOverrides, тип\\[\\], XmlRootAttribute, String)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)?qualifyHint=False&autoUpgrade=False) для создания экземпляра <xref:System.Xml.Serialization.XmlSerializer>класса.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для сериализации.</xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>, Содержащий поля, которые переопределяют поведение сериализации по умолчанию.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "Объект <xref:System.Type>массив дополнительных типов объектов для сериализации.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>, Представляющий корневой элемент XML.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "Пространство имен по умолчанию все элементы XML в XML-документе."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref:System.Xml.Serialization.XmlSerializer>класса, который может сериализовать объекты заданного типа в XML-документы, и наоборот.</xref:System.Xml.Serialization.XmlSerializer> Каждый сериализуемый объект может сам содержать экземпляры классов, которые можно переопределить эту перегрузку с другими классами. Эта перегрузка также указывает пространство имен по умолчанию для всех элементов XML и класс для использования в качестве корневого элемента XML."
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Объекта этим <xref:System.Xml.Serialization.XmlSerializer>можно сериализовать.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>, Расширяющий или переопределяет поведение класса, указанного в параметре типа.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "Объект <xref:System.Type>массив дополнительных типов объектов для сериализации.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>, Определяющий свойства корневого элемента XML.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "Пространство имен по умолчанию все элементы XML в XML-документе."
    - id: location
      type: System.String
      description: "Путь, указывающий расположение типов."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  id: CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  langs:
  - csharp
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Serialization
  summary: "Возвращает производным от <xref:System.Xml.Serialization.XmlSerializer>класса, который может сериализовать объекты заданного типа в XML-документы, и наоборот.</xref:System.Xml.Serialization.XmlSerializer> Каждый сериализуемый объект может сам содержать экземпляры классов, которые можно переопределить эту перегрузку с другими классами. Эта перегрузка также указывает пространство имен по умолчанию для всех элементов XML и класс для использования в качестве корневого элемента XML."
  remarks: "Вызов этой перегрузки аналогично вызову [XmlSerializer (типа XmlAttributeOverrides, тип\\[\\], XmlRootAttribute, строка, строка, свидетельство)](assetId:///M:System.Xml.Serialization.XmlSerializer.#ctor(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)?qualifyHint=False&autoUpgrade=False) для создания экземпляра <xref:System.Xml.Serialization.XmlSerializer>класса.</xref:System.Xml.Serialization.XmlSerializer>"
  syntax:
    content: public System.Xml.Serialization.XmlSerializer CreateSerializer (Type type, System.Xml.Serialization.XmlAttributeOverrides overrides, Type[] extraTypes, System.Xml.Serialization.XmlRootAttribute root, string defaultNamespace, string location, System.Security.Policy.Evidence evidence);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Объекта этим <xref:System.Xml.Serialization.XmlSerializer>можно сериализовать.</xref:System.Xml.Serialization.XmlSerializer> </xref:System.Type>"
    - id: overrides
      type: System.Xml.Serialization.XmlAttributeOverrides
      description: "<xref:System.Xml.Serialization.XmlAttributeOverrides>, Расширяющий или переопределяет поведение класса, указанного в параметре типа.</xref:System.Xml.Serialization.XmlAttributeOverrides>"
    - id: extraTypes
      type: System.Type[]
      description: "Объект <xref:System.Type>массив дополнительных типов объектов для сериализации.</xref:System.Type>"
    - id: root
      type: System.Xml.Serialization.XmlRootAttribute
      description: "<xref:System.Xml.Serialization.XmlRootAttribute>, Определяющий свойства корневого элемента XML.</xref:System.Xml.Serialization.XmlRootAttribute>"
    - id: defaultNamespace
      type: System.String
      description: "Пространство имен по умолчанию все элементы XML в XML-документе."
    - id: location
      type: System.String
      description: "Путь, указывающий расположение типов."
    - id: evidence
      type: System.Security.Policy.Evidence
      description: "Экземпляр <xref href=&quot;System.Security.Policy.Evidence&quot;> </xref> класс, который содержит учетные данные, необходимые для доступа к типам."
    return:
      type: System.Xml.Serialization.XmlSerializer
      description: "Производным от <xref:System.Xml.Serialization.XmlSerializer>.</xref:System.Xml.Serialization.XmlSerializer>"
  overload: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory()
  nameWithType: XmlSerializerFactory.XmlSerializerFactory()
  fullName: System.Xml.Serialization.XmlSerializerFactory.XmlSerializerFactory()
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type)
- uid: System.Xml.Serialization.XmlSerializer
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlSerializer
  nameWithType: XmlSerializer
  fullName: System.Xml.Serialization.XmlSerializer
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Xml.Serialization.XmlTypeMapping)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(XmlTypeMapping)
  nameWithType: XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(XmlTypeMapping)
- uid: System.Xml.Serialization.XmlTypeMapping
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlTypeMapping
  nameWithType: XmlTypeMapping
  fullName: System.Xml.Serialization.XmlTypeMapping
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Type[])
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,Type[])
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,Type[])
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides)
- uid: System.Xml.Serialization.XmlAttributeOverrides
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlAttributeOverrides
  nameWithType: XmlAttributeOverrides
  fullName: System.Xml.Serialization.XmlAttributeOverrides
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlRootAttribute)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlRootAttribute)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlRootAttribute)
- uid: System.Xml.Serialization.XmlRootAttribute
  parent: System.Xml.Serialization
  isExternal: true
  name: XmlRootAttribute
  nameWithType: XmlRootAttribute
  fullName: System.Xml.Serialization.XmlRootAttribute
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String)
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(System.Type,System.Xml.Serialization.XmlAttributeOverrides,System.Type[],System.Xml.Serialization.XmlRootAttribute,System.String,System.String,System.Security.Policy.Evidence)
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  nameWithType: XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
  fullName: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer(Type,XmlAttributeOverrides,Type[],XmlRootAttribute,String,String,Evidence)
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.Xml.Serialization.XmlSerializerFactory.#ctor*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: XmlSerializerFactory
  nameWithType: XmlSerializerFactory.XmlSerializerFactory
- uid: System.Xml.Serialization.XmlSerializerFactory.CreateSerializer*
  parent: System.Xml.Serialization.XmlSerializerFactory
  isExternal: false
  name: CreateSerializer
  nameWithType: XmlSerializerFactory.CreateSerializer
