### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IProcessInitializer
  id: IProcessInitializer
  children:
  - System.EnterpriseServices.IProcessInitializer.Shutdown
  - System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  langs:
  - csharp
  name: IProcessInitializer
  nameWithType: IProcessInitializer
  fullName: System.EnterpriseServices.IProcessInitializer
  type: Interface
  summary: "Поддерживает методы, которые можно вызывать, если COM-компонент запускается или завершает."
  remarks: "Реализуйте методы интерфейса IProcessInitializer на обслуживаемом компоненте, если требуется выполнить инициализацию или завершение работы кода при запуске процесса сервера (Dllhost.exe), и завершает работу, соответственно.       COM + предоставляет `Startup` и `Shutdown` события при Dllhost.exe начинается и заканчивается. Эта функция позволяет все компоненты COM +, установленных в серверном приложении COM + (называется серверные компоненты здесь и далее) для выполнения пользовательской инициализации и очистки кода. Экземпляр каждого компонента, который реализует интерфейс IProcessInitializer будет создан и сохраняется в течение процесса и вызывается для методов интерфейса во время запуска и завершения работы. При реализации на <xref:System.EnterpriseServices.ServicedComponent>, во время регистрации компонента, `InitializesServerApplication` параметр в `COMAdminCatalogObject` в компоненты коллекции задано значение `true`.</xref:System.EnterpriseServices.ServicedComponent>       С помощью `Startup` и `Shutdown` события, можно инициализировать ресурсы, создавать соединения &quot;,&quot; initialize общих данных, а также выполнить код очистки. Однако не следует подключиться состояний, относящихся к COM +, так как экземпляры компонентов сервера еще не созданы. Кроме того, код в `Startup` и `Shutdown` событий должен возвращать как можно скорее, так как система ожидает только 90 секунд для Dllhost.exe для принятия активаций после запуска процесса системой. Если Dllhost.exe не означает, что она готова в течение 90 секунд, система завершает процесс. Таким образом все требования процесса инициализации должны быть завершены в этот промежуток времени. Каждый серверный компонент, который участвует в инициализации должен поддерживать интерфейс IProcessInitializer. При запуске DllHost.exe COM + создает все компоненты сервера, запрашиваемые этой службой, вызывает `QueryInterface` IProcessInitializer интерфейс и вызовы <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>функция.</xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> Аналогичным образом, при завершении процесса DllHost.exe он вызывает <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>функции на их ранее сохраненных указателей интерфейса.</xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IProcessInitializer
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  id: Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Выполняет действия для завершения работы. Вызывается при выключении Dllhost.exe."
  remarks: "Завершение работы не вызывается при сбое или других событиях аварийного завершения работы."
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.EnterpriseServices.IProcessInitializer.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  id: Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Выполняет инициализацию при запуске. Вызывается при запуске Dllhost.exe."
  remarks: "Объект, упоминаемый в `punkProcessControl` реализует <xref:System.EnterpriseServices.IProcessInitControl>интерфейса.</xref:System.EnterpriseServices.IProcessInitControl> <xref:System.EnterpriseServices.IProcessInitControl>поддерживает один метод <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A></xref:System.EnterpriseServices.IProcessInitControl>       Можно вызвать код инициализации в запуска <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, с указанием времени ожидания, задайте количество секунд, оставшееся до запуска компонента времени ожидания.</xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>"
  syntax:
    content: public void Startup (object punkProcessControl);
    parameters:
    - id: punkProcessControl
      type: System.Object
      description: "В Windows XP, указатель на <xref uid=&quot;langword_csharp_IUnknown&quot; name=&quot;IUnknown&quot; href=&quot;&quot;> </xref> интерфейс запуске COM-компонента. В Microsoft Windows 2000, этот аргумент всегда является <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.IProcessInitializer.Startup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown
  nameWithType: IProcessInitializer.Shutdown
- uid: System.EnterpriseServices.IProcessInitializer.Startup*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup
  nameWithType: IProcessInitializer.Startup
