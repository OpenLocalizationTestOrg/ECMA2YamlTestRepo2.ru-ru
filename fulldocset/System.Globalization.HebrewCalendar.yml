### YamlMime:ManagedReference
items:
- uid: System.Globalization.HebrewCalendar
  id: HebrewCalendar
  children:
  - System.Globalization.HebrewCalendar.#ctor
  - System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.HebrewCalendar.AlgorithmType
  - System.Globalization.HebrewCalendar.Eras
  - System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  - System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  - System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  - System.Globalization.HebrewCalendar.HebrewEra
  - System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.MaxSupportedDateTime
  - System.Globalization.HebrewCalendar.MinSupportedDateTime
  - System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.HebrewCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: HebrewCalendar
  nameWithType: HebrewCalendar
  fullName: System.Globalization.HebrewCalendar
  type: Class
  summary: "Представляет еврейский календарь."
  remarks: "Еврейский календарь существуют две эры: B.C.E. (до нашей эры) и по (Латиница «Anno Mundi», что означает «год мира»). Реализация класса HebrewCalendar распознает только текущую эру (до полудня) и годы 5343 по 5999 (1583 по 2239 г по григорианскому календарю).      Настроек [!NOTE] настроек сведения об использовании HebrewCalendar классов и классов календарей в платформе .NET Framework см. в разделе [работа с календарями](~/add/includes/ajax-current-ext-md.md).       В каждом цикле 19 год, который оканчивается годом, делится на 19, 3, 6-й, 8, 11-й, 14 17-19 лет являются високосного года. Обычного года может содержать от 353 до 355 дней, в зависимости от того, на которые приходятся национальные праздники. Високосный год может быть от 383 до 385 дней.       12 месяцев обычные годы и 13 месяцев високосного года имеет еврейского календаря: | Значение GetMonth (обычного года) | Значение GetMonth (високосный год) | Месяц | Дней в обычных годах | Дни в високосного года |   |------------------------------------|----------------------------------|-----------|--------------------------|------------------------|   | 1 | 1 | תשרי (месяца тишрей метод) | 30 | 30 |   | 2 | 2 | חשון (хешвана) | 29/30 | 29/30 |   | 3 | 3 | כסלו (кислеве меняется) | 29/30 | 29/30 |   | 4 | 4 | טבת (тевета) | 29 | 29 |   | 5 | 5 | שבט (Shevat) | 30 | 30 |   | 6 |-| אדר (адар) | 29 |-|   |-| 6 | אדר א (адара-алеф) |-| 30 |   |-| 7 | אדר ב (Адар-бет) |-| 29 |   | 7 | 8 | ניסן (Nissan) | 30 | 30 |   | 8 | 9 | אייר (Iyar) | 29 | 29 |   | 9 | 10 | סיון (Sivan) | 30 | 30 |   | 10 | 11 | תמוז (Tamuz) | 29 | 29 |   | 11 | 12 | אב (Av) | 30 | 30 |   | 12 | 13 | אלול (месяца элул метод) | 29 | 29 |       Дней в хешване и кислеве меняется зависят от размещения приходятся национальные праздники. Високосного года адар заменяются адара-алеф с 30 дней и Адар-бет с 29 дней. Адара-алеф считается високосным месяцем. Последний день адара-алеф и все дни адара-бет считаются leap дней; то есть <xref:System.Globalization.HebrewCalendar.IsLeapDay%2A>возвращает метод `true` для этих дней.</xref:System.Globalization.HebrewCalendar.IsLeapDay%2A>       Дата 1 января 2001 г. н. э. по григорианскому календарю соответствует шестому дню тевета года 5761 утра в еврейский календарь.       Каждый <xref:System.Globalization.CultureInfo>поддерживает несколько календарей.</xref:System.Globalization.CultureInfo> <xref:System.Globalization.CultureInfo.Calendar%2A>Свойство возвращает календарь по умолчанию для языка и региональных параметров и <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>свойство возвращает массив, содержащий все календари, поддерживаемые языком и региональными параметрами.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Чтобы изменить используемый календарь <xref:System.Globalization.CultureInfo>приложение должно задать <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>Свойства <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>для нового <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  example:
  - "The following example creates a file that contains the date ranges supported by the HebrewCalendar class, and displays the number of days in each month of the year 5772.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.Class#1](~/add/codesnippet/csharp/t-system.globalization.h_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.h_1.vb)]  \n  \n The example instantiates a HebrewCalendar object and makes it the current calendar of a Hebrew (Israel) <xref:System.Globalization.CultureInfo> object. It then makes Hebrew (Israel) the current thread culture. This causes the common language runtime to interpret all dates and times in relation to the Hebrew calendar."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HebrewCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: HebrewCalendar()
  nameWithType: HebrewCalendar.HebrewCalendar()
  fullName: System.Globalization.HebrewCalendar.HebrewCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> класса."
  syntax:
    content: public HebrewCalendar ();
    parameters: []
  overload: System.Globalization.HebrewCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: HebrewCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает <xref:System.DateTime>указанный количество месяцев от указанной <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>       Компонент дня <xref:System.DateTime>изменяется, если конечный день не является допустимым днем месяца и года.</xref:System.DateTime> Он заменяется последним допустимым днем месяца и года. Часть года полученный <xref:System.DateTime>изменяется, если конечный месяц находится вне диапазона года заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Эта реализация поддерживает только текущую эру. Таким образом, <xref:System.ArgumentException>создается исключение, если год результата находится за пределами эры заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException> Часть времени суток полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Например, если указанный месяц ав, который содержит 30 дней, указанный день — 30-й день этого месяца, а значение `months` параметра равно 5, год результата тевета — на один больше указанного, месяц и день — 29-й день, что последний день тевета.       Если значение `months` параметр имеет отрицательное значение, <xref:System.DateTime>более ранняя, чем указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> полученный       <xref:System.DateTime.Kind%2A>Возвращаемое <xref:System.DateTime>значение всегда равно <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> свойство</xref:System.DateTime.Kind%2A> Можно сохранить <xref:System.DateTime.Kind%2A>свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>метода, как показано в следующем примере.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.h_20_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.h_20_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_20_2.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_20_2.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_20_2.cpp)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>К которому добавляется `months`.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "Число месяцев для добавления."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Который является результатом добавления указанное число месяцев до указанного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Итоговый <xref:System.DateTime>находится за пределами поддерживаемого диапазона.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>меньше – 120 000 или больше 120 000."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: HebrewCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает, <xref:System.DateTime>то есть указанное число лет от указанного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>       Компонент дня <xref:System.DateTime>изменяется, если конечный день не является допустимым днем месяца и года.</xref:System.DateTime> Он заменяется последним допустимым днем месяца и года. Например хешване может иметь 29 или 30 дней, в зависимости от того, на которые приходятся национальные праздники. Предположим, что хешвана содержит 30 дней в текущем году и 29 следующего года. Если указанная дата 30-й день хешвана текущего года, а значение `years` равно 1, полученной дате будет 29-й день хешвана следующего года.       Компонент месяца <xref:System.DateTime>изменяется, если месяц результата не является допустимым месяц в году результата.</xref:System.DateTime> Оно меняется на последний месяц, допустимый для конечного года. Например если месяц в `time` параметр — 13-й месяц високосного года и значение `years` равно 1, месяца, в результате <xref:System.DateTime>является 12-го месяца из следующего года, не являющегося високосным.</xref:System.DateTime> Обратите внимание, что даже в том случае, если компонент месяца не изменяется, он может по-прежнему ссылаться на другой месяц. Например седьмой месяц в високосного года — Адар-бет, но Nissan — седьмой месяц и общее годы.       Эта реализация поддерживает только текущую эру. Таким образом, <xref:System.ArgumentException>создается исключение, если год результата находится за пределами эры заданного <xref:System.DateTime>.</xref:System.DateTime> </xref:System.ArgumentException>       Часть времени суток полученный <xref:System.DateTime>остается таким же, как указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Если `years` отрицательное, полученный <xref:System.DateTime>более ранняя, чем указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       <xref:System.DateTime.Kind%2A>Возвращаемое <xref:System.DateTime>значение всегда равно <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> свойство</xref:System.DateTime.Kind%2A> Можно сохранить <xref:System.DateTime.Kind%2A>свойство `time` параметра путем вызова <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>метода, как показано в следующем примере.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.h_6_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.h_6_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_6_2.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_6_2.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_6_2.cpp)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>К которому добавляется `years`.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "Число лет для добавления."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>Который является результатом сложения указанного числа лет на указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Итоговый <xref:System.DateTime>находится за пределами поддерживаемого диапазона.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
  fullName: System.Globalization.HebrewCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение, указывающее, является ли текущий календарь солнечным, лунным или их сочетание."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.h_6_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.h_6_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Всегда возвращает <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.Eras
  id: Eras
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: HebrewCalendar.Eras
  fullName: System.Globalization.HebrewCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает список эр в <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref>."
  remarks: 'Еврейский календарь существуют две эры: B.C.E. (до нашей эры) и по (Латиница «Anno Mundi», что означает «год мира»). Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только текущую эру (до полудня).</xref:System.Globalization.HebrewCalendar> Это свойство всегда возвращает массив с единственным элементом.'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Массив целых чисел, представляющий эры в <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> типа. Возвращаемое значение всегда является массив, содержащий один элемент равен <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: HebrewCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_8_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_8_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_8_1.cpp)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 30, представляющее день месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: HebrewCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день недели в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Ниже приведены значения <xref:System.DayOfWeek>: | Значение DayOfWeek | День недели |   |---------------------|-----------------|   | Воскресенье | יום ראשון (ришон) |   | Понедельник | יום שני (шени) |   | Вторник | יום שלישי (шлиши) |   | Среда | יום רביעי (рэвии) |   | Четверг | יום חמישי (хамиши) |   | Пятница | יום שישי (Йом Shishi) |   | Суббота | שבת (Shabat) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_7_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_7_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_7_1.cpp)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "<xref:System.DayOfWeek>Значение, представляющее день недели в указанный <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.HebrewCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: HebrewCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает день года в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "День года определяется как число дней с первого дня года. Например GetDayOfYear за первый день первого месяца возвращает 1, а GetDayOfYear за последний день за последний месяц возвращает общее количество дней, в этом году, то же значение, возвращаемое <xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>.</xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>       Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_18_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_18_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_18_1.cpp)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 385, обозначающее день года в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.GetDayOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>больше или более ранней, чем 17 сентября 1583 по григорианскому календарю <xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число дней в указанном месяце указанных года и эры."
  remarks: "Например, этот метод возвращает 29 или 30 для хешвана, в зависимости от того, на которые приходятся национальные праздники.       Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example calls `GetDaysInMonth` for the second month in each of five years in each era.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/5dbfbdd4-f075-4989-90c3-_1.cs)]\n [!code-cpp[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/5dbfbdd4-f075-4989-90c3-_1.cpp)]\n [!code-vb[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/5dbfbdd4-f075-4989-90c3-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 13, представляющее месяц."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_Calendar.Eras[Calendar.CurrentEra]&quot; name=&quot;Calendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "Число дней в указанном месяце указанных года и эры."
  overload: System.Globalization.HebrewCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, или <code>era</code> выходит за диапазон, поддерживаемый текущим <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> объекта."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число дней в указанном году указанной эры."
  remarks: "Например, этот метод возвращает целое число от 353 до 355 или от 383 до 385, в зависимости от того, на которые приходятся национальные праздники, а также в зависимости от того, следует ли `year` является високосным годом.       Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example calls `GetDaysInYear` for five years in each era.  \n  \n [!code-cpp[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_15_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_15_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_15_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "Число дней в указанном году указанной эры."
  overload: System.Globalization.HebrewCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>или <code>era</code> выходит за диапазон, поддерживаемый текущим <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> объекта."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: HebrewCalendar.GetEra(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение эры в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: 'Еврейский календарь существуют две эры: B.C.E. (до нашей эры) и по (Латиница «Anno Mundi», что означает «год мира»). Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только текущую эру (до полудня) и годы 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_2_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_2_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_2_1.cpp)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число, представляющее эру в указанный <xref:System.DateTime>.</xref:System.DateTime> Возвращаемое значение всегда равно <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HebrewCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Вычисляет високосный месяц для заданных года и эры."
  remarks: "В календарях, поддерживает понятие високосного года високосный месяц может возникнуть после определенного месяца или после любого месяца в году. Например <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>метод возвращает число от 1 до 13, указывающее месяц, связанные с указанной даты.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Если между восьмой и девятый месяцы года, високосным месяцем <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>метод возвращает значение 8 для восьмой месяц, 9 для високосный месяц восьмой и 10 за девятый месяц.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Год."
    - id: era
      type: System.Int32
      description: "Эра. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "Положительное целое число, указывающее високосный месяц в указанном году указанной эры. Возвращаемое значение равно 7, если <code> year </code> и <code> era </code> параметры указывают високосный год, или 0, если год не является високосным годом."
  overload: System.Globalization.HebrewCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>is not <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>.       - или - <code>year</code> меньше года 5343 или больше года 5999."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: HebrewCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение месяца в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_5_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_5_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_5_1.cpp)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число от 1 до 13, представляющее месяц в указанный <xref:System.DateTime>.</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.GetMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>— меньше, чем <xref:System.Globalization.HebrewCalendar.MinSupportedDateTime*> или больше, чем <xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает число месяцев в указанном году указанной эры."
  remarks: "Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example calls `GetMonthsInYear` for five years in each era.  \n  \n [!code-vb[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_11_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_11_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_11_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "Число месяцев в указанном году указанной эры. Возвращенное значение равно 12 для обычного года или 13 для високосного."
  overload: System.Globalization.HebrewCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>или <code>era</code> выходит за диапазон, поддерживаемый текущим <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> объекта."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: HebrewCalendar.GetYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает значение года в заданном <xref:System.DateTime>значение.</xref:System.DateTime>"
  remarks: "Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_10_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_10_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_10_1.cpp)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "<xref:System.DateTime>Для чтения.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Целое число, представляющее год в заданном <xref:System.DateTime>значение.</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.GetYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>выходит за диапазон, поддерживаемый текущим <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> объекта."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.HebrewEra
  id: HebrewEra
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: HebrewEra
  nameWithType: HebrewCalendar.HebrewEra
  fullName: System.Globalization.HebrewCalendar.HebrewEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Представляет текущую эру. Это поле является константой."
  remarks: "Значение этого поля равно 1.       Еврейский календарь существуют две эры: B.C.E. (до нашей эры) и по (Латиница «Anno Mundi», что означает «год мира»). Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только текущую эру (до полудня).</xref:System.Globalization.HebrewCalendar>"
  syntax:
    content: public static readonly int HebrewEra;
    return:
      type: System.Int32
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанная дата указанной эры високосным днем."
  remarks: "Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>       В каждом цикле 19 год, который оканчивается годом, делится на 19, 3, 6-й, 8, 11-й, 14 17-19 лет являются високосного года. Обычного года может содержать от 353 до 355 дней, в зависимости от того, на которые приходятся национальные праздники. Високосный год может быть от 383 до 385 дней.       День високосным является день, который возникает только в високосном году. В еврейского календаря последний день адара-алеф и все дни адара-бет считаются leap дней."
  example:
  - "The following code example calls `IsLeapDay` for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-vb[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/38cad6f1-3b2e-4eba-a2c2-_1.vb)]\n [!code-cs[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/csharp/38cad6f1-3b2e-4eba-a2c2-_1.cs)]\n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/cpp/38cad6f1-3b2e-4eba-a2c2-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 13, представляющее месяц."
    - id: day
      type: System.Int32
      description: "Целое число от 1 до 30, представляющее день."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>.."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный день — високосный день; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, или <code>era</code> выходит за пределы диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанный месяц указанных года и эры високосным месяцем."
  remarks: "Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>       В каждом цикле 19 год, который оканчивается годом, делится на 19, 3, 6-й, 8, 11-й, 14 17-19 лет являются високосного года. Обычного года может содержать от 353 до 355 дней, в зависимости от того, на которые приходятся национальные праздники. Високосный год может быть от 383 до 385 дней.       Високосный месяц — целый месяц, происходит только в високосном году. Только високосный месяц — Адар-бет в еврейский календарь."
  example:
  - "The following code example calls `IsLeapMonth` for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/d066565d-c7e6-4287-a20b-_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/d066565d-c7e6-4287-a20b-_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/d066565d-c7e6-4287-a20b-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 13, представляющее месяц."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный месяц — високосный; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, или <code>era</code> выходит за пределы диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Определяет, является ли указанный год указанной эры високосным годом."
  remarks: "Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>       В каждом цикле 19 год, который оканчивается годом, делится на 19, 3, 6-й, 8, 11-й, 14 17-19 лет являются високосного года. Обычного года может содержать от 353 до 355 дней, в зависимости от того, на которые приходятся национальные праздники. Високосный год может быть от 383 до 385 дней."
  example:
  - "The following code example calls `IsLeapYear` for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.h_1_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_1_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.h_1_1.cpp)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный год — високосный; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>или <code>era</code> выходит за пределы диапазона, поддерживаемое этим календарем."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Получает последние дату и время, поддерживаемые <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> типа."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_5_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_5_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_5_1.cpp)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Самые последние дату и время, поддерживаемые <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> тип, который эквивалентен последнему мгновению 29 сентября 2239 года нашей эры по григорианскому календарю."
  overload: System.Globalization.HebrewCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает минимальное значение даты и времени, поддерживаемое <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> типа."
  remarks: "Microsoft Visual Basic представляет время, день, что и указанное время на минимальная дата, поддерживаемый <xref:System.DateTime>тип, который является 1 января 0001 года нашей эры</xref:System.DateTime> Тем не менее <xref:System.Globalization.HebrewCalendar>тип не поддерживает, минимальное значение даты.</xref:System.Globalization.HebrewCalendar> Следовательно, если вызвать метод для форматирования времени дня с помощью текущего календаря, но не указать спецификатор формата, форматирования используется ISO 8601 сортируемого («s») даты/времени шаблон описатель формата, а не по умолчанию («G») даты и времени шаблон Описатель общего формата. Дополнительные сведения см. в разделе [стандартной строки даты и времени формат](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_4_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_4_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_4_1.cpp)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Минимальное значение даты и времени, поддерживаемое <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> типа, что эквивалентно первому мгновению января, 1, 1583 года нашей эры по григорианскому календарю."
  overload: System.Globalization.HebrewCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает <xref:System.DateTime>, имеет значение указанной даты и времени в заданной эре.</xref:System.DateTime>"
  remarks: "Метод ToDateTime является полезным, поскольку он может преобразовать любую дату в текущем календаре Дата по григорианскому календарю. Дата по григорианскому календарю впоследствии можно, например, для сравнения дат в различных календарях или создания эквивалентной даты в определенном календаре.       Эта реализация <xref:System.Globalization.HebrewCalendar>класс распознает только годы с 5343 по 5999 (1583 по 2239 г по григорианскому календарю).</xref:System.Globalization.HebrewCalendar>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Целое число, представляющее год."
    - id: month
      type: System.Int32
      description: "Целое число от 1 до 13, представляющее месяц."
    - id: day
      type: System.Int32
      description: "Целое число от 1 до 30, представляющее день."
    - id: hour
      type: System.Int32
      description: "Целое число от 0 до 23, представляющее час."
    - id: minute
      type: System.Int32
      description: "Целое число от 0 до 59, представляющее минуту."
    - id: second
      type: System.Int32
      description: "Целое число от 0 до 59, представляющее секунду."
    - id: millisecond
      type: System.Int32
      description: "Целое число от 0 до 999, представляющее миллисекунду."
    - id: era
      type: System.Int32
      description: "Целое число, представляющее эру. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.DateTime
      description: "<xref:System.DateTime>, Равным указанной даты и времени в текущей эре.</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code> или <code>era</code> выходит за диапазон, поддерживаемый текущим <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> объекта.       - или - <code>hour</code> меньше 0 или больше 23.       - или - <code>minute</code> меньше 0 или больше 59.       - или - <code>second</code> меньше 0 или больше 59.       - или - <code>millisecond</code> меньше 0 или больше 999."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: HebrewCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HebrewCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Преобразует указанный год в четырехзначный год с помощью <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax*>для выбора века.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax*>"
  remarks: "Метод ToFourDigitYear использует `year` параметр <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>свойство и года для вычисления четырехзначный год.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> Век определяется путем нахождения единственного вхождения `year` параметра в данном диапазоне ста лет. Например если <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>задано значение 5729, столетний диапазон — от 5630 по 5729.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> Значение 30 интерпретируется как 5630, а значение 29 как 5729.       Если <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>свойство имеет специальное значение 99, метод ToFourDigitYear игнорирует региональные параметры и язык, на панели управления и возвращает значение `year` параметр без изменений.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>       ToFourDigitYear поддерживает двузначный год или год из четырех цифр. При передаче значения двух цифр года (меньше 100) вызывает метод для преобразования значения из четырех цифр значение в соответствии с <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>значение, представляющее века.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> Если приложение передает значение года из четырех цифр в диапазоне поддерживаемых календаря для ToFourDigitYear, метод возвращает фактическое входное значение. Если приложение передает значение из четырех цифр, выходит за пределы поддерживаемого календарного или если он предоставляет отрицательное значение, метод создает исключение."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "2 цифрами от 0 до 99 или четырехзначный год еврейского календаря с 5343 по 5999."
    return:
      type: System.Int32
      description: "Если <code> year </code> параметра равно 2 цифрами, возвращаемое значение соответствующего четырехзначный год. Если <code> year </code> параметр является 4-значный номер года, возвращаемое значение не меняется <code> year </code> параметра."
  overload: System.Globalization.HebrewCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>меньше 0.       - или - <code>year</code> — меньше, чем <xref:System.Globalization.HebrewCalendar.MinSupportedDateTime*> или больше, чем <xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
  fullName: System.Globalization.HebrewCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Возвращает или задает последний год в диапазоне ста лет, который может быть представлен существует двузначное представление года."
  remarks: "Свойство стандарт позволяет 2 цифрами правильно преобразовать 4-значный номер года. Например если это свойство имеет значение 5729, столетний диапазон — от 5630 5729. 2-разрядное значение 30 интерпретируется как 5630, а значение 29 как 5729.       Начальное значение этого свойства является производным от параметров в списке язык и региональные параметры элемента панели управления. Если параметр начальной системы изменяется во время жизненного цикла приложения <xref:System.Globalization.HebrewCalendar>класса автоматически не обнаруживает изменения.</xref:System.Globalization.HebrewCalendar>       Специальное значение 99 причины <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>метод, чтобы игнорировать параметры системы и возвращать указанный год без изменений.</xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "Последний год в диапазоне ста лет, который может быть представлен существует двузначное представление года."
  overload: System.Globalization.HebrewCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Текущий <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> объект доступен только для чтения."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "В операции задания меньше 5343 значение года еврейского календаря, но не равно 99 или значение года больше 5999."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.HebrewCalendar.#ctor
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewCalendar()
  nameWithType: HebrewCalendar.HebrewCalendar()
  fullName: System.Globalization.HebrewCalendar.HebrewCalendar()
- uid: System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: HebrewCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: HebrewCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.HebrewCalendar.AlgorithmType
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
  fullName: System.Globalization.HebrewCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.HebrewCalendar.Eras
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: Eras
  nameWithType: HebrewCalendar.Eras
  fullName: System.Globalization.HebrewCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: HebrewCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: HebrewCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: HebrewCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: HebrewCalendar.GetEra(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetEra(DateTime)
- uid: System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HebrewCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: HebrewCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetMonth(DateTime)
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: HebrewCalendar.GetYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetYear(DateTime)
- uid: System.Globalization.HebrewCalendar.HebrewEra
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewEra
  nameWithType: HebrewCalendar.HebrewEra
  fullName: System.Globalization.HebrewCalendar.HebrewEra
- uid: System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MaxSupportedDateTime
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MinSupportedDateTime
- uid: System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: HebrewCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HebrewCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
  fullName: System.Globalization.HebrewCalendar.TwoDigitYearMax
- uid: System.Globalization.HebrewCalendar.#ctor*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewCalendar
  nameWithType: HebrewCalendar.HebrewCalendar
- uid: System.Globalization.HebrewCalendar.AddMonths*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddMonths
  nameWithType: HebrewCalendar.AddMonths
- uid: System.Globalization.HebrewCalendar.AddYears*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddYears
  nameWithType: HebrewCalendar.AddYears
- uid: System.Globalization.HebrewCalendar.AlgorithmType*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
- uid: System.Globalization.HebrewCalendar.Eras*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: Eras
  nameWithType: HebrewCalendar.Eras
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: HebrewCalendar.GetDayOfMonth
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: HebrewCalendar.GetDayOfWeek
- uid: System.Globalization.HebrewCalendar.GetDayOfYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: HebrewCalendar.GetDayOfYear
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: HebrewCalendar.GetDaysInMonth
- uid: System.Globalization.HebrewCalendar.GetDaysInYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: HebrewCalendar.GetDaysInYear
- uid: System.Globalization.HebrewCalendar.GetEra*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetEra
  nameWithType: HebrewCalendar.GetEra
- uid: System.Globalization.HebrewCalendar.GetLeapMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: HebrewCalendar.GetLeapMonth
- uid: System.Globalization.HebrewCalendar.GetMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonth
  nameWithType: HebrewCalendar.GetMonth
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: HebrewCalendar.GetMonthsInYear
- uid: System.Globalization.HebrewCalendar.GetYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetYear
  nameWithType: HebrewCalendar.GetYear
- uid: System.Globalization.HebrewCalendar.IsLeapDay*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: HebrewCalendar.IsLeapDay
- uid: System.Globalization.HebrewCalendar.IsLeapMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: HebrewCalendar.IsLeapMonth
- uid: System.Globalization.HebrewCalendar.IsLeapYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: HebrewCalendar.IsLeapYear
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
- uid: System.Globalization.HebrewCalendar.ToDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: HebrewCalendar.ToDateTime
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: HebrewCalendar.ToFourDigitYear
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
