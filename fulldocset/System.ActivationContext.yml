### YamlMime:ManagedReference
items:
- uid: System.ActivationContext
  id: ActivationContext
  children:
  - System.ActivationContext.ApplicationManifestBytes
  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  - System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  - System.ActivationContext.DeploymentManifestBytes
  - System.ActivationContext.Dispose
  - System.ActivationContext.Finalize
  - System.ActivationContext.Form
  - System.ActivationContext.Identity
  - System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
  type: Class
  summary: "Идентифицирует контекст активации для текущего приложения. Этот класс не наследуется."
  remarks: "Класс ActivationContext содержит <xref:System.ApplicationIdentity>и предоставляет доступ только для внутреннего использования в манифест приложения.</xref:System.ApplicationIdentity> Контекст активации по умолчанию используется во время активации на основе манифеста для настройки политики домена и указать модель безопасности на уровне приложения. Дополнительные сведения см. в разделе <xref:System.Security.Policy.ApplicationSecurityManager>класса.</xref:System.Security.Policy.ApplicationSecurityManager>      Настроек [!IMPORTANT] настроек этот тип реализует <xref:System.IDisposable>интерфейса.</xref:System.IDisposable> После завершения с помощью типа следует освободить его прямо или косвенно. Для удаления типа непосредственно вызвать его <xref:System.IDisposable.Dispose%2A>метод в `try` / `catch` блока.</xref:System.IDisposable.Dispose%2A> Чтобы удалить ее косвенно, использовать языковой конструкции, такие как `using` (в C#) или `Using` (в Visual Basic). Дополнительные сведения см. в разделе «С помощью объекта, реализует интерфейс IDisposable» в <xref:System.IDisposable>разделе интерфейса.</xref:System.IDisposable>"
  example:
  - "The following code example demonstrates the use of an ActivationContext object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. For correct results, execute this code example as a manifest-based application.  \n  \n [!code-vb[System.ActivationContext#1](~/add/codesnippet/visualbasic/t-system.activationcontext_1.vb)]\n [!code-cs[System.ActivationContext#1](~/add/codesnippet/csharp/t-system.activationcontext_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ActivationContext : IDisposable, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Runtime.Serialization.ISerializable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ActivationContext.ApplicationManifestBytes
  id: ApplicationManifestBytes
  parent: System.ActivationContext
  langs:
  - csharp
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
  fullName: System.ActivationContext.ApplicationManifestBytes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Возвращает манифест приложения ClickOnce для текущего приложения."
  remarks: "Если контекст активации <xref:System.ActivationContext.ContextForm>, это означает, что приложение не установлено в хранилище ClickOnce манифест развертывания считывается из папки временной загрузки.</xref:System.ActivationContext.ContextForm> Если контекст активации <xref:System.ActivationContext.ContextForm>, это означает, что приложение установлено в ClickOnce хранилища, манифест развертывания считывается из хранилище ClickOnce.</xref:System.ActivationContext.ContextForm> Дополнительные сведения о манифестах развертывания см. в разделе [манифест развертывания ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public byte[] ApplicationManifestBytes { get; }
    return:
      type: System.Byte[]
      description: "Массив байтов, содержащий манифест приложения ClickOnce для приложения, связанный с этим <xref href=&quot;System.ActivationContext&quot;> </xref>."
  overload: System.ActivationContext.ApplicationManifestBytes*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  id: CreatePartialActivationContext(System.ApplicationIdentity)
  parent: System.ActivationContext
  langs:
  - csharp
  name: CreatePartialActivationContext(ApplicationIdentity)
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ActivationContext&quot;> </xref> класса с использованием удостоверения указанного приложения."
  remarks: "Метод CreatePartialActivationContext вызывает внутренний конструктор для создания нового контекста активации. Реализация <xref:System.ActivationContext>в .NET Framework версии 2.0 предназначена для приложений, которые не полностью установлены в хранилище и не полностью, содержащиеся в папке.</xref:System.ActivationContext> Этот метод обеспечивает обратную совместимость для более поздних выпусков, в которых конструкторы предоставляют полный контекст активации."
  syntax:
    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity);
    parameters:
    - id: identity
      type: System.ApplicationIdentity
      description: "Объект, определяющий приложение."
    return:
      type: System.ActivationContext
      description: "Объект с удостоверением указанного приложения."
  overload: System.ActivationContext.CreatePartialActivationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Удостоверение развертывания или приложения задано в <code> identity </code>."
  platform:
  - net462
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  id: CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  parent: System.ActivationContext
  langs:
  - csharp
  name: CreatePartialActivationContext(ApplicationIdentity,String[])
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ActivationContext&quot;> </xref> класса с использованием удостоверения указанного приложения и массивом путей манифестов."
  remarks: "Метод CreatePartialActivationContext вызывает внутренний конструктор для создания нового контекста активации. Реализация <xref:System.ActivationContext>в .NET Framework версии 2.0 предназначена для приложений, которые не полностью установлены в хранилище и не полностью, содержащиеся в папке.</xref:System.ActivationContext> Этот метод обеспечивает обратную совместимость для более поздних выпусков, в которых конструкторы предоставляют полный контекст активации."
  syntax:
    content: public static ActivationContext CreatePartialActivationContext (ApplicationIdentity identity, string[] manifestPaths);
    parameters:
    - id: identity
      type: System.ApplicationIdentity
      description: "Объект, определяющий приложение."
    - id: manifestPaths
      type: System.String[]
      description: "Массив строк с путями манифеста приложения."
    return:
      type: System.ActivationContext
      description: "Объект с удостоверением указанного приложения и массивом путей манифестов."
  overload: System.ActivationContext.CreatePartialActivationContext*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>manifestPaths</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Удостоверение развертывания или приложения задано в <code> identity </code>.       - или - <code> identity </code> не соответствует удостоверению в манифестах.       - или - <code> identity </code> имеет одинаковое количество компонентов путями манифеста."
  platform:
  - net462
- uid: System.ActivationContext.DeploymentManifestBytes
  id: DeploymentManifestBytes
  parent: System.ActivationContext
  langs:
  - csharp
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
  fullName: System.ActivationContext.DeploymentManifestBytes
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Возвращает манифест развертывания ClickOnce для текущего приложения."
  remarks: "Если контекст активации <xref:System.ActivationContext.ContextForm>, это означает, что приложение не установлено в хранилище ClickOnce манифест развертывания считывается из папки временной загрузки.</xref:System.ActivationContext.ContextForm> Если контекст активации <xref:System.ActivationContext.ContextForm>, это означает, что приложение установлено в ClickOnce хранилища, манифест развертывания считывается из хранилище ClickOnce.</xref:System.ActivationContext.ContextForm> Дополнительные сведения о манифестах развертывания см. в разделе [манифест развертывания ClickOnce](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public byte[] DeploymentManifestBytes { get; }
    return:
      type: System.Byte[]
      description: "Массив байтов, содержащий манифест развертывания ClickOnce для приложения, связанный с этим <xref href=&quot;System.ActivationContext&quot;> </xref>."
  overload: System.ActivationContext.DeploymentManifestBytes*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Dispose
  id: Dispose
  parent: System.ActivationContext
  langs:
  - csharp
  name: Dispose()
  nameWithType: ActivationContext.Dispose()
  fullName: System.ActivationContext.Dispose()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Освобождает все ресурсы, используемые <xref href=&quot;System.ActivationContext&quot;> </xref>."
  remarks: "После использования <xref:System.ActivationContext>.</xref:System.ActivationContext> всегда вызывать Dispose. Метод Dispose оставляет <xref:System.ActivationContext>окажется в неработоспособном состоянии.</xref:System.ActivationContext> После вызова Dispose, необходимо освободить все ссылки на <xref:System.ActivationContext>, сборщик мусора мог освободить память, <xref:System.ActivationContext>занимаемую.</xref:System.ActivationContext> </xref:System.ActivationContext> Дополнительные сведения см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md) и [метода](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек всегда вызова Dispose перед освобождением последней ссылки на <xref:System.ActivationContext>.</xref:System.ActivationContext> В противном случае им ресурсы не будут освобождены пока сборщик мусора не вызовет метод <xref:System.ActivationContext>объекта `Finalize` метод.</xref:System.ActivationContext>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ActivationContext.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Finalize
  id: Finalize
  parent: System.ActivationContext
  langs:
  - csharp
  name: Finalize()
  nameWithType: ActivationContext.Finalize()
  fullName: System.ActivationContext.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Включает <xref href=&quot;System.ActivationContext&quot;> </xref> объекту пытаться освободить ресурсы и выполнить другие операции очистки, перед тем как <xref href=&quot;System.ActivationContext&quot;> </xref> сборщиком мусора."
  syntax:
    content: ~ActivationContext ();
    parameters: []
  overload: System.ActivationContext.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Form
  id: Form
  parent: System.ActivationContext
  langs:
  - csharp
  name: Form
  nameWithType: ActivationContext.Form
  fullName: System.ActivationContext.Form
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Возвращает форму, или контекст хранения, для текущего приложения."
  remarks: "Возможно, не установлено приложение на основе манифеста в хранилище ClickOnce. Приложение, которое не находится в хранилище, такие как выполнение манифеста приложения в [!INCLUDE[vsprvs](~/add/includes/vsprvs-md.md)], классифицируется как <xref:System.ActivationContext.ContextForm>.</xref:System.ActivationContext.ContextForm> Приложение, которое содержится в хранилище классифицируется как <xref:System.ActivationContext.ContextForm>.</xref:System.ActivationContext.ContextForm>"
  syntax:
    content: public ActivationContext.ContextForm Form { get; }
    return:
      type: System.ActivationContext.ContextForm
      description: "Одно из значений перечисления."
  overload: System.ActivationContext.Form*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.Identity
  id: Identity
  parent: System.ActivationContext
  langs:
  - csharp
  name: Identity
  nameWithType: ActivationContext.Identity
  fullName: System.ActivationContext.Identity
  type: Property
  assemblies:
  - mscorlib
  namespace: System
  summary: "Возвращает удостоверение приложения для текущего приложения."
  remarks: "<xref:System.ApplicationIdentity>Однозначно определяет приложение по его полное имя и расположение.</xref:System.ApplicationIdentity>"
  example:
  - "The following code example demonstrates the use of an <xref:System.ActivationContext> object to obtain the <xref:System.ApplicationIdentity> for a manifest-based application. This code example is part of a larger example provided for the <xref:System.ActivationContext> class.  \n  \n [!code-vb[System.ActivationContext#2](~/add/codesnippet/visualbasic/p-system.activationconte_1.vb)]\n [!code-cs[System.ActivationContext#2](~/add/codesnippet/csharp/p-system.activationconte_1.cs)]"
  syntax:
    content: public ApplicationIdentity Identity { get; }
    return:
      type: System.ApplicationIdentity
      description: "<xref href=&quot;System.ApplicationIdentity&quot;> </xref> , Определяющий текущего приложения."
  overload: System.ActivationContext.Identity*
  exceptions: []
  platform:
  - net462
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.ActivationContext
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Заполняет <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> с данными, необходимыми для сериализации целевого объекта."
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Объект, который требуется заполнить данными."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Структура для данной сериализации."
  overload: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ActivationContext.ApplicationManifestBytes
  parent: System.ActivationContext
  isExternal: false
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
  fullName: System.ActivationContext.ApplicationManifestBytes
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity)
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext(ApplicationIdentity)
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity)
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.ApplicationIdentity
  parent: System
  isExternal: false
  name: ApplicationIdentity
  nameWithType: ApplicationIdentity
  fullName: System.ApplicationIdentity
- uid: System.ActivationContext.CreatePartialActivationContext(System.ApplicationIdentity,System.String[])
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext(ApplicationIdentity,String[])
  nameWithType: ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
  fullName: System.ActivationContext.CreatePartialActivationContext(ApplicationIdentity,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ActivationContext.DeploymentManifestBytes
  parent: System.ActivationContext
  isExternal: false
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
  fullName: System.ActivationContext.DeploymentManifestBytes
- uid: System.ActivationContext.Dispose
  parent: System.ActivationContext
  isExternal: false
  name: Dispose()
  nameWithType: ActivationContext.Dispose()
  fullName: System.ActivationContext.Dispose()
- uid: System.ActivationContext.Finalize
  parent: System.ActivationContext
  isExternal: false
  name: Finalize()
  nameWithType: ActivationContext.Finalize()
  fullName: System.ActivationContext.Finalize()
- uid: System.ActivationContext.Form
  parent: System.ActivationContext
  isExternal: false
  name: Form
  nameWithType: ActivationContext.Form
  fullName: System.ActivationContext.Form
- uid: System.ActivationContext.ContextForm
  parent: System
  isExternal: false
  name: ActivationContext+ContextForm
  nameWithType: ActivationContext+ContextForm
  fullName: System.ActivationContext+ContextForm
- uid: System.ActivationContext.Identity
  parent: System.ActivationContext
  isExternal: false
  name: Identity
  nameWithType: ActivationContext.Identity
  fullName: System.ActivationContext.Identity
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.ActivationContext
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.ActivationContext.ApplicationManifestBytes*
  parent: System.ActivationContext
  isExternal: false
  name: ApplicationManifestBytes
  nameWithType: ActivationContext.ApplicationManifestBytes
- uid: System.ActivationContext.CreatePartialActivationContext*
  parent: System.ActivationContext
  isExternal: false
  name: CreatePartialActivationContext
  nameWithType: ActivationContext.CreatePartialActivationContext
- uid: System.ActivationContext.DeploymentManifestBytes*
  parent: System.ActivationContext
  isExternal: false
  name: DeploymentManifestBytes
  nameWithType: ActivationContext.DeploymentManifestBytes
- uid: System.ActivationContext.Dispose*
  parent: System.ActivationContext
  isExternal: false
  name: Dispose
  nameWithType: ActivationContext.Dispose
- uid: System.ActivationContext.Finalize*
  parent: System.ActivationContext
  isExternal: false
  name: Finalize
  nameWithType: ActivationContext.Finalize
- uid: System.ActivationContext.Form*
  parent: System.ActivationContext
  isExternal: false
  name: Form
  nameWithType: ActivationContext.Form
- uid: System.ActivationContext.Identity*
  parent: System.ActivationContext
  isExternal: false
  name: Identity
  nameWithType: ActivationContext.Identity
- uid: System.ActivationContext.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.ActivationContext
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: ActivationContext.System.Runtime.Serialization.ISerializable.GetObjectData
