### YamlMime:ManagedReference
items:
- uid: System.Xml.Schema.XmlSchemaDatatype
  id: XmlSchemaDatatype
  children:
  - System.Xml.Schema.XmlSchemaDatatype.#ctor
  - System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  - System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  - System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  - System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  - System.Xml.Schema.XmlSchemaDatatype.TypeCode
  - System.Xml.Schema.XmlSchemaDatatype.ValueType
  - System.Xml.Schema.XmlSchemaDatatype.Variety
  langs:
  - csharp
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
  type: Class
  summary: "Класс XmlSchemaDatatype — абстрактный класс для сопоставления типами языка определения схемы XML с типами Common Language Runtime (CLR)."
  remarks: ''
  example:
  - "The following example shows use of the XmlSchemaDatatype class.  \n  \n [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/cpp/t-system.xml.schema.xmls_39_1.cpp)]\n [!code-cs[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/csharp/t-system.xml.schema.xmls_39_1.cs)]\n [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/visualbasic/t-system.xml.schema.xmls_39_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/add/codesnippet/xml/t-system.xml.schema.xmls_39_2.xsd)]"
  syntax:
    content: public abstract class XmlSchemaDatatype
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor
  id: '#ctor'
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: XmlSchemaDatatype()
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype()
  fullName: System.Xml.Schema.XmlSchemaDatatype.XmlSchemaDatatype()
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> класса."
  remarks: "Данный конструктор вызывается конструкторами производных классов для инициализации состояния данного типа."
  syntax:
    content: protected XmlSchemaDatatype ();
    parameters: []
  overload: System.Xml.Schema.XmlSchemaDatatype.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  id: ChangeType(System.Object,System.Type)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ChangeType(Object,Type)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Преобразование заданного значения, тип которого является одним из допустимых представлений Common Language Runtime (CLR) типа схемы XML представленный <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref>, для указанного типа CLR."
  remarks: "Дополнительные сведения о типе поддержки в <xref:System.Xml?displayProperty=fullName>классы и преобразования типов данных XML, см. [тип поддерживает в классах System.Xml](~/add/includes/ajax-current-ext-md.md) раздела.</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public virtual object ChangeType (object value, Type targetType);
    parameters:
    - id: value
      type: System.Object
      description: "Входное значение для преобразования в указанный тип."
    - id: targetType
      type: System.Type
      description: "Целевой тип для преобразования входного значения."
    return:
      type: System.Object
      description: "Преобразованное входное значение."
  overload: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Object>Или <xref:System.Type>параметр <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Object>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Тип, представленный <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> не поддерживает преобразование из типа значения, указанного в указанный тип."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  id: ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ChangeType(Object,Type,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Преобразование заданного значения, тип которого является одним из допустимых представлений Common Language Runtime (CLR) типа схемы XML представленный <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref>, тип CLR, указанный с помощью <xref:System.Xml.IXmlNamespaceResolver>Если <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> представляет тип xs: QName или тип, производный от него</xref:System.Xml.IXmlNamespaceResolver>"
  remarks: "Дополнительные сведения о типе поддержки в <xref:System.Xml?displayProperty=fullName>классы и преобразования типов данных XML, см. [тип поддерживает в классах System.Xml](~/add/includes/ajax-current-ext-md.md) раздела.</xref:System.Xml?displayProperty=fullName>"
  syntax:
    content: public virtual object ChangeType (object value, Type targetType, System.Xml.IXmlNamespaceResolver namespaceResolver);
    parameters:
    - id: value
      type: System.Object
      description: "Входное значение для преобразования в указанный тип."
    - id: targetType
      type: System.Type
      description: "Целевой тип для преобразования входного значения."
    - id: namespaceResolver
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>Для разрешения префиксов пространств имен.</xref:System.Xml.IXmlNamespaceResolver> Это только если <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> представляет тип xs: QName или тип, производный от него."
    return:
      type: System.Object
      description: "Преобразованное входное значение."
  overload: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<xref:System.Object>Или <xref:System.Type>параметр <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Object>"
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "Тип, представленный <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> не поддерживает преобразование из типа значения, указанного в указанный тип."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  id: IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: IsDerivedFrom(XmlSchemaDatatype)
  nameWithType: XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  fullName: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Метод IsDerivedFrom всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public virtual bool IsDerivedFrom (System.Xml.Schema.XmlSchemaDatatype datatype);
    parameters:
    - id: datatype
      type: System.Xml.Schema.XmlSchemaDatatype
      description: "The <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;></xref>."
    return:
      type: System.Boolean
      description: "Всегда возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  id: ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "При переопределении в производном классе проверяет <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> к встроенной или определяемой пользователем простой тип."
  remarks: "Метод ParseValue проверяет `string` к встроенной или определяемой пользователем простой тип. Например, при этом <xref:System.Xml.Schema.XmlSchemaDatatype>представляет типа xs: Date, то экземпляр <xref:System.DateTime>возвращается.</xref:System.DateTime> </xref:System.Xml.Schema.XmlSchemaDatatype>       Ниже приведены шаги, выполняемые во время процесса проверки метод ParseValue.      1.  Преобразовать значение, заданное в виде `string` тип в его соответствующий Common Language Runtime (CLR).      2.  Убедитесь, что значение выходит за границы, определенные для простого типа.       Преобразованное значение затем возвращается в виде <xref:System.Object>и может быть безопасно приведено к типу, возвращаемому <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A>свойство.</xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A> </xref:System.Object>       Если <xref:System.Xml.Schema.XmlSchemaDatatype>объект представляет тип списка, входные данные `string` значение преобразуется в список из одного или нескольких объектов.</xref:System.Xml.Schema.XmlSchemaDatatype> Если <xref:System.Xml.Schema.XmlSchemaDatatype>объект представляет тип списка, попытка проанализировать входное значение в качестве типа члена объединения.</xref:System.Xml.Schema.XmlSchemaDatatype> В случае сбоя попытки синтаксического анализа, затем преобразование попытки следующего элемента объединения до синтаксического анализа прошла успешно или нет других типов элементов для синтаксического анализа. Если синтаксический анализ завершается неудачно, создается исключение."
  example:
  - "The following example retrieves the `LotteryNumber` simple type from the example.xsd file as an <xref:System.Xml.Schema.XmlSchemaSimpleType> and then validates the `string` value of `5` using the ParseValue method.  \n  \n [!code-cpp[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/cpp/b4af643f-b5cd-41ee-8b57-_1.cpp)]\n [!code-cs[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/csharp/b4af643f-b5cd-41ee-8b57-_1.cs)]\n [!code-vb[Classic Webdata XmlSchemaDatatype Example#1](~/add/codesnippet/visualbasic/b4af643f-b5cd-41ee-8b57-_1.vb)]  \n  \n The following XML file is used for the preceding code example.  \n  \n [!code-xml[Classic Webdata XmlSchemaDatatype Example#2](~/add/codesnippet/xml/b4af643f-b5cd-41ee-8b57-_2.xsd)]"
  syntax:
    content: public abstract object ParseValue (string s, System.Xml.XmlNameTable nameTable, System.Xml.IXmlNamespaceResolver nsmgr);
    parameters:
    - id: s
      type: System.String
      description: "<xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> Для проверки соответствия простого типа."
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: "<xref:System.Xml.XmlNameTable>Для атомизации при синтаксическом анализе <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> при этом <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> объект представляет тип xs: NCName.</xref:System.Xml.XmlNameTable>"
    - id: nsmgr
      type: System.Xml.IXmlNamespaceResolver
      description: "<xref:System.Xml.IXmlNamespaceResolver>Объект, используемый при синтаксическом анализе <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> при этом <xref href=&quot;System.Xml.Schema.XmlSchemaDatatype&quot;> </xref> объект представляет тип xs: QName.</xref:System.Xml.IXmlNamespaceResolver>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Может быть безопасно приведено к типу, возвращаемому <xref:System.Xml.Schema.XmlSchemaDatatype.ValueType*>свойство.</xref:System.Xml.Schema.XmlSchemaDatatype.ValueType*> </xref:System.Object>"
  overload: System.Xml.Schema.XmlSchemaDatatype.ParseValue*
  exceptions:
  - type: System.Xml.Schema.XmlSchemaValidationException
    commentId: T:System.Xml.Schema.XmlSchemaValidationException
    description: "Входное значение не является допустимый экземпляр этого типа схемы W3C XML."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение для анализа не может быть <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  id: TokenizedType
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
  fullName: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "При переопределении в производном классе получает тип для <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> как указано в XML консорциума World Wide Web (W3C) 1.0 спецификации."
  remarks: "Позволяет `string` считываться как тип XML, например, тип раздела CDATA.       В следующей таблице показаны типы маркеров.      | XmlTokenizedType | Описание |   |----------------------|-----------------|   | `CDATA`| Тип CDATA |   | `ID`| Тип идентификатора |   | `IDREF`| Тип IDREF |   | `IDREFS`| Тип IDREFS |   | `ENTITY`| Тип СУЩНОСТИ |   | `ENTITIES`| Тип СУЩНОСТИ |   | `NMTOKEN`| Тип NMTOKEN |   | `NMTOKENS`| Тип NMTOKENS |   | `NOTATION`| Тип NOTATION |   | `ENUMERATION`| Тип ПЕРЕЧИСЛЕНИЯ |   | `QName`| Типа QName |   | `NCName`| Тип NCName |   | `None`| Отсутствует тип |"
  syntax:
    content: public abstract System.Xml.XmlTokenizedType TokenizedType { get; }
    return:
      type: System.Xml.XmlTokenizedType
      description: "An <xref href=&quot;System.Xml.XmlTokenizedType&quot;></xref> value for the <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;></xref>."
  overload: System.Xml.Schema.XmlSchemaDatatype.TokenizedType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  id: TypeCode
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
  fullName: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает <xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;> </xref> значение для простого типа."
  remarks: "XML-схемы W3C список типов, например xs: Entities, xs: NMTOKENS и xs: IDREF не представлены <xref:System.Xml.Schema.XmlTypeCode>перечисления.</xref:System.Xml.Schema.XmlTypeCode> Вместо этого они представлены <xref:System.Xml.Schema.XmlTypeCode>значения для xs:ENTITY, xs: NMTOKEN и xs: IDREF типов с помощью <xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A>свойств <xref:System.Xml.Schema.XmlSchemaDatatype>объекта установить <xref:System.Xml.Schema.XmlSchemaDatatypeVariety>.</xref:System.Xml.Schema.XmlSchemaDatatypeVariety> </xref:System.Xml.Schema.XmlSchemaDatatype> </xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A> </xref:System.Xml.Schema.XmlTypeCode>      Настроек [!NOTE] настроек xs:anySimpleType и xs: anyType типов не представлены <xref:System.Xml.Schema.XmlTypeCode>перечисления.</xref:System.Xml.Schema.XmlTypeCode> Они представлены в <xref:System.Xml.Schema.XmlSchemaDatatype>объекта с <xref:System.Xml.Schema.XmlTypeCode>, значение которого является <xref:System.Xml.Schema.XmlTypeCode>для xs:anySimpleType или <xref:System.Xml.Schema.XmlTypeCode>для xs: anyType.</xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlTypeCode> </xref:System.Xml.Schema.XmlSchemaDatatype>"
  example:
  - For an example of the TypeCode property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.
  syntax:
    content: public virtual System.Xml.Schema.XmlTypeCode TypeCode { get; }
    return:
      type: System.Xml.Schema.XmlTypeCode
      description: "<xref href=&quot;System.Xml.Schema.XmlTypeCode&quot;> </xref> Значение для простого типа."
  overload: System.Xml.Schema.XmlSchemaDatatype.TypeCode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType
  id: ValueType
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
  fullName: System.Xml.Schema.XmlSchemaDatatype.ValueType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "При переопределении в производном классе получает тип элемента Common Language Runtime (CLR)."
  remarks: "Свойство ValueType Получает тип CLR элемента. Например, элемент типа `xs:int` бы ValueType из <xref:System.Int32>по умолчанию.</xref:System.Int32> Тем не менее, ValueType может быть одним из допустимых типов, которые могут быть сопоставлены с `xs:int`, например <xref:System.Int16>или <xref:System.Double>.</xref:System.Double> </xref:System.Int16>       Дополнительные сведения о типе поддержки в <xref:System.Xml?displayProperty=fullName>пространства имен, в разделе [тип поддерживает в классах System.Xml](~/add/includes/ajax-current-ext-md.md).</xref:System.Xml?displayProperty=fullName>"
  example:
  - For an example of the ValueType property, see <xref:System.Xml.Schema.XmlSchemaDatatype>.
  syntax:
    content: public abstract Type ValueType { get; }
    return:
      type: System.Type
      description: "Тип элемента Common Language Runtime (CLR)."
  overload: System.Xml.Schema.XmlSchemaDatatype.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety
  id: Variety
  parent: System.Xml.Schema.XmlSchemaDatatype
  langs:
  - csharp
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
  fullName: System.Xml.Schema.XmlSchemaDatatype.Variety
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml.Schema
  summary: "Возвращает <xref href=&quot;System.Xml.Schema.XmlSchemaDatatypeVariety&quot;> </xref> значение для простого типа."
  syntax:
    content: public virtual System.Xml.Schema.XmlSchemaDatatypeVariety Variety { get; }
    return:
      type: System.Xml.Schema.XmlSchemaDatatypeVariety
      description: "<xref href=&quot;System.Xml.Schema.XmlSchemaDatatypeVariety&quot;> </xref> Значение для простого типа."
  overload: System.Xml.Schema.XmlSchemaDatatype.Variety*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Xml.Schema.XmlSchemaValidationException
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaValidationException
  nameWithType: XmlSchemaValidationException
  fullName: System.Xml.Schema.XmlSchemaValidationException
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: XmlSchemaDatatype()
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype()
  fullName: System.Xml.Schema.XmlSchemaDatatype.XmlSchemaDatatype()
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType(Object,Type)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType(Object,Type,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ChangeType(Object,Type,IXmlNamespaceResolver)
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: true
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: IsDerivedFrom(XmlSchemaDatatype)
  nameWithType: XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
  fullName: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(XmlSchemaDatatype)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.Schema.XmlSchemaDatatype
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype
  fullName: System.Xml.Schema.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  nameWithType: XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
  fullName: System.Xml.Schema.XmlSchemaDatatype.ParseValue(String,XmlNameTable,IXmlNamespaceResolver)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: true
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
  fullName: System.Xml.Schema.XmlSchemaDatatype.TokenizedType
- uid: System.Xml.XmlTokenizedType
  parent: System.Xml
  isExternal: false
  name: XmlTokenizedType
  nameWithType: XmlTokenizedType
  fullName: System.Xml.XmlTokenizedType
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
  fullName: System.Xml.Schema.XmlSchemaDatatype.TypeCode
- uid: System.Xml.Schema.XmlTypeCode
  parent: System.Xml.Schema
  isExternal: false
  name: XmlTypeCode
  nameWithType: XmlTypeCode
  fullName: System.Xml.Schema.XmlTypeCode
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
  fullName: System.Xml.Schema.XmlSchemaDatatype.ValueType
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
  fullName: System.Xml.Schema.XmlSchemaDatatype.Variety
- uid: System.Xml.Schema.XmlSchemaDatatypeVariety
  parent: System.Xml.Schema
  isExternal: false
  name: XmlSchemaDatatypeVariety
  nameWithType: XmlSchemaDatatypeVariety
  fullName: System.Xml.Schema.XmlSchemaDatatypeVariety
- uid: System.Xml.Schema.XmlSchemaDatatype.#ctor*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: XmlSchemaDatatype
  nameWithType: XmlSchemaDatatype.XmlSchemaDatatype
- uid: System.Xml.Schema.XmlSchemaDatatype.ChangeType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ChangeType
  nameWithType: XmlSchemaDatatype.ChangeType
- uid: System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: IsDerivedFrom
  nameWithType: XmlSchemaDatatype.IsDerivedFrom
- uid: System.Xml.Schema.XmlSchemaDatatype.ParseValue*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ParseValue
  nameWithType: XmlSchemaDatatype.ParseValue
- uid: System.Xml.Schema.XmlSchemaDatatype.TokenizedType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TokenizedType
  nameWithType: XmlSchemaDatatype.TokenizedType
- uid: System.Xml.Schema.XmlSchemaDatatype.TypeCode*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: TypeCode
  nameWithType: XmlSchemaDatatype.TypeCode
- uid: System.Xml.Schema.XmlSchemaDatatype.ValueType*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: ValueType
  nameWithType: XmlSchemaDatatype.ValueType
- uid: System.Xml.Schema.XmlSchemaDatatype.Variety*
  parent: System.Xml.Schema.XmlSchemaDatatype
  isExternal: false
  name: Variety
  nameWithType: XmlSchemaDatatype.Variety
