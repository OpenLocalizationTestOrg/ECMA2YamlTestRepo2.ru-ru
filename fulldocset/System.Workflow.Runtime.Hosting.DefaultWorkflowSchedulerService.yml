### YamlMime:ManagedReference
items:
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  id: DefaultWorkflowSchedulerService
  children:
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService
  nameWithType: DefaultWorkflowSchedulerService
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  type: Class
  summary: "Создает и управляет потоками, выполняющими экземпляры рабочих процессов на механизм среды выполнения рабочего процесса."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]DefaultWorkflowSchedulerService используется подсистемой среды выполнения рабочего процесса по умолчанию. Эта роль по умолчанию поддерживает наличие нескольких экземпляров в очередь в пуле потоков среды выполнения рабочего процесса. Если вы хотите контролировать поток, который отвечает за выполнение рабочего процесса, используйте <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.</xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>"
  syntax:
    content: >-
      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      public class DefaultWorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  inheritance:
  - System.Object
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService
  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  implements: []
  inheritedMembers:
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start
  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  id: '#ctor'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService()
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;></xref> class."
  syntax:
    content: public DefaultWorkflowSchedulerService ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  id: '#ctor(System.Collections.Specialized.NameValueCollection)'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService(NameValueCollection)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Initializes a new instance of the <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;></xref> class."
  remarks: "This constructor is invoked when the workflow runtime engine loads services from an application configuration file. The only valid parameter is `maxSimultaneousWorkflows`, which can specify the number of workflows that can be run at the same time.  \n  \n Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve. This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.  \n  \n If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount \\* .8) for a multiple-processor machine. Note that (int)(5 \\* Environment.ProcessorCount \\* .8) is not always the same as (int)(4 \\* Environment.ProcessorCount), because of the rules of integer arithmetic."
  syntax:
    content: public DefaultWorkflowSchedulerService (System.Collections.Specialized.NameValueCollection parameters);
    parameters:
    - id: parameters
      type: System.Collections.Specialized.NameValueCollection
      description: "Объект <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> , содержащий сведения об инициализации."
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>parameters</code>содержит пустую ссылку (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Одно из ключевых значений в <code> parameters </code> коллекции содержит пустую ссылку (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>).       Одно из ключевых значений в--или-- <code> parameters </code> коллекции не соответствует ключу по умолчанию для <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref>."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "Один из параметров не может быть преобразован в число двойной точности с плавающей запятой, соответствующий <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>-меньше 1.</xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*>"
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: DefaultWorkflowSchedulerService(Int32)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  type: Constructor
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref> , используя указанное максимальное количество экземпляров рабочих процессов, которые службы могут выполняться одновременно."
  remarks: "Setting `maxSimultaneousWorkflows` to a high value might cause the .NET thread pool to starve. This could cause time-outs when a persistence service tries to complete a persistence transaction because <xref:System.Transactions.Transaction> objects also use the .NET thread pool.  \n  \n If not specified in a constructor or configuration file, the default value for `maxSimultaneousWorkflows` is 5 for a single-processor machine, and (int)(5 * Environment.ProcessorCount \\* .8) for a multiple-processor machine. Note that (int)(5 \\* Environment.ProcessorCount \\* .8) is not always the same as (int)(4 \\* Environment.ProcessorCount), because of the rules of integer arithmetic."
  syntax:
    content: public DefaultWorkflowSchedulerService (int maxSimultaneousWorkflows);
    parameters:
    - id: maxSimultaneousWorkflows
      type: System.Int32
      description: "Целое число, определяющее максимальное количество экземпляров рабочих процессов, которые могут храниться в очереди пула потоков."
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>maxSimultaneousWorkflows</code>-меньше 1."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  id: Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Cancel(Guid)
  nameWithType: DefaultWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Отменяет заданный элемент рабочих существующего экземпляра рабочего процесса."
  syntax:
    content: protected override void Cancel (Guid timerId);
    parameters:
    - id: timerId
      type: System.Guid
      description: "<xref:System.Guid>Связанные с существующие запланированный рабочий элемент для отмены.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>timerId</code>является пустой GUID."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  id: MaxSimultaneousWorkflows
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  type: Property
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Возвращает максимальное количество экземпляров рабочих процессов, которые могут храниться в очереди пула потоков."
  remarks: "Значение по умолчанию для этого метода — 5 для однопроцессорного компьютера и (int) (5 * Environment.ProcessorCount \\* .8) для многопроцессорного компьютера. Обратите внимание, что (int) (5 \\* Environment.ProcessorCount \\* .8) не всегда является таким же, как (int) (4 \\* Environment.ProcessorCount), из-за правил целочисленных арифметических операций."
  syntax:
    content: public int MaxSimultaneousWorkflows { get; }
    return:
      type: System.Int32
      description: "Целое число, представляющее максимальное количество экземпляров рабочих процессов, которые могут храниться в очереди пула потоков."
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  id: OnStarted
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: OnStarted()
  nameWithType: DefaultWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Уведомляет <xref href=&quot;System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&quot;> </xref> , начало выполнения экземпляра рабочего процесса."
  remarks: "OnStarted создает поток для первого рабочего элемента в список элементов, ожидающих включения в пул потоков экземпляров рабочих процессов."
  syntax:
    content: protected override void OnStarted ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Добавляет экземпляр рабочего процесса в очередь ожидающих рабочих элементов, с помощью заданного экземпляра рабочего процесса с помощью заданного многоадресного делегата."
  remarks: "Используйте <xref:System.Threading.WaitCallback>конструктор для создания метода делегата для выполнения в новом потоке.</xref:System.Threading.WaitCallback>"
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "Объект <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> групповой делегат, представляющий выполняемый метод."
    - id: workflowInstanceId
      type: System.Guid
      description: "Объект <xref:System.Guid>, представляющий экземпляр рабочего процесса.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>содержит пустую ссылку (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Добавляет заданный экземпляр рабочего процесса в очередь ожидающих рабочих элементов, с помощью заданного многоадресного делегата, <xref:System.DateTime>и GUID.</xref:System.DateTime>"
  remarks: "Используйте <xref:System.Threading.WaitCallback>конструктор для создания метода делегата для выполнения в новом потоке.</xref:System.Threading.WaitCallback>"
  syntax:
    content: protected override void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);
    parameters:
    - id: callback
      type: System.Threading.WaitCallback
      description: "Объект <xref href=&quot;System.Threading.WaitCallback&quot;> </xref> групповой делегат, представляющий выполняемый метод."
    - id: workflowInstanceId
      type: System.Guid
      description: "Объект <xref:System.Guid>, представляющий экземпляр рабочего процесса.</xref:System.Guid>"
    - id: whenUtc
      type: System.DateTime
      description: "<xref:System.DateTime>Указывает время начала выполнения потока.</xref:System.DateTime>"
    - id: timerId
      type: System.Guid
      description: "Объект <xref:System.Guid>, представляющий запланированный поток.</xref:System.Guid>"
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>callback</code>содержит пустую ссылку (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>workflowInstanceId</code>или <code>timerId</code> используется пустой GUID."
  platform:
  - net462
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  id: Stop
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  langs:
  - csharp
  name: Stop()
  nameWithType: DefaultWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop()
  type: Method
  assemblies:
  - System.Workflow.Runtime
  namespace: System.Workflow.Runtime.Hosting
  summary: "Останавливает экземпляр рабочего процесса и любые выполняемые таймеры в данный момент поток."
  syntax:
    content: protected override void Stop ();
    parameters: []
  overload: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
  isExternal: false
  name: System.Workflow.Runtime.Hosting.WorkflowSchedulerService
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService()
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Collections.Specialized.NameValueCollection)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService(NameValueCollection)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor(System.Int32)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService(Int32)
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Cancel(Guid)
  nameWithType: DefaultWorkflowSchedulerService.Cancel(Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: OnStarted()
  nameWithType: DefaultWorkflowSchedulerService.OnStarted()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid)
- uid: System.Threading.WaitCallback
  parent: System.Threading
  isExternal: false
  name: WaitCallback
  nameWithType: WaitCallback
  fullName: System.Threading.WaitCallback
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule(WaitCallback,Guid,DateTime,Guid)
  nameWithType: DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule(WaitCallback,Guid,DateTime,Guid)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Stop()
  nameWithType: DefaultWorkflowSchedulerService.Stop()
  fullName: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop()
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.#ctor*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: DefaultWorkflowSchedulerService
  nameWithType: DefaultWorkflowSchedulerService.DefaultWorkflowSchedulerService
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Cancel*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Cancel
  nameWithType: DefaultWorkflowSchedulerService.Cancel
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: MaxSimultaneousWorkflows
  nameWithType: DefaultWorkflowSchedulerService.MaxSimultaneousWorkflows
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.OnStarted*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: OnStarted
  nameWithType: DefaultWorkflowSchedulerService.OnStarted
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Schedule*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Schedule
  nameWithType: DefaultWorkflowSchedulerService.Schedule
- uid: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService.Stop*
  parent: System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService
  isExternal: false
  name: Stop
  nameWithType: DefaultWorkflowSchedulerService.Stop
