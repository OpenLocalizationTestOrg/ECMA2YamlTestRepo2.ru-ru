### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.EnumConverter
  id: EnumConverter
  children:
  - System.ComponentModel.EnumConverter.#ctor(System.Type)
  - System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.EnumConverter.Comparer
  - System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.EnumConverter.EnumType
  - System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.EnumConverter.Values
  langs:
  - csharp
  name: EnumConverter
  nameWithType: EnumConverter
  fullName: System.ComponentModel.EnumConverter
  type: Class
  summary: "Предоставляет преобразователь типов для преобразования <xref:System.Enum>объектов в другие представления и обратно.</xref:System.Enum>"
  remarks: "Этот конвертер может только преобразовать объект перечисления и из строки. Класс EnumConverter предоставляет <xref:System.ComponentModel.EnumConverter.Comparer%2A>Свойства <xref:System.Collections.IComparer>интерфейс, который может использоваться для сортировки значений перечисления.</xref:System.Collections.IComparer> </xref:System.ComponentModel.EnumConverter.Comparer%2A> По умолчанию значения перечисления сортируются в порядке их следования в файле.       Дополнительные сведения о преобразователях типов см. в разделе <xref:System.ComponentModel.TypeConverter>базового класса и [как: реализация преобразователя типов](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      Настроек [!NOTE] настроек никогда не следует создавать экземпляр EnumConverter. Вместо этого необходимо вызовите <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>метод <xref:System.ComponentModel.TypeDescriptor>класса.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Дополнительные сведения см. в примерах из <xref:System.ComponentModel.TypeConverter>базового класса.</xref:System.ComponentModel.TypeConverter>"
  example:
  - "The following code example converts a variable of type <xref:System.Enum> to a string, and vice versa. The example requires that you have declared an <xref:System.Enum> called `Servers` and that it has the following members:  \n  \n```  \nWindows=1, Exchange=2, BizTalk=3  \n```  \n  \n [!code-cs[Converters#12](~/add/codesnippet/csharp/t-system.componentmodel._114_1.cs)]\n [!code-vb[Converters#12](~/add/codesnippet/visualbasic/t-system.componentmodel._114_1.vb)]\n [!code-cpp[Converters#12](~/add/codesnippet/cpp/t-system.componentmodel._114_1.cpp)]"
  syntax:
    content: 'public class EnumConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: EnumConverter(Type)
  nameWithType: EnumConverter.EnumConverter(Type)
  fullName: System.ComponentModel.EnumConverter.EnumConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.EnumConverter&quot;> </xref> класса для данного типа."
  syntax:
    content: public EnumConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип перечисления, связываемый с этим преобразователем перечисления.</xref:System.Type>"
  overload: System.ComponentModel.EnumConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, может ли этот преобразователь выполнить преобразование объекта заданного исходного типа в объект перечисления, используя заданный контекст."
  remarks: "Этот конвертер может только преобразовать объект перечисления и из строки.       `context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: sourceType
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип, который нужно выполнить преобразование из.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если преобразователь может выполнить преобразование; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EnumConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли этот преобразователь преобразовать объект в заданный тип, используя контекст."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: destinationType
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий тип, который нужно выполнить преобразование.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если преобразователь может выполнить преобразование; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EnumConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.Comparer
  id: Comparer
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: Comparer
  nameWithType: EnumConverter.Comparer
  fullName: System.ComponentModel.EnumConverter.Comparer
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает <xref:System.Collections.IComparer>может использоваться для сортировки значений перечисления.</xref:System.Collections.IComparer>"
  remarks: "По умолчанию значения перечисления сортируются в порядке их следования в файле."
  syntax:
    content: protected virtual System.Collections.IComparer Comparer { get; }
    return:
      type: System.Collections.IComparer
      description: "<xref:System.Collections.IComparer>Для сортировки значений перечисления.</xref:System.Collections.IComparer>"
  overload: System.ComponentModel.EnumConverter.Comparer*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Преобразует указанный объект значения в объект перечисления."
  remarks: "Этот конвертер может только преобразовать объект перечисления и из строки.       `context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Необязательный <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Если не указан, подразумевается текущий язык и региональные параметры."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий преобразованный <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.EnumConverter.ConvertFrom*
  exceptions:
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>value</code>не является допустимым значением для целевого типа."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Невозможно выполнить преобразование."
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Преобразует данный объект значения в указанный тип."
  remarks: "Этот конвертер может только преобразовать объект перечисления и из строки.       `context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`.      Настроек [!NOTE] настроек поведение <xref:System.ComponentModel.EnumConverter.ConvertTo%2A>метод не определено, если перечисление содержит несколько полей с тем же значением.</xref:System.ComponentModel.EnumConverter.ConvertTo%2A>"
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Необязательный <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Если не указан, подразумевается текущий язык и региональные параметры."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для преобразования.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "<xref:System.Type>Преобразуемое значение.</xref:System.Type>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий преобразованный <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.EnumConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>не является допустимым значением для перечисления."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Невозможно выполнить преобразование."
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.EnumType
  id: EnumType
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: EnumType
  nameWithType: EnumConverter.EnumType
  fullName: System.ComponentModel.EnumConverter.EnumType
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Указывает тип перечислителя, с которой связан этот преобразователь."
  syntax:
    content: protected Type EnumType { get; }
    return:
      type: System.Type
      description: "Тип перечислителя, с которым связан этот преобразователь."
  overload: System.ComponentModel.EnumConverter.EnumType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает коллекцию стандартных значений для типа данных, для которого предназначен этот проверяющий элемент управления."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`.      Настроек [!NOTE] настроек все поля, которые помечены с помощью перечисления <xref:System.ComponentModel.BrowsableAttribute>значение `false` не будут возвращены.</xref:System.ComponentModel.BrowsableAttribute>"
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Объект <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>, содержащий стандартный набор допустимых значений или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если тип данных не поддерживает стандартный набор значений.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.EnumConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли возвращает список стандартных значений <xref:System.ComponentModel.TypeConverter.GetStandardValues*>является исчерпывающим списком, используя заданный контекст.</xref:System.ComponentModel.TypeConverter.GetStandardValues*>"
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>возвращенный <xref:System.ComponentModel.TypeConverter.GetStandardValues*>является исчерпывающим списком возможных значений; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если возможны другие значения.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.EnumConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, поддерживает ли этот объект стандартный набор значений, которые можно выбрать из списка, используя заданный контекст."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Поскольку <xref:System.ComponentModel.TypeConverter.GetStandardValues*>должен быть вызван для поиска общего набора значений, поддерживаемых объектом.</xref:System.ComponentModel.TypeConverter.GetStandardValues*> Этот метод никогда не возвращает <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EnumConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  id: IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: EnumConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.EnumConverter.IsValid(ITypeDescriptorContext,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли данное значение объекта допустимым для этого типа."
  remarks: "`context` Используется для получения дополнительных сведений о среде, из которой вызывается данный преобразователь. Это может быть `null`, поэтому всегда необходимо проверять. Кроме того, свойства объекта контекста могут возвращать `null`."
  syntax:
    content: public override bool IsValid (System.ComponentModel.ITypeDescriptorContext context, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "<xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> , Предоставляющий контекст формата."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Для тестирования.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанное значение является допустимым для этого объекта; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.EnumConverter.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.EnumConverter.Values
  id: Values
  parent: System.ComponentModel.EnumConverter
  langs:
  - csharp
  name: Values
  nameWithType: EnumConverter.Values
  fullName: System.ComponentModel.EnumConverter.Values
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>, задает возможные значения для перечисления.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  syntax:
    content: protected System.ComponentModel.TypeConverter.StandardValuesCollection Values { get; set; }
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Объект <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>, задает возможные значения для перечисления.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.EnumConverter.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.EnumConverter.#ctor(System.Type)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: EnumConverter(Type)
  nameWithType: EnumConverter.EnumConverter(Type)
  fullName: System.ComponentModel.EnumConverter.EnumConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.EnumConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.ComponentModel.EnumConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.EnumConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.EnumConverter.Comparer
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: Comparer
  nameWithType: EnumConverter.Comparer
  fullName: System.ComponentModel.EnumConverter.Comparer
- uid: System.Collections.IComparer
  parent: System.Collections
  isExternal: true
  name: IComparer
  nameWithType: IComparer
  fullName: System.Collections.IComparer
- uid: System.ComponentModel.EnumConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.EnumConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.EnumConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.EnumConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.EnumConverter.EnumType
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: EnumType
  nameWithType: EnumConverter.EnumType
  fullName: System.ComponentModel.EnumConverter.EnumType
- uid: System.ComponentModel.EnumConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.EnumConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.EnumConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: IsValid(ITypeDescriptorContext,Object)
  nameWithType: EnumConverter.IsValid(ITypeDescriptorContext,Object)
  fullName: System.ComponentModel.EnumConverter.IsValid(ITypeDescriptorContext,Object)
- uid: System.ComponentModel.EnumConverter.Values
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: Values
  nameWithType: EnumConverter.Values
  fullName: System.ComponentModel.EnumConverter.Values
- uid: System.ComponentModel.EnumConverter.#ctor*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: EnumConverter
  nameWithType: EnumConverter.EnumConverter
- uid: System.ComponentModel.EnumConverter.CanConvertFrom*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: EnumConverter.CanConvertFrom
- uid: System.ComponentModel.EnumConverter.CanConvertTo*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: EnumConverter.CanConvertTo
- uid: System.ComponentModel.EnumConverter.Comparer*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: Comparer
  nameWithType: EnumConverter.Comparer
- uid: System.ComponentModel.EnumConverter.ConvertFrom*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: EnumConverter.ConvertFrom
- uid: System.ComponentModel.EnumConverter.ConvertTo*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: ConvertTo
  nameWithType: EnumConverter.ConvertTo
- uid: System.ComponentModel.EnumConverter.EnumType*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: EnumType
  nameWithType: EnumConverter.EnumType
- uid: System.ComponentModel.EnumConverter.GetStandardValues*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: EnumConverter.GetStandardValues
- uid: System.ComponentModel.EnumConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: EnumConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.EnumConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: EnumConverter.GetStandardValuesSupported
- uid: System.ComponentModel.EnumConverter.IsValid*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: IsValid
  nameWithType: EnumConverter.IsValid
- uid: System.ComponentModel.EnumConverter.Values*
  parent: System.ComponentModel.EnumConverter
  isExternal: false
  name: Values
  nameWithType: EnumConverter.Values
