### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.MergablePropertyAttribute
  id: MergablePropertyAttribute
  children:
  - System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  - System.ComponentModel.MergablePropertyAttribute.AllowMerge
  - System.ComponentModel.MergablePropertyAttribute.Default
  - System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  - System.ComponentModel.MergablePropertyAttribute.GetHashCode
  - System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute
  - System.ComponentModel.MergablePropertyAttribute.No
  - System.ComponentModel.MergablePropertyAttribute.Yes
  langs:
  - csharp
  name: MergablePropertyAttribute
  nameWithType: MergablePropertyAttribute
  fullName: System.ComponentModel.MergablePropertyAttribute
  type: Class
  summary: "Указывает, что это свойство может быть объединено со свойствами, принадлежащими к другим объектам в окне &quot;Свойства&quot;."
  remarks: "Значение свойства, которые отмечены MergablePropertyAttribute `true` можно объединить со свойствами, принадлежащими к другим объектам в окне &quot;Свойства&quot;. Значение свойства, которые отмечены MergablePropertyAttribute `false` должны отображаться отдельно. Значение по умолчанию — `true`.      Настроек [!NOTE] настроек свойство с MergablePropertyAttribute отмечается присвоено `true`, члену-константе <xref:System.ComponentModel.MergablePropertyAttribute.Yes>.</xref:System.ComponentModel.MergablePropertyAttribute.Yes> задано значение этого атрибута Свойство отмечается со свойством MergablePropertyAttribute `false`, значение равно <xref:System.ComponentModel.MergablePropertyAttribute.No>.</xref:System.ComponentModel.MergablePropertyAttribute.No> Таким образом Если вы хотите проверить значение этого атрибута в коде, необходимо указать атрибут или <xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName> <xref:System.ComponentModel.MergablePropertyAttribute.No?displayProperty=fullName>.</xref:System.ComponentModel.MergablePropertyAttribute.No?displayProperty=fullName> </xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName>       Дополнительные сведения см. в разделе [атрибуты](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example marks a property as appropriate to merge.  \n  \n [!code-cpp[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/cpp/t-system.componentmodel._138_1.cpp)]\n [!code-cs[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/csharp/t-system.componentmodel._138_1.cs)]\n [!code-vb[Classic MergablePropertyAttribute Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._138_1.vb)]  \n  \n The next example shows how to check the value of the MergablePropertyAttribute for `MyProperty`. First the code gets a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object. Next it indexes into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`. Then it returns the attributes for this property and saves them in the attributes variable.  \n  \n The example presents two different ways of checking the value of the MergablePropertyAttribute. In the second code fragment, the example calls the <xref:System.ComponentModel.MergablePropertyAttribute.Equals%2A> method with a `static` value. In the last code fragment, the example uses the <xref:System.ComponentModel.MergablePropertyAttribute.AllowMerge%2A> property to check the value.  \n  \n [!code-cpp[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/cpp/t-system.componentmodel._138_2.cpp)]\n [!code-cs[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/csharp/t-system.componentmodel._138_2.cs)]\n [!code-vb[Classic MergablePropertyAttribute Example#2](~/add/codesnippet/visualbasic/t-system.componentmodel._138_2.vb)]  \n  \n If you marked a class with the MergablePropertyAttribute, use the following code to check the value.  \n  \n [!code-cpp[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/cpp/t-system.componentmodel._138_3.cpp)]\n [!code-cs[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/csharp/t-system.componentmodel._138_3.cs)]\n [!code-vb[Classic MergablePropertyAttribute Example#3](~/add/codesnippet/visualbasic/t-system.componentmodel._138_3.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.All)]

      public sealed class MergablePropertyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: MergablePropertyAttribute(Boolean)
  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute(Boolean)
  fullName: System.ComponentModel.MergablePropertyAttribute.MergablePropertyAttribute(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.MergablePropertyAttribute&quot;> </xref> класса."
  remarks: ''
  example:
  - "The following example marks a property as appropriate to merge. This code creates a new <xref:System.ComponentModel.MergablePropertyAttribute>, sets its value to <xref:System.ComponentModel.MergablePropertyAttribute.Yes?displayProperty=fullName>, and binds it to the property.  \n  \n [!code-cpp[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/cpp/m-system.componentmodel._30_1.cpp)]\n [!code-cs[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/csharp/m-system.componentmodel._30_1.cs)]\n [!code-vb[Classic MergablePropertyAttribute.MergablePropertyAttribute Example#1](~/add/codesnippet/visualbasic/m-system.componentmodel._30_1.vb)]"
  syntax:
    content: public MergablePropertyAttribute (bool allowMerge);
    parameters:
    - id: allowMerge
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если это свойство можно вместе со свойствами, принадлежащими к другим объектам в окне свойств. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MergablePropertyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge
  id: AllowMerge
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: AllowMerge
  nameWithType: MergablePropertyAttribute.AllowMerge
  fullName: System.ComponentModel.MergablePropertyAttribute.AllowMerge
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает значение, указывающее, является ли это свойство может быть объединено со свойствами, принадлежащими к другим объектам в окне &quot;Свойства&quot;."
  remarks: ''
  example:
  - "The following example checks to see whether `MyProperty` is appropriate to merge. First the code gets the attributes for `MyProperty` by:  \n  \n-   Retrieving a <xref:System.ComponentModel.PropertyDescriptorCollection> with all the properties for the object.  \n  \n-   Indexing into the <xref:System.ComponentModel.PropertyDescriptorCollection> to get `MyProperty`.  \n  \n-   Saving the attributes for this property in the attributes variable.  \n  \n Then the code sets `myAttribute` to the value of the <xref:System.ComponentModel.MergablePropertyAttribute> in the <xref:System.ComponentModel.AttributeCollection> and checks whether the property is appropriate to merge.  \n  \n [!code-cs[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/csharp/p-system.componentmodel._6_1.cs)]\n [!code-vb[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/visualbasic/p-system.componentmodel._6_1.vb)]\n [!code-cpp[Classic MergablePropertyAttribute.AllowMerge Example#1](~/add/codesnippet/cpp/p-system.componentmodel._6_1.cpp)]"
  syntax:
    content: public bool AllowMerge { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если это свойство можно вместе со свойствами, принадлежащими к другим объектам в окне свойств. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MergablePropertyAttribute.AllowMerge*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MergablePropertyAttribute.Default
  id: Default
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: Default
  nameWithType: MergablePropertyAttribute.Default
  fullName: System.ComponentModel.MergablePropertyAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Указывает значение по умолчанию, равное <xref href=&quot;System.ComponentModel.MergablePropertyAttribute.Yes&quot;> </xref>, то есть свойство может быть объединено со свойствами, принадлежащими к другим объектам в окне &quot;Свойства&quot;. Это <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> поле доступно только для чтения."
  remarks: "Если свойство с этим значением, этот атрибут имеет значение члену-константе <xref:System.ComponentModel.MergablePropertyAttribute>.</xref:System.ComponentModel.MergablePropertyAttribute> Таким образом Если вы хотите проверить, установлен ли атрибут в это значение в коде, необходимо указать атрибут как <xref:System.ComponentModel.MergablePropertyAttribute?displayProperty=fullName>.</xref:System.ComponentModel.MergablePropertyAttribute?displayProperty=fullName>"
  syntax:
    content: public static readonly System.ComponentModel.MergablePropertyAttribute Default;
    return:
      type: System.ComponentModel.MergablePropertyAttribute
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: MergablePropertyAttribute.Equals(Object)
  fullName: System.ComponentModel.MergablePropertyAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Указывает, равен ли данный экземпляр указанному объекту."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Другой объект для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> obj </code> равно данному экземпляру; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MergablePropertyAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: MergablePropertyAttribute.GetHashCode()
  fullName: System.ComponentModel.MergablePropertyAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает хэш-код данного экземпляра."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для текущего <xref href=&quot;System.ComponentModel.MergablePropertyAttribute&quot;> </xref>."
  overload: System.ComponentModel.MergablePropertyAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: MergablePropertyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, является ли этот атрибут по умолчанию."
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если атрибут имеет значение по умолчанию для данного класса атрибутов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MergablePropertyAttribute.No
  id: No
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: No
  nameWithType: MergablePropertyAttribute.No
  fullName: System.ComponentModel.MergablePropertyAttribute.No
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Указывает, что свойство не может вместе со свойствами, принадлежащими к другим объектам в окне &quot;Свойства&quot;. Это <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> поле доступно только для чтения."
  remarks: "Если свойство помечено <xref:System.ComponentModel.MergablePropertyAttribute>значение `false`, этот атрибут имеет значение члену-константе номер</xref:System.ComponentModel.MergablePropertyAttribute> Таким образом Если вы хотите проверить, установлен ли атрибут в это значение в коде, необходимо указать атрибут как &quot;Нет&quot;."
  syntax:
    content: public static readonly System.ComponentModel.MergablePropertyAttribute No;
    return:
      type: System.ComponentModel.MergablePropertyAttribute
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.MergablePropertyAttribute.Yes
  id: Yes
  parent: System.ComponentModel.MergablePropertyAttribute
  langs:
  - csharp
  name: Yes
  nameWithType: MergablePropertyAttribute.Yes
  fullName: System.ComponentModel.MergablePropertyAttribute.Yes
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Указывает, что свойство может быть объединено со свойствами, принадлежащими к другим объектам в окне &quot;Свойства&quot;. Это <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> поле доступно только для чтения."
  remarks: "Это поле является значение по умолчанию для этого атрибута.       Если свойство помечено <xref:System.ComponentModel.MergablePropertyAttribute>значение `true`, этот атрибут имеет значение члену-константе Да.</xref:System.ComponentModel.MergablePropertyAttribute> Таким образом Если вы хотите проверить, установлен ли атрибут в это значение в коде, необходимо указать атрибут «Да»."
  syntax:
    content: public static readonly System.ComponentModel.MergablePropertyAttribute Yes;
    return:
      type: System.ComponentModel.MergablePropertyAttribute
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.MergablePropertyAttribute.#ctor(System.Boolean)
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: MergablePropertyAttribute(Boolean)
  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute(Boolean)
  fullName: System.ComponentModel.MergablePropertyAttribute.MergablePropertyAttribute(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: AllowMerge
  nameWithType: MergablePropertyAttribute.AllowMerge
  fullName: System.ComponentModel.MergablePropertyAttribute.AllowMerge
- uid: System.ComponentModel.MergablePropertyAttribute.Default
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: Default
  nameWithType: MergablePropertyAttribute.Default
  fullName: System.ComponentModel.MergablePropertyAttribute.Default
- uid: System.ComponentModel.MergablePropertyAttribute
  parent: System.ComponentModel
  isExternal: false
  name: MergablePropertyAttribute
  nameWithType: MergablePropertyAttribute
  fullName: System.ComponentModel.MergablePropertyAttribute
- uid: System.ComponentModel.MergablePropertyAttribute.Equals(System.Object)
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: MergablePropertyAttribute.Equals(Object)
  fullName: System.ComponentModel.MergablePropertyAttribute.Equals(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: MergablePropertyAttribute.GetHashCode()
  fullName: System.ComponentModel.MergablePropertyAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: MergablePropertyAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.MergablePropertyAttribute.No
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: No
  nameWithType: MergablePropertyAttribute.No
  fullName: System.ComponentModel.MergablePropertyAttribute.No
- uid: System.ComponentModel.MergablePropertyAttribute.Yes
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: Yes
  nameWithType: MergablePropertyAttribute.Yes
  fullName: System.ComponentModel.MergablePropertyAttribute.Yes
- uid: System.ComponentModel.MergablePropertyAttribute.#ctor*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: MergablePropertyAttribute
  nameWithType: MergablePropertyAttribute.MergablePropertyAttribute
- uid: System.ComponentModel.MergablePropertyAttribute.AllowMerge*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: AllowMerge
  nameWithType: MergablePropertyAttribute.AllowMerge
- uid: System.ComponentModel.MergablePropertyAttribute.Equals*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: Equals
  nameWithType: MergablePropertyAttribute.Equals
- uid: System.ComponentModel.MergablePropertyAttribute.GetHashCode*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: MergablePropertyAttribute.GetHashCode
- uid: System.ComponentModel.MergablePropertyAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.MergablePropertyAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: MergablePropertyAttribute.IsDefaultAttribute
