### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.LicFileLicenseProvider
  id: LicFileLicenseProvider
  children:
  - System.ComponentModel.LicFileLicenseProvider.#ctor
  - System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  - System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  - System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  langs:
  - csharp
  name: LicFileLicenseProvider
  nameWithType: LicFileLicenseProvider
  fullName: System.ComponentModel.LicFileLicenseProvider
  type: Class
  summary: "Предоставляет реализацию <xref href=&quot;System.ComponentModel.LicenseProvider&quot;> </xref>. Этот поставщик работает таким же образом для стандартной модели лицензирования Microsoft .NET Framework."
  remarks: "Предлагает LicFileLicenseProvider <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>и <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>методы.</xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> </xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>Метод определяет, является ли <xref:System.ComponentModel.License.LicenseKey%2A>извлекается с <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A>метод допустим.</xref:System.ComponentModel.LicFileLicenseProvider.GetLicense%2A> </xref:System.ComponentModel.License.LicenseKey%2A> </xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> При наследовании от этого класса можно переопределить <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>метод, чтобы предоставить свою собственную логику проверки.</xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>       Этот класс предназначен для поддержки функции, аналогичные лицензирования лицензирования COM и использует текстовые файлы лицензии.       Дополнительные сведения о лицензировании см. в разделе [как: лицензии компонентов и элементов управления](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates a licensed control using the <xref:System.ComponentModel.LicenseManager.Validate%2A> method. It uses LicFileLicenseProvider for the license manager.  \n  \n [!code-cs[Classic LicenseManager Example#1](~/add/codesnippet/csharp/t-system.componentmodel._155_1.cs)]\n [!code-vb[Classic LicenseManager Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._155_1.vb)]\n [!code-cpp[Classic LicenseManager Example#1](~/add/codesnippet/cpp/t-system.componentmodel._155_1.cpp)]"
  syntax:
    content: 'public class LicFileLicenseProvider : System.ComponentModel.LicenseProvider'
  inheritance:
  - System.Object
  - System.ComponentModel.LicenseProvider
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor
  id: '#ctor'
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: LicFileLicenseProvider()
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider()
  fullName: System.ComponentModel.LicFileLicenseProvider.LicFileLicenseProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Initializes a new instance of the <xref href=&quot;System.ComponentModel.LicFileLicenseProvider&quot;></xref> class."
  syntax:
    content: public LicFileLicenseProvider ();
    parameters: []
  overload: System.ComponentModel.LicFileLicenseProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  id: GetKey(System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: GetKey(Type)
  nameWithType: LicFileLicenseProvider.GetKey(Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetKey(Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает ключ для указанного типа."
  syntax:
    content: protected virtual string GetKey (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Тип объекта, для которого возвращается ключ."
    return:
      type: System.String
      description: "Подтверждение, <code> type </code> лицензирования для параметра."
  overload: System.ComponentModel.LicFileLicenseProvider.GetKey*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  id: GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: GetLicense(LicenseContext,Type,Object,Boolean)
  nameWithType: LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает лицензию для экземпляра компонента, если он доступен."
  remarks: "Во время разработки, метод GetLicense ищет файл лицензии с именем `myClassName.LIC`, где `myClassName` — <xref:System.Type.FullName%2A>для создания компонента.</xref:System.Type.FullName%2A> Этот файл должен быть в том же каталоге, как DLL-файл, который содержит компонент.       Затем этот метод проверяет первой строки файла лицензии на соответствие ключ, указанный в <xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A>метод.</xref:System.ComponentModel.LicFileLicenseProvider.IsKeyValid%2A> Если данный ключ является действительным, эта строка используется в качестве <xref:System.ComponentModel.License.LicenseKey%2A>.</xref:System.ComponentModel.License.LicenseKey%2A>"
  syntax:
    content: public override System.ComponentModel.License GetLicense (System.ComponentModel.LicenseContext context, Type type, object instance, bool allowExceptions);
    parameters:
    - id: context
      type: System.ComponentModel.LicenseContext
      description: "Объект <xref href=&quot;System.ComponentModel.LicenseContext&quot;> </xref> , указывающий, где можно использовать лицензированный объект."
    - id: type
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий компонент, запрашивающий лицензию <xref href=&quot;System.ComponentModel.License&quot;> </xref>.</xref:System.Type>"
    - id: instance
      type: System.Object
      description: "Объект, который запрашивает <xref href=&quot;System.ComponentModel.License&quot;> </xref>."
    - id: allowExceptions
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.ComponentModel.LicenseException&quot;> </xref> должно создаваться исключение, если компонент не может быть предоставлена лицензия; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.License
      description: "A valid <xref href=&quot;System.ComponentModel.License&quot;></xref>. Если этот метод не может найти допустимую <xref href=&quot;System.ComponentModel.License&quot;> </xref> или действительный <code> context </code> , она возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.LicFileLicenseProvider.GetLicense*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  id: IsKeyValid(System.String,System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  langs:
  - csharp
  name: IsKeyValid(String,Type)
  nameWithType: LicFileLicenseProvider.IsKeyValid(String,Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(String,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, является ли ключ, <xref:System.ComponentModel.LicFileLicenseProvider.GetLicense*>извлекает метод допустим для указанного типа.</xref:System.ComponentModel.LicFileLicenseProvider.GetLicense*>"
  remarks: 'Этот метод проверяет ключ для фразы: « `myClassName is a licensed component.` », где `myClassName` — <xref:System.Type.FullName%2A>компонента, который требуется создать.</xref:System.Type.FullName%2A>'
  syntax:
    content: protected virtual bool IsKeyValid (string key, Type type);
    parameters:
    - id: key
      type: System.String
      description: "<xref:System.ComponentModel.License.LicenseKey*>Для проверки.</xref:System.ComponentModel.License.LicenseKey*>"
    - id: type
      type: System.Type
      description: "Объект <xref:System.Type>, представляющий компонент, запрашивающий лицензию <xref href=&quot;System.ComponentModel.License&quot;> </xref>.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если ключ действителен <xref:System.ComponentModel.License.LicenseKey*>для указанного типа; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.License.LicenseKey*>"
  overload: System.ComponentModel.LicFileLicenseProvider.IsKeyValid*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.LicenseProvider
  isExternal: false
  name: System.ComponentModel.LicenseProvider
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: LicFileLicenseProvider()
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider()
  fullName: System.ComponentModel.LicFileLicenseProvider.LicFileLicenseProvider()
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey(System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetKey(Type)
  nameWithType: LicFileLicenseProvider.GetKey(Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetKey(Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense(System.ComponentModel.LicenseContext,System.Type,System.Object,System.Boolean)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetLicense(LicenseContext,Type,Object,Boolean)
  nameWithType: LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
  fullName: System.ComponentModel.LicFileLicenseProvider.GetLicense(LicenseContext,Type,Object,Boolean)
- uid: System.ComponentModel.License
  parent: System.ComponentModel
  isExternal: false
  name: License
  nameWithType: License
  fullName: System.ComponentModel.License
- uid: System.ComponentModel.LicenseContext
  parent: System.ComponentModel
  isExternal: false
  name: LicenseContext
  nameWithType: LicenseContext
  fullName: System.ComponentModel.LicenseContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(System.String,System.Type)
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: IsKeyValid(String,Type)
  nameWithType: LicFileLicenseProvider.IsKeyValid(String,Type)
  fullName: System.ComponentModel.LicFileLicenseProvider.IsKeyValid(String,Type)
- uid: System.ComponentModel.LicFileLicenseProvider.#ctor*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: LicFileLicenseProvider
  nameWithType: LicFileLicenseProvider.LicFileLicenseProvider
- uid: System.ComponentModel.LicFileLicenseProvider.GetKey*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetKey
  nameWithType: LicFileLicenseProvider.GetKey
- uid: System.ComponentModel.LicFileLicenseProvider.GetLicense*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: GetLicense
  nameWithType: LicFileLicenseProvider.GetLicense
- uid: System.ComponentModel.LicFileLicenseProvider.IsKeyValid*
  parent: System.ComponentModel.LicFileLicenseProvider
  isExternal: false
  name: IsKeyValid
  nameWithType: LicFileLicenseProvider.IsKeyValid
