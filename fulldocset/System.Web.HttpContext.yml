### YamlMime:ManagedReference
items:
- uid: System.Web.HttpContext
  id: HttpContext
  children:
  - System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  - System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  - System.Web.HttpContext.AddError(System.Exception)
  - System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  - System.Web.HttpContext.AllErrors
  - System.Web.HttpContext.AllowAsyncDuringSyncStages
  - System.Web.HttpContext.Application
  - System.Web.HttpContext.ApplicationInstance
  - System.Web.HttpContext.AsyncPreloadMode
  - System.Web.HttpContext.Cache
  - System.Web.HttpContext.ClearError
  - System.Web.HttpContext.Current
  - System.Web.HttpContext.CurrentHandler
  - System.Web.HttpContext.CurrentNotification
  - System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  - System.Web.HttpContext.Error
  - System.Web.HttpContext.GetAppConfig(System.String)
  - System.Web.HttpContext.GetConfig(System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetSection(System.String)
  - System.Web.HttpContext.Handler
  - System.Web.HttpContext.IsCustomErrorEnabled
  - System.Web.HttpContext.IsDebuggingEnabled
  - System.Web.HttpContext.IsPostNotification
  - System.Web.HttpContext.IsWebSocketRequest
  - System.Web.HttpContext.IsWebSocketRequestUpgrading
  - System.Web.HttpContext.Items
  - System.Web.HttpContext.PageInstrumentation
  - System.Web.HttpContext.PreviousHandler
  - System.Web.HttpContext.Profile
  - System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  - System.Web.HttpContext.Request
  - System.Web.HttpContext.Response
  - System.Web.HttpContext.RewritePath(System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  - System.Web.HttpContext.Server
  - System.Web.HttpContext.Session
  - System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  - System.Web.HttpContext.SkipAuthorization
  - System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  - System.Web.HttpContext.ThreadAbortOnTimeout
  - System.Web.HttpContext.Timestamp
  - System.Web.HttpContext.Trace
  - System.Web.HttpContext.User
  - System.Web.HttpContext.WebSocketNegotiatedProtocol
  - System.Web.HttpContext.WebSocketRequestedProtocols
  langs:
  - csharp
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
  type: Class
  summary: "Инкапсулирует все связанные с НТТР сведения об отдельном НТТР-запросе."
  remarks: "Классы, наследующие <xref:System.Web.IHttpModule>и <xref:System.Web.IHttpHandler>интерфейсы предоставляются ссылки на объект HttpContext для текущего HTTP-запроса.</xref:System.Web.IHttpHandler> </xref:System.Web.IHttpModule> Объект предоставляет доступ к встроенным <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>, и <xref:System.Web.HttpContext.Server%2A>Свойства запроса.</xref:System.Web.HttpContext.Server%2A> </xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpContext.Request%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192422).  \n  \n The following example demonstrates how to access and display properties of the HttpContext object. The context of the current HTTP request is accessed by using the <xref:System.Web.UI.Page.Context%2A> property of the <xref:System.Web.UI.Page> object.  \n  \n [!code-vb[System.Web.HttpContext#1](~/add/codesnippet/visualbasic/t-system.web.httpcontext_1.aspx)]\n [!code-cs[System.Web.HttpContext#1](~/add/codesnippet/csharp/t-system.web.httpcontext_1.aspx)]"
  syntax:
    content: 'public sealed class HttpContext : IServiceProvider'
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  id: '#ctor(System.Web.HttpWorkerRequest)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.HttpContext&quot;> </xref> класс, который использует указанный запрос рабочего объекта."
  syntax:
    content: public HttpContext (System.Web.HttpWorkerRequest wr);
    parameters:
    - id: wr
      type: System.Web.HttpWorkerRequest
      description: "<xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> Объект для текущего HTTP-запроса."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  id: '#ctor(System.Web.HttpRequest,System.Web.HttpResponse)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.HttpContext&quot;> </xref> , используя указанные объекты запроса и ответа."
  syntax:
    content: public HttpContext (System.Web.HttpRequest request, System.Web.HttpResponse response);
    parameters:
    - id: request
      type: System.Web.HttpRequest
      description: "<xref href=&quot;System.Web.HttpRequest&quot;> </xref> Объект для текущего HTTP-запроса."
    - id: response
      type: System.Web.HttpResponse
      description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref> Объект для текущего HTTP-запроса."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Принимает <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> запроса с помощью заданной пользовательской функции."
  remarks: "Вызов этого метода эквивалентен вызову <xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>перегрузка метода и передача `null` для `options` параметр.</xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>"
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "Пользовательская функция."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Запрос не <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> запроса."
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Принимает <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> запроса с помощью объекта функции и параметры указанного пользователя."
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "Пользовательская функция."
    - id: options
      type: System.Web.WebSockets.AspNetWebSocketOptions
      description: "Объект параметров."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Запрос не <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> запроса."
  platform:
  - net462
- uid: System.Web.HttpContext.AddError(System.Exception)
  id: AddError(System.Exception)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Добавляет исключение в коллекцию исключений для текущего HTTP-запроса."
  syntax:
    content: public void AddError (Exception errorInfo);
    parameters:
    - id: errorInfo
      type: System.Exception
      description: "<xref:System.Exception>Для добавления в коллекцию исключений.</xref:System.Exception>"
  overload: System.Web.HttpContext.AddError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  id: AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Создает виртуальное событие, возникающее при завершении HTTP часть запроса."
  remarks: "Это событие возникает перед <xref:System.Web.WebSockets.AspNetWebSocket>начнется.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public System.Web.ISubscriptionToken AddOnRequestCompleted (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "Объект контекста HTTP."
    return:
      type: System.Web.ISubscriptionToken
      description: "Токен подписки."
  overload: System.Web.HttpContext.AddOnRequestCompleted*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>callback</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AllErrors
  id: AllErrors
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает массив ошибок, накопившихся в ходе обработки HTTP-запроса."
  syntax:
    content: public Exception[] AllErrors { get; }
    return:
      type: System.Exception[]
      description: "Массив <xref:System.Exception>объекты для текущего HTTP-запроса.</xref:System.Exception>"
  overload: System.Web.HttpContext.AllErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  id: AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, указывающее, разрешены ли асинхронные операции во время обработки запроса ASP.NET, когда они не ожидаются."
  remarks: "Если этот флаг не установлен `true`, ASP.NET будет вызывать исключение при обнаружении неправильного использования асинхронных API приложения. Это может произойти при попытке вызвать асинхронный метод на этапе выполнения запроса конвейер обработки, где асинхронные операции не ожидается, или если по-прежнему невыполненные асинхронной операции при асинхронной модуль или обработчик уведомляет о завершении. Это поведение предназначен как средство подстраховки, уведомляющее на раннем этапе при написании асинхронного кода, который не умещается предполагается шаблонов и может иметь отрицательное побочные эффекты."
  syntax:
    content: public bool AllowAsyncDuringSyncStages { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Если платформа ASP.NET создает исключение, когда асинхронный интерфейс API используется во время, когда не ожидается; в противном случае <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Application
  id: Application
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> объект для текущего HTTP-запроса."
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "<xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> Для текущего HTTP-запроса.       Для получения <xref href=&quot;System.Web.HttpApplication&quot;> </xref> для текущего HTTP-запроса, используйте <xref:System.Web.HttpContext.ApplicationInstance*>.</xref:System.Web.HttpContext.ApplicationInstance*> (ASP.NET использует <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> вместо <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> как имя свойства для ссылки на текущий <xref href=&quot;System.Web.HttpApplication&quot;> </xref> экземпляра позволяет избежать путаницы между ASP.NET и классической платформой ASP. В классической платформе ASP <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> относится к глобальному словарю состояний приложения.)"
  overload: System.Web.HttpContext.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ApplicationInstance
  id: ApplicationInstance
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает <xref href=&quot;System.Web.HttpApplication&quot;> </xref> объект для текущего HTTP-запроса."
  syntax:
    content: public System.Web.HttpApplication ApplicationInstance { get; set; }
    return:
      type: System.Web.HttpApplication
      description: "<xref href=&quot;System.Web.HttpApplication&quot;> </xref> Для текущего HTTP-запроса.       ASP.NET использует <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> вместо <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> как имя свойства для ссылки на текущий <xref href=&quot;System.Web.HttpApplication&quot;> </xref> экземпляра позволяет избежать путаницы между ASP.NET и классической платформой ASP. В классической платформе ASP <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> относится к глобальному словарю состояний приложения."
  overload: System.Web.HttpContext.ApplicationInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Веб-приложение работает под управлением IIS 7.0 в интегрированном режиме, и была предпринята попытка изменить значение свойства из ненулевое значение для <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AsyncPreloadMode
  id: AsyncPreloadMode
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает объект, содержащий флаги, которые относятся к асинхронному режиму предварительной загрузки."
  remarks: "Первый раз, доступ к этому свойству объект, содержащий флаги для асинхронному режиму предварительной загрузки загружается из <xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>в файле конфигурации.</xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>       Несмотря на то, что это свойство можно задать программно, изменив значение свойства действует только если свойство имеет значение перед `ExecuteRequestHandler` шага в конвейер запросов ASP.NET."
  syntax:
    content: public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }
    return:
      type: System.Web.Configuration.AsyncPreloadModeFlags
      description: "Объект, содержащий флаги, которые относятся к асинхронному режиму предварительной загрузки."
  overload: System.Web.HttpContext.AsyncPreloadMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Cache
  id: Cache
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> объект для текущего домена приложения."
  remarks: "Имеется один экземпляр <xref:System.Web.Caching.Cache>Класс домена приложения.</xref:System.Web.Caching.Cache> В результате <xref:System.Web.Caching.Cache>данный объект, возвращаемый свойством кэша <xref:System.Web.Caching.Cache>объекта для всех запросов в домене приложения.</xref:System.Web.Caching.Cache> </xref:System.Web.Caching.Cache>"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "<xref href=&quot;System.Web.Caching.Cache&quot;> </xref> Для текущего домена приложения."
  overload: System.Web.HttpContext.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ClearError
  id: ClearError
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Удаляет все ошибки текущего HTTP-запроса."
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpContext.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Current
  id: Current
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает <xref href=&quot;System.Web.HttpContext&quot;> </xref> объект для текущего HTTP-запроса."
  remarks: "Это свойство имеет статическое свойство <xref:System.Web.HttpContext>класса.</xref:System.Web.HttpContext> Свойства хранилищ <xref:System.Web.HttpContext>экземпляр, который применяется для текущего запроса.</xref:System.Web.HttpContext> Свойства данного экземпляра являются не статическими свойствами <xref:System.Web.HttpContext>класса.</xref:System.Web.HttpContext>       Можно также использовать <xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>свойство для доступа к <xref:System.Web.HttpContext>объект для текущего HTTP-запроса.</xref:System.Web.HttpContext> </xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the Current property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.  \n  \n```c#  \nprotected void Page_Load(object sender, EventArgs e)  \n{  \n    HttpContext context = HttpContext.Current;  \n    Response.Write(\"<p>HttpContext.Current Example:</p>\");  \n  \n    // Add three custom exceptions.  \n    context.AddError(new Exception(\"New Exception #1\"));  \n    context.AddError(new Exception(\"New Exception #2\"));  \n    context.AddError(new Exception(\"New Exception #3\"));  \n  \n    // Capture all the new Exceptions in an array.  \n    Exception[] errs = context.AllErrors;  \n  \n    foreach (Exception ex in errs)  \n    {  \n        Response.Write(\"<p>\" + Server.HtmlEncode(ex.ToString()) + \"</p>\");  \n    }  \n  \n    // Clear the exceptions so ASP.NET won't handle them.  \n    context.ClearError();  \n}  \n```  \n  \n```vb  \nProtected Sub Page_Load(sender As Object, e As EventArgs)  \nDim context As HttpContext = HttpContext.Current  \nResponse.Write(\"<p>HttpContext.Current Example:</p>\")  \n  \n' Add three custom exceptions.  \ncontext.AddError(New Exception(\"New Exception #1\"))  \ncontext.AddError(New Exception(\"New Exception #2\"))  \ncontext.AddError(New Exception(\"New Exception #3\"))  \n  \n' Capture all the new Exceptions in an array.  \nDim errs As Exception() = context.AllErrors  \n  \nFor Each ex As Exception In errs  \nResponse.Write(\"<p>\" & Server.HtmlEncode(ex.ToString()) & \"</p>\")  \nNext  \n  \n' Clear the exceptions so ASP.NET won't handle them.  \ncontext.ClearError()  \nEnd Sub  \n  \n```"
  syntax:
    content: public static System.Web.HttpContext Current { get; set; }
    return:
      type: System.Web.HttpContext
      description: "<xref href=&quot;System.Web.HttpContext&quot;> </xref> Экземпляра для текущего HTTP-запроса."
  overload: System.Web.HttpContext.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentHandler
  id: CurrentHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> , представляющий выполняться в данный момент обработчик."
  remarks: "Обработчик выполняться в данный момент, на который ссылается свойство CurrentHandler может отличаться от обработчика, на который ссылается <xref:System.Web.HttpContext.Handler%2A>свойство.</xref:System.Web.HttpContext.Handler%2A> Это может произойти при запросе с помощью другой обработчик <xref:System.Web.HttpServerUtility.Execute%2A>метода или <xref:System.Web.HttpServerUtility.Transfer%2A>метод.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> Когда выполняться в данный момент обработчик завершает обработку, ранее определенный обработчик восстанавливается."
  syntax:
    content: public System.Web.IHttpHandler CurrentHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref> , Представляющий выполняться в данный момент обработчик."
  overload: System.Web.HttpContext.CurrentHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentNotification
  id: CurrentNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.RequestNotification&quot;> </xref> значение, указывающее на текущее <xref href=&quot;System.Web.HttpApplication&quot;> </xref> , обрабатывающий событие."
  remarks: "Свойство CurrentNotification требуется режим интегрированного конвейера в [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] и по крайней мере .NET Framework версии 3.0. Если она доступна, свойство возвращает <xref:System.Web.RequestNotification>значение.</xref:System.Web.RequestNotification> Значение свойства CurrentNotification указывает, какое событие в <xref:System.Web.HttpApplication>экземпляр в данный момент обрабатывает запрос.</xref:System.Web.HttpApplication>       Свойство CurrentNotification не планируется задать. Вместо этого задается путем [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] во время обработки запроса в конвейере ASP.NET. Задание свойства CurrentNotification приведет к ошибке компиляции.       CurrentNotification впервые появился в платформе .NET Framework версии 3.5.  Дополнительные сведения см. в разделе [версии и зависимости](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the CurrentNotification property to determine what event of the <xref:System.Web.HttpApplication> object that is handling the current request is being processed. In the example, the event handler handles several events of the <xref:System.Web.HttpApplication> object, and the CurrentNotification property determines what code is invoked for each event being handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_0_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_0_1.vb)]"
  syntax:
    content: public System.Web.RequestNotification CurrentNotification { get; }
    return:
      type: System.Web.RequestNotification
      description: "Один из <xref href=&quot;System.Web.RequestNotification&quot;> </xref> значения."
  overload: System.Web.HttpContext.CurrentNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Для этой операции требуется режим интегрированного конвейера в [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] и по крайней мере .NET Framework версии 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  id: DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Позволяет объекту <xref:System.IDisposable.Dispose*>метод, вызываемый при <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> завершении части соединения данного запроса.</xref:System.IDisposable.Dispose*>"
  remarks: "<xref:System.IDisposable.Dispose%2A>Целевого объекта вызывается после части HTTP запроса и <xref:System.Web.WebSockets.AspNetWebSocket>завершил подключение.</xref:System.Web.WebSockets.AspNetWebSocket> </xref:System.IDisposable.Dispose%2A> <xref:System.Web.HttpContext>Объект недоступен для проверки.</xref:System.Web.HttpContext>"
  syntax:
    content: public System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);
    parameters:
    - id: target
      type: System.IDisposable
      description: "Объект, <xref:System.IDisposable.Dispose*>метод должен вызываться при <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> завершении части соединения запроса.</xref:System.IDisposable.Dispose*>"
    return:
      type: System.Web.ISubscriptionToken
      description: "Токен подписки."
  overload: System.Web.HttpContext.DisposeOnPipelineCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Error
  id: Error
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает первую ошибку (если таковые имеются), возникшую во время HTTP обработки запроса."
  syntax:
    content: public Exception Error { get; }
    return:
      type: System.Exception
      description: "Первый <xref:System.Exception>для текущего HTTP-запроса или ответа процесса, в противном случае — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если ошибки не были накоплены во время обработки HTTP-запроса.</xref:System.Exception> Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  id: GetAppConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает запрашиваемые сведения о конфигурации для текущего приложения."
  remarks: "Метод GetAppConfig является устаревшим. Используйте <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>метод <xref:System.Web.Configuration.WebConfigurationManager>класса, чтобы получить сведения о конфигурации для текущего приложения.</xref:System.Web.Configuration.WebConfigurationManager> </xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>"
  syntax:
    content: public static object GetAppConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "Тег конфигурации приложения, для которого запрашиваются сведения."
    return:
      type: System.Object
      description: "Объект, содержащий сведения о конфигурации. (Приводит возвращаемый раздел конфигурации для по соответствующему типу конфигурации перед использованием)."
  overload: System.Web.HttpContext.GetAppConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetConfig(System.String)
  id: GetConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает запрашиваемые сведения о конфигурации для текущего HTTP-запроса."
  remarks: "Метод GetConfig является устаревшим. Используйте <xref:System.Web.HttpContext.GetSection%2A>метод, чтобы получить сведения о конфигурации для текущего HTTP-запроса.</xref:System.Web.HttpContext.GetSection%2A>"
  syntax:
    content: public object GetConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "Тег конфигурации, для которого запрашиваются сведения."
    return:
      type: System.Object
      description: "Указанный <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если раздел не существует, или внутренний объект, если раздел не доступен во время выполнения. (Привести возвращенный объект по соответствующему типу конфигурации перед использованием)."
  overload: System.Web.HttpContext.GetConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  id: GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает объект ресурса на уровне приложения на основе указанных <> </> *настроек и <> </> *настроек свойств."
  remarks: "Метод GetGlobalResourceObject возвращает глобальных ресурсов с помощью языка и региональных параметров, который указан в <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>свойство.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>      Настроек [!NOTE] настроек в некоторых редактирования средах, таких как [!INCLUDE[vwprvw](~/add/includes/vwprvw-md.md)], редактор может вызывать во время разработки <xref:System.Resources.MissingManifestResourceException>исключение, если используется точка (.) в глобальном имени ключа ресурса.</xref:System.Resources.MissingManifestResourceException> Однако это не влияет на возможность изменения и сохранения файла и ошибку можно игнорировать."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey);
    parameters:
    - id: classKey
      type: System.String
      description: "Строка, представляющая <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>свойство запрошенного объекта ресурса.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "Строка, представляющая <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>свойство запрошенного объекта ресурса.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий объект запрошенного ресурса на уровне приложений; в противном случае — значение null, если объект ресурса не найден или если найден подходящий объект ресурса, но он не поддерживает запрошенное свойство.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object with the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает объект ресурса на уровне приложения на основе указанных <> </> *настроек и <> </> *настроек свойств, а затем на <xref:System.Globalization.CultureInfo>объекта.</xref:System.Globalization.CultureInfo>"
  remarks: "<xref:System.Globalization.CultureInfo>Представляет язык и региональные параметры, для которого ресурс локализован.</xref:System.Globalization.CultureInfo> Если ресурс не локализован для этого языка и региональных параметров, поиска будет располагаться резервного процесса для определения подходящего ресурса. Дополнительные сведения см. в разделе [упаковка и развертывание ресурсов](~/add/includes/ajax-current-ext-md.md).      Настроек [!NOTE] настроек в некоторых средах редактирования, например Visual Web Developer, редактор может вызывать во время разработки <xref:System.Resources.MissingManifestResourceException>исключение, если используется точка (.) в глобальном имени ключа ресурса.</xref:System.Resources.MissingManifestResourceException> Однако это не влияет на возможность изменения и сохранения файла и ошибку можно игнорировать."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: classKey
      type: System.String
      description: "Строка, представляющая <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>свойство запрошенного объекта ресурса.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "Строка, представляющая <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>свойство запрошенного объекта ресурса.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Строка, представляющая <xref:System.Globalization.CultureInfo>объект запрошенного ресурса.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий объект запрошенного ресурса на уровне приложения, который локализован для указанного языка и региональных параметров; в противном случае, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если подходящий объект ресурса не найден или если найден подходящий объект ресурса, но не имеет запрашиваемого свойства.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object for which the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  id: GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает объект ресурса на уровне страницы на основании указанного <> </> *настроек и <> </> *настроек свойств."
  remarks: "Метод GetLocalResourceObject Возвращает локальный ресурс с помощью языка и региональных параметров, который указан в <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>свойство.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>"
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey);
    parameters:
    - id: virtualPath
      type: System.String
      description: "<xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>Свойство для локального объекта ресурса.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "Строка, представляющая <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>свойство запрошенного объекта ресурса</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий объект запрошенного ресурса на уровне страницы; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если найден подходящий объект ресурса, но не <code> resourceKey </code> параметр.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "Объект ресурса не найден для указанного <code> virtualPath </code> параметра."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Указанный <code> virtualPath </code> параметр не находится в корневом каталоге текущего приложения."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Класс ресурсов для страницы не найден."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает объект ресурса на уровне страницы на основании указанного <> </> *настроек и <> </> *настроек свойств, а затем на <xref:System.Globalization.CultureInfo>объекта.</xref:System.Globalization.CultureInfo>"
  remarks: "Если ресурс не локализован для этого языка и региональных параметров, поиска будет располагаться резервного процесса для определения подходящего ресурса. Дополнительные сведения см. в разделе [упаковка и развертывание ресурсов](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: virtualPath
      type: System.String
      description: "<xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>Свойство для локального объекта ресурса.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "Строка, представляющая <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>свойство запрошенного объекта ресурса.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Строка, представляющая <xref:System.Globalization.CultureInfo>объекта запрошенного объекта ресурса.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "<xref:System.Object>, Представляющий запрошенный локального объекта ресурса, локализованного для указанного языка и региональных параметров; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если найден подходящий объект ресурса, но не <code> resourceKey </code> параметр.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "Объект ресурса не найден для указанного <code> virtualPath </code> параметра."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Указанный <code> virtualPath </code> параметр не находится в корневом каталоге текущего приложения."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Класс ресурсов для страницы не найден."
  platform:
  - net462
- uid: System.Web.HttpContext.GetSection(System.String)
  id: GetSection(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает указанный раздел конфигурации для конфигурации текущего приложения по умолчанию."
  syntax:
    content: public object GetSection (string sectionName);
    parameters:
    - id: sectionName
      type: System.String
      description: "Путь к разделу конфигурации (в формате XPath) и имя элемента конфигурации."
    return:
      type: System.Object
      description: "Указанный <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если раздел не существует, или внутренний объект, если раздел не доступен во время выполнения."
  overload: System.Web.HttpContext.GetSection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Handler
  id: Handler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> объект, отвечающий за обработку HTTP-запроса."
  remarks: "Свойство обработчика содержит ссылку на обработчик, который обрабатывает HTTP-запроса. Обработчик можно указать с помощью элемента или с помощью пользовательского обработчика, определенного в коде пользователя. Дополнительные сведения об обработчиках см. в разделе [обработчики HTTP-данных и общие сведения о модулях HTTP](~/add/includes/ajax-current-ext-md.md).       Ссылку на свойство обработчика не изменится даже после текущей страницы был изменен серверного метода, такие как <xref:System.Web.HttpServerUtility.Execute%2A>метода или <xref:System.Web.HttpServerUtility.Transfer%2A>метод.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A>"
  syntax:
    content: public System.Web.IHttpHandler Handler { get; set; }
    return:
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref> Отвечает за обработку HTTP-запроса."
  overload: System.Web.HttpContext.Handler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  id: IsCustomErrorEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает значение, указывающее, включены ли пользовательские ошибки для текущего HTTP-запроса."
  syntax:
    content: public bool IsCustomErrorEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если настраиваемые ошибки включены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsCustomErrorEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsDebuggingEnabled
  id: IsDebuggingEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает значение, указывающее, является ли текущий HTTP-запрос в режиме отладки."
  syntax:
    content: public bool IsDebuggingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если запрос выполняется в режиме отладки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsDebuggingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsPostNotification
  id: IsPostNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает значение, представляющее текущую точку обработки в ASP.NET конвейер сразу после <xref href=&quot;System.Web.HttpApplication&quot;> </xref> завершения обработки события."
  remarks: "Свойство IsPostNotification поддерживается только в интегрированном режиме [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] и по крайней мере .NET Framework 3.0. Если она доступна, свойство возвращает логическое значение, указывающее, является ли событие в <xref:System.Web.HttpApplication>завершает обработку.</xref:System.Web.HttpApplication>       Свойство IsPostNotification не планируется задать. Вместо этого она предоставляется [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] для среды выполнения ASP.NET для каждого уведомления. Задание свойства IsPostNotification приведет к ошибке компиляции.       В сценариях, где несколько событий <xref:System.Web.HttpApplication>объекта обрабатываются один обработчик событий, можно использовать свойство IsPostNotification в сочетании с <xref:System.Web.RequestNotification>перечисления точно определить, где в жизненном цикле приложения текущий запрос о-ва</xref:System.Web.RequestNotification> </xref:System.Web.HttpApplication>       IsPostNotification впервые появился в платформе .NET Framework версии 3.5.  Дополнительные сведения см. в разделе [версии и зависимости](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the IsPostNotification property to determine when an event of the <xref:System.Web.HttpApplication> object has finished processing all the associated event handlers. The custom event handler in this example handles several events of the <xref:System.Web.HttpApplication> object, and the IsPostNotification property is used to determine what code is invoked after a specific event is handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_2_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_2_1.vb)]"
  syntax:
    content: public bool IsPostNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если настраиваемые ошибки включены; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsPostNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Этой операции требуется режим интегрированного конвейера в [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] и по крайней мере .NET Framework 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает значение, указывающее, является ли запрос <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> запроса."
  remarks: "Этот метод возвращает `true` Если запрос содержит начальные <xref:System.Web.WebSockets.AspNetWebSocket>подтверждения и `WebSocket` модуль служб IIS является активным.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если запрос является <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> запроса; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  id: IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает значение, указывающее, обновляется ли HTTP-соединение до <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> соединения."
  syntax:
    content: public bool IsWebSocketRequestUpgrading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если соединение обновляется; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Items
  id: Items
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает коллекцию ключей и значений, которую можно использовать для систематизации и обмена данными между <xref href=&quot;System.Web.IHttpModule&quot;> </xref> интерфейс и <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> во время выполнения HTTP-запроса."
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "<xref:System.Collections.IDictionary>Ключей и значений, предоставляющая доступ к отдельным значениям в коллекции с указанным ключом.</xref:System.Collections.IDictionary>"
  overload: System.Web.HttpContext.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PageInstrumentation
  id: PageInstrumentation
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает ссылку на экземпляр службы инструментирования страниц для данного запроса."
  syntax:
    content: public System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }
    return:
      type: System.Web.Instrumentation.PageInstrumentationService
      description: "Экземпляр службы инструментирования страниц для данного запроса."
  overload: System.Web.HttpContext.PageInstrumentation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PreviousHandler
  id: PreviousHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> объекта для родительского обработчика."
  remarks: "Свойство PreviousHandler соответствует последнему обработчика до выполнения текущего запроса."
  syntax:
    content: public System.Web.IHttpHandler PreviousHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "<xref href=&quot;System.Web.IHttpHandler&quot;> </xref> Экземпляра, или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если предыдущий обработчик не найден."
  overload: System.Web.HttpContext.PreviousHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Profile
  id: Profile
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> объект для текущего профиля пользователя."
  remarks: "Свойство профиля используется для постоянного хранения структурированных данных с помощью API типобезопасным. При доступе к свойству профиля, но не будет присутствовать, возвращается пустой экземпляр; `null` не возвращается."
  syntax:
    content: public System.Web.Profile.ProfileBase Profile { get; }
    return:
      type: System.Web.Profile.ProfileBase
      description: "Объект <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> Если файл конфигурации приложения содержит определение для свойств профиля; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.Profile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  id: RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Позволяет указать обработчик запроса."
  remarks: "Если задать `handler` для `null`, обработчик по умолчанию используется для обработки запроса. Можно задать `handler` обработчик синхронный или асинхронный обработчик. Необходимо реализовать обработчик <xref:System.Web.IHttpHandler>интерфейса.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public void RemapHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "Объект, который обрабатывает запрос."
  overload: System.Web.HttpContext.RemapHandler*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "После вызова метода RemapHandler <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> произошло событие."
  platform:
  - net462
- uid: System.Web.HttpContext.Request
  id: Request
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.HttpRequest&quot;> </xref> объект для текущего HTTP-запроса."
  remarks: "Свойство Request предоставляет программный доступ к свойствам и методам <xref:System.Web.HttpRequest>класса.</xref:System.Web.HttpRequest> Так как страницы ASP.NET содержат ссылки по умолчанию <xref:System.Web>пространства имен (содержащий <xref:System.Web.HttpContext>класса), можно ссылаться на элементы <xref:System.Web.HttpRequest>на странице ASPX без использования полного имени класса ссылку <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpRequest> </xref:System.Web.HttpContext> </xref:System.Web> Например, можно использовать `Request.Browser` для получения возможностей клиентского браузера. Тем не менее если вы хотите использовать члены <xref:System.Web.HttpRequest>с выделенным кодом ASP.NET, необходимо включить ссылку на <xref:System.Web>имен в модуль и полные ссылки на контекст текущего активного запроса или ответа и класс в <xref:System.Web>, которую требуется использовать.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpRequest> Например, на странице кода необходимо указать полное доменное имя `HttpContext.Current.Request.Browser`.      Настроек [!NOTE] настроек ASP.NET будет вызывать исключение при попытке использовать это свойство при <xref:System.Web.HttpRequest>объект недоступен.</xref:System.Web.HttpRequest> Например это будет значение true в методе Application_Start файл Global.asax, или в методе, который вызывается из метода Application_Start. В это время HTTP-запрос еще была создана."
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "<xref href=&quot;System.Web.HttpRequest&quot;> </xref> Для текущего HTTP-запроса."
  overload: System.Web.HttpContext.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Веб-приложение работает под управлением IIS 7 в интегрированном режиме."
  platform:
  - net462
- uid: System.Web.HttpContext.Response
  id: Response
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.HttpResponse&quot;> </xref> объект для текущего HTTP-ответа."
  remarks: "Свойство Response обеспечивает программный доступ к свойствам и методам <xref:System.Web.HttpResponse>класса.</xref:System.Web.HttpResponse> Так как страницы ASP.NET содержат ссылки по умолчанию <xref:System.Web>пространства имен (содержащий <xref:System.Web.HttpContext>класса), можно ссылаться на элементы <xref:System.Web.HttpContext>на странице ASPX без использования полного имени класса ссылку <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Например, можно использовать `Response.Write(&quot;some output&quot;)` для записи выходных данных в поток вывода НТТР. Тем не менее если вы хотите использовать члены <xref:System.Web.HttpResponse>с выделенным кодом ASP.NET, необходимо включить ссылку на <xref:System.Web>имен в модуль и полные ссылки на контекст текущего активного запроса или ответа и класс в <xref:System.Web>, которую требуется использовать.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpResponse> Например, на странице кода необходимо указать полное доменное имя `HttpContext.Current.Response.Write(&quot;some output&quot;)`."
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "<xref href=&quot;System.Web.HttpResponse&quot;> </xref> Для текущего HTTP-ответа."
  overload: System.Web.HttpContext.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Веб-приложение работает под управлением IIS 7 в интегрированном режиме."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String)
  id: RewritePath(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перезаписывает URL-адрес, используя заданный путь."
  remarks: "Метод RewritePath перенаправляет запрос ресурса пути, отличному от указанного запрошенного URL-адреса. При наличии для сброса виртуального пути, чтобы правильно обработать запросы от клиента к ресурсам сервера, используйте перегрузку этого метода, принимающего `rebaseClientPath` параметр и задать для параметра `false`.       Переписывание URL-адресов полезно в том случае, если вы хотите изменить структуру страниц в веб-приложении, и вы хотели бы убедиться, люди, которые добавили старые URL-адреса можно по-прежнему использовать их после перемещения страниц. Переписывание URL-адресов позволяет прозрачно перенаправлять запросы на новое расположение страницы.       Если требуется, чтобы сайт мог использовать URL-адреса, которые более понятны и оптимизированы поисковых, более надежна, чем является использование маршрутизации ASP.NET. Дополнительные сведения см. в разделе [маршрутизация ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use the RewritePath method to enable a Web site to respond to URLs that do not reflect the file structure in the Web site. The first block of code is an ASP.NET Web page that is named RewritePath.aspx. It requires a query string. If the name of your site is WebSite1, the URL `http://localhost/WebSite1/RewritePath.aspx?page=1` displays \"Page 1\" in the browser. The block of code that follows the Web page is the `Application_BeginRequest` event handler in the Global.asax file. This code intercepts requests for URLs such as `http://localhost/WebSite1/page1` and converts them to the form that is required for RewritePath.aspx before they are processed. Therefore, the URL `http://localhost/WebSite1/page1` invokes RewritePath.aspx with the query-string parameter that displays \"Page 1\" in the browser. If a URL such as `http://localhost/WebSite1/page1` is received, an overload of RewritePath is invoked that enables you to provide a value for the <xref:System.Web.HttpRequest.PathInfo%2A> property as well as a query string parameter.  \n  \n [!code-cs[HttpContext_RewritePath#2](~/add/codesnippet/csharp/m-system.web.httpcontext_1.aspx)]\n [!code-vb[HttpContext_RewritePath#2](~/add/codesnippet/visualbasic/m-system.web.httpcontext_1.aspx)]  \n  \n [!code-vb[HttpContext_RewritePath#1](~/add/codesnippet/visualbasic/m-system.web.httpcontext_2.asax)]\n [!code-cs[HttpContext_RewritePath#1](~/add/codesnippet/csharp/m-system.web.httpcontext_2.asax)]"
  syntax:
    content: public void RewritePath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Внутренний путь перезаписи."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> path </code> Параметр не находится в корневом каталоге текущего приложения."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  id: RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перезаписывает URL-адрес, используя заданный путь и логическое значение, указывающее, был ли изменен виртуальный путь к ресурсам сервера."
  remarks: "Метод RewritePath вызывается <xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName>метод с `rebaseClientPath` равным `true`.</xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName> Чтобы убедиться, что виртуальный путь, который используется для создания путей к ресурсам, не изменен, задайте `rebaseClientPath` параметр `false`. Типичный сценарий, в котором может потребоваться задать `rebaseClientPath` для `false` когда необходимо перезаписать URL-адрес, а также при применении темы, а перенаправление URL-адрес для ресурса, расположенного в папку, отличную от запрошенного ресурса.       Переписывание URL-адресов полезно в том случае, если вы хотите изменить структуру страниц в веб-приложении, и вы хотели бы убедиться, люди, которые добавили старые URL-адреса можно по-прежнему использовать их после перемещения страниц. Переписывание URL-адресов позволяет прозрачно перенаправлять запросы на новое расположение страницы.       Если требуется, чтобы сайт мог использовать URL-адреса, которые более понятны и оптимизированы поисковых, более надежна, чем является использование маршрутизации ASP.NET. Дополнительные сведения см. в разделе [маршрутизация ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string path, bool rebaseClientPath);
    parameters:
    - id: path
      type: System.String
      description: "Внутренний путь перезаписи."
    - id: rebaseClientPath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для сброса виртуального пути; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для сохранения виртуального пути без изменений."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> path </code> Параметр не находится в корневом каталоге текущего приложения."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  id: RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перезаписывает URL-адрес, используя заданный путь, сведения о пути и данные строки запроса."
  remarks: "Метод RewritePath перенаправляет запрос ресурса на другой ресурс без изменения URL-адрес.       `filePath` Параметр включает в себя `pathInfo` содержимое параметра. Для http://www.microsoft.com/virdir/page.html/tail URL-адрес `filePath` параметр является http://www.microsoft.com/virdir/page.html и `pathInfo` параметр является префиксом tail.       Переписывание URL-адресов полезно в том случае, если вы хотите изменить структуру страниц в веб-приложении, и вы хотели бы убедиться, люди, которые добавили старые URL-адреса можно по-прежнему использовать их после перемещения страниц. Переписывание URL-адресов позволяет прозрачно перенаправлять запросы на новое расположение страницы.       Если требуется, чтобы сайт мог использовать URL-адреса, которые более понятны и оптимизированы поисковых, более надежна, чем является использование маршрутизации ASP.NET. Дополнительные сведения см. в разделе [маршрутизация ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, including an example of this method overload, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString);
    parameters:
    - id: filePath
      type: System.String
      description: "Внутренний путь перезаписи."
    - id: pathInfo
      type: System.String
      description: "Дополнительные сведения о пути для ресурса. Дополнительные сведения см. в разделе <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*>"
    - id: queryString
      type: System.String
      description: "Строка запроса."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> path </code> Параметр не находится в корневом каталоге текущего приложения."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> filePath </code> Параметр не находится в корневом каталоге текущего приложения."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  id: RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Перезаписывает URL-адрес, используя заданный виртуальный путь, сведения о пути, данные строки запроса и логическое значение, указывающее, равно ли путь к файлу клиента путь перезаписи."
  remarks: "`filePath` Параметр включает в себя содержимое `pathInfo` параметра. Для http://www.microsoft.com/virdir/page.html/tail URL-адрес `filePath` параметр является http://www.microsoft.com/virdir/page.html и `pathInfo` параметр является префиксом tail.       Чтобы убедиться, что виртуальный путь, который используется для создания путей к ресурсам, не изменен, задайте `setClientFilePath` параметр `false`. Типичный сценарий, в котором может потребоваться задать `setClientFilePath` для `false` когда необходимо перезаписать URL-адрес, а также при применении темы, а перенаправление URL-адрес для ресурса, расположенного в папку, отличную от запрошенного ресурса.       Переписывание URL-адресов полезно в том случае, если вы хотите изменить структуру страниц в веб-приложении, и вы хотели бы убедиться, люди, которые добавили старые URL-адреса можно по-прежнему использовать их после перемещения страниц. Переписывание URL-адресов позволяет прозрачно перенаправлять запросы на новое расположение страницы.       Если требуется, чтобы сайт мог использовать URL-адреса, которые более понятны и оптимизированы поисковых, более надежна, чем является использование маршрутизации ASP.NET. Дополнительные сведения см. в разделе [маршрутизация ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);
    parameters:
    - id: filePath
      type: System.String
      description: "Виртуальный путь к ресурсу, обслуживающему запрос."
    - id: pathInfo
      type: System.String
      description: "Дополнительные сведения о пути для перенаправления URL-адреса. Дополнительные сведения см. в разделе <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*>"
    - id: queryString
      type: System.String
      description: "Строка запроса для перенаправления URL-адреса."
    - id: setClientFilePath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Чтобы задать путь к файлу, используемому для ресурсов клиента значение `filePath` параметр; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code> path </code> Параметр не находится в корневом каталоге текущего приложения."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code> filePath </code> Параметр не находится в корневом каталоге текущего приложения."
  platform:
  - net462
- uid: System.Web.HttpContext.Server
  id: Server
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> объект, предоставляющий методы, используемые при обработке веб-запросов."
  remarks: "Свойство сервера обеспечивает программный доступ к свойствам и методам <xref:System.Web.HttpServerUtility>класса.</xref:System.Web.HttpServerUtility> Так как страницы ASP.NET содержат ссылки по умолчанию <xref:System.Web>пространства имен (содержащий <xref:System.Web.HttpContext>класса), можно ссылаться на элементы <xref:System.Web.HttpContext>на странице ASPX без использования полного имени класса ссылку <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Например, можно использовать `Server.CreateObject(&quot;MyCOMComponent&quot;)` для создания экземпляра COM-объекта на сервере. Тем не менее если вы хотите использовать члены <xref:System.Web.HttpServerUtility>с выделенным кодом ASP.NET, необходимо включить ссылку на <xref:System.Web>имен в модуль и полные ссылки на контекст текущего активного запроса или ответа и класс в <xref:System.Web>, которую требуется использовать.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpServerUtility> Например, на странице кода необходимо указать полное доменное имя `HttpContext.Current.Server.CreateObject(&quot;MyCOMComponent&quot;)`."
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "<xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> Для текущего HTTP-запроса."
  overload: System.Web.HttpContext.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Session
  id: Session
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> объект для текущего HTTP-запроса."
  remarks: "Свойство сеанса предоставляет программный доступ к свойствам и методам <xref:System.Web.SessionState.HttpSessionState>класса.</xref:System.Web.SessionState.HttpSessionState>       Чтобы использовать состояние сеанса, необходимо включить его. Сведения о том, как включить состояние сеанса в разделе **состояние сеанса Настройка** в [Общие сведения о состоянии сеанса ASP.NET](~/add/includes/ajax-current-ext-md.md).       Сведения о том, как сохранить значения в состоянии сеанса см. в разделе [как: сохранить значения в состоянии сеанса](~/add/includes/ajax-current-ext-md.md). Сведения о том, как считывать значения из состояния сеанса см. в разделе [как: чтение значений из состояния сеанса](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples show how to save values in session state and how to read values from session state.  \n  \n These examples require:  \n  \n-   An ASP.NET application that has session state enabled.  \n  \n-   A Web Forms page class that has access to the <xref:System.Web.UI.Page.Session%2A?displayProperty=fullName> property, or any class that has access to the <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> property.  \n  \n```c#  \nstring firstName = \"Jeff\";  \nstring lastName = \"Smith\";  \nstring city = \"Seattle\";  \n  \n// Save to session state in a Web Forms page class.  \nSession[\"FirstName\"] = firstName;  \nSession[\"LastName\"] = lastName;  \nSession[\"City\"] = city;  \n  \n// Read from session state in a Web Forms page class.  \nfirstName = (string)(Session[\"FirstName\"]);  \nlastName = (string)(Session[\"LastName\"]);  \ncity = (string)(Session[\"City\"]);  \n  \n// Outside of Web Forms page class, use HttpContext.Current.  \nHttpContext context = HttpContext.Current;  \ncontext.Session[\"FirstName\"] = firstName;  \nfirstName = (string)(context.Session[\"FirstName\"]);  \n  \n```  \n  \n```vb#  \nDim firstName As String = \"Jeff\"  \nDim lastName As String = \"Smith\"  \nDim city As String = \"Seattle\"  \n  \n' Save to session state in a Web Forms page class.  \nSession(\"FirstName\") = firstName  \nSession(\"LastName\") = lastName  \nSession(\"City\") = city  \n  \n' Read from session state in a Web Forms page class.  \nfirstName = DirectCast(Session(\"FirstName\"), String)  \nlastName = DirectCast(Session(\"LastName\"), String)  \ncity = DirectCast(Session(\"City\"), String)  \n  \n' Outside of Web Forms page class, use HttpContext.Current.  \nDim context As HttpContext = HttpContext.Current  \ncontext.Session(\"FirstName\") = firstName  \nfirstName = DirectCast(context.Session(\"FirstName\"), String)  \n  \n```"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "<xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> Объект для текущего HTTP-запроса."
  overload: System.Web.HttpContext.Session*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  id: SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Задает тип поведения состояния сеанса, который необходим для поддержки HTTP-запроса."
  remarks: "В реализации по умолчанию ASP.NET обработчика HTTP-данных запроса указывает, требуются ли состояние сеанса, реализовав <xref:System.Web.SessionState.IRequiresSessionState>интерфейса или <xref:System.Web.SessionState.IReadOnlySessionState>интерфейса.</xref:System.Web.SessionState.IReadOnlySessionState> </xref:System.Web.SessionState.IRequiresSessionState> Метод SetSessionStateBehavior и <xref:System.Web.SessionState.SessionStateBehavior>перечисления позволяют обеспечить более подробные сведения о какой тип поддержки состояния сеанса необходима для обработки запроса.</xref:System.Web.SessionState.SessionStateBehavior> Дополнительные сведения см. в разделе <xref:System.Web.SessionState.SessionStateBehavior>перечисления.</xref:System.Web.SessionState.SessionStateBehavior>       Метод SetSessionStateBehavior должен быть вызван перед <xref:System.Web.HttpApplication.AcquireRequestState>событий конвейера.</xref:System.Web.HttpApplication.AcquireRequestState> Вызовы, которые выполняются во время или после этого события приведет к <xref:System.InvalidOperationException>исключения.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);
    parameters:
    - id: sessionStateBehavior
      type: System.Web.SessionState.SessionStateBehavior
      description: "Одно из значений перечисления, которое указывает, какой тип поведения состояния сеанса является обязательным."
  overload: System.Web.HttpContext.SetSessionStateBehavior*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Метод был вызван после <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> возникло событие."
  platform:
  - net462
- uid: System.Web.HttpContext.SkipAuthorization
  id: SkipAuthorization
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, указывающее, является ли <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> объект должен пропускать проверку авторизации текущего запроса."
  remarks: "Свойство SkipAuthorization предназначен для опытных пользователей модули проверки подлинности, которые необходимы для перенаправления на страницу, разрешены анонимные подключения. Модуль проверки подлинности форм и модуль проверки подлинности Passport установить оба SkipAuthorization при перенаправлении на страницу настроенного входа. Установка SkipAuthorization требует `ControlPrincipal` установить флаг. Сведения о `ControlPrincipal` флаг см. в разделе <xref:System.Security.Permissions.SecurityPermissionFlag>.</xref:System.Security.Permissions.SecurityPermissionFlag>"
  syntax:
    content: public bool SkipAuthorization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> должен пропускать проверку авторизации; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.SkipAuthorization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает объект для текущего типа службы."
  remarks: "Этот метод полезен для получения доступа к базовому объекту <xref:System.Web.HttpWorkerRequest>объекта.</xref:System.Web.HttpWorkerRequest>"
  syntax:
    content: object IServiceProvider.GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Тип <xref href=&quot;System.Web.HttpContext&quot;> </xref> службы, чтобы установить поставщик услуг."
    return:
      type: System.Object
      description: "Объект <xref href=&quot;System.Web.HttpContext&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если служба не найдена."
  overload: System.Web.HttpContext.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  id: ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает значение, указывающее, должна ли среда выполнения ASP.NET вызывать метод &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; в потоке, обслуживающем этот запрос, при истечении времени ожидания запроса."
  remarks: "Обработчики и модули, которые используют <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName>свойство для реализации совместной отмены может потребоваться отключить <xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>поведение, которое выполняется в ASP.NET по умолчанию при истечении времени ожидания запроса.</xref:System.Threading.Thread.Abort%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName> Присвоение этому свойству `false` может помочь вам обеспечить выполнение процедуры отмены и очистки не прерывалось ASP.NET.       Если это свойство имеет значение `false`, ASP.NET не будет отображать автоматически на страницу ошибок «Истекло время ожидания запроса» при возникновении тайм-аута. Приложение отвечает за настройку содержимого отклика соответствующим образом."
  syntax:
    content: public bool ThreadAbortOnTimeout { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; будет вызываться, когда время ожидания потока; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.ThreadAbortOnTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Timestamp
  id: Timestamp
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Получает начальную метку времени текущего HTTP-запроса."
  remarks: "Отметка времени, возвращенного свойством Timestamp представляет локальное время сервера и устанавливается во время создания экземпляра <xref:System.Web.HttpContext>объекта.</xref:System.Web.HttpContext> Местное время равно времени в формате UTC, а также смещение относительно UTC."
  syntax:
    content: public DateTime Timestamp { get; }
    return:
      type: System.DateTime
      description: "Метка времени текущего HTTP-запроса."
  overload: System.Web.HttpContext.Timestamp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Trace
  id: Trace
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает <xref href=&quot;System.Web.TraceContext&quot;> </xref> объект для текущего HTTP-ответа."
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "<xref href=&quot;System.Web.TraceContext&quot;> </xref> Для текущего HTTP-ответа."
  overload: System.Web.HttpContext.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.User
  id: User
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает или задает сведения о безопасности для текущего HTTP-запроса."
  remarks: "Свойства пользователя предоставляет программный доступ к свойствам и методам <xref:System.Security.Principal.IPrincipal>интерфейса.</xref:System.Security.Principal.IPrincipal>       Так как страницы ASP.NET содержат ссылки по умолчанию <xref:System.Web>пространства имен (содержащий <xref:System.Web.HttpContext>класса), можно ссылаться на элементы <xref:System.Web.HttpContext>на странице ASPX без использования полного имени класса ссылку <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Например, можно использовать `User.Identity.Name` для получения имени пользователя, от лица которого текущий процесс выполняется. Тем не менее если вы хотите использовать члены <xref:System.Security.Principal.IPrincipal>с выделенным кодом ASP.NET, необходимо включить ссылку на <xref:System.Web>имен в модуль и полные ссылки на контекст текущего активного запроса или ответа и класс в <xref:System.Web>, которую требуется использовать.</xref:System.Web> </xref:System.Web> </xref:System.Security.Principal.IPrincipal> Например, на странице кода необходимо указать полное доменное имя `HttpContext.Current.User.Identity.Name`."
  example:
  - "The following example shows how to access properties of the current user through the User property. Those properties are used to set the title of the Web page.  \n  \n If the application uses Windows authentication, the user name includes the domain. For example, the page title would be “Home page for DOMAIN\\username”.  \n  \n [!code-cs[System.Web.HttpContext.User#1](~/add/codesnippet/csharp/p-system.web.httpcontext_1_1.cs)]\n [!code-vb[System.Web.HttpContext.User#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_1_1.vb)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Сведения о безопасности для текущего HTTP-запроса."
  overload: System.Web.HttpContext.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  id: WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает согласованный протокол, который был отправлен с сервера клиенту для <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> соединения."
  syntax:
    content: public string WebSocketNegotiatedProtocol { get; }
    return:
      type: System.String
      description: "Согласованный протокол."
  overload: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  id: WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Возвращает упорядоченный список протоколов, запрашиваемых клиентом."
  syntax:
    content: public System.Collections.Generic.IList<string> WebSocketRequestedProtocols { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Запрошенные протоколы или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если это не <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> запрос или если список не существует."
  overload: System.Web.HttpContext.WebSocketRequestedProtocols*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Resources.MissingManifestResourceException
  isExternal: true
  name: System.Resources.MissingManifestResourceException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
- uid: System.Web.HttpWorkerRequest
  parent: System.Web
  isExternal: false
  name: HttpWorkerRequest
  nameWithType: HttpWorkerRequest
  fullName: System.Web.HttpWorkerRequest
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
- uid: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
  parent: System
  isExternal: true
  name: Func<AspNetWebSocketContext,Task>
  nameWithType: Func<AspNetWebSocketContext,Task>
  fullName: System.Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.WebSockets.AspNetWebSocketContext
    name: AspNetWebSocketContext
    nameWithType: AspNetWebSocketContext
    fullName: AspNetWebSocketContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
- uid: System.Web.WebSockets.AspNetWebSocketOptions
  parent: System.Web.WebSockets
  isExternal: false
  name: AspNetWebSocketOptions
  nameWithType: AspNetWebSocketOptions
  fullName: System.Web.WebSockets.AspNetWebSocketOptions
- uid: System.Web.HttpContext.AddError(System.Exception)
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AllErrors
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
- uid: System.Exception[]
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception[]
  spec.csharp:
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext.Application
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.HttpContext.ApplicationInstance
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.HttpContext.AsyncPreloadMode
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
- uid: System.Web.Configuration.AsyncPreloadModeFlags
  parent: System.Web.Configuration
  isExternal: false
  name: AsyncPreloadModeFlags
  nameWithType: AsyncPreloadModeFlags
  fullName: System.Web.Configuration.AsyncPreloadModeFlags
- uid: System.Web.HttpContext.Cache
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.HttpContext.ClearError
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
- uid: System.Web.HttpContext.Current
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.HttpContext.CurrentHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext.CurrentNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
- uid: System.Web.RequestNotification
  parent: System.Web
  isExternal: false
  name: RequestNotification
  nameWithType: RequestNotification
  fullName: System.Web.RequestNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Web.HttpContext.Error
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext.GetConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
- uid: System.Web.HttpContext.GetSection(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
- uid: System.Web.HttpContext.Handler
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.HttpContext.PageInstrumentation
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
- uid: System.Web.Instrumentation.PageInstrumentationService
  parent: System.Web.Instrumentation
  isExternal: false
  name: PageInstrumentationService
  nameWithType: PageInstrumentationService
  fullName: System.Web.Instrumentation.PageInstrumentationService
- uid: System.Web.HttpContext.PreviousHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
- uid: System.Web.HttpContext.Request
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
- uid: System.Web.HttpContext.Response
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
- uid: System.Web.HttpContext.RewritePath(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
- uid: System.Web.HttpContext.Server
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.HttpContext.Session
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
- uid: System.Web.SessionState.SessionStateBehavior
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateBehavior
  nameWithType: SessionStateBehavior
  fullName: System.Web.SessionState.SessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpContext.Trace
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.HttpContext.User
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.#ctor*
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext.HttpContext
- uid: System.Web.HttpContext.AcceptWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest
  nameWithType: HttpContext.AcceptWebSocketRequest
- uid: System.Web.HttpContext.AddError*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError
  nameWithType: HttpContext.AddError
- uid: System.Web.HttpContext.AddOnRequestCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted
  nameWithType: HttpContext.AddOnRequestCompleted
- uid: System.Web.HttpContext.AllErrors*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
- uid: System.Web.HttpContext.Application*
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
- uid: System.Web.HttpContext.ApplicationInstance*
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
- uid: System.Web.HttpContext.AsyncPreloadMode*
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
- uid: System.Web.HttpContext.Cache*
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
- uid: System.Web.HttpContext.ClearError*
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError
  nameWithType: HttpContext.ClearError
- uid: System.Web.HttpContext.Current*
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
- uid: System.Web.HttpContext.CurrentHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
- uid: System.Web.HttpContext.CurrentNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted
  nameWithType: HttpContext.DisposeOnPipelineCompleted
- uid: System.Web.HttpContext.Error*
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig
  nameWithType: HttpContext.GetAppConfig
- uid: System.Web.HttpContext.GetConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig
  nameWithType: HttpContext.GetConfig
- uid: System.Web.HttpContext.GetGlobalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject
  nameWithType: HttpContext.GetGlobalResourceObject
- uid: System.Web.HttpContext.GetLocalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject
  nameWithType: HttpContext.GetLocalResourceObject
- uid: System.Web.HttpContext.GetSection*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection
  nameWithType: HttpContext.GetSection
- uid: System.Web.HttpContext.Handler*
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items*
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
- uid: System.Web.HttpContext.PageInstrumentation*
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
- uid: System.Web.HttpContext.PreviousHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile*
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
- uid: System.Web.HttpContext.RemapHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler
  nameWithType: HttpContext.RemapHandler
- uid: System.Web.HttpContext.Request*
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
- uid: System.Web.HttpContext.Response*
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
- uid: System.Web.HttpContext.RewritePath*
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath
  nameWithType: HttpContext.RewritePath
- uid: System.Web.HttpContext.Server*
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
- uid: System.Web.HttpContext.Session*
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
- uid: System.Web.HttpContext.SetSessionStateBehavior*
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior
  nameWithType: HttpContext.SetSessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization*
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService*
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: HttpContext.System.IServiceProvider.GetService
- uid: System.Web.HttpContext.ThreadAbortOnTimeout*
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp*
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
- uid: System.Web.HttpContext.Trace*
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
- uid: System.Web.HttpContext.User*
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
