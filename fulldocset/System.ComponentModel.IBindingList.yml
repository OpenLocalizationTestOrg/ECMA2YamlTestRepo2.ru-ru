### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.IBindingList
  id: IBindingList
  children:
  - System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.IBindingList.AddNew
  - System.ComponentModel.IBindingList.AllowEdit
  - System.ComponentModel.IBindingList.AllowNew
  - System.ComponentModel.IBindingList.AllowRemove
  - System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  - System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  - System.ComponentModel.IBindingList.IsSorted
  - System.ComponentModel.IBindingList.ListChanged
  - System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.IBindingList.RemoveSort
  - System.ComponentModel.IBindingList.SortDirection
  - System.ComponentModel.IBindingList.SortProperty
  - System.ComponentModel.IBindingList.SupportsChangeNotification
  - System.ComponentModel.IBindingList.SupportsSearching
  - System.ComponentModel.IBindingList.SupportsSorting
  langs:
  - csharp
  name: IBindingList
  nameWithType: IBindingList
  fullName: System.ComponentModel.IBindingList
  type: Interface
  summary: "Предоставляет функции, необходимые для поддержки простых и сложных сценариев при привязке к источнику данных."
  remarks: "Этот интерфейс реализуется <xref:System.Data.DataView>классом.</xref:System.Data.DataView> Реализация метода должна вести себя отличается от реализации этого метода в <xref:System.Data.DataView>классе.</xref:System.Data.DataView>       При вызове <xref:System.ComponentModel.IBindingList.ApplySort%2A>или <xref:System.ComponentModel.IBindingList.RemoveSort%2A>вызывать методы, <xref:System.ComponentModel.IBindingList.ListChanged>событие с <xref:System.ComponentModel.ListChangedType>перечисления.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IBindingList.RemoveSort%2A> </xref:System.ComponentModel.IBindingList.ApplySort%2A>       При вызове <xref:System.ComponentModel.IBindingList.AddNew%2A>, то необходимо вызвать метод <xref:System.ComponentModel.IBindingList.ListChanged>событие с <xref:System.ComponentModel.ListChangedType>перечисления, включающим соответствующий индекс.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IBindingList.AddNew%2A> Добавленная строка находится в состоянии, где нажатие клавиши ESC <xref:System.Windows.Forms.DataGridView>управления можно удалить новую строку.</xref:System.Windows.Forms.DataGridView> Вызов <xref:System.ComponentModel.IBindingList.ListChanged>событие с <xref:System.ComponentModel.ListChangedType>перечисления еще раз эта строка указывает, что элемент теперь является строк не в состоянии «new».</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>       При удалении элемента или вызове <xref:System.ComponentModel.IEditableObject.CancelEdit%2A>метода для новой строки (Если эта строка реализует <xref:System.ComponentModel.IEditableObject>), необходимо вызвать <xref:System.ComponentModel.IBindingList.ListChanged>событие с <xref:System.ComponentModel.ListChangedType>перечисления, включающим соответствующий индекс.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> </xref:System.ComponentModel.IEditableObject> </xref:System.ComponentModel.IEditableObject.CancelEdit%2A>"
  example:
  - "The following example provides a simple implementation of the IBindingList interface. The `CustomerList` class stores customer information in a list. This example assumes that you have used the `Customer` class that can be found in the example in the <xref:System.ComponentModel.IEditableObject> class.  \n  \n [!code-cs[Binding_Editable#2](~/add/codesnippet/csharp/t-system.componentmodel._23_1.cs)]\n [!code-cpp[Binding_Editable#2](~/add/codesnippet/cpp/t-system.componentmodel._23_1.cpp)]\n [!code-vb[Binding_Editable#2](~/add/codesnippet/visualbasic/t-system.componentmodel._23_1.vb)]"
  syntax:
    content: 'public interface IBindingList : System.Collections.IList'
  implements:
  - System.Collections.IList
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  id: AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AddIndex(PropertyDescriptor)
  nameWithType: IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Добавляет <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> для индексов, используемых для поиска."
  remarks: "Список должен поддерживать этот метод. Однако поддержка этот метод может быть nonoperation."
  syntax:
    content: public void AddIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Добавление индексов, используемых для поиска."
  overload: System.ComponentModel.IBindingList.AddIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AddNew
  id: AddNew
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AddNew()
  nameWithType: IBindingList.AddNew()
  fullName: System.ComponentModel.IBindingList.AddNew()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Добавляет новый элемент в список."
  remarks: "Этот метод поддерживается только в том случае, если <xref:System.ComponentModel.IBindingList.AllowNew%2A>— `true`; в противном случае <xref:System.NotSupportedException>возникает исключение.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.AllowNew%2A>       Реализация этого метода означает, что <xref:System.ComponentModel.IBindingList>список, необходимо понять, какие типы объектов для добавления в список и необходимо понять, как создать новый экземпляр этого типа.</xref:System.ComponentModel.IBindingList> Например, если имеется коллекция `myCustomer` объектов, следует добавить новый метод AddNew `myCustomer` объект в список.      Настроек [!NOTE] настроек Если объекты в этом списке реализуют <xref:System.ComponentModel.IEditableObject>интерфейс вызова <xref:System.ComponentModel.IEditableObject.CancelEdit%2A>метод следует отказаться от объекта, не добавляйте его в список, если объект был создан с помощью метода AddNew.</xref:System.ComponentModel.IEditableObject.CancelEdit%2A> </xref:System.ComponentModel.IEditableObject> Объект должен добавляться только к списку при <xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName>вызывается метод.</xref:System.ComponentModel.IEditableObject.EndEdit%2A?displayProperty=fullName> Таким образом необходимо синхронизировать объект и список внимательно.       При вызове этого метода следует вызвать <xref:System.ComponentModel.IBindingList.ListChanged>событие с <xref:System.ComponentModel.ListChangedType>перечисления, включающим соответствующий индекс.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged> Добавленная строка находится в состоянии, где нажатие клавиши Esc на <xref:System.Windows.Forms.DataGridView>управления можно удалить новую строку.</xref:System.Windows.Forms.DataGridView> Вызов <xref:System.ComponentModel.IBindingList.ListChanged>событие с <xref:System.ComponentModel.ListChangedType>перечисления во второй раз, в этой строке указывает, что элемент теперь обычная строка (не в новое состояние).</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public object AddNew ();
    parameters: []
    return:
      type: System.Object
      description: "Элемент, добавляемый в список."
  overload: System.ComponentModel.IBindingList.AddNew*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.AllowNew*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.AllowNew*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowEdit
  id: AllowEdit
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
  fullName: System.ComponentModel.IBindingList.AllowEdit
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Получает значение, указывающее возможность обновления элементов в списке."
  syntax:
    content: public bool AllowEdit { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>При обновлении элементов в списке. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.AllowEdit*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowNew
  id: AllowNew
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowNew
  nameWithType: IBindingList.AllowNew
  fullName: System.ComponentModel.IBindingList.AllowNew
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Получает значение, указывающее, можно добавить элементы в список с помощью <xref:System.ComponentModel.IBindingList.AddNew*>.</xref:System.ComponentModel.IBindingList.AddNew*>"
  remarks: "Если <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>или <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>— `true`, это свойство возвращает `false`.</xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> </xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowNew { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>При добавлении элементов в список с помощью <xref:System.ComponentModel.IBindingList.AddNew*>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IBindingList.AddNew*>"
  overload: System.ComponentModel.IBindingList.AllowNew*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.AllowRemove
  id: AllowRemove
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
  fullName: System.ComponentModel.IBindingList.AllowRemove
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Получает значение, указывающее, можно удалить элементы из списка, используя <> </> *настроек или <> </> *настроек."
  remarks: "Если <xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>или <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName>— `true`, это свойство возвращает `false`.</xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName> </xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName>      Настроек [!NOTE] настроек возвращает Если значение параметра AllowRemove `false` <xref:System.Collections.IList.Remove%2A?displayProperty=fullName>и <xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName>исключение <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName> </xref:System.Collections.IList.Remove%2A?displayProperty=fullName>"
  syntax:
    content: public bool AllowRemove { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>При удалении элементов из списка. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.AllowRemove*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  id: ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Сортирует список на основе <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> и <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref>."
  remarks: "При добавлении и удалении элементов, эти элементы размещаются в порядке сортировки.       Этот метод поддерживается, если <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>— `true`; в противном случае этот метод создает исключение <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public void ApplySort (System.ComponentModel.PropertyDescriptor property, System.ComponentModel.ListSortDirection direction);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Выполнить сортировку."
    - id: direction
      type: System.ComponentModel.ListSortDirection
      description: "Один из <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref> значения."
  overload: System.ComponentModel.IBindingList.ApplySort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  id: Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: Find(PropertyDescriptor,Object)
  nameWithType: IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает индекс строки с заданной <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  remarks: "Этот метод выберет первую строку где значение `property` параметр равен значению `key` параметра.       Этот метод поддерживается, если <xref:System.ComponentModel.IBindingList.SupportsSearching%2A>— `true`, в противном случае этот метод создает <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSearching%2A>"
  example:
  - "The following code example demonstrates how to implement the Find method.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/csharp/03c83841-f554-4f60-86f9-_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/visualbasic/03c83841-f554-4f60-86f9-_1.vb)]"
  syntax:
    content: public int Find (System.ComponentModel.PropertyDescriptor property, object key);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Для поиска."
    - id: key
      type: System.Object
      description: "Значение `property` параметр для поиска."
    return:
      type: System.Int32
      description: "Индекс строки, который имеет данный <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.Find*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSearching*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSearching*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.IsSorted
  id: IsSorted
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: IsSorted
  nameWithType: IBindingList.IsSorted
  fullName: System.ComponentModel.IBindingList.IsSorted
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Получает значение, указывающее, упорядочены элементы в списке."
  remarks: "Это свойство поддерживается в том случае, если <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>— `true`; в противном случае это свойство создает <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>       Если возвращается свойство IsSorted `true`, элементы добавляются или удаляются в порядке сортировки."
  syntax:
    content: public bool IsSorted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <> </> *настроек был вызван и <> </> *настроек не был вызван; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.IsSorted*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.ListChanged
  id: ListChanged
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: ListChanged
  nameWithType: IBindingList.ListChanged
  fullName: System.ComponentModel.IBindingList.ListChanged
  type: Event
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Происходит при изменении списка или элемента в списке."
  remarks: "Это событие возникает только в том случае, если <xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>свойство `true`.</xref:System.ComponentModel.IBindingList.SupportsChangeNotification%2A>"
  syntax:
    content: public event System.ComponentModel.ListChangedEventHandler ListChanged;
    return:
      type: System.ComponentModel.ListChangedEventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  id: RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Удаляет <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> из индексов, используемых для поиска."
  remarks: "Список должен поддерживать этот метод. Однако поддержка этот метод может быть nonoperation."
  syntax:
    content: public void RemoveIndex (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> Для удаления из индексов, используемых для поиска."
  overload: System.ComponentModel.IBindingList.RemoveIndex*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.RemoveSort
  id: RemoveSort
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: RemoveSort()
  nameWithType: IBindingList.RemoveSort()
  fullName: System.ComponentModel.IBindingList.RemoveSort()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Удаляет любую сортировку, выполненную с помощью <xref:System.ComponentModel.IBindingList.ApplySort*>.</xref:System.ComponentModel.IBindingList.ApplySort*>"
  remarks: "Это свойство поддерживается в том случае, если <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>— `true`; в противном случае это свойство создает <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>       При вызове этого метода следует вызвать <xref:System.ComponentModel.IBindingList.ListChanged>событие с <xref:System.ComponentModel.ListChangedType>перечисления.</xref:System.ComponentModel.ListChangedType> </xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public void RemoveSort ();
    parameters: []
  overload: System.ComponentModel.IBindingList.RemoveSort*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SortDirection
  id: SortDirection
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SortDirection
  nameWithType: IBindingList.SortDirection
  fullName: System.ComponentModel.IBindingList.SortDirection
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает направление сортировки."
  remarks: "Это свойство поддерживается в том случае, если <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>— `true`; в противном случае это свойство создает <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public System.ComponentModel.ListSortDirection SortDirection { get; }
    return:
      type: System.ComponentModel.ListSortDirection
      description: "Один из <xref href=&quot;System.ComponentModel.ListSortDirection&quot;> </xref> значения."
  overload: System.ComponentModel.IBindingList.SortDirection*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SortProperty
  id: SortProperty
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SortProperty
  nameWithType: IBindingList.SortProperty
  fullName: System.ComponentModel.IBindingList.SortProperty
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , который используется для сортировки."
  remarks: "Это свойство поддерживается в том случае, если <xref:System.ComponentModel.IBindingList.SupportsSorting%2A>— `true`; в противном случае это свойство создает <xref:System.NotSupportedException>.</xref:System.NotSupportedException> </xref:System.ComponentModel.IBindingList.SupportsSorting%2A>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor SortProperty { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "<xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> , Который используется для сортировки."
  overload: System.ComponentModel.IBindingList.SortProperty*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<xref:System.ComponentModel.IBindingList.SupportsSorting*>is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.ComponentModel.IBindingList.SupportsSorting*>"
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification
  id: SupportsChangeNotification
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
  fullName: System.ComponentModel.IBindingList.SupportsChangeNotification
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Получает ли <xref href=&quot;System.ComponentModel.IBindingList.ListChanged&quot;> </xref> событие возникает при изменении списка или элемента в списке."
  remarks: "Объекты в списке должен уведомить список при изменении ее, чтобы список <xref:System.ComponentModel.IBindingList.ListChanged>событий.</xref:System.ComponentModel.IBindingList.ListChanged>"
  syntax:
    content: public bool SupportsChangeNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.ComponentModel.IBindingList.ListChanged&quot;> </xref> событие вызывается при изменении списка или при изменении элемента; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.SupportsChangeNotification*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsSearching
  id: SupportsSearching
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
  fullName: System.ComponentModel.IBindingList.SupportsSearching
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Получает значение, указывающее список поддерживает поиск с помощью <xref:System.ComponentModel.IBindingList.Find*>метод.</xref:System.ComponentModel.IBindingList.Find*>"
  remarks: ''
  example:
  - "The following code example demonstrates how to implement the SupportsSearching property.  \n  \n [!code-cs[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/csharp/p-system.componentmodel._7_1.cs)]\n [!code-vb[System.Windows.Forms.BindingSourceAndBindingListOfT#3](~/add/codesnippet/visualbasic/p-system.componentmodel._7_1.vb)]"
  syntax:
    content: public bool SupportsSearching { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если список поддерживает поиск с помощью <xref:System.ComponentModel.IBindingList.Find*>метод; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.IBindingList.Find*>"
  overload: System.ComponentModel.IBindingList.SupportsSearching*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.IBindingList.SupportsSorting
  id: SupportsSorting
  parent: System.ComponentModel.IBindingList
  langs:
  - csharp
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
  fullName: System.ComponentModel.IBindingList.SupportsSorting
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Получает значение, указывающее список поддерживает сортировку."
  remarks: "Если это свойство имеет `true`, затем <xref:System.ComponentModel.IBindingList.IsSorted%2A>, <xref:System.ComponentModel.IBindingList.SortProperty%2A>, <xref:System.ComponentModel.IBindingList.SortDirection%2A>, <xref:System.ComponentModel.IBindingList.ApplySort%2A>, и <xref:System.ComponentModel.IBindingList.RemoveSort%2A>поддерживаются.</xref:System.ComponentModel.IBindingList.RemoveSort%2A> </xref:System.ComponentModel.IBindingList.ApplySort%2A> </xref:System.ComponentModel.IBindingList.SortDirection%2A> </xref:System.ComponentModel.IBindingList.SortProperty%2A> </xref:System.ComponentModel.IBindingList.IsSorted%2A>"
  syntax:
    content: public bool SupportsSorting { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если список поддерживает сортировку; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.IBindingList.SupportsSorting*
  exceptions: []
  platform:
  - net462
references:
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.IBindingList.AddIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddIndex(PropertyDescriptor)
  nameWithType: IBindingList.AddIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.AddIndex(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.IBindingList.AddNew
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddNew()
  nameWithType: IBindingList.AddNew()
  fullName: System.ComponentModel.IBindingList.AddNew()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.IBindingList.AllowEdit
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
  fullName: System.ComponentModel.IBindingList.AllowEdit
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.IBindingList.AllowNew
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowNew
  nameWithType: IBindingList.AllowNew
  fullName: System.ComponentModel.IBindingList.AllowNew
- uid: System.ComponentModel.IBindingList.AllowRemove
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
  fullName: System.ComponentModel.IBindingList.AllowRemove
- uid: System.ComponentModel.IBindingList.ApplySort(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ApplySort(PropertyDescriptor,ListSortDirection)
  nameWithType: IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
  fullName: System.ComponentModel.IBindingList.ApplySort(PropertyDescriptor,ListSortDirection)
- uid: System.ComponentModel.ListSortDirection
  parent: System.ComponentModel
  isExternal: false
  name: ListSortDirection
  nameWithType: ListSortDirection
  fullName: System.ComponentModel.ListSortDirection
- uid: System.ComponentModel.IBindingList.Find(System.ComponentModel.PropertyDescriptor,System.Object)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: Find(PropertyDescriptor,Object)
  nameWithType: IBindingList.Find(PropertyDescriptor,Object)
  fullName: System.ComponentModel.IBindingList.Find(PropertyDescriptor,Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.IBindingList.IsSorted
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: IsSorted
  nameWithType: IBindingList.IsSorted
  fullName: System.ComponentModel.IBindingList.IsSorted
- uid: System.ComponentModel.IBindingList.ListChanged
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ListChanged
  nameWithType: IBindingList.ListChanged
  fullName: System.ComponentModel.IBindingList.ListChanged
- uid: System.ComponentModel.ListChangedEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: ListChangedEventHandler
  nameWithType: ListChangedEventHandler
  fullName: System.ComponentModel.ListChangedEventHandler
- uid: System.ComponentModel.IBindingList.RemoveIndex(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveIndex(PropertyDescriptor)
  nameWithType: IBindingList.RemoveIndex(PropertyDescriptor)
  fullName: System.ComponentModel.IBindingList.RemoveIndex(PropertyDescriptor)
- uid: System.ComponentModel.IBindingList.RemoveSort
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveSort()
  nameWithType: IBindingList.RemoveSort()
  fullName: System.ComponentModel.IBindingList.RemoveSort()
- uid: System.ComponentModel.IBindingList.SortDirection
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortDirection
  nameWithType: IBindingList.SortDirection
  fullName: System.ComponentModel.IBindingList.SortDirection
- uid: System.ComponentModel.IBindingList.SortProperty
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortProperty
  nameWithType: IBindingList.SortProperty
  fullName: System.ComponentModel.IBindingList.SortProperty
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
  fullName: System.ComponentModel.IBindingList.SupportsChangeNotification
- uid: System.ComponentModel.IBindingList.SupportsSearching
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
  fullName: System.ComponentModel.IBindingList.SupportsSearching
- uid: System.ComponentModel.IBindingList.SupportsSorting
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
  fullName: System.ComponentModel.IBindingList.SupportsSorting
- uid: System.ComponentModel.IBindingList.AddIndex*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddIndex
  nameWithType: IBindingList.AddIndex
- uid: System.ComponentModel.IBindingList.AddNew*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AddNew
  nameWithType: IBindingList.AddNew
- uid: System.ComponentModel.IBindingList.AllowEdit*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowEdit
  nameWithType: IBindingList.AllowEdit
- uid: System.ComponentModel.IBindingList.AllowNew*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowNew
  nameWithType: IBindingList.AllowNew
- uid: System.ComponentModel.IBindingList.AllowRemove*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: AllowRemove
  nameWithType: IBindingList.AllowRemove
- uid: System.ComponentModel.IBindingList.ApplySort*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: ApplySort
  nameWithType: IBindingList.ApplySort
- uid: System.ComponentModel.IBindingList.Find*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: Find
  nameWithType: IBindingList.Find
- uid: System.ComponentModel.IBindingList.IsSorted*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: IsSorted
  nameWithType: IBindingList.IsSorted
- uid: System.ComponentModel.IBindingList.RemoveIndex*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveIndex
  nameWithType: IBindingList.RemoveIndex
- uid: System.ComponentModel.IBindingList.RemoveSort*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: RemoveSort
  nameWithType: IBindingList.RemoveSort
- uid: System.ComponentModel.IBindingList.SortDirection*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortDirection
  nameWithType: IBindingList.SortDirection
- uid: System.ComponentModel.IBindingList.SortProperty*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SortProperty
  nameWithType: IBindingList.SortProperty
- uid: System.ComponentModel.IBindingList.SupportsChangeNotification*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsChangeNotification
  nameWithType: IBindingList.SupportsChangeNotification
- uid: System.ComponentModel.IBindingList.SupportsSearching*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSearching
  nameWithType: IBindingList.SupportsSearching
- uid: System.ComponentModel.IBindingList.SupportsSorting*
  parent: System.ComponentModel.IBindingList
  isExternal: false
  name: SupportsSorting
  nameWithType: IBindingList.SupportsSorting
