### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.PropertyValueCollection
  id: PropertyValueCollection
  children:
  - System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  - System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  - System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  - System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  - System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  - System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  - System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  - System.DirectoryServices.PropertyValueCollection.OnClearComplete
  - System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  - System.DirectoryServices.PropertyValueCollection.PropertyName
  - System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  - System.DirectoryServices.PropertyValueCollection.Value
  langs:
  - csharp
  name: PropertyValueCollection
  nameWithType: PropertyValueCollection
  fullName: System.DirectoryServices.PropertyValueCollection
  type: Class
  summary: "Содержит значения <xref href=&quot;System.DirectoryServices.DirectoryEntry&quot;> </xref> свойство."
  syntax:
    content: 'public class PropertyValueCollection : System.Collections.CollectionBase'
  inheritance:
  - System.Object
  - System.Collections.CollectionBase
  implements: []
  inheritedMembers:
  - System.Collections.CollectionBase.Capacity
  - System.Collections.CollectionBase.Clear
  - System.Collections.CollectionBase.Count
  - System.Collections.CollectionBase.GetEnumerator
  - System.Collections.CollectionBase.InnerList
  - System.Collections.CollectionBase.List
  - System.Collections.CollectionBase.OnClear
  - System.Collections.CollectionBase.OnInsert(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnRemove(System.Int32,System.Object)
  - System.Collections.CollectionBase.OnSet(System.Int32,System.Object,System.Object)
  - System.Collections.CollectionBase.OnValidate(System.Object)
  - System.Collections.CollectionBase.RemoveAt(System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.CollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.CollectionBase.System#Collections#ICollection#SyncRoot
  - System.Collections.CollectionBase.System#Collections#IList#Add(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Contains(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.CollectionBase.System#Collections#IList#IsFixedSize
  - System.Collections.CollectionBase.System#Collections#IList#IsReadOnly
  - System.Collections.CollectionBase.System#Collections#IList#Item(System.Int32)
  - System.Collections.CollectionBase.System#Collections#IList#Remove(System.Object)
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  id: Add(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Add(Object)
  nameWithType: PropertyValueCollection.Add(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Add(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Добавляет указанный <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> в эту коллекцию."
  syntax:
    content: public int Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> Объект, добавляемый в эту коллекцию."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> объект, добавляемый в конец этой коллекции."
  overload: System.DirectoryServices.PropertyValueCollection.Add*
  exceptions:
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Произошла ошибка при вызове базового интерфейса."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение свойства является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  id: AddRange(System.DirectoryServices.PropertyValueCollection)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: AddRange(PropertyValueCollection)
  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(PropertyValueCollection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Добавляет содержимое <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> в эту коллекцию."
  syntax:
    content: public void AddRange (System.DirectoryServices.PropertyValueCollection value);
    parameters:
    - id: value
      type: System.DirectoryServices.PropertyValueCollection
      description: "Объект <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> , содержащий объекты, добавляемые в эту коллекцию."
  overload: System.DirectoryServices.PropertyValueCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение свойства является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  id: AddRange(System.Object[])
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: AddRange(Object[])
  nameWithType: PropertyValueCollection.AddRange(Object[])
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(Object[])
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Добавляет содержимое указанного <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> в эту коллекцию."
  syntax:
    content: public void AddRange (object[] value);
    parameters:
    - id: value
      type: System.Object[]
      description: "<xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> Массив, содержащий объекты, добавляемые в эту коллекцию."
  overload: System.DirectoryServices.PropertyValueCollection.AddRange*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение свойства является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: PropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Contains(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Определяет, является ли указанный <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> объект находится в этой коллекции."
  syntax:
    content: public bool Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> Объект для поиска в этой коллекции."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанное свойство принадлежит данной коллекции; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.PropertyValueCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  id: CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: CopyTo(Object[],Int32)
  nameWithType: PropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.CopyTo(Object[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Копирует все <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> объектов в этой коллекции в указанный массив, начиная с указанного индекса в целевом массиве."
  syntax:
    content: public void CopyTo (object[] array, int index);
    parameters:
    - id: array
      type: System.Object[]
      description: "Массив <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> объектов, который принимает элементы данной коллекции."
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс в `array` которого этот метод начинает копирование коллекции."
  overload: System.DirectoryServices.PropertyValueCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  id: IndexOf(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: IndexOf(Object)
  nameWithType: PropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.IndexOf(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает индекс указанного значения свойства в этой коллекции."
  syntax:
    content: public int IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Задаваемое значение свойства."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс значения указанного свойства. Если объект не найден, возвращается значение-1."
  overload: System.DirectoryServices.PropertyValueCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  id: Insert(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Insert(Int32,Object)
  nameWithType: PropertyValueCollection.Insert(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Вставляет значение свойства в коллекцию по указанному индексу."
  syntax:
    content: public void Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, по которому вставляется значение свойства."
    - id: value
      type: System.Object
      description: "Значение свойства для вставки."
  overload: System.DirectoryServices.PropertyValueCollection.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение свойства является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Произошла ошибка при вызове базового интерфейса."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Индекс меньше, чем 0 (ноль) или больше, чем размер коллекции."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.Item(Int32)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значение свойства, расположенный по указанному индексу коллекции."
  remarks: "В C# это свойство является индексатором <xref:System.DirectoryServices.PropertyValueCollection>класса.</xref:System.DirectoryServices.PropertyValueCollection>       В JScript можно использовать по умолчанию индексированные свойства, определенные типом, но нельзя явно определять свои собственные. Однако указание атрибута expando применительно к классу автоматически предоставляет значение по умолчанию индексированное свойство, типом которого является объект, а типом индекса — <xref:System.String>.</xref:System.String>"
  syntax:
    content: public object this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс значения свойства."
    return:
      type: System.Object
      description: "Значение свойства по указанному индексу."
  overload: System.DirectoryServices.PropertyValueCollection.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение свойства является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Индекс меньше нуля (0) или больше, чем размер коллекции."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete
  id: OnClearComplete
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnClearComplete()
  nameWithType: PropertyValueCollection.OnClearComplete()
  fullName: System.DirectoryServices.PropertyValueCollection.OnClearComplete()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Переопределяет <xref:System.Collections.CollectionBase.OnClearComplete*>метод.</xref:System.Collections.CollectionBase.OnClearComplete*>"
  syntax:
    content: protected override void OnClearComplete ();
    parameters: []
  overload: System.DirectoryServices.PropertyValueCollection.OnClearComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  id: OnInsertComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnInsertComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnInsertComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Переопределяет <xref:System.Collections.CollectionBase.OnInsertComplete*>метод.</xref:System.Collections.CollectionBase.OnInsertComplete*>"
  syntax:
    content: protected override void OnInsertComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, по которому нужно вставить `value`."
    - id: value
      type: System.Object
      description: "Новое значение элемента по индексу `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Переопределяет <xref:System.Collections.CollectionBase.OnRemoveComplete*>метод.</xref:System.Collections.CollectionBase.OnRemoveComplete*>"
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, по которому можно найти значение."
    - id: value
      type: System.Object
      description: "Значение элемента, удаляемого из `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  id: OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: OnSetComplete(Int32,Object,Object)
  nameWithType: PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Переопределяет &lt;xref:System.Collections.CollectionBase.OnSetComplete%2A?displayProperty=fullName&gt; метод."
  syntax:
    content: protected override void OnSetComplete (int index, object oldValue, object newValue);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс, по которому `oldValue` может быть найден."
    - id: oldValue
      type: System.Object
      description: "Значение для замены `newValue`."
    - id: newValue
      type: System.Object
      description: "Новое значение элемента по индексу `index`."
  overload: System.DirectoryServices.PropertyValueCollection.OnSetComplete*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName
  id: PropertyName
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
  fullName: System.DirectoryServices.PropertyValueCollection.PropertyName
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает имя свойства для атрибутов в коллекции значений."
  syntax:
    content: public string PropertyName { get; }
    return:
      type: System.String
      description: "Строка, содержащая имя свойства со значениями, которые включены в это <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref> объекта."
  overload: System.DirectoryServices.PropertyValueCollection.PropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: PropertyValueCollection.Remove(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Remove(Object)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Удаляет указанное значение свойства из данной коллекции."
  remarks: "При работе с несколькими значениями строковое значение свойства, метод Remove успешно удалит правильный элемент. Тем не менее Идентификация требуемых элементов по имени сложно с несколькими значениями значения свойства DNWithString (как класс DNWithString COM, который используется для хранения элементов DNWithString, имеет два свойства строки, представляющий элемент). Способ удаления таких элементов, необходимо найти объект в коллекции (с через все элементы в цикле), то вызывается функция удаления с указателем на объект, только что найден.  Это показано в следующем примере."
  example:
  - "```c#  \n  \n// Bind to the AD object  \nDirectoryEntry myUser = new DirectoryEntry(\"LDAP://AdServer:389/CN=MyUsername,CN=Users,DC=contoso,DC=com\");  \n  \n// Get the attribute  \nPropertyValueCollection testAttribute = myUser.Properties[\"someAttribute\"];  \n  \n// Find the item in the collection that we want to delete  \nDNWithString dnwsItemToRemove = null;  \nforeach (DNWithString dnwsItem in testAttribute)  \n{  \n    if (dnwsItem.StringValue.Equals(\"SomeValue\"))  \n    {  \n        dnwsItemToRemove = dnwsItem;  \n        break;  \n    }  \n}  \n  \n// Delete it  \ntestAttribute.Remove(dnwsItemToRemove);  \n  \n// Store the data  \nmyUser.CommitChanges();  \n```"
  syntax:
    content: public void Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Задаваемое значение свойства."
  overload: System.DirectoryServices.PropertyValueCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Значение свойства является пустой ссылкой (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic)."
  - type: System.Runtime.InteropServices.COMException
    commentId: T:System.Runtime.InteropServices.COMException
    description: "Произошла ошибка при вызове базового интерфейса."
  platform:
  - net462
- uid: System.DirectoryServices.PropertyValueCollection.Value
  id: Value
  parent: System.DirectoryServices.PropertyValueCollection
  langs:
  - csharp
  name: Value
  nameWithType: PropertyValueCollection.Value
  fullName: System.DirectoryServices.PropertyValueCollection.Value
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Возвращает или задает значения коллекции."
  remarks: "Чтобы добавить несколько значений, этому свойству присвоено массиву значений."
  syntax:
    content: public object Value { get; set; }
    return:
      type: System.Object
      description: "Если коллекция пуста, значением свойства является пустая ссылка (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> в Visual Basic). Если коллекция содержит одно значение, значение свойства — это значение. Если коллекция содержит несколько значений, значение свойства равно копия массива этих значений.       Если для этого свойства значение или значения добавляются <xref href=&quot;System.DirectoryServices.PropertyValueCollection&quot;> </xref>. Присвоение этому свойству пустую ссылку (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>) Очищает коллекцию."
  overload: System.DirectoryServices.PropertyValueCollection.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.CollectionBase
  isExternal: false
  name: System.Collections.CollectionBase
- uid: System.Runtime.InteropServices.COMException
  isExternal: true
  name: System.Runtime.InteropServices.COMException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.DirectoryServices.PropertyValueCollection.Add(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Add(Object)
  nameWithType: PropertyValueCollection.Add(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Add(Object)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.DirectoryServices.PropertyValueCollection)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange(PropertyValueCollection)
  nameWithType: PropertyValueCollection.AddRange(PropertyValueCollection)
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(PropertyValueCollection)
- uid: System.DirectoryServices.PropertyValueCollection
  parent: System.DirectoryServices
  isExternal: false
  name: PropertyValueCollection
  nameWithType: PropertyValueCollection
  fullName: System.DirectoryServices.PropertyValueCollection
- uid: System.DirectoryServices.PropertyValueCollection.AddRange(System.Object[])
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange(Object[])
  nameWithType: PropertyValueCollection.AddRange(Object[])
  fullName: System.DirectoryServices.PropertyValueCollection.AddRange(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.DirectoryServices.PropertyValueCollection.Contains(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Contains(Object)
  nameWithType: PropertyValueCollection.Contains(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Contains(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo(System.Object[],System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: CopyTo(Object[],Int32)
  nameWithType: PropertyValueCollection.CopyTo(Object[],Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.CopyTo(Object[],Int32)
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: IndexOf(Object)
  nameWithType: PropertyValueCollection.IndexOf(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.IndexOf(Object)
- uid: System.DirectoryServices.PropertyValueCollection.Insert(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Insert(Int32,Object)
  nameWithType: PropertyValueCollection.Insert(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Insert(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.Item(System.Int32)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PropertyValueCollection.Item(Int32)
  fullName: System.DirectoryServices.PropertyValueCollection.Item(Int32)
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnClearComplete()
  nameWithType: PropertyValueCollection.OnClearComplete()
  fullName: System.DirectoryServices.PropertyValueCollection.OnClearComplete()
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnInsertComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnInsertComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnInsertComplete(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: PropertyValueCollection.OnRemoveComplete(Int32,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete(Int32,Object)
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete(System.Int32,System.Object,System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnSetComplete(Int32,Object,Object)
  nameWithType: PropertyValueCollection.OnSetComplete(Int32,Object,Object)
  fullName: System.DirectoryServices.PropertyValueCollection.OnSetComplete(Int32,Object,Object)
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
  fullName: System.DirectoryServices.PropertyValueCollection.PropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.PropertyValueCollection.Remove(System.Object)
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Remove(Object)
  nameWithType: PropertyValueCollection.Remove(Object)
  fullName: System.DirectoryServices.PropertyValueCollection.Remove(Object)
- uid: System.DirectoryServices.PropertyValueCollection.Value
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Value
  nameWithType: PropertyValueCollection.Value
  fullName: System.DirectoryServices.PropertyValueCollection.Value
- uid: System.DirectoryServices.PropertyValueCollection.Add*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Add
  nameWithType: PropertyValueCollection.Add
- uid: System.DirectoryServices.PropertyValueCollection.AddRange*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: AddRange
  nameWithType: PropertyValueCollection.AddRange
- uid: System.DirectoryServices.PropertyValueCollection.Contains*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Contains
  nameWithType: PropertyValueCollection.Contains
- uid: System.DirectoryServices.PropertyValueCollection.CopyTo*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: CopyTo
  nameWithType: PropertyValueCollection.CopyTo
- uid: System.DirectoryServices.PropertyValueCollection.IndexOf*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: IndexOf
  nameWithType: PropertyValueCollection.IndexOf
- uid: System.DirectoryServices.PropertyValueCollection.Insert*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Insert
  nameWithType: PropertyValueCollection.Insert
- uid: System.DirectoryServices.PropertyValueCollection.Item*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Item
  nameWithType: PropertyValueCollection.Item
- uid: System.DirectoryServices.PropertyValueCollection.OnClearComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnClearComplete
  nameWithType: PropertyValueCollection.OnClearComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnInsertComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnInsertComplete
  nameWithType: PropertyValueCollection.OnInsertComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnRemoveComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: PropertyValueCollection.OnRemoveComplete
- uid: System.DirectoryServices.PropertyValueCollection.OnSetComplete*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: OnSetComplete
  nameWithType: PropertyValueCollection.OnSetComplete
- uid: System.DirectoryServices.PropertyValueCollection.PropertyName*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: PropertyName
  nameWithType: PropertyValueCollection.PropertyName
- uid: System.DirectoryServices.PropertyValueCollection.Remove*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Remove
  nameWithType: PropertyValueCollection.Remove
- uid: System.DirectoryServices.PropertyValueCollection.Value*
  parent: System.DirectoryServices.PropertyValueCollection
  isExternal: false
  name: Value
  nameWithType: PropertyValueCollection.Value
