### YamlMime:ManagedReference
items:
- uid: System.Activities.WorkflowInspectionServices
  id: WorkflowInspectionServices
  children:
  - System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)
  - System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)
  - System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)
  - System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)
  - System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)
  - System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)
  langs:
  - csharp
  name: WorkflowInspectionServices
  nameWithType: WorkflowInspectionServices
  fullName: System.Activities.WorkflowInspectionServices
  type: Class
  summary: "Предоставляет методы для работы с метаданными времени выполнения для дерева действий."
  syntax:
    content: public static class WorkflowInspectionServices
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)
  id: CacheMetadata(System.Activities.Activity)
  parent: System.Activities.WorkflowInspectionServices
  langs:
  - csharp
  name: CacheMetadata(Activity)
  nameWithType: WorkflowInspectionServices.CacheMetadata(Activity)
  fullName: System.Activities.WorkflowInspectionServices.CacheMetadata(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Кэширует метаданные времени выполнения для указанного дерева действий."
  syntax:
    content: public static void CacheMetadata (System.Activities.Activity rootActivity);
    parameters:
    - id: rootActivity
      type: System.Activities.Activity
      description: "Корневое действие дерева действий."
  overload: System.Activities.WorkflowInspectionServices.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)
  id: CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)
  parent: System.Activities.WorkflowInspectionServices
  langs:
  - csharp
  name: CacheMetadata(Activity,LocationReferenceEnvironment)
  nameWithType: WorkflowInspectionServices.CacheMetadata(Activity,LocationReferenceEnvironment)
  fullName: System.Activities.WorkflowInspectionServices.CacheMetadata(Activity,LocationReferenceEnvironment)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Кэширует метаданные времени выполнения для указанного дерева действий с использованием указанной среды."
  syntax:
    content: public static void CacheMetadata (System.Activities.Activity rootActivity, System.Activities.LocationReferenceEnvironment hostEnvironment);
    parameters:
    - id: rootActivity
      type: System.Activities.Activity
      description: "Корневое действие дерева действий."
    - id: hostEnvironment
      type: System.Activities.LocationReferenceEnvironment
      description: "Среда, связанная с деревом действий."
  overload: System.Activities.WorkflowInspectionServices.CacheMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)
  id: CanInduceIdle(System.Activities.Activity)
  parent: System.Activities.WorkflowInspectionServices
  langs:
  - csharp
  name: CanInduceIdle(Activity)
  nameWithType: WorkflowInspectionServices.CanInduceIdle(Activity)
  fullName: System.Activities.WorkflowInspectionServices.CanInduceIdle(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Указывает, включают ли служба простоя действий."
  syntax:
    content: public static bool CanInduceIdle (System.Activities.Activity activity);
    parameters:
    - id: activity
      type: System.Activities.Activity
      description: "Действие."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Если служба может включать простоя действия; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.WorkflowInspectionServices.CanInduceIdle*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)
  id: GetActivities(System.Activities.Activity)
  parent: System.Activities.WorkflowInspectionServices
  langs:
  - csharp
  name: GetActivities(Activity)
  nameWithType: WorkflowInspectionServices.GetActivities(Activity)
  fullName: System.Activities.WorkflowInspectionServices.GetActivities(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Возвращает &lt;xref:System.Collections.Generic.IEnumerable%601&gt; , представляющий все действия, связанные с входным действием."
  remarks: "Перечисление содержит все дочерние действия, обработчики делегатов, значения переменных по умолчанию и выражения аргументов. Если входным действием является `null`, <xref:System.ArgumentNullException>возникает исключение.</xref:System.ArgumentNullException> Дерево действий не должно изменяться и <xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A>не должен вызываться во время перечисления, в противном случае дерева <xref:System.InvalidOperationException>возникает, когда <xref:System.Collections.IEnumerator.MoveNext%2A>называется.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.InvalidOperationException> </xref:System.Activities.WorkflowInspectionServices.CacheMetadata%2A>       Вызов этого метода вызывает полное кэширование метаданных. При внесении изменений в рабочий процесс после вызова этого метода необходимо вызвать <xref:System.Activities.Validation.ActivityValidationServices> <xref:System.Activities.Validation.ActivityValidationServices.Validate%2A>метод после внесения изменений, чтобы заново кэшировать метаданные.</xref:System.Activities.Validation.ActivityValidationServices.Validate%2A> </xref:System.Activities.Validation.ActivityValidationServices>"
  syntax:
    content: public static System.Collections.Generic.IEnumerable<System.Activities.Activity> GetActivities (System.Activities.Activity activity);
    parameters:
    - id: activity
      type: System.Activities.Activity
      description: "Корневое действие."
    return:
      type: System.Collections.Generic.IEnumerable{System.Activities.Activity}
      description: "Перечисление, представляющее все действия, связанные с входным действием."
  overload: System.Activities.WorkflowInspectionServices.GetActivities*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)
  id: GetImplementationVersion(System.Activities.Activity)
  parent: System.Activities.WorkflowInspectionServices
  langs:
  - csharp
  name: GetImplementationVersion(Activity)
  nameWithType: WorkflowInspectionServices.GetImplementationVersion(Activity)
  fullName: System.Activities.WorkflowInspectionServices.GetImplementationVersion(Activity)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Получает версию реализации действия."
  syntax:
    content: public static Version GetImplementationVersion (System.Activities.Activity activity);
    parameters:
    - id: activity
      type: System.Activities.Activity
      description: "Действие."
    return:
      type: System.Version
      description: "Версия реализации действия."
  overload: System.Activities.WorkflowInspectionServices.GetImplementationVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)
  id: Resolve(System.Activities.Activity,System.String)
  parent: System.Activities.WorkflowInspectionServices
  langs:
  - csharp
  name: Resolve(Activity,String)
  nameWithType: WorkflowInspectionServices.Resolve(Activity,String)
  fullName: System.Activities.WorkflowInspectionServices.Resolve(Activity,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Возвращает действие с указанным <code> id </code> из указанного дерева действий."
  syntax:
    content: public static System.Activities.Activity Resolve (System.Activities.Activity root, string id);
    parameters:
    - id: root
      type: System.Activities.Activity
      description: "Дерево действий для поиска."
    - id: id
      type: System.String
      description: "Идентификатор действия для поиска."
    return:
      type: System.Activities.Activity
      description: "Указанное действие, если он найден; в противном случае <xref:System.ArgumentException>возникает исключение.</xref:System.ArgumentException>"
  overload: System.Activities.WorkflowInspectionServices.Resolve*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity)
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: CacheMetadata(Activity)
  nameWithType: WorkflowInspectionServices.CacheMetadata(Activity)
  fullName: System.Activities.WorkflowInspectionServices.CacheMetadata(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.WorkflowInspectionServices.CacheMetadata(System.Activities.Activity,System.Activities.LocationReferenceEnvironment)
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: CacheMetadata(Activity,LocationReferenceEnvironment)
  nameWithType: WorkflowInspectionServices.CacheMetadata(Activity,LocationReferenceEnvironment)
  fullName: System.Activities.WorkflowInspectionServices.CacheMetadata(Activity,LocationReferenceEnvironment)
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.WorkflowInspectionServices.CanInduceIdle(System.Activities.Activity)
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: CanInduceIdle(Activity)
  nameWithType: WorkflowInspectionServices.CanInduceIdle(Activity)
  fullName: System.Activities.WorkflowInspectionServices.CanInduceIdle(Activity)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.WorkflowInspectionServices.GetActivities(System.Activities.Activity)
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: GetActivities(Activity)
  nameWithType: WorkflowInspectionServices.GetActivities(Activity)
  fullName: System.Activities.WorkflowInspectionServices.GetActivities(Activity)
- uid: System.Collections.Generic.IEnumerable{System.Activities.Activity}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Activity>
  nameWithType: IEnumerable<Activity>
  fullName: System.Collections.Generic.IEnumerable<System.Activities.Activity>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Activities.Activity>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Activity
    name: Activity
    nameWithType: Activity
    fullName: Activity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.WorkflowInspectionServices.GetImplementationVersion(System.Activities.Activity)
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: GetImplementationVersion(Activity)
  nameWithType: WorkflowInspectionServices.GetImplementationVersion(Activity)
  fullName: System.Activities.WorkflowInspectionServices.GetImplementationVersion(Activity)
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Activities.WorkflowInspectionServices.Resolve(System.Activities.Activity,System.String)
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: Resolve(Activity,String)
  nameWithType: WorkflowInspectionServices.Resolve(Activity,String)
  fullName: System.Activities.WorkflowInspectionServices.Resolve(Activity,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.WorkflowInspectionServices.CacheMetadata*
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: CacheMetadata
  nameWithType: WorkflowInspectionServices.CacheMetadata
- uid: System.Activities.WorkflowInspectionServices.CanInduceIdle*
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: CanInduceIdle
  nameWithType: WorkflowInspectionServices.CanInduceIdle
- uid: System.Activities.WorkflowInspectionServices.GetActivities*
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: GetActivities
  nameWithType: WorkflowInspectionServices.GetActivities
- uid: System.Activities.WorkflowInspectionServices.GetImplementationVersion*
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: GetImplementationVersion
  nameWithType: WorkflowInspectionServices.GetImplementationVersion
- uid: System.Activities.WorkflowInspectionServices.Resolve*
  parent: System.Activities.WorkflowInspectionServices
  isExternal: false
  name: Resolve
  nameWithType: WorkflowInspectionServices.Resolve
