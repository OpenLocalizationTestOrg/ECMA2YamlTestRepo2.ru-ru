### YamlMime:ManagedReference
items:
- uid: System.Data.Odbc.OdbcParameter
  id: OdbcParameter
  children:
  - System.Data.Odbc.OdbcParameter.#ctor
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  - System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  - System.Data.Odbc.OdbcParameter.DbType
  - System.Data.Odbc.OdbcParameter.Direction
  - System.Data.Odbc.OdbcParameter.IsNullable
  - System.Data.Odbc.OdbcParameter.OdbcType
  - System.Data.Odbc.OdbcParameter.ParameterName
  - System.Data.Odbc.OdbcParameter.Precision
  - System.Data.Odbc.OdbcParameter.ResetDbType
  - System.Data.Odbc.OdbcParameter.ResetOdbcType
  - System.Data.Odbc.OdbcParameter.Scale
  - System.Data.Odbc.OdbcParameter.Size
  - System.Data.Odbc.OdbcParameter.SourceColumn
  - System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  - System.Data.Odbc.OdbcParameter.SourceVersion
  - System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  - System.Data.Odbc.OdbcParameter.ToString
  - System.Data.Odbc.OdbcParameter.Value
  langs:
  - csharp
  name: OdbcParameter
  nameWithType: OdbcParameter
  fullName: System.Data.Odbc.OdbcParameter
  type: Class
  summary: "Представляет параметр для <xref href=&quot;System.Data.Odbc.OdbcCommand&quot;> </xref> и при необходимости, его отображение в <xref href=&quot;System.Data.DataColumn&quot;> </xref>. Этот класс не наследуется."
  remarks: "Имена параметров не учитывается регистр.       При запросе к базе данных, используя поставщик Microsoft OLE DB для Oracle (MSDAORA) и поставщик данных ODBC .NET Framework, используя `LIKE` для запроса значений в полях фиксированной длины не может возвратить все ожидаемые соответствия. По причине, что при Oracle соответствует значения полей фиксированной длины в `LIKE` предложение, он соответствует на всю длину строки, включая конечные пробелы. Например, если таблицы в базе данных Oracle содержит поле с именем «Field1», определенное как `char(3)`, и введите значение «» в строку этой таблицы, следующий код не будет возвращать строку.      ```vb#   Dim queryString As String = &quot;SELECT * FROM Table1 WHERE Field1 LIKE ?&quot;   Dim command As OleDbCommand = New OleDbCommand(queryString, connection)   command.Parameters.Add(&quot;@p1&quot;, OleDbType.Char, 3).Value = &quot;a&quot;   Dim reader As OleDbDataReader = command.ExecuteReader()   ```      ```c#   string queryString = &quot;SELECT * FROM Table1 WHERE Field1 LIKE ?&quot;;   OleDbCommand command = new OleDbCommand(queryString, connection);   command.Parameters.Add(&quot;@p1&quot;, OleDbType.Char, 3).Value = &quot;a&quot;;   OleDbDataReader reader = command.ExecuteReader();   ```Это потому что Oracle хранит значение столбца «a» (padding «», на конечные пробелы, поля фиксированной длины 3), который Oracle не распознает как сопоставление для значения параметра «a» в случае использования `LIKE` сравнения полей фиксированной длины.       Чтобы устранить эту проблему, добавьте подстановочный знак процента («%») со значением параметра (`&quot;a%&quot;`), или с помощью SQL `=` сравнения вместо него."
  example:
  - "The following example creates multiple instances of OdbcParameter through the <xref:System.Data.Odbc.OdbcParameterCollection> within the <xref:System.Data.Odbc.OdbcDataAdapter>. These parameters are used to select data from the data source and place the data in the <xref:System.Data.DataSet>. This example assumes that a <xref:System.Data.DataSet> and an <xref:System.Data.Odbc.OdbcDataAdapter> have already been created by using the appropriate schema, commands, and connection.  \n  \n [!code-cs[Classic WebData OdbcParameter#1](~/add/codesnippet/csharp/t-system.data.odbc.odbcp_1_1.cs)]\n [!code-vb[Classic WebData OdbcParameter#1](~/add/codesnippet/visualbasic/t-system.data.odbc.odbcp_1_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Data.Odbc.OdbcParameter/OdbcParameterConverter))]

      public sealed class OdbcParameter : System.Data.Common.DbParameter, ICloneable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbParameter
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Precision
  - System.Data.Common.DbParameter.System#Data#IDbDataParameter#Scale
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor
  id: '#ctor'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter()
  nameWithType: OdbcParameter.OdbcParameter()
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> класса."
  remarks: "Базовый конструктор инициализирует все поля значениями по умолчанию."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter#1](~/add/codesnippet/csharp/m-system.data.odbc.odbcp_1_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter#1](~/add/codesnippet/visualbasic/m-system.data.odbc.odbcp_1_1.vb)]"
  syntax:
    content: public OdbcParameter ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> класс, который использует параметр имя и тип данных."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData OdbcParameter.OdbcParameter1#1](~/add/codesnippet/visualbasic/dcf1840c-d8ee-4878-9114-_1.vb)]\n [!code-cs[Classic WebData OdbcParameter.OdbcParameter1#1](~/add/codesnippet/csharp/dcf1840c-d8ee-4878-9114-_1.cs)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type);
    parameters:
    - id: name
      type: System.String
      description: "Имя параметра."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "Один из <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> значения."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> type </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> класс, использующий имя параметра и <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> объекта."
  remarks: "Соблюдайте осторожность при использовании перегруженного <xref:System.Data.Odbc.OdbcParameter>конструктор для задания целочисленных значений параметров.</xref:System.Data.Odbc.OdbcParameter> Поскольку данная перегрузка принимает `value` типа <xref:System.Object>, необходимо преобразовать целое значение в <xref:System.Object>типа, когда значение равно нулю, как показано в следующем примере C#.</xref:System.Object> </xref:System.Object>      ```   Parameter = new OdbcParameter(&quot;@pname&quot;, Convert.ToInt32(0));   ```Если такое преобразование не выполнено, компилятор предполагает, что вы пытаетесь вызвать <xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName>перегрузку конструктора.</xref:System.Data.Odbc.OdbcParameter.%23ctor%2A?displayProperty=fullName>"
  syntax:
    content: public OdbcParameter (string name, object value);
    parameters:
    - id: name
      type: System.String
      description: "Имя параметра."
    - id: value
      type: System.Object
      description: "<xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> Объекта."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> класс, использующий имя параметра, тип данных и длину."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter2#1](~/add/codesnippet/csharp/7ed6d552-f3e9-4f28-af5c-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter2#1](~/add/codesnippet/visualbasic/7ed6d552-f3e9-4f28-af5c-_1.vb)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size);
    parameters:
    - id: name
      type: System.String
      description: "Имя параметра."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "Один из <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> значения."
    - id: size
      type: System.Int32
      description: "Длина параметра."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> type </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,String)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> класс, использующий имя параметра, тип данных, длину и имя исходного столбца."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter3#1](~/add/codesnippet/csharp/6bdbd90e-e8bb-418c-bf3d-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter3#1](~/add/codesnippet/visualbasic/6bdbd90e-e8bb-418c-bf3d-_1.vb)]"
  syntax:
    content: public OdbcParameter (string name, System.Data.Odbc.OdbcType type, int size, string sourcecolumn);
    parameters:
    - id: name
      type: System.String
      description: "Имя параметра."
    - id: type
      type: System.Data.Odbc.OdbcType
      description: "Один из <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> значения."
    - id: size
      type: System.Int32
      description: "Длина параметра."
    - id: sourcecolumn
      type: System.String
      description: "Имя исходного столбца."
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> type </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> класс, использующий имя параметра, тип данных, длину, имя исходного столбца, направление параметра, числовую точность и другие свойства."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  \n  \n [!code-cs[Classic WebData OdbcParameter.OdbcParameter4#1](~/add/codesnippet/csharp/46568e54-ed99-4cb1-9dd6-_1.cs)]\n [!code-vb[Classic WebData OdbcParameter.OdbcParameter4#1](~/add/codesnippet/visualbasic/46568e54-ed99-4cb1-9dd6-_1.vb)]"
  syntax:
    content: public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, bool isNullable, byte precision, byte scale, string srcColumn, System.Data.DataRowVersion srcVersion, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "Имя параметра."
    - id: odbcType
      type: System.Data.Odbc.OdbcType
      description: "Один из <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> значения."
    - id: size
      type: System.Int32
      description: "Длина параметра."
    - id: parameterDirection
      type: System.Data.ParameterDirection
      description: "Один из <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения."
    - id: isNullable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение поля может быть null. в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: precision
      type: System.Byte
      description: "Общее число разрядов слева и справа от десятичной запятой, до которого <xref:System.Data.Odbc.OdbcParameter.Value*>разрешается.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "Общее число десятичных разрядов, до которого <xref:System.Data.Odbc.OdbcParameter.Value*>разрешается.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: srcColumn
      type: System.String
      description: "Имя исходного столбца."
    - id: srcVersion
      type: System.Data.DataRowVersion
      description: "Один из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения."
    - id: value
      type: System.Object
      description: "<xref:System.Object>, Представляющий значение <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> type </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  id: '#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)'
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref> класс, использующий имя параметра, тип данных, длину, имя исходного столбца, направление параметра, числовую точность и другие свойства."
  remarks: ''
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and displays the <xref:System.Data.Odbc.OdbcParameter.ParameterName%2A>.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n  Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 11, ParameterDirection.Output, True, 0, 0, \"Description\", DataRowVersion.Current, False, \"garden hose\")  \n  MessageBox.Show(parameter.ToString())  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n{  \n  OdbcParameter parameter = new OdbcParameter(\"Description\",OdbcType.VarChar,  \n              11,ParameterDirection.Output,true,0,0,\"Description\",  \n              DataRowVersion.Current, false, \"garden hose\");  \n  MessageBox.Show(parameter.ToString());  \n}  \n```"
  syntax:
    content: public OdbcParameter (string parameterName, System.Data.Odbc.OdbcType odbcType, int size, System.Data.ParameterDirection parameterDirection, byte precision, byte scale, string sourceColumn, System.Data.DataRowVersion sourceVersion, bool sourceColumnNullMapping, object value);
    parameters:
    - id: parameterName
      type: System.String
      description: "Имя параметра."
    - id: odbcType
      type: System.Data.Odbc.OdbcType
      description: "Один из <xref:System.Data.Odbc.OdbcParameter.OdbcType*>значений.</xref:System.Data.Odbc.OdbcParameter.OdbcType*>"
    - id: size
      type: System.Int32
      description: "Длина параметра."
    - id: parameterDirection
      type: System.Data.ParameterDirection
      description: "Один из <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения."
    - id: precision
      type: System.Byte
      description: "Общее число разрядов слева и справа от десятичной запятой, до которого <xref:System.Data.Odbc.OdbcParameter.Value*>разрешается.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: scale
      type: System.Byte
      description: "Общее число десятичных разрядов, до которого <xref:System.Data.Odbc.OdbcParameter.Value*>разрешается.</xref:System.Data.Odbc.OdbcParameter.Value*>"
    - id: sourceColumn
      type: System.String
      description: "Имя исходного столбца."
    - id: sourceVersion
      type: System.Data.DataRowVersion
      description: "Один из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения."
    - id: sourceColumnNullMapping
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если соответствующий исходный столбец допускает значение NULL; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если это не так."
    - id: value
      type: System.Object
      description: "<xref:System.Object>, Представляющий значение <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Значение, указанное в <code> type </code> параметр является типом недопустимые данные в серверной части."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.DbType
  id: DbType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: DbType
  nameWithType: OdbcParameter.DbType
  fullName: System.Data.Odbc.OdbcParameter.DbType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает <xref href=&quot;System.Data.DbType&quot;> </xref> параметра."
  remarks: "<xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>И связанных DbType.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> Следовательно параметр тип DbType изменения <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>на вспомогательные <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>       Список поддерживаемых типов данных см. в разделе соответствующего <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>член.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> Дополнительные сведения см. в разделе [параметры DataAdapter](~/add/includes/ajax-current-ext-md.md).      настроек [!NOTE] настроек <xref:System.Data.DbType>не поддерживается поставщиком данных Microsoft .NET Framework для ODBC.</xref:System.Data.DbType>"
  example:
  - "The following example calls a **Stored Procedure** with three parameters using the ODBC managed provider.  \n  \n [!code-vb[Classic WebData OdbcParameter.DbType#1](~/add/codesnippet/visualbasic/p-system.data.odbc.odbcp_1_1.vb)]\n [!code-cs[Classic WebData OdbcParameter.DbType#1](~/add/codesnippet/csharp/p-system.data.odbc.odbcp_1_1.cs)]"
  syntax:
    content: public override System.Data.DbType DbType { get; set; }
    return:
      type: System.Data.DbType
      description: "Один из <xref href=&quot;System.Data.DbType&quot;> </xref> значения. Значение по умолчанию — <xref:System.String>.</xref:System.String>"
  overload: System.Data.Odbc.OdbcParameter.DbType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Свойство не было задано допустимое <xref href=&quot;System.Data.DbType&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Direction
  id: Direction
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Direction
  nameWithType: OdbcParameter.Direction
  fullName: System.Data.Odbc.OdbcParameter.Direction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает значение, указывающее ли параметр только входным, только выходным, двунаправленным или параметром возвращаемое значение хранимой процедурой."
  remarks: "Если <xref:System.Data.ParameterDirection>является `Output`и выполнение связанного <xref:System.Data.Odbc.OdbcCommand>не возвращает значение, <xref:System.Data.Odbc.OdbcParameter>будет содержать значение null.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcCommand> </xref:System.Data.ParameterDirection> Значения NULL обрабатываются с помощью <xref:System.DBNull>класса.</xref:System.DBNull>       `Output`, `InputOut`, и `ReturnValue` параметров, возвращенный при вызове <xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>будет невозможен до вызова <xref:System.Data.Odbc.OdbcDataReader.Close%2A>или `Dispose` <xref:System.Data.Odbc.OdbcDataReader>.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcDataReader.Close%2A> </xref:System.Data.Odbc.OdbcCommand.ExecuteReader%2A>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateMyProc(connection As OdbcConnection)  \n  \n   Dim command As OdbcCommand = connection.CreateCommand()  \n   command.CommandText = \"{ call MyProc(?,?,?) }\"  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3  \n  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateMyProc(OdbcConnection connection)   \n{  \n   OdbcCommand command = connection.CreateCommand();  \n   command.CommandText = \"{ call MyProc(?,?,?) }\";  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3;  \n}  \n```"
  syntax:
    content: public override System.Data.ParameterDirection Direction { get; set; }
    return:
      type: System.Data.ParameterDirection
      description: "Один из <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения. Значение по умолчанию — <xref uid=&quot;langword_csharp_Input&quot; name=&quot;Input&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcParameter.Direction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Свойство не было задано одно из допустимых <xref href=&quot;System.Data.ParameterDirection&quot;> </xref> значения."
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.IsNullable
  id: IsNullable
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
  fullName: System.Data.Odbc.OdbcParameter.IsNullable
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает значение, указывающее, принимает ли этот параметр значения null."
  remarks: "Значения NULL обрабатываются с помощью <xref:System.DBNull>класса.</xref:System.DBNull>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n   Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n   parameter.IsNullable = True  \n   parameter.Direction = ParameterDirection.Output  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n{  \n   OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n   parameter.IsNullable = true;  \n   parameter.Direction = ParameterDirection.Output;  \n}  \n```"
  syntax:
    content: public override bool IsNullable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значения null принимаются; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcParameter.IsNullable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.OdbcType
  id: OdbcType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
  fullName: System.Data.Odbc.OdbcParameter.OdbcType
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> параметра."
  remarks: "OdbcType и <xref:System.Data.Odbc.OdbcParameter.DbType%2A>связаны.</xref:System.Data.Odbc.OdbcParameter.DbType%2A> Таким образом Если <xref:System.Data.Odbc.OdbcParameter.DbType%2A>изменения OdbcType на вспомогательные <xref:System.Data.Odbc.OdbcType>.</xref:System.Data.Odbc.OdbcType> </xref:System.Data.Odbc.OdbcParameter.DbType%2A>       Список поддерживаемых типов данных см. в разделе соответствующего <xref:System.Data.Odbc.OdbcType>член.</xref:System.Data.Odbc.OdbcType> Дополнительные сведения см. в разделе [параметры DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Data.Odbc.OdbcType OdbcType { get; set; }
    return:
      type: System.Data.Odbc.OdbcType
      description: "<xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> Значение, равное <xref href=&quot;System.Data.Odbc.OdbcType&quot;> </xref> параметра. Значение по умолчанию — <xref uid=&quot;langword_csharp_Nchar&quot; name=&quot;Nchar&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Odbc.OdbcParameter.OdbcType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ParameterName
  id: ParameterName
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
  fullName: System.Data.Odbc.OdbcParameter.ParameterName
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает имя <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>."
  remarks: "Вместо именованных параметров поставщик ODBC .NET использует позиционные параметры, которые помечены знаком вопроса (?) в синтаксисе текста команды. Объекты параметров в <xref:System.Data.Odbc.OdbcParameterCollection>и фактические параметры, допустимые для хранимой процедуры или параметризованные инструкции SQL соответствуют друг с другом на основе порядка, в котором <xref:System.Data.Odbc.OdbcParameter>вставки объектов в коллекции, а не по имени параметра.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameterCollection> Имена параметров может быть передано, но будут игнорироваться во время связывания объектов параметров."
  example:
  - "The following example assumes that the data source has a table name **MyTable** and a stored procedure named MyProc that is defined as:  \n  \n```  \nCREATE TABLE MyTable (col1 int, col2 smallmoney, col3 decimal)  \nCREATE PROC MyProc (@p1 int, @p2 smallmoney, @p3 decimal) AS INSERT INTO MyTable VALUES (@p1, @p2, @p3)  \n```  \n  \n The following example creates parameters and calls the MyProc stored procedure:  \n  \n```vb#  \nPublic Sub CreateMyProc(connection As OdbcConnection)  \n  \n   Dim command As OdbcCommand = connection.CreateCommand()  \n  \n   command.CommandText = \"{ call MyProc(?,?,?) }\"  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3  \n  \nEnd Sub  \n```  \n  \n```c#  \npublic void CreateMyProc(OdbcConnection connection)   \n{  \n   OdbcCommand command = myConnection.CreateCommand();  \n  \n   command.CommandText = \"{ call MyProc(?,?,?) }\";  \n   command.Parameters.Add(\"\", OdbcType.Int).Value = 1;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 2;  \n   command.Parameters.Add(\"\", OdbcType.Decimal).Value = 3;  \n}  \n```"
  syntax:
    content: public override string ParameterName { get; set; }
    return:
      type: System.String
      description: "Имя <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>. Значение по умолчанию — пустая строка (»»)."
  overload: System.Data.Odbc.OdbcParameter.ParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Precision
  id: Precision
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Precision
  nameWithType: OdbcParameter.Precision
  fullName: System.Data.Odbc.OdbcParameter.Precision
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает количество разрядов, используемых для представления <xref:System.Data.Odbc.OdbcParameter.Value*>свойство.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "Присвоение этому свойству значение, отличное от значения в базе данных зависит от реализации поставщика данных и могут возвращать данные кода ошибки усечения или round.       Свойство точности влияет только на параметры которого <xref:System.Data.Odbc.OdbcType>— `Decimal` или `Numeric`.</xref:System.Data.Odbc.OdbcType> Для других типов данных точность учитывается.      Настроек [!NOTE] настроек использование этого свойства для принудительного ограничения данных, передаваемые в базу данных не поддерживается. Чтобы округлить, усечения или иного принудительного ограничения данных до его передачи в базу данных, используйте <xref:System.Math>класс, который является частью `System` имен до присвоения значения параметру `Value` свойство.</xref:System.Math>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Price\", OdbcType.Decimal)  \n    parameter.Value = 3.1416  \n    parameter.Precision = 8  \n    parameter.Scale = 4  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Price\", OdbcType.Decimal);  \n    parameter.Value = 3.1416;  \n    parameter.Precision = 8;  \n    parameter.Scale = 4;  \n }  \n```"
  syntax:
    content: public byte Precision { get; set; }
    return:
      type: System.Byte
      description: "Максимальное число разрядов, используемых для представления <> </> *настроек свойств. Значение по умолчанию — 0, означающее, что поставщик данных задает точность для <> </> *настроек."
  overload: System.Data.Odbc.OdbcParameter.Precision*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ResetDbType
  id: ResetDbType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ResetDbType()
  nameWithType: OdbcParameter.ResetDbType()
  fullName: System.Data.Odbc.OdbcParameter.ResetDbType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Сбрасывает тип, связанный с этим <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>."
  remarks: "При выполнении команды, содержащей значения параметров, код может либо явно задавать тип параметра или параметра можно определить его тип, от его значения. Вызов этого метода сбрасывает параметр, чтобы можно было повторно определить его тип из значения, передаваемые в качестве параметра. Вызов этого метода влияет на обе <xref:System.Data.Odbc.OdbcParameter.DbType%2A>и <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>Свойства <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A>       Вызов ResetDbType сбрасывает <xref:System.Data.Odbc.OdbcParameter.DbType%2A>значение по умолчанию (String).</xref:System.Data.Odbc.OdbcParameter.DbType%2A>"
  syntax:
    content: public override void ResetDbType ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.ResetDbType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType
  id: ResetOdbcType
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ResetOdbcType()
  nameWithType: OdbcParameter.ResetOdbcType()
  fullName: System.Data.Odbc.OdbcParameter.ResetOdbcType()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Сбрасывает тип, связанный с этим <xref href=&quot;System.Data.Odbc.OdbcParameter&quot;> </xref>."
  remarks: "При выполнении команды, содержащей значения параметров, код может либо явно задавать тип параметра или параметра можно определить его тип, от его значения. Вызов этого метода сбрасывает параметр, чтобы можно было повторно определить его тип из значения, передаваемые в качестве параметра. Вызов этого метода влияет на обе <xref:System.Data.Odbc.OdbcParameter.DbType%2A>и <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>Свойства <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A>"
  syntax:
    content: public void ResetOdbcType ();
    parameters: []
  overload: System.Data.Odbc.OdbcParameter.ResetOdbcType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Scale
  id: Scale
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Scale
  nameWithType: OdbcParameter.Scale
  fullName: System.Data.Odbc.OdbcParameter.Scale
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает число десятичных разрядов, до которых <xref:System.Data.Odbc.OdbcParameter.Value*>разрешается.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "Свойства шкалы используется только для десятичных и числовых входных параметров.       Влияние этого свойства значение, отличное от значения в базе данных зависит от реализации поставщика данных и может возвращают код ошибки или усечения или округления данных.       Свойства шкалы влияет только на параметры которого <xref:System.Data.Odbc.OdbcType>— `Decimal` или `Numeric`.</xref:System.Data.Odbc.OdbcType> Масштаб учитывается для других типов данных.       При использовании собственного клиента SQL Server 10 (или более поздней версии) для привязки параметр с типом Decimal, Numeric, VarNumeric, DBDate или DBTimeStamp, необходимо вручную указать соответствующее значение шкалы.      Настроек [!NOTE] настроек использование этого свойства для принудительного ограничения данных, передаваемые в базу данных не поддерживается. Чтобы округлить, усечения или иного принудительного ограничения данных до его передачи в базу данных, используйте <xref:System.Math>класс, который является частью `System` имен до присвоения значения параметру `Value` свойство.</xref:System.Math>      Настроек [!NOTE] настроек поставщиков данных .NET framework, которые входят в состав .NET Framework версии 1.0 не проверять `scale` из <xref:System.Decimal>значения параметров.</xref:System.Decimal> Это может вызвать измененных данных, добавляемых в источник данных. При использовании .NET Framework версии 1.0 проверка s`cale` из d`ecimal` значения, прежде чем устанавливать значение параметра. При использовании .NET Framework версии 1.1 или более поздних версиях `scale` значения, превышающие `decimal` Масштаб параметра может лишь подвергнуть усечению по масштабу, если это поддерживается базового драйвера ODBC."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Price\", OdbcType.Decimal)  \n    parameter.Value = 3.1416  \n    parameter.Precision = 8  \n    parameter.Scale = 4  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Price\", OdbcType.Decimal);  \n    parameter.Value = 3.1416;  \n    parameter.Precision = 8;  \n    parameter.Scale = 4;  \n }  \n```"
  syntax:
    content: public byte Scale { get; set; }
    return:
      type: System.Byte
      description: "Число десятичных разрядов, до которого <xref:System.Data.Odbc.OdbcParameter.Value*>разрешается.</xref:System.Data.Odbc.OdbcParameter.Value*> Значение по умолчанию — 0."
  overload: System.Data.Odbc.OdbcParameter.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Size
  id: Size
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Size
  nameWithType: OdbcParameter.Size
  fullName: System.Data.Odbc.OdbcParameter.Size
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает максимальный размер данных в столбце."
  remarks: "Свойство размера используется для двоичных и строковых типов.       Для нестроковых типов данных и строковых данных ANSI свойство Size относится к числу байтов. Для строковых данных Юникода размер ссылается на число символов. Число строк не включает завершающий символ.       Для типов данных переменной длины `Size` описывает максимальный объем данных для передачи на сервер. Например, для строкового значения Юникода `Size` может использоваться для ограничения объема данных, отправляемых на сервер до&100; символов.       Для двунаправленных и выходных параметров и возвращаемых значений, необходимо задать значение `Size`. Это не является обязательным для входных параметров, и если не задан явно, значение получается из фактического размера указанного параметра при выполнении параметризованных инструкций.       <xref:System.Data.Common.DbParameter.DbType%2A>, <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>, И могут быть заданы свойства размер параметра, задав <xref:System.Data.Odbc.OdbcParameter.Value%2A>.</xref:System.Data.Odbc.OdbcParameter.Value%2A> </xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Common.DbParameter.DbType%2A> Таким образом укажите их не требуется. Тем не менее, они не представлены в <xref:System.Data.Odbc.OdbcParameter>Параметры свойств.</xref:System.Data.Odbc.OdbcParameter> Например, если размер параметра был выведен `Size` не будет содержать выведенное значение после выполнения инструкции.      Настроек [!NOTE] настроек для `OdbcParameter` с <xref:System.Data.Odbc.OdbcParameter.Direction%2A>из `ParameterDirection.Output`, `ParameterDirection.InputOutput`, или `ParameterDirection.ReturnValue`, создается исключение при выполнении команды, если размер значений, возвращаемых источником данных превышает значение параметра `Size` <xref:System.Data.Odbc.OdbcParameter>.</xref:System.Data.Odbc.OdbcParameter> </xref:System.Data.Odbc.OdbcParameter.Direction%2A>       Для типов данных фиксированной длины, значение `Size` учитывается. Можно получить в информационных целях и возвращает максимальное количество байтов, используемых поставщиком при передаче значения параметра на сервер."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim myValue As String = \"12 foot scarf - multiple colors, one previous owner\"  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar)  \n    parameter.Direction = ParameterDirection.Output  \n    parameter.Size = myValue.Length  \n    parameter.Value = myValue  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    string myValue = \"12 foot scarf - multiple colors, one previous owner\";  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar);  \n    parameter.Direction = ParameterDirection.Output;  \n    parameter.Size = myValue.Length;  \n    parameter.Value = myValue;  \n }  \n```"
  syntax:
    content: public override int Size { get; set; }
    return:
      type: System.Int32
      description: "Максимальный размер данных в столбце. Значение по умолчанию выводится из значения параметра."
  overload: System.Data.Odbc.OdbcParameter.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceColumn
  id: SourceColumn
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
  fullName: System.Data.Odbc.OdbcParameter.SourceColumn
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает имя исходного столбца, сопоставленного <xref href=&quot;System.Data.DataSet&quot;> </xref> и используется для загрузки или возвращения <xref:System.Data.Odbc.OdbcParameter.Value*>.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "Когда свойство SourceColumn указано значение, отличное от пустой строки, значение параметра извлекается из столбца с `SourceColumn` имя. Если <xref:System.Data.Odbc.OdbcParameter.Direction%2A>имеет значение `Input`, значение берется из <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Odbc.OdbcParameter.Direction%2A> Если `Direction` равен `Output`, значение берется из источника данных. Объект `Direction` из `InputOutput` представляет собой комбинацию.       Дополнительные сведения о том, как использовать свойство SourceColumn см. в разделе [параметры DataAdapter](~/add/includes/ajax-current-ext-md.md) и [обновление источников данных с помощью DataAdapter](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.SourceColumn = \"Description\"  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.SourceColumn = \"Description\";  \n }  \n```"
  syntax:
    content: public override string SourceColumn { get; set; }
    return:
      type: System.String
      description: "Имя исходного столбца, который будет использоваться для установки значения этого параметра. Значение по умолчанию — пустая строка (»»)."
  overload: System.Data.Odbc.OdbcParameter.SourceColumn*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  id: SourceColumnNullMapping
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
  fullName: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Задает или возвращает значение, показывающее, может ли исходный столбец значение NULL. Это позволяет <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> правильно создавать инструкции Update для столбцов со значением NULL."
  remarks: "Используемые SourceColumnNullMapping <xref:System.Data.Common.DbCommandBuilder>правильно создать команды обновления при работе столбцов со значением NULL.</xref:System.Data.Common.DbCommandBuilder> Как правило использование SourceColumnNullMapping ограничена разработчикам, наследующим <xref:System.Data.Common.DbCommandBuilder>.</xref:System.Data.Common.DbCommandBuilder>       <xref:System.Data.Common.DbCommandBuilder>использует это свойство, чтобы определить, является ли исходный столбец допускает значения NULL и задает для этого свойства `true` Если значение NULL, и `false` , если это не так.</xref:System.Data.Common.DbCommandBuilder> Если <xref:System.Data.Common.DbCommandBuilder>является создание его инструкции Update, он проверяет SourceColumnNullMapping для каждого параметра.</xref:System.Data.Common.DbCommandBuilder> Если свойство `true`, <xref:System.Data.Common.DbCommandBuilder>создает предложение WHERE имеет следующий вид.</xref:System.Data.Common.DbCommandBuilder> В этом выражении запроса «FieldName» представляет имя поля: ```   ((@IsNull_FieldName = 1 AND FieldName IS NULL) OR      (FieldName = @Original_FieldName))   ``` имеет значение false, если SourceColumnNullMapping для поля <xref:System.Data.Common.DbCommandBuilder>приводит к возникновению ошибки следующее предложение WHERE: ```   FieldName = @OriginalFieldName   ``` в дополнение к этому @IsNull_FieldName содержит 1, если поле источника содержит значение null и 0, если это не.</xref:System.Data.Common.DbCommandBuilder> Этот механизм позволяет оптимизировать производительность в SQL Server и предоставляет общий код, который работает в нескольких поставщиков."
  syntax:
    content: public override bool SourceColumnNullMapping { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если исходный столбец допускает значение NULL; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если это не так."
  overload: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.SourceVersion
  id: SourceVersion
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
  fullName: System.Data.Odbc.OdbcParameter.SourceVersion
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> для использования при загрузке <xref:System.Data.Odbc.OdbcParameter.Value*>.</xref:System.Data.Odbc.OdbcParameter.Value*>"
  remarks: "`SourceVersion` Используется <xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A>во время <xref:System.Data.DbDataAdapter.Common.Update%2A>операцию, чтобы определить, установлено ли значение параметра для текущего или исходной.</xref:System.Data.DbDataAdapter.Common.Update%2A> </xref:System.Data.Odbc.OdbcDataAdapter.UpdateCommand%2A> Это позволяет обновить первичные ключи.       Это свойство имеет значение версии <xref:System.Data.DataRow>используемой либо `Item` свойство (`DataRow` индексатора), или <xref:System.Data.DataRow.GetChildRows%2A>метод.</xref:System.Data.DataRow.GetChildRows%2A> </xref:System.Data.DataRow>"
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.SourceColumn = \"Description\"  \n    parameter.SourceVersion = DataRowVersion.Current  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.SourceColumn = \"Description\";  \n    parameter.SourceVersion = DataRowVersion.Current;  \n }  \n```"
  syntax:
    content: public override System.Data.DataRowVersion SourceVersion { get; set; }
    return:
      type: System.Data.DataRowVersion
      description: "Один из <xref href=&quot;System.Data.DataRowVersion&quot;> </xref> значения. Значение по умолчанию — текущий."
  overload: System.Data.Odbc.OdbcParameter.SourceVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: OdbcParameter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcParameter.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Описание этого члена см. в разделе &lt;xref:System.ICloneable.Clone%2A?displayProperty=fullName&gt;."
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Data.Odbc.OdbcParameter>экземпляр приводится к <xref:System.ICloneable>интерфейс.</xref:System.ICloneable> </xref:System.Data.Odbc.OdbcParameter>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Новый <xref:System.Object>, является копией данного экземпляра.</xref:System.Object>"
  overload: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.ToString
  id: ToString
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: ToString()
  nameWithType: OdbcParameter.ToString()
  fullName: System.Data.Odbc.OdbcParameter.ToString()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает строку, содержащую <xref:System.Data.Odbc.OdbcParameter.ParameterName*>.</xref:System.Data.Odbc.OdbcParameter.ParameterName*>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Строка, содержащая <xref:System.Data.Odbc.OdbcParameter.ParameterName*>.</xref:System.Data.Odbc.OdbcParameter.ParameterName*>"
  overload: System.Data.Odbc.OdbcParameter.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Odbc.OdbcParameter.Value
  id: Value
  parent: System.Data.Odbc.OdbcParameter
  langs:
  - csharp
  name: Value
  nameWithType: OdbcParameter.Value
  fullName: System.Data.Odbc.OdbcParameter.Value
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Odbc
  summary: "Возвращает или задает значение параметра."
  remarks: "Для входных параметров значение, привязанное к <xref:System.Data.Odbc.OdbcCommand>, отправляемое на сервер.</xref:System.Data.Odbc.OdbcCommand> Для выходных и возвращаемых значений параметров имеет значение по завершении <xref:System.Data.Odbc.OdbcCommand>и после <xref:System.Data.Odbc.OdbcDataReader>закрыт.</xref:System.Data.Odbc.OdbcDataReader> </xref:System.Data.Odbc.OdbcCommand>       При отправке значения параметра null на сервер пользователь должен указать <xref:System.DBNull>, не допускающий значения null.</xref:System.DBNull> Значение null в системе является пустой объект, который не имеет значения. <xref:System.DBNull>используется для представления значений null.</xref:System.DBNull> Если параметр используется для вызова хранимой процедуры с параметрами, имеющими значения по умолчанию, установка значения по умолчанию для использования в значение null.       Если приложение указывает тип базы данных, связанное значение преобразуется к этому типу, когда поставщик данных отправляет данные на сервер. Поставщик пытается преобразовать любой тип значения, если он поддерживает <xref:System.IConvertible>интерфейса.</xref:System.IConvertible> Если указанный тип не совместим со значением, могут возникнуть ошибки преобразования.       Как <xref:System.Data.Odbc.OdbcParameter.DbType%2A>и <xref:System.Data.Odbc.OdbcParameter.OdbcType%2A>могут быть заданы путем изменения значения свойства.</xref:System.Data.Odbc.OdbcParameter.OdbcType%2A> </xref:System.Data.Odbc.OdbcParameter.DbType%2A> Если это применимо, размер, точность и масштаб также выводится из значения при выполнении параметризованные инструкции. Однако заданные значения не отображаются для пользователя.       Свойство значения заменены `Update` метод."
  example:
  - "The following example creates an <xref:System.Data.Odbc.OdbcParameter> and sets some of its properties.  \n  \n```vb#  \nPublic Sub CreateOdbcParameter()  \n    Dim parameter As New OdbcParameter(\"Description\", OdbcType.VarChar, 88)  \n    parameter.Value = \"garden hose\"  \nEnd Sub   \n```  \n  \n```c#  \npublic void CreateOdbcParameter()   \n {  \n    OdbcParameter parameter = new OdbcParameter(\"Description\", OdbcType.VarChar, 88);  \n    parameter.Value = \"garden hose\";  \n }  \n```"
  syntax:
    content: public override object Value { get; set; }
    return:
      type: System.Object
      description: "<xref:System.Object>Который является значением параметра.</xref:System.Object> Значение по умолчанию имеет значение null."
  overload: System.Data.Odbc.OdbcParameter.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbParameter
  isExternal: false
  name: System.Data.Common.DbParameter
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Data.Odbc.OdbcParameter.#ctor
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter()
  nameWithType: OdbcParameter.OdbcParameter()
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter()
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Odbc.OdbcType
  parent: System.Data.Odbc
  isExternal: false
  name: OdbcType
  nameWithType: OdbcType
  fullName: System.Data.Odbc.OdbcType
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.String)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,String)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,String)
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Boolean,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Boolean,Byte,Byte,String,DataRowVersion,Object)
- uid: System.Data.ParameterDirection
  parent: System.Data
  isExternal: false
  name: ParameterDirection
  nameWithType: ParameterDirection
  fullName: System.Data.ParameterDirection
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.Odbc.OdbcParameter.#ctor(System.String,System.Data.Odbc.OdbcType,System.Int32,System.Data.ParameterDirection,System.Byte,System.Byte,System.String,System.Data.DataRowVersion,System.Boolean,System.Object)
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  nameWithType: OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
  fullName: System.Data.Odbc.OdbcParameter.OdbcParameter(String,OdbcType,Int32,ParameterDirection,Byte,Byte,String,DataRowVersion,Boolean,Object)
- uid: System.Data.Odbc.OdbcParameter.DbType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: DbType
  nameWithType: OdbcParameter.DbType
  fullName: System.Data.Odbc.OdbcParameter.DbType
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Data.Odbc.OdbcParameter.Direction
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Direction
  nameWithType: OdbcParameter.Direction
  fullName: System.Data.Odbc.OdbcParameter.Direction
- uid: System.Data.Odbc.OdbcParameter.IsNullable
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
  fullName: System.Data.Odbc.OdbcParameter.IsNullable
- uid: System.Data.Odbc.OdbcParameter.OdbcType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
  fullName: System.Data.Odbc.OdbcParameter.OdbcType
- uid: System.Data.Odbc.OdbcParameter.ParameterName
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
  fullName: System.Data.Odbc.OdbcParameter.ParameterName
- uid: System.Data.Odbc.OdbcParameter.Precision
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Precision
  nameWithType: OdbcParameter.Precision
  fullName: System.Data.Odbc.OdbcParameter.Precision
- uid: System.Data.Odbc.OdbcParameter.ResetDbType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetDbType()
  nameWithType: OdbcParameter.ResetDbType()
  fullName: System.Data.Odbc.OdbcParameter.ResetDbType()
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetOdbcType()
  nameWithType: OdbcParameter.ResetOdbcType()
  fullName: System.Data.Odbc.OdbcParameter.ResetOdbcType()
- uid: System.Data.Odbc.OdbcParameter.Scale
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Scale
  nameWithType: OdbcParameter.Scale
  fullName: System.Data.Odbc.OdbcParameter.Scale
- uid: System.Data.Odbc.OdbcParameter.Size
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Size
  nameWithType: OdbcParameter.Size
  fullName: System.Data.Odbc.OdbcParameter.Size
- uid: System.Data.Odbc.OdbcParameter.SourceColumn
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
  fullName: System.Data.Odbc.OdbcParameter.SourceColumn
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
  fullName: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping
- uid: System.Data.Odbc.OdbcParameter.SourceVersion
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
  fullName: System.Data.Odbc.OdbcParameter.SourceVersion
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: OdbcParameter.System.ICloneable.Clone()
  fullName: System.Data.Odbc.OdbcParameter.System.ICloneable.Clone()
- uid: System.Data.Odbc.OdbcParameter.ToString
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ToString()
  nameWithType: OdbcParameter.ToString()
  fullName: System.Data.Odbc.OdbcParameter.ToString()
- uid: System.Data.Odbc.OdbcParameter.Value
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Value
  nameWithType: OdbcParameter.Value
  fullName: System.Data.Odbc.OdbcParameter.Value
- uid: System.Data.Odbc.OdbcParameter.#ctor*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcParameter
  nameWithType: OdbcParameter.OdbcParameter
- uid: System.Data.Odbc.OdbcParameter.DbType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: DbType
  nameWithType: OdbcParameter.DbType
- uid: System.Data.Odbc.OdbcParameter.Direction*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Direction
  nameWithType: OdbcParameter.Direction
- uid: System.Data.Odbc.OdbcParameter.IsNullable*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: IsNullable
  nameWithType: OdbcParameter.IsNullable
- uid: System.Data.Odbc.OdbcParameter.OdbcType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: OdbcType
  nameWithType: OdbcParameter.OdbcType
- uid: System.Data.Odbc.OdbcParameter.ParameterName*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ParameterName
  nameWithType: OdbcParameter.ParameterName
- uid: System.Data.Odbc.OdbcParameter.Precision*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Precision
  nameWithType: OdbcParameter.Precision
- uid: System.Data.Odbc.OdbcParameter.ResetDbType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetDbType
  nameWithType: OdbcParameter.ResetDbType
- uid: System.Data.Odbc.OdbcParameter.ResetOdbcType*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ResetOdbcType
  nameWithType: OdbcParameter.ResetOdbcType
- uid: System.Data.Odbc.OdbcParameter.Scale*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Scale
  nameWithType: OdbcParameter.Scale
- uid: System.Data.Odbc.OdbcParameter.Size*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Size
  nameWithType: OdbcParameter.Size
- uid: System.Data.Odbc.OdbcParameter.SourceColumn*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumn
  nameWithType: OdbcParameter.SourceColumn
- uid: System.Data.Odbc.OdbcParameter.SourceColumnNullMapping*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceColumnNullMapping
  nameWithType: OdbcParameter.SourceColumnNullMapping
- uid: System.Data.Odbc.OdbcParameter.SourceVersion*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: SourceVersion
  nameWithType: OdbcParameter.SourceVersion
- uid: System.Data.Odbc.OdbcParameter.System#ICloneable#Clone*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: OdbcParameter.System.ICloneable.Clone
- uid: System.Data.Odbc.OdbcParameter.ToString*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: ToString
  nameWithType: OdbcParameter.ToString
- uid: System.Data.Odbc.OdbcParameter.Value*
  parent: System.Data.Odbc.OdbcParameter
  isExternal: false
  name: Value
  nameWithType: OdbcParameter.Value
