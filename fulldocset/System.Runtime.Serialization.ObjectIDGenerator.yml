### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.ObjectIDGenerator
  id: ObjectIDGenerator
  children:
  - System.Runtime.Serialization.ObjectIDGenerator.#ctor
  - System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)
  - System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)
  langs:
  - csharp
  name: ObjectIDGenerator
  nameWithType: ObjectIDGenerator
  fullName: System.Runtime.Serialization.ObjectIDGenerator
  type: Class
  summary: "Создает идентификаторы для объектов."
  remarks: "ObjectIDGenerator сохраняет сведения о ранее идентифицированному объектов. При обращении для Идентификации объекта ObjectIDGenerator знает, следует ли возвращать существующий код, или создавать и запоминать новый идентификатор.       Идентификаторы уникальны в течение жизненного цикла экземпляра ObjectIDGenerator. Как правило жизни ObjectIDGenerator продолжается, пока <xref:System.Runtime.Serialization.Formatter>Этот созданный его.</xref:System.Runtime.Serialization.Formatter> Идентификаторы объектов имеют смысл только в пределах заданного потока сериализации и используются для отслеживания объектов, имеющих ссылки на другие в графе сериализованный объект.       С помощью хэш-таблицы, ObjectIDGenerator сохраняет какие идентификатор назначается какой объект. Ссылки на объекты, которые уникально идентифицируют каждый объект, являются адресами в куче сбора мусора среды выполнения. Значения ссылок на объект можно изменить во время сериализации, но таблицы автоматически обновляется, указаны правильные сведения.       Идентификаторы объектов являются 64-разрядных чисел. Распределение начинается с единицы, поэтому ноль не является допустимым идентификатором объекта. Форматер может выбрать нулевое значение для представления ссылки на объект, значение которого является `null`."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ObjectIDGenerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor
  id: '#ctor'
  parent: System.Runtime.Serialization.ObjectIDGenerator
  langs:
  - csharp
  name: ObjectIDGenerator()
  nameWithType: ObjectIDGenerator.ObjectIDGenerator()
  fullName: System.Runtime.Serialization.ObjectIDGenerator.ObjectIDGenerator()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Initializes a new instance of the <xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;></xref> class."
  syntax:
    content: public ObjectIDGenerator ();
    parameters: []
  overload: System.Runtime.Serialization.ObjectIDGenerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)
  id: GetId(System.Object,System.Boolean@)
  parent: System.Runtime.Serialization.ObjectIDGenerator
  langs:
  - csharp
  name: GetId(Object,Boolean)
  nameWithType: ObjectIDGenerator.GetId(Object,Boolean)
  fullName: System.Runtime.Serialization.ObjectIDGenerator.GetId(Object,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Возвращает идентификатор для заданного объекта, создавая новый ID, если указанный объект уже не определена <xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>."
  syntax:
    content: public virtual long GetId (object obj, out bool firstTime);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект, который требуется идентификатор."
    - id: firstTime
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если `obj` не был ранее известен <xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int64
      description: "Идентификатор объекта используется для сериализации. <code>firstTime</code>имеет значение <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> была обнаружена при первом объект; в противном случае ему присваивается <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.Serialization.ObjectIDGenerator.GetId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref> Получила запрос для отслеживания слишком много объектов."
  platform:
  - net462
- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)
  id: HasId(System.Object,System.Boolean@)
  parent: System.Runtime.Serialization.ObjectIDGenerator
  langs:
  - csharp
  name: HasId(Object,Boolean)
  nameWithType: ObjectIDGenerator.HasId(Object,Boolean)
  fullName: System.Runtime.Serialization.ObjectIDGenerator.HasId(Object,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Определяет, был ли объекту уже присвоен идентификатор."
  remarks: "Если объект уже был присвоен идентификатор, идентификатор возвращается и `firstTime` задано значение `false`; в противном случае возвращается ноль и `firstTime` имеет значение `true`. HasId отличается от <xref:System.Runtime.Serialization.ObjectIDGenerator.GetId%2A>в том, что он никогда не создает идентификатор объекта, который еще не видели <xref:System.Runtime.Serialization.ObjectIDGenerator>.</xref:System.Runtime.Serialization.ObjectIDGenerator> </xref:System.Runtime.Serialization.ObjectIDGenerator.GetId%2A>"
  syntax:
    content: public virtual long HasId (object obj, out bool firstTime);
    parameters:
    - id: obj
      type: System.Object
      description: "Объект, который требует поддержки."
    - id: firstTime
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если `obj` не был ранее известен <xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int64
      description: "Идентификатор объекта <code> obj </code> Если ранее для <xref href=&quot;System.Runtime.Serialization.ObjectIDGenerator&quot;> </xref>; в противном случае — нуль."
  overload: System.Runtime.Serialization.ObjectIDGenerator.HasId*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>obj</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: ObjectIDGenerator()
  nameWithType: ObjectIDGenerator.ObjectIDGenerator()
  fullName: System.Runtime.Serialization.ObjectIDGenerator.ObjectIDGenerator()
- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId(System.Object,System.Boolean@)
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: GetId(Object,Boolean)
  nameWithType: ObjectIDGenerator.GetId(Object,Boolean)
  fullName: System.Runtime.Serialization.ObjectIDGenerator.GetId(Object,Boolean)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId(System.Object,System.Boolean@)
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: HasId(Object,Boolean)
  nameWithType: ObjectIDGenerator.HasId(Object,Boolean)
  fullName: System.Runtime.Serialization.ObjectIDGenerator.HasId(Object,Boolean)
- uid: System.Runtime.Serialization.ObjectIDGenerator.#ctor*
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: ObjectIDGenerator
  nameWithType: ObjectIDGenerator.ObjectIDGenerator
- uid: System.Runtime.Serialization.ObjectIDGenerator.GetId*
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: GetId
  nameWithType: ObjectIDGenerator.GetId
- uid: System.Runtime.Serialization.ObjectIDGenerator.HasId*
  parent: System.Runtime.Serialization.ObjectIDGenerator
  isExternal: false
  name: HasId
  nameWithType: ObjectIDGenerator.HasId
