### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IDesigner
  id: IDesigner
  children:
  - System.ComponentModel.Design.IDesigner.Component
  - System.ComponentModel.Design.IDesigner.DoDefaultAction
  - System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.IDesigner.Verbs
  langs:
  - csharp
  name: IDesigner
  nameWithType: IDesigner
  fullName: System.ComponentModel.Design.IDesigner
  type: Interface
  summary: "Предоставляет базовую оболочку для построения пользовательского конструктора."
  remarks: "Интерфейс IDesigner предоставляет интерфейс, через который можно реализовать базовые службы для конструктора. Конструктор можно изменить поведение компонента во время разработки и может предоставлять собственные службы и поведение. Конструктор активен только во время разработки и должен быть связан с типом компонента с помощью <xref:System.ComponentModel.DesignerAttribute>для загрузки, при создании компонента связанного типа во время разработки.</xref:System.ComponentModel.DesignerAttribute>       Интерфейс IDesigner предоставляет методы и свойства, которые можно реализовать, чтобы предоставить пользовательское поведение во время разработки.       Реализуйте <xref:System.ComponentModel.Design.IDesigner.Initialize%2A>метод конструктора для выполнения действий при создании компонента.</xref:System.ComponentModel.Design.IDesigner.Initialize%2A> Это полезно в том случае, если компонент должен иметь специальную конфигурацию во время разработки или его конфигурацию необходимо изменить в зависимости от условий, которые можно определить в конструкторе.       Конструктор может предоставлять команды в контекстном меню, которое отображается при щелчке компонента или элемента управления в среде времени разработки. Можно реализовать <xref:System.ComponentModel.Design.IDesigner.Verbs%2A>свойство, чтобы определить метод доступа get, возвращающий <xref:System.ComponentModel.Design.DesignerVerbCollection>содержащий <xref:System.ComponentModel.Design.DesignerVerb>объектов для создания команды меню.</xref:System.ComponentModel.Design.DesignerVerb> </xref:System.ComponentModel.Design.DesignerVerbCollection> </xref:System.ComponentModel.Design.IDesigner.Verbs%2A>       Конструктор для компонента, который появляется в области компонентов может выполнять действия по умолчанию, при двойном щелчке компонента. Реализуйте <xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A>метод, чтобы задать поведение для выполнения при двойном щелчке компонента.</xref:System.ComponentModel.Design.IDesigner.DoDefaultAction%2A>       Конструктор также может использовать доступные службы во время разработки для выполнения различных задач, включая поиск текущей среды разработки для компонентов и их свойств, чтение и задание значений свойств компонентов, управление областью элементов, управление выбранных компонентов или отображения пользовательского интерфейса, который может использоваться для настройки значений или для дальнейшей обработки.       Чтобы реализовать конструктор для элемента управления, который можно расположить в форме, можно наследовать от <xref:System.Windows.Forms.Design.ControlDesigner>класса.</xref:System.Windows.Forms.Design.ControlDesigner> Элементы управления, связанный конструктор не является производным от <xref:System.Windows.Forms.Design.ControlDesigner>отображаются в области компонентов.</xref:System.Windows.Forms.Design.ControlDesigner> <xref:System.ComponentModel.Design.ComponentDesigner>И <xref:System.Windows.Forms.Design.ControlDesigner>классы реализуют интерфейс IDesigner и предоставлять дополнительную поддержку времени разработки, может быть использована авторам конструкторов.</xref:System.Windows.Forms.Design.ControlDesigner> </xref:System.ComponentModel.Design.ComponentDesigner> Дополнительные сведения см. в справочной документации для этих классов.       Общие сведения о создании компонентов конструктора см. в разделе [расширения поддержки времени разработки](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example demonstrates an IDesigner implementation that stores a local reference to its component, performs a default action when the component is double-clicked, and provides a designer verb menu command.  \n  \n [!code-cs[IDesignerExample#1](~/add/codesnippet/csharp/t-system.componentmodel._156_1.cs)]\n [!code-vb[IDesignerExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._156_1.vb)]\n [!code-cpp[IDesignerExample#1](~/add/codesnippet/cpp/t-system.componentmodel._156_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IDesigner : IDisposable
  implements:
  - System.IDisposable
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesigner.Component
  id: Component
  parent: System.ComponentModel.Design.IDesigner
  langs:
  - csharp
  name: Component
  nameWithType: IDesigner.Component
  fullName: System.ComponentModel.Design.IDesigner.Component
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает основной компонент, создаваемый данным конструктором."
  syntax:
    content: public System.ComponentModel.IComponent Component { get; }
    return:
      type: System.ComponentModel.IComponent
      description: "<xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> , Указывающее, основной компонент, создаваемый данным конструктором."
  overload: System.ComponentModel.Design.IDesigner.Component*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesigner.DoDefaultAction
  id: DoDefaultAction
  parent: System.ComponentModel.Design.IDesigner
  langs:
  - csharp
  name: DoDefaultAction()
  nameWithType: IDesigner.DoDefaultAction()
  fullName: System.ComponentModel.Design.IDesigner.DoDefaultAction()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Выполняет действие по умолчанию для данного конструктора."
  remarks: "Этот метод вызывается, когда пользователь дважды щелкает представление компонента в области компонентов."
  syntax:
    content: public void DoDefaultAction ();
    parameters: []
  overload: System.ComponentModel.Design.IDesigner.DoDefaultAction*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)
  id: Initialize(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesigner
  langs:
  - csharp
  name: Initialize(IComponent)
  nameWithType: IDesigner.Initialize(IComponent)
  fullName: System.ComponentModel.Design.IDesigner.Initialize(IComponent)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Инициализирует конструктор с указанным компонентом."
  syntax:
    content: public void Initialize (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "Компонент для связи с этим конструктором."
  overload: System.ComponentModel.Design.IDesigner.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IDesigner.Verbs
  id: Verbs
  parent: System.ComponentModel.Design.IDesigner
  langs:
  - csharp
  name: Verbs
  nameWithType: IDesigner.Verbs
  fullName: System.ComponentModel.Design.IDesigner.Verbs
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Возвращает коллекцию команд во время разработки, поддерживаемые конструктором."
  remarks: "Возвращает время команды, поддерживаемые компонентом, связанным с конструктором конструирования. С помощью среды разработки в контекстном меню обычно отображаются команд, возвращаемый этим методом. При выборе одной из команд, обработчик событий, соответствующих <xref:System.ComponentModel.Design.DesignerVerb>вызывается.</xref:System.ComponentModel.Design.DesignerVerb>      Настроек [!NOTE] настроек среды разработки обычно предоставляет **свойства... ** запись, щелкните правой кнопкой мыши меню компонента. Чтобы избежать повтора названий элементов меню, ни одна команда с названием «Свойства...» должны быть включены в <xref:System.ComponentModel.Design.DesignerVerbCollection>.</xref:System.ComponentModel.Design.DesignerVerbCollection>"
  syntax:
    content: public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }
    return:
      type: System.ComponentModel.Design.DesignerVerbCollection
      description: "Объект <xref href=&quot;System.ComponentModel.Design.DesignerVerbCollection&quot;> </xref> , содержащий команды, поддерживаемые в конструкторе или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> Если компонент отсутствуют команды."
  overload: System.ComponentModel.Design.IDesigner.Verbs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IDesigner.Component
  parent: System.ComponentModel.Design.IDesigner
  isExternal: false
  name: Component
  nameWithType: IDesigner.Component
  fullName: System.ComponentModel.Design.IDesigner.Component
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.IDesigner.DoDefaultAction
  parent: System.ComponentModel.Design.IDesigner
  isExternal: false
  name: DoDefaultAction()
  nameWithType: IDesigner.DoDefaultAction()
  fullName: System.ComponentModel.Design.IDesigner.DoDefaultAction()
- uid: System.ComponentModel.Design.IDesigner.Initialize(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.IDesigner
  isExternal: false
  name: Initialize(IComponent)
  nameWithType: IDesigner.Initialize(IComponent)
  fullName: System.ComponentModel.Design.IDesigner.Initialize(IComponent)
- uid: System.ComponentModel.Design.IDesigner.Verbs
  parent: System.ComponentModel.Design.IDesigner
  isExternal: false
  name: Verbs
  nameWithType: IDesigner.Verbs
  fullName: System.ComponentModel.Design.IDesigner.Verbs
- uid: System.ComponentModel.Design.DesignerVerbCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerbCollection
  nameWithType: DesignerVerbCollection
  fullName: System.ComponentModel.Design.DesignerVerbCollection
- uid: System.ComponentModel.Design.IDesigner.Component*
  parent: System.ComponentModel.Design.IDesigner
  isExternal: false
  name: Component
  nameWithType: IDesigner.Component
- uid: System.ComponentModel.Design.IDesigner.DoDefaultAction*
  parent: System.ComponentModel.Design.IDesigner
  isExternal: false
  name: DoDefaultAction
  nameWithType: IDesigner.DoDefaultAction
- uid: System.ComponentModel.Design.IDesigner.Initialize*
  parent: System.ComponentModel.Design.IDesigner
  isExternal: false
  name: Initialize
  nameWithType: IDesigner.Initialize
- uid: System.ComponentModel.Design.IDesigner.Verbs*
  parent: System.ComponentModel.Design.IDesigner
  isExternal: false
  name: Verbs
  nameWithType: IDesigner.Verbs
