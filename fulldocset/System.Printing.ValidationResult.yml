### YamlMime:ManagedReference
items:
- uid: System.Printing.ValidationResult
  id: ValidationResult
  children:
  - System.Printing.ValidationResult.ConflictStatus
  - System.Printing.ValidationResult.Equals(System.Object)
  - System.Printing.ValidationResult.GetHashCode
  - System.Printing.ValidationResult.op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  - System.Printing.ValidationResult.op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  - System.Printing.ValidationResult.ValidatedPrintTicket
  langs:
  - csharp
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Printing.ValidationResult
  type: Struct
  summary: "Представляет объединенный <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> , гарантированно работоспособен, с отчетом, все параметры, которые были изменены с этой целью."
  remarks: "Если основной <xref:System.Printing.PrintTicket>запрашивает печати, принтер не поддерживает, драйвер принтера разрешает все конфликты, чтобы получился работоспособный билет.</xref:System.Printing.PrintTicket>"
  example:
  - "The following example shows how to use the values of this type while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public struct ValidationResult
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.ConflictStatus
  id: ConflictStatus
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: ConflictStatus
  nameWithType: ValidationResult.ConflictStatus
  fullName: System.Printing.ValidationResult.ConflictStatus
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Возвращает значение, указывающее, произошла ли конфликт между функциональных возможностей, поддерживаемых принтера и функциональность, запрашиваемую в начальной слиянии двух исходных <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>s."
  syntax:
    content: public System.Printing.ConflictStatus ConflictStatus { get; }
    return:
      type: System.Printing.ConflictStatus
      description: "Один из <xref href=&quot;System.Printing.ConflictStatus&quot;> </xref> значения, которое указывает, что нет конфликта, либо произошло по крайней мере один конфликт, но был разрешен. Значение по умолчанию — <xref href=&quot;System.Printing.ConflictStatus&quot;> </xref>."
  overload: System.Printing.ValidationResult.ConflictStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValidationResult.Equals(Object)
  fullName: System.Printing.ValidationResult.Equals(Object)
  type: Method
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Определяет, является ли указанный <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> совпадает с текущим <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "<xref href=&quot;System.Printing.ValidationResult&quot;> </xref> Для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> равны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>возвращается также, если переданный объект не является <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>."
  overload: System.Printing.ValidationResult.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.GetHashCode
  id: GetHashCode
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValidationResult.GetHashCode()
  fullName: System.Printing.ValidationResult.GetHashCode()
  type: Method
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Возвращает хэш-код, связанный с <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> и его <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> и печати потока."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для текущего <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>."
  overload: System.Printing.ValidationResult.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  id: op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: op_Equality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Equality(ValidationResult,ValidationResult)
  fullName: System.Printing.ValidationResult.op_Equality(ValidationResult,ValidationResult)
  type: Operator
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Определяет, если указанный <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> объекты равны."
  syntax:
    content: public static bool op_Equality (System.Printing.ValidationResult a, System.Printing.ValidationResult b);
    parameters:
    - id: a
      type: System.Printing.ValidationResult
      description: "Первый <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> для сравнения."
    - id: b
      type: System.Printing.ValidationResult
      description: "Второй <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> равны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.ValidationResult.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  id: op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: op_Inequality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  fullName: System.Printing.ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  type: Operator
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Определяет, если указанный <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> объекты не равны."
  syntax:
    content: public static bool op_Inequality (System.Printing.ValidationResult a, System.Printing.ValidationResult b);
    parameters:
    - id: a
      type: System.Printing.ValidationResult
      description: "Первый <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> для сравнения."
    - id: b
      type: System.Printing.ValidationResult
      description: "Второй <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> для сравнения."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> объекты не равны; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.ValidationResult.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.ValidatedPrintTicket
  id: ValidatedPrintTicket
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: ValidatedPrintTicket
  nameWithType: ValidationResult.ValidatedPrintTicket
  fullName: System.Printing.ValidationResult.ValidatedPrintTicket
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Возвращает <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> объект, являющийся результатом объединения двух <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> объектов, которые могут было изменено, чтобы гарантировать его устойчивости."
  remarks: ''
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.PrintTicket ValidatedPrintTicket { get; }
    return:
      type: System.Printing.PrintTicket
      description: "В допустимый и жизнеспособности <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.ValidationResult.ValidatedPrintTicket*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Printing.ValidationResult.ConflictStatus
  parent: System.Printing.ValidationResult
  isExternal: false
  name: ConflictStatus
  nameWithType: ValidationResult.ConflictStatus
  fullName: System.Printing.ValidationResult.ConflictStatus
- uid: System.Printing.ConflictStatus
  parent: System.Printing
  isExternal: false
  name: ConflictStatus
  nameWithType: ConflictStatus
  fullName: System.Printing.ConflictStatus
- uid: System.Printing.ValidationResult.Equals(System.Object)
  parent: System.Printing.ValidationResult
  isExternal: false
  name: Equals(Object)
  nameWithType: ValidationResult.Equals(Object)
  fullName: System.Printing.ValidationResult.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Printing.ValidationResult.GetHashCode
  parent: System.Printing.ValidationResult
  isExternal: false
  name: GetHashCode()
  nameWithType: ValidationResult.GetHashCode()
  fullName: System.Printing.ValidationResult.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Printing.ValidationResult.op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  parent: System.Printing.ValidationResult
  isExternal: false
  name: op_Equality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Equality(ValidationResult,ValidationResult)
  fullName: System.Printing.ValidationResult.op_Equality(ValidationResult,ValidationResult)
- uid: System.Printing.ValidationResult
  parent: System.Printing
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Printing.ValidationResult
- uid: System.Printing.ValidationResult.op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  parent: System.Printing.ValidationResult
  isExternal: false
  name: op_Inequality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  fullName: System.Printing.ValidationResult.op_Inequality(ValidationResult,ValidationResult)
- uid: System.Printing.ValidationResult.ValidatedPrintTicket
  parent: System.Printing.ValidationResult
  isExternal: false
  name: ValidatedPrintTicket
  nameWithType: ValidationResult.ValidatedPrintTicket
  fullName: System.Printing.ValidationResult.ValidatedPrintTicket
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Printing.ValidationResult.ConflictStatus*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: ConflictStatus
  nameWithType: ValidationResult.ConflictStatus
- uid: System.Printing.ValidationResult.Equals*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: Equals
  nameWithType: ValidationResult.Equals
- uid: System.Printing.ValidationResult.GetHashCode*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: GetHashCode
  nameWithType: ValidationResult.GetHashCode
- uid: System.Printing.ValidationResult.op_Equality*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: op_Equality
  nameWithType: ValidationResult.op_Equality
- uid: System.Printing.ValidationResult.op_Inequality*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: op_Inequality
  nameWithType: ValidationResult.op_Inequality
- uid: System.Printing.ValidationResult.ValidatedPrintTicket*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: ValidatedPrintTicket
  nameWithType: ValidationResult.ValidatedPrintTicket
