### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportManyAttribute
  id: ImportManyAttribute
  children:
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportManyAttribute.ContractName
  - System.ComponentModel.Composition.ImportManyAttribute.ContractType
  - System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportManyAttribute.Source
  langs:
  - csharp
  name: ImportManyAttribute
  nameWithType: ImportManyAttribute
  fullName: System.ComponentModel.Composition.ImportManyAttribute
  type: Class
  summary: "Указывает, что свойство, поле или параметр должны заполняться всеми соответствующими экспортами с <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> объекта."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportManyAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute()
  nameWithType: ImportManyAttribute.ImportManyAttribute()
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> класса, импорт набор экспорты с именем контракта по умолчанию."
  remarks: "По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метод для типа свойства, поля или параметра, помеченного с помощью этого атрибута.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(String)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> класса, импорт набор экспорты с указанным именем контракта."
  remarks: "По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метода, свойства, поля или параметра типа, помеченной этим атрибутом.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "Имя контракта для импорта, экспорта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (&quot;») для использования имени контракта по умолчанию."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> класс, импорт набор экспорты с именем контракта, производным от указанного типа."
  remarks: "Имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метод `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       По умолчанию имя контракта является результатом вызова метода <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>метода, свойства, поля или параметра типа, помеченной этим атрибутом.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       Имя контракта сравнивается с помощью <xref:System.StringComparer.Ordinal%2A>свойство для сравнения с учетом регистра, нелингвистических.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportManyAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "Тип, для получения производных имя контракта для импорта, экспорта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> для использования имени контракта по умолчанию."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ImportManyAttribute(String,Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.Composition.ImportManyAttribute&quot;> </xref> класса, импорт набору экспортов с указанным именем и контрактом типом контракта."
  syntax:
    content: public ImportManyAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "Имя контракта для импорта, экспорта или <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> или пустая строка (&quot;») для использования имени контракта по умолчанию."
    - id: contractType
      type: System.Type
      description: "Тип экспорта для импорта."
  overload: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает или задает значение, указывающее, будет ли при экспортов, предоставляющих соответствующий контракт изменение использовать декорированное свойство или поле."
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свойство или поле обеспечивает рекомпозиции при экспорты, предоставлять тот же <xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*>добавляются или удаляются из <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportManyAttribute.ContractName*>       Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает имя контракта импортируемых экспортов."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "Имя контракта импортируемых экспортов. Значение по умолчанию — пустая строка (»»)."
  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Получает тип контракта импортируемого экспорта."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "Тип экспорта, ожидаемый данным импортом. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, что означает, что тип будет получен путем определения типа для члена этого импорта, к которому присоединена. Если тип является <xref:System.Object>, импорт будет соответствовать любой экспортированный тип.</xref:System.Object>"
  overload: System.ComponentModel.Composition.ImportManyAttribute.ContractType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает или задает значение, которое указывает, что средство импорта требуется определенный <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref> для экспортов, используемые для удовлетворения этого импорта."
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Одно из следующих значений: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>, если средство импорта не требует определенного <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>. Это значение по умолчанию.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>Требовать, чтобы все используемые экспорты была предоставлена по всем частям в контейнере.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>Чтобы все используемые экспорты являлся без общего доступа в контейнере. В этом случае каждая часть получает свой собственный экземпляр."
  overload: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportManyAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportManyAttribute.Source
  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Возвращает или задает значение, указывающее областей, из которых эта операция импорта может быть удовлетворено."
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: "Значение, указывающее областей, из которых эта операция импорта может быть удовлетворено."
  overload: System.ComponentModel.Composition.ImportManyAttribute.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute()
  nameWithType: ImportManyAttribute.ImportManyAttribute()
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute()
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(String)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute(String,Type)
  nameWithType: ImportManyAttribute.ImportManyAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ImportManyAttribute(String,Type)
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportManyAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: Source
  nameWithType: ImportManyAttribute.Source
  fullName: System.ComponentModel.Composition.ImportManyAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
- uid: System.ComponentModel.Composition.ImportManyAttribute.#ctor*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ImportManyAttribute
  nameWithType: ImportManyAttribute.ImportManyAttribute
- uid: System.ComponentModel.Composition.ImportManyAttribute.AllowRecomposition*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportManyAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractName*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportManyAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportManyAttribute.ContractType*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportManyAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportManyAttribute.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportManyAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.ImportManyAttribute.Source*
  parent: System.ComponentModel.Composition.ImportManyAttribute
  isExternal: false
  name: Source
  nameWithType: ImportManyAttribute.Source
