### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.HostingEnvironment
  id: HostingEnvironment
  children:
  - System.Web.Hosting.HostingEnvironment.#ctor
  - System.Web.Hosting.HostingEnvironment.ApplicationHost
  - System.Web.Hosting.HostingEnvironment.ApplicationID
  - System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
  - System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
  - System.Web.Hosting.HostingEnvironment.Cache
  - System.Web.Hosting.HostingEnvironment.DecrementBusyCount
  - System.Web.Hosting.HostingEnvironment.Impersonate
  - System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)
  - System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)
  - System.Web.Hosting.HostingEnvironment.InClientBuildManager
  - System.Web.Hosting.HostingEnvironment.IncrementBusyCount
  - System.Web.Hosting.HostingEnvironment.InitializationException
  - System.Web.Hosting.HostingEnvironment.InitializeLifetimeService
  - System.Web.Hosting.HostingEnvironment.InitiateShutdown
  - System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
  - System.Web.Hosting.HostingEnvironment.IsHosted
  - System.Web.Hosting.HostingEnvironment.MapPath(System.String)
  - System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
  - System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
  - System.Web.Hosting.HostingEnvironment.MessageReceived
  - System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})
  - System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  - System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)
  - System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)
  - System.Web.Hosting.HostingEnvironment.SetCultures
  - System.Web.Hosting.HostingEnvironment.SetCultures(System.String)
  - System.Web.Hosting.HostingEnvironment.ShutdownReason
  - System.Web.Hosting.HostingEnvironment.SiteName
  - System.Web.Hosting.HostingEnvironment.StopListening
  - System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)
  - System.Web.Hosting.HostingEnvironment.VirtualPathProvider
  langs:
  - csharp
  name: HostingEnvironment
  nameWithType: HostingEnvironment
  fullName: System.Web.Hosting.HostingEnvironment
  type: Class
  summary: "Предоставляет функции управления приложениями и службы приложений для управляемого приложения в домене приложения. Этот класс не наследуется."
  remarks: "Каждый домен управляемого приложения содержит статический экземпляр класса HostingEnvironment, который предоставляет доступ к функции управления для приложения и службы приложений."
  example:
  - "The following code example is a webpage that displays the application information available from the HostingEnvironment object.  \n  \n [!code-vb[System.Web.Hosting.HostingEnvironment#1](~/add/codesnippet/visualbasic/t-system.web.hosting.hos_1.aspx)]\n [!code-cs[System.Web.Hosting.HostingEnvironment#1](~/add/codesnippet/csharp/t-system.web.hosting.hos_1.aspx)]"
  syntax:
    content: 'public sealed class HostingEnvironment : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: HostingEnvironment()
  nameWithType: HostingEnvironment.HostingEnvironment()
  fullName: System.Web.Hosting.HostingEnvironment.HostingEnvironment()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Hosting.HostingEnvironment&quot;> </xref> класса."
  remarks: "Инициализирует конструктор HostingEnvironment <xref:System.Web.Hosting.HostingEnvironment>объекта.</xref:System.Web.Hosting.HostingEnvironment> Конструктор HostingEnvironment вызывается только один раз в приложении <xref:System.Web.Hosting.ApplicationManager>объекта.</xref:System.Web.Hosting.ApplicationManager> Вызов конструктора HostingEnvironment более одного раза приведет к <xref:System.InvalidOperationException>исключение.</xref:System.InvalidOperationException>"
  syntax:
    content: public HostingEnvironment ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Конструктор HostingEnvironment вызывается несколько раз."
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ApplicationHost
  id: ApplicationHost
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ApplicationHost
  nameWithType: HostingEnvironment.ApplicationHost
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationHost
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Это свойство поддерживает [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] инфраструктуру и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static System.Web.Hosting.IApplicationHost ApplicationHost { get; }
    return:
      type: System.Web.Hosting.IApplicationHost
      description: "Объект, содержащий сведения об узле приложения."
  overload: System.Web.Hosting.HostingEnvironment.ApplicationHost*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ApplicationID
  id: ApplicationID
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ApplicationID
  nameWithType: HostingEnvironment.ApplicationID
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает уникальный идентификатор приложения."
  remarks: "Приложение должно выполняться с <xref:System.Web.AspNetHostingPermissionLevel>присвоено высокого уровня доверия для доступа к свойству ApplicationID.</xref:System.Web.AspNetHostingPermissionLevel>"
  syntax:
    content: public static string ApplicationID { get; }
    return:
      type: System.String
      description: "Уникальный идентификатор приложения."
  overload: System.Web.Hosting.HostingEnvironment.ApplicationID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
  id: ApplicationPhysicalPath
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ApplicationPhysicalPath
  nameWithType: HostingEnvironment.ApplicationPhysicalPath
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Получает физический путь на диске к каталогу приложения."
  remarks: ''
  example:
  - "The following code example uses the ApplicationPhysicalPath property to construct a path to a data file in the application's App_Data directory. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#27](~/add/codesnippet/csharp/p-system.web.hosting.hos_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#27](~/add/codesnippet/visualbasic/p-system.web.hosting.hos_1.vb)]"
  syntax:
    content: public static string ApplicationPhysicalPath { get; }
    return:
      type: System.String
      description: "Физический путь на диске к каталогу приложения."
  overload: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
  id: ApplicationVirtualPath
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ApplicationVirtualPath
  nameWithType: HostingEnvironment.ApplicationVirtualPath
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Получает корневой виртуальный путь приложения."
  remarks: "ApplicationVirtualPath свойство всегда возвращает «`/&quot;` первым символом возвращаемого значения. Если приложение находится в корневом каталоге веб-сайта, возвращается только «`/&quot;`."
  syntax:
    content: public static string ApplicationVirtualPath { get; }
    return:
      type: System.String
      description: "Корневой виртуальный путь приложения без замыкающей косой черты (/)."
  overload: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.Cache
  id: Cache
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: Cache
  nameWithType: HostingEnvironment.Cache
  fullName: System.Web.Hosting.HostingEnvironment.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> экземпляра для текущего приложения."
  syntax:
    content: public static System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "Текущий <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> экземпляра."
  overload: System.Web.Hosting.HostingEnvironment.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.DecrementBusyCount
  id: DecrementBusyCount
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: DecrementBusyCount()
  nameWithType: HostingEnvironment.DecrementBusyCount()
  fullName: System.Web.Hosting.HostingEnvironment.DecrementBusyCount()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Уменьшает число занятых объектов в среде размещения, на единицу."
  remarks: "Если занят зарегистрированного объекта завершит свою работу, он вызывает метод DecrementBusyCount для указания <xref:System.Web.Hosting.HostingEnvironment>объект о завершении обработки и сократить число занятых объектов на единицу.</xref:System.Web.Hosting.HostingEnvironment>       Если число занятых объектов больше нуля, приложение размещения неограниченное время ожидания, даже если нет ожидающих запросов.       Должен быть вызов метода DecrementBusyCount для каждого вызова <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A>метод.</xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A>"
  syntax:
    content: public static void DecrementBusyCount ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.DecrementBusyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.Impersonate
  id: Impersonate
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: Impersonate()
  nameWithType: HostingEnvironment.Impersonate()
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Олицетворяет пользователя, представленного удостоверения приложения."
  syntax:
    content: public static IDisposable Impersonate ();
    parameters: []
    return:
      type: System.IDisposable
      description: "<xref:System.IDisposable>, Представляющий пользователя Windows до олицетворения; может быть использован для возврата к исходному контексту пользователя.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.Impersonate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Процесс не может олицетворять."
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)
  id: Impersonate(System.IntPtr)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: Impersonate(IntPtr)
  nameWithType: HostingEnvironment.Impersonate(IntPtr)
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate(IntPtr)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Олицетворяет пользователя, представленного заданным токеном."
  syntax:
    content: public static IDisposable Impersonate (IntPtr token);
    parameters:
    - id: token
      type: System.IntPtr
      description: "Дескриптор токена учетной записи Windows."
    return:
      type: System.IDisposable
      description: "<xref:System.IDisposable>, Представляющий пользователя Windows до олицетворения; может быть использован для возврата к исходному контексту пользователя.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.Impersonate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Процесс не может олицетворять."
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)
  id: Impersonate(System.IntPtr,System.String)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: Impersonate(IntPtr,String)
  nameWithType: HostingEnvironment.Impersonate(IntPtr,String)
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate(IntPtr,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Олицетворяет пользователя, указанного в установках конфигурации для заданного виртуального пути или указанного маркера пользователя."
  remarks: "Метод Impersonate олицетворяет пользователя, полученный после применения всех элементов в параметрах конфигурации, влияющие на указанный виртуальный путь. Если `identity` элемент не указан для виртуального пути, метод Impersonate олицетворяет указанной учетной записи Windows."
  syntax:
    content: public static IDisposable Impersonate (IntPtr userToken, string virtualPath);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "Дескриптор токена учетной записи Windows."
    - id: virtualPath
      type: System.String
      description: "Путь к запрашиваемому ресурсу."
    return:
      type: System.IDisposable
      description: "<xref:System.IDisposable>, Представляющий пользователя Windows до олицетворения; может быть использован для возврата к исходному контексту пользователя.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.Impersonate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Процесс не может олицетворять."
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.InClientBuildManager
  id: InClientBuildManager
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: InClientBuildManager
  nameWithType: HostingEnvironment.InClientBuildManager
  fullName: System.Web.Hosting.HostingEnvironment.InClientBuildManager
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Получает значение, указывающее, имеет ли среда размещения доступ к ASP.NET системы сборки."
  syntax:
    content: public static bool InClientBuildManager { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если домен приложения является домен приложения ASP.NET в размещенных, используемый в <xref uid=&quot;langword_csharp_ClientBuildManager&quot; name=&quot;ClientBuildManager&quot; href=&quot;&quot;> </xref> сценарии; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.HostingEnvironment.InClientBuildManager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.IncrementBusyCount
  id: IncrementBusyCount
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: IncrementBusyCount()
  nameWithType: HostingEnvironment.IncrementBusyCount()
  fullName: System.Web.Hosting.HostingEnvironment.IncrementBusyCount()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Число занятых объектов в среде размещения увеличивается на единицу."
  remarks: "Зарегистрированные объекты сигнала <xref:System.Web.Hosting.HostingEnvironment>объекта, на котором он работает и увеличить число занятых объектов на единицу.</xref:System.Web.Hosting.HostingEnvironment>       Если число занятых объектов больше нуля, приложение размещения неограниченное время ожидания, даже если нет ожидающих запросов.       Должен быть вызовом <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A>метод для каждого вызова метода IncrementBusyCount.</xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A>"
  syntax:
    content: public static void IncrementBusyCount ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.IncrementBusyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.InitializationException
  id: InitializationException
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: InitializationException
  nameWithType: HostingEnvironment.InitializationException
  fullName: System.Web.Hosting.HostingEnvironment.InitializationException
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает любое исключение, возникающее во время инициализации <xref href=&quot;System.Web.Hosting.HostingEnvironment&quot;> </xref> объекта."
  syntax:
    content: public static Exception InitializationException { get; }
    return:
      type: System.Exception
      description: "Исключение, которое выдается при инициализации <xref href=&quot;System.Web.Hosting.HostingEnvironment&quot;> </xref> объекта. Если исключение не выдавалось, возвращает <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.HostingEnvironment.InitializationException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: HostingEnvironment.InitializeLifetimeService()
  fullName: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Предоставляет <xref href=&quot;System.Web.Hosting.HostingEnvironment&quot;> </xref> объекта бесконечное время существования, предотвращая создание аренды."
  remarks: "Этот метод переопределяет <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>метод его базового класса.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Всегда возвращает `null` и предотвращает создание аренды, ограничивающей <xref:System.Web.Hosting.HostingEnvironment>время существования объекта.</xref:System.Web.Hosting.HostingEnvironment>"
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.InitiateShutdown
  id: InitiateShutdown
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: InitiateShutdown()
  nameWithType: HostingEnvironment.InitiateShutdown()
  fullName: System.Web.Hosting.HostingEnvironment.InitiateShutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Начинает сворачивать связанное с этим узлом веб-приложение и удаляет из системы зарегистрированные объекты."
  remarks: "Используйте метод InitiateShutdown остановить домен приложения с web и удалите все объекты, зарегистрированные с <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A>метод.</xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> Этот метод возвращает немедленно, до завершения работы.       <xref:System.Web.Hosting.IRegisteredObject.Stop%2A>Метод вызывается для каждого объекта, зарегистрированного с переданным параметром в `false` разрешающее каждого зарегистрированного объекта завершить работу асинхронно.</xref:System.Web.Hosting.IRegisteredObject.Stop%2A> После ожидания в течение времени, заданного в `shutdownTimeout` атрибута элемента конфигурации, <xref:System.Web.Hosting.IRegisteredObject.Stop%2A>с переданным параметром в повторно вызывается метод `true` для каждого зарегистрированного объекта оставшихся.</xref:System.Web.Hosting.IRegisteredObject.Stop%2A>       После завершения всех зарегистрированных объектов завершает работу, <xref:System.Web.Hosting.HostingEnvironment>объекты завершает работу домена приложения.</xref:System.Web.Hosting.HostingEnvironment>"
  syntax:
    content: public static void InitiateShutdown ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.InitiateShutdown*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
  id: IsDevelopmentEnvironment
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: IsDevelopmentEnvironment
  nameWithType: HostingEnvironment.IsDevelopmentEnvironment
  fullName: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает значение, определяющее, является ли текущее приложение в среде разработки."
  syntax:
    content: public static bool IsDevelopmentEnvironment { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если приложение находится в среде разработки; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.IsHosted
  id: IsHosted
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: IsHosted
  nameWithType: HostingEnvironment.IsHosted
  fullName: System.Web.Hosting.HostingEnvironment.IsHosted
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает значение, указывающее, является ли текущий домен приложения, размещенный в <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> объекта."
  syntax:
    content: public static bool IsHosted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если домен приложения размещен на <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> объекта; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.HostingEnvironment.IsHosted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HostingEnvironment.MapPath(String)
  fullName: System.Web.Hosting.HostingEnvironment.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Сопоставляет виртуальный путь с физическим путем на сервере."
  syntax:
    content: public static string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Виртуальный путь (абсолютный или относительный)."
    return:
      type: System.String
      description: "Физический путь на сервере, заданный параметром <code> virtualPath </code>."
  overload: System.Web.Hosting.HostingEnvironment.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
  id: MaxConcurrentRequestsPerCPU
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: MaxConcurrentRequestsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentRequestsPerCPU
  fullName: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает или задает максимальное число параллельных запросов на один ЦП."
  syntax:
    content: public static int MaxConcurrentRequestsPerCPU { get; set; }
    return:
      type: System.Int32
      description: "Максимальное число параллельных запросов на один ЦП."
  overload: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
  id: MaxConcurrentThreadsPerCPU
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: MaxConcurrentThreadsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentThreadsPerCPU
  fullName: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает или задает максимальное число параллельных потоков на один ЦП."
  syntax:
    content: public static int MaxConcurrentThreadsPerCPU { get; set; }
    return:
      type: System.Int32
      description: "Максимальное число параллельных потоков на один ЦП."
  overload: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.MessageReceived
  id: MessageReceived
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: MessageReceived()
  nameWithType: HostingEnvironment.MessageReceived()
  fullName: System.Web.Hosting.HostingEnvironment.MessageReceived()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Этот метод поддерживает [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] инфраструктуру и не предназначен для использования непосредственно из программного кода."
  syntax:
    content: public static void MessageReceived ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.MessageReceived*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})
  id: QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: QueueBackgroundWorkItem(Action<CancellationToken>)
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem(Action<CancellationToken>)
  fullName: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(Action<CancellationToken>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "[Поддерживается в .NET Framework 4.5.2 и более поздних версиях]       Планирует задачу, которая может выполняться в фоновом режиме, независимо от какого-либо запроса."
  remarks: "Отличается от обычного рабочий элемент пула потоков, что ASP.NET можно хранить список сколько рабочих элементов, которые зарегистрированы с помощью этого API в данный момент выполняются, и среда выполнения ASP.NET предпримет попытку задержки AppDomain, завершения выполнения завершения работы до рабочих элементов. Этот API не может вызываться за пределами домена приложения под управлением ASP.NET. Предоставленный CancellationToken будет сигнал, когда приложение завершает работу.       QueueBackgroundWorkItem принимает возвращающий задачу обратного вызова; рабочий элемент будет считаться завершается, когда возвращается обратный вызов."
  syntax:
    content: public static void QueueBackgroundWorkItem (Action<System.Threading.CancellationToken> workItem);
    parameters:
    - id: workItem
      type: System.Action{System.Threading.CancellationToken}
      description: "Единица выполняемых действий."
  overload: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  id: QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  fullName: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "[Поддерживается в .NET Framework 4.5.2 и более поздних версиях]       Планирует задачу, которая может выполняться в фоновом режиме, независимо от какого-либо запроса."
  remarks: "Отличается от обычного рабочий элемент пула потоков, что ASP.NET можно хранить список сколько рабочих элементов, которые зарегистрированы с помощью этого API в данный момент выполняются, и среда выполнения ASP.NET предпримет попытку задержки AppDomain, завершения выполнения завершения работы до рабочих элементов. Этот API не может вызываться за пределами домена приложения под управлением ASP.NET. Предоставленный CancellationToken будет сигнал, когда приложение завершает работу.       QueueBackgroundWorkItem принимает возвращающий задачу обратного вызова; рабочий элемент будет считаться завершается, когда возвращаемая задача перейдет в конечное состояние."
  syntax:
    content: public static void QueueBackgroundWorkItem (Func<System.Threading.CancellationToken,System.Threading.Tasks.Task> workItem);
    parameters:
    - id: workItem
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}
      description: "Единица выполняемых действий."
  overload: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)
  id: RegisterObject(System.Web.Hosting.IRegisteredObject)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: RegisterObject(IRegisteredObject)
  nameWithType: HostingEnvironment.RegisterObject(IRegisteredObject)
  fullName: System.Web.Hosting.HostingEnvironment.RegisterObject(IRegisteredObject)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Объект помещается в список зарегистрированных объектов приложения."
  remarks: "<xref:System.Web.Hosting.ApplicationManager>Класс позволяет методам за пределами текущего домена приложения для создания, управления и уничтожения объектов внутри текущего домена приложения.</xref:System.Web.Hosting.ApplicationManager> Метод RegisterObject используется для регистрации ранее созданных объектов в среде размещения. Необходимо реализовать объекты, зарегистрированные с помощью метода RegisterObject <xref:System.Web.Hosting.IRegisteredObject>интерфейса.</xref:System.Web.Hosting.IRegisteredObject>       Чтобы использовать зарегистрированного объекта, выполните следующие действия: 1.  Создать новый экземпляр зарегистрированного объекта путем вызова <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName>метод.</xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName>      2.  Вызовите метод для инициализации нового объекта определенного типа. В метод инициализации вызовите метод RegisterObject, чтобы добавить объект в список зарегистрированных объектов.      3.  Вызовите <xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName>метод для возврата зарегистрированного объекта при необходимости.</xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName>      4.  Если вы хотите остановить объекта, вызовите <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName>метод.</xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName> <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName>В свою очередь вызывает метод <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName>метод.</xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName> </xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName>      5.  В <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName>метод, у своего вызова объекта <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A>метод.</xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> </xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName>"
  example:
  - "The following code example is an implementation of a `Start` method for a registered object. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.IRegisteredObject> interface overview topic.  \n  \n [!code-cs[System.Web.Hosting.ApplicationManager#2](~/add/codesnippet/csharp/2fd0c065-ec76-48c8-bbb1-_1.cs)]\n [!code-vb[System.Web.Hosting.ApplicationManager#2](~/add/codesnippet/visualbasic/2fd0c065-ec76-48c8-bbb1-_1.vb)]"
  syntax:
    content: public static void RegisterObject (System.Web.Hosting.IRegisteredObject obj);
    parameters:
    - id: obj
      type: System.Web.Hosting.IRegisteredObject
      description: "Регистрируемый объект."
  overload: System.Web.Hosting.HostingEnvironment.RegisterObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)
  id: RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: RegisterVirtualPathProvider(VirtualPathProvider)
  nameWithType: HostingEnvironment.RegisterVirtualPathProvider(VirtualPathProvider)
  fullName: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(VirtualPathProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Регистрирует новый <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> экземпляра в систему компиляции ASP.NET."
  remarks: "Добавляет указанный метод RegisterVirtualPathProvider <xref:System.Web.Hosting.VirtualPathProvider>экземпляр приложения список поставщиков виртуальный путь.</xref:System.Web.Hosting.VirtualPathProvider>       Дополнительные сведения см. в разделе <xref:System.Web.Hosting.VirtualPathProvider>Общие сведения о классе.</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is part of an application startup method that registers a custom <xref:System.Web.Hosting.VirtualPathProvider> instance with the compilation system. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-vb[System.Web.Hosting.VirtualPathProvider#11](~/add/codesnippet/visualbasic/6c4fefcc-d45a-4168-86ab-_1.vb)]\n [!code-cs[System.Web.Hosting.VirtualPathProvider#11](~/add/codesnippet/csharp/6c4fefcc-d45a-4168-86ab-_1.cs)]"
  syntax:
    content: public static void RegisterVirtualPathProvider (System.Web.Hosting.VirtualPathProvider virtualPathProvider);
    parameters:
    - id: virtualPathProvider
      type: System.Web.Hosting.VirtualPathProvider
      description: "Новый <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> экземпляр для добавления в систему компиляции."
  overload: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.SetCultures
  id: SetCultures
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: SetCultures()
  nameWithType: HostingEnvironment.SetCultures()
  fullName: System.Web.Hosting.HostingEnvironment.SetCultures()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Устанавливает для текущего потока язык и региональные параметры, указанные в файле конфигурации приложения."
  remarks: "Метод SetCultures устанавливает для текущего потока язык и региональные параметры, указанные в [глобализации элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) элемент в файле конфигурации приложения."
  syntax:
    content: public static IDisposable SetCultures ();
    parameters: []
    return:
      type: System.IDisposable
      description: "<xref:System.IDisposable>, Представляющий язык и региональные параметры, перед изменением; может быть использован для возврата к предыдущей языка и региональных параметров.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.SetCultures*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.SetCultures(System.String)
  id: SetCultures(System.String)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: SetCultures(String)
  nameWithType: HostingEnvironment.SetCultures(String)
  fullName: System.Web.Hosting.HostingEnvironment.SetCultures(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Устанавливает для текущего потока язык и региональные параметры указанного виртуального пути."
  remarks: "Метод SetCultures устанавливает для текущего потока язык и региональные параметры, полученный после применения всех элементов в файлах конфигурации, влияющие на указанный виртуальный путь."
  syntax:
    content: public static IDisposable SetCultures (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Путь, содержащий сведения о культуре."
    return:
      type: System.IDisposable
      description: "<xref:System.IDisposable>, Представляющий язык и региональные параметры, перед изменением; может быть использован для возврата к предыдущей языка и региональных параметров.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.SetCultures*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ShutdownReason
  id: ShutdownReason
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ShutdownReason
  nameWithType: HostingEnvironment.ShutdownReason
  fullName: System.Web.Hosting.HostingEnvironment.ShutdownReason
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает значение перечисления, которое указывает, почему приложение завершено."
  syntax:
    content: public static System.Web.ApplicationShutdownReason ShutdownReason { get; }
    return:
      type: System.Web.ApplicationShutdownReason
      description: "Один из <xref href=&quot;System.Web.ApplicationShutdownReason&quot;> </xref> значения."
  overload: System.Web.Hosting.HostingEnvironment.ShutdownReason*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.SiteName
  id: SiteName
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: SiteName
  nameWithType: HostingEnvironment.SiteName
  fullName: System.Web.Hosting.HostingEnvironment.SiteName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Возвращает имя узла."
  syntax:
    content: public static string SiteName { get; }
    return:
      type: System.String
      description: "Имя узла."
  overload: System.Web.Hosting.HostingEnvironment.SiteName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.StopListening
  id: StopListening
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: StopListening
  nameWithType: HostingEnvironment.StopListening
  fullName: System.Web.Hosting.HostingEnvironment.StopListening
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "[Поддерживается в .NET Framework 4.5.1 только]       Происходит, когда рабочий процесс или пул приложений, связанный с этим узлом, прекратил прослушивание новых запросов и будет в конечном счете завершена."
  remarks: "Когда пул приложений и его связанные рабочие процессы завершает работу с IIS, например когда пул приложений был достигнут интервала очистки по расписанию, IIS уведомляет среды выполнения ASP.NET, приложение завершает работу, и рабочий процесс для пула приложений прекращает прослушивание новых запросов. Приложения, использующие долго выполняющихся запросов, например [SignalR](http://go.microsoft.com/fwlink/?LinkID=285432) приложений, будет прослушивать события StopListening и выключения их длительные операции при IIS было запущено для завершения работы пула приложений и его связанных рабочих процессов.      Настроек [!WARNING] настроек существуют некоторые аспекты проектирования, разработчику необходимо учитывать при реализации события StopListening: >> 1.  Событие StopListening доступно только для приложений, которые настроены для использования интегрированного конвейера служб IIS.   > 2.  Разработчики не должны выдавать ошибки из своих реализаций StopListening. генерация ошибок будет привести к непредсказуемым результатам.   > 3.  Из-за особенностей одновременных операций в ASP.NET нет никакой гарантии, что ASP.NET будет вызывать событие StopListening, когда он был реализован разработчиком.   > 4.  Событие StopListening могут выполнять параллельно с другими <xref:System.Web.Hosting.IRegisteredObject>уведомления.</xref:System.Web.Hosting.IRegisteredObject>   > 5.  Разработчики должны знать, ASP.NET может завершение работы домена приложения во время выполнения их StopListening событий и проектирования для обработки такую возможность их реализации.   > 6.  Не должны блокировать StopListening обработчиков событий; Блокирование реализации приведет к взаимоблокировок и IIS нарушит рабочий процесс по истечении интервала защиты от частых сбоев."
  syntax:
    content: public static event EventHandler StopListening;
    return:
      type: System.EventHandler
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)
  id: UnregisterObject(System.Web.Hosting.IRegisteredObject)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: UnregisterObject(IRegisteredObject)
  nameWithType: HostingEnvironment.UnregisterObject(IRegisteredObject)
  fullName: System.Web.Hosting.HostingEnvironment.UnregisterObject(IRegisteredObject)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Удаляет объект из списка зарегистрированных объектов приложения."
  remarks: "<xref:System.Web.Hosting.ApplicationManager>Класс позволяет методам за пределами текущего домена приложения для создания, управления и уничтожения объектов внутри текущего домена приложения.</xref:System.Web.Hosting.ApplicationManager> Метод UnregisterObject используется для удаления ранее зарегистрированных объектов в среде размещения."
  example:
  - "The following code example is the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method for a registered object. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.IRegisteredObject> interface overview topic.  \n  \n [!code-cs[System.Web.Hosting.ApplicationManager#3](~/add/codesnippet/csharp/0c500c41-6bed-4c83-8364-_1.cs)]\n [!code-vb[System.Web.Hosting.ApplicationManager#3](~/add/codesnippet/visualbasic/0c500c41-6bed-4c83-8364-_1.vb)]"
  syntax:
    content: public static void UnregisterObject (System.Web.Hosting.IRegisteredObject obj);
    parameters:
    - id: obj
      type: System.Web.Hosting.IRegisteredObject
      description: "Объект, подлежащий удалению."
  overload: System.Web.Hosting.HostingEnvironment.UnregisterObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.VirtualPathProvider
  id: VirtualPathProvider
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: VirtualPathProvider
  nameWithType: HostingEnvironment.VirtualPathProvider
  fullName: System.Web.Hosting.HostingEnvironment.VirtualPathProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Получает поставщика виртуального пути для данного приложения."
  remarks: "Если существует несколько <xref:System.Web.Hosting.VirtualPathProvider>регистрации экземпляра <xref:System.Web.Hosting.HostingEnvironment>управляет цепочки вызовов.</xref:System.Web.Hosting.HostingEnvironment> </xref:System.Web.Hosting.VirtualPathProvider> Невозможно контролировать порядок, в котором вызываются поставщики виртуальных путей."
  syntax:
    content: public static System.Web.Hosting.VirtualPathProvider VirtualPathProvider { get; }
    return:
      type: System.Web.Hosting.VirtualPathProvider
      description: "<xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> Экземпляра для этого приложения."
  overload: System.Web.Hosting.HostingEnvironment.VirtualPathProvider*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Hosting.HostingEnvironment.#ctor
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: HostingEnvironment()
  nameWithType: HostingEnvironment.HostingEnvironment()
  fullName: System.Web.Hosting.HostingEnvironment.HostingEnvironment()
- uid: System.Web.Hosting.HostingEnvironment.ApplicationHost
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationHost
  nameWithType: HostingEnvironment.ApplicationHost
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationHost
- uid: System.Web.Hosting.IApplicationHost
  parent: System.Web.Hosting
  isExternal: false
  name: IApplicationHost
  nameWithType: IApplicationHost
  fullName: System.Web.Hosting.IApplicationHost
- uid: System.Web.Hosting.HostingEnvironment.ApplicationID
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationID
  nameWithType: HostingEnvironment.ApplicationID
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationPhysicalPath
  nameWithType: HostingEnvironment.ApplicationPhysicalPath
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
- uid: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: HostingEnvironment.ApplicationVirtualPath
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
- uid: System.Web.Hosting.HostingEnvironment.Cache
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Cache
  nameWithType: HostingEnvironment.Cache
  fullName: System.Web.Hosting.HostingEnvironment.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.Hosting.HostingEnvironment.DecrementBusyCount
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: DecrementBusyCount()
  nameWithType: HostingEnvironment.DecrementBusyCount()
  fullName: System.Web.Hosting.HostingEnvironment.DecrementBusyCount()
- uid: System.Web.Hosting.HostingEnvironment.Impersonate
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Impersonate()
  nameWithType: HostingEnvironment.Impersonate()
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Impersonate(IntPtr)
  nameWithType: HostingEnvironment.Impersonate(IntPtr)
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Impersonate(IntPtr,String)
  nameWithType: HostingEnvironment.Impersonate(IntPtr,String)
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate(IntPtr,String)
- uid: System.Web.Hosting.HostingEnvironment.InClientBuildManager
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InClientBuildManager
  nameWithType: HostingEnvironment.InClientBuildManager
  fullName: System.Web.Hosting.HostingEnvironment.InClientBuildManager
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.HostingEnvironment.IncrementBusyCount
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IncrementBusyCount()
  nameWithType: HostingEnvironment.IncrementBusyCount()
  fullName: System.Web.Hosting.HostingEnvironment.IncrementBusyCount()
- uid: System.Web.Hosting.HostingEnvironment.InitializationException
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitializationException
  nameWithType: HostingEnvironment.InitializationException
  fullName: System.Web.Hosting.HostingEnvironment.InitializationException
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: HostingEnvironment.InitializeLifetimeService()
  fullName: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.HostingEnvironment.InitiateShutdown
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitiateShutdown()
  nameWithType: HostingEnvironment.InitiateShutdown()
  fullName: System.Web.Hosting.HostingEnvironment.InitiateShutdown()
- uid: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IsDevelopmentEnvironment
  nameWithType: HostingEnvironment.IsDevelopmentEnvironment
  fullName: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
- uid: System.Web.Hosting.HostingEnvironment.IsHosted
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IsHosted
  nameWithType: HostingEnvironment.IsHosted
  fullName: System.Web.Hosting.HostingEnvironment.IsHosted
- uid: System.Web.Hosting.HostingEnvironment.MapPath(System.String)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MapPath(String)
  nameWithType: HostingEnvironment.MapPath(String)
  fullName: System.Web.Hosting.HostingEnvironment.MapPath(String)
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MaxConcurrentRequestsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentRequestsPerCPU
  fullName: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MaxConcurrentThreadsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentThreadsPerCPU
  fullName: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
- uid: System.Web.Hosting.HostingEnvironment.MessageReceived
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MessageReceived()
  nameWithType: HostingEnvironment.MessageReceived()
  fullName: System.Web.Hosting.HostingEnvironment.MessageReceived()
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: QueueBackgroundWorkItem(Action<CancellationToken>)
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem(Action<CancellationToken>)
  fullName: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(Action<CancellationToken>)
- uid: System.Action{System.Threading.CancellationToken}
  parent: System
  isExternal: true
  name: Action<CancellationToken>
  nameWithType: Action<CancellationToken>
  fullName: System.Action<System.Threading.CancellationToken>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Threading.CancellationToken>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  fullName: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(Func<CancellationToken,Task>)
- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}
  parent: System
  isExternal: true
  name: Func<CancellationToken,Task>
  nameWithType: Func<CancellationToken,Task>
  fullName: System.Func<System.Threading.CancellationToken,System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Threading.CancellationToken,System.Threading.Tasks.Task>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: RegisterObject(IRegisteredObject)
  nameWithType: HostingEnvironment.RegisterObject(IRegisteredObject)
  fullName: System.Web.Hosting.HostingEnvironment.RegisterObject(IRegisteredObject)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: RegisterVirtualPathProvider(VirtualPathProvider)
  nameWithType: HostingEnvironment.RegisterVirtualPathProvider(VirtualPathProvider)
  fullName: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(VirtualPathProvider)
- uid: System.Web.Hosting.VirtualPathProvider
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualPathProvider
  nameWithType: VirtualPathProvider
  fullName: System.Web.Hosting.VirtualPathProvider
- uid: System.Web.Hosting.HostingEnvironment.SetCultures
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SetCultures()
  nameWithType: HostingEnvironment.SetCultures()
  fullName: System.Web.Hosting.HostingEnvironment.SetCultures()
- uid: System.Web.Hosting.HostingEnvironment.SetCultures(System.String)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SetCultures(String)
  nameWithType: HostingEnvironment.SetCultures(String)
  fullName: System.Web.Hosting.HostingEnvironment.SetCultures(String)
- uid: System.Web.Hosting.HostingEnvironment.ShutdownReason
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ShutdownReason
  nameWithType: HostingEnvironment.ShutdownReason
  fullName: System.Web.Hosting.HostingEnvironment.ShutdownReason
- uid: System.Web.ApplicationShutdownReason
  parent: System.Web
  isExternal: false
  name: ApplicationShutdownReason
  nameWithType: ApplicationShutdownReason
  fullName: System.Web.ApplicationShutdownReason
- uid: System.Web.Hosting.HostingEnvironment.SiteName
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SiteName
  nameWithType: HostingEnvironment.SiteName
  fullName: System.Web.Hosting.HostingEnvironment.SiteName
- uid: System.Web.Hosting.HostingEnvironment.StopListening
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: StopListening
  nameWithType: HostingEnvironment.StopListening
  fullName: System.Web.Hosting.HostingEnvironment.StopListening
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: UnregisterObject(IRegisteredObject)
  nameWithType: HostingEnvironment.UnregisterObject(IRegisteredObject)
  fullName: System.Web.Hosting.HostingEnvironment.UnregisterObject(IRegisteredObject)
- uid: System.Web.Hosting.HostingEnvironment.VirtualPathProvider
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: VirtualPathProvider
  nameWithType: HostingEnvironment.VirtualPathProvider
  fullName: System.Web.Hosting.HostingEnvironment.VirtualPathProvider
- uid: System.Web.Hosting.HostingEnvironment.#ctor*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: HostingEnvironment
  nameWithType: HostingEnvironment.HostingEnvironment
- uid: System.Web.Hosting.HostingEnvironment.ApplicationHost*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationHost
  nameWithType: HostingEnvironment.ApplicationHost
- uid: System.Web.Hosting.HostingEnvironment.ApplicationID*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationID
  nameWithType: HostingEnvironment.ApplicationID
- uid: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationPhysicalPath
  nameWithType: HostingEnvironment.ApplicationPhysicalPath
- uid: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: HostingEnvironment.ApplicationVirtualPath
- uid: System.Web.Hosting.HostingEnvironment.Cache*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Cache
  nameWithType: HostingEnvironment.Cache
- uid: System.Web.Hosting.HostingEnvironment.DecrementBusyCount*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: DecrementBusyCount
  nameWithType: HostingEnvironment.DecrementBusyCount
- uid: System.Web.Hosting.HostingEnvironment.Impersonate*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Impersonate
  nameWithType: HostingEnvironment.Impersonate
- uid: System.Web.Hosting.HostingEnvironment.InClientBuildManager*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InClientBuildManager
  nameWithType: HostingEnvironment.InClientBuildManager
- uid: System.Web.Hosting.HostingEnvironment.IncrementBusyCount*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IncrementBusyCount
  nameWithType: HostingEnvironment.IncrementBusyCount
- uid: System.Web.Hosting.HostingEnvironment.InitializationException*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitializationException
  nameWithType: HostingEnvironment.InitializationException
- uid: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: HostingEnvironment.InitializeLifetimeService
- uid: System.Web.Hosting.HostingEnvironment.InitiateShutdown*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitiateShutdown
  nameWithType: HostingEnvironment.InitiateShutdown
- uid: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IsDevelopmentEnvironment
  nameWithType: HostingEnvironment.IsDevelopmentEnvironment
- uid: System.Web.Hosting.HostingEnvironment.IsHosted*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IsHosted
  nameWithType: HostingEnvironment.IsHosted
- uid: System.Web.Hosting.HostingEnvironment.MapPath*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MapPath
  nameWithType: HostingEnvironment.MapPath
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MaxConcurrentRequestsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentRequestsPerCPU
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MaxConcurrentThreadsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentThreadsPerCPU
- uid: System.Web.Hosting.HostingEnvironment.MessageReceived*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MessageReceived
  nameWithType: HostingEnvironment.MessageReceived
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: QueueBackgroundWorkItem
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem
- uid: System.Web.Hosting.HostingEnvironment.RegisterObject*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: RegisterObject
  nameWithType: HostingEnvironment.RegisterObject
- uid: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: RegisterVirtualPathProvider
  nameWithType: HostingEnvironment.RegisterVirtualPathProvider
- uid: System.Web.Hosting.HostingEnvironment.SetCultures*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SetCultures
  nameWithType: HostingEnvironment.SetCultures
- uid: System.Web.Hosting.HostingEnvironment.ShutdownReason*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ShutdownReason
  nameWithType: HostingEnvironment.ShutdownReason
- uid: System.Web.Hosting.HostingEnvironment.SiteName*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SiteName
  nameWithType: HostingEnvironment.SiteName
- uid: System.Web.Hosting.HostingEnvironment.UnregisterObject*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: UnregisterObject
  nameWithType: HostingEnvironment.UnregisterObject
- uid: System.Web.Hosting.HostingEnvironment.VirtualPathProvider*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: VirtualPathProvider
  nameWithType: HostingEnvironment.VirtualPathProvider
