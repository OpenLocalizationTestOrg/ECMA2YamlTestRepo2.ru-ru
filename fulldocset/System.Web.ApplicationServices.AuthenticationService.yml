### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticationService
  id: AuthenticationService
  children:
  - System.Web.ApplicationServices.AuthenticationService.#ctor
  - System.Web.ApplicationServices.AuthenticationService.Authenticating
  - System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  - System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  - System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  - System.Web.ApplicationServices.AuthenticationService.Logout
  - System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  langs:
  - csharp
  name: AuthenticationService
  nameWithType: AuthenticationService
  fullName: System.Web.ApplicationServices.AuthenticationService
  type: Class
  summary: "Обеспечивает доступ к форм проверки подлинности ASP.NET, веб-службы."
  remarks: "Объект AuthenticationService позволяет проводить проверку подлинности пользователей с помощью [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] службы. Служба проверки подлинности WCF используются в том случае, когда необходимо проверить подлинность пользователей с помощью членства ASP.NET из приложения, которое находится за пределами веб-приложения, который хранит учетные данные пользователя. Приложения должны иметь возможность отправлять и получать сообщения в формате SOAP. Через класс AuthenticationService можно вход пользователей, выход пользователей, проверки учетных данных, проверьте состояние проверки подлинности, настройки проверки подлинности и значение файла cookie проверки подлинности.       Класс AuthenticationService содержит четыре метода, которые следует обращаться к только через службы WCF: <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, и <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>методы.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> </xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> </xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Для вызова этих методов, включить службу проверки подлинности на веб-сервере и затем подключить клиентское приложение WCF-совместимых веб-службы. Сведения о настройке службы проверки подлинности см. в разделе [как: Включение службы проверки подлинности WCF](~/add/includes/ajax-current-ext-md.md).       Для входа пользователей в систему, необходимо передать учетные данные пользователя для <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>метод.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Если учетные данные являются допустимыми, класс AuthenticationService создает файл cookie проверки подлинности. Если файл cookie проверки подлинности не истек, вы знаете, что прошедшие проверку подлинности учетных данных пользователя, и нет необходимости проверять учетные данные снова. (Файл cookie проверки подлинности не доступны через класс AuthenticationService.)       AuthenticationService может создавать два события: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>и <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>Событие возникает при проверке учетных данных пользователя.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Создайте обработчик событий для <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>событие, чтобы настроить способ проверки учетных данных пользователя.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>Событие происходит, когда задается значение файла cookie проверки подлинности после проверки учетных данных пользователя.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Создайте обработчик событий для <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>событий для настройки файла cookie проверки подлинности.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>       <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>Метод проверяет учетные данные пользователя для проверки подлинности, но не возвращает билет проверки подлинности.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Используйте <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>при ранее пользователь выполнил вход, и необходимо проверить, что учетные данные действительны в начале нового сеанса приложения.</xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A>       Пример использования проверки подлинности службы WCF в консольном приложении см. в разделе [Пошаговое руководство: использование служб приложений ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)]

      [System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")]

      [System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")]

      public class AuthenticationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  id: '#ctor'
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.ApplicationServices.AuthenticationService&quot;> </xref> класса."
  syntax:
    content: public AuthenticationService ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  id: Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Происходит при проверке учетных данных пользователя."
  remarks: "Проверка подлинности инициируется при проверке учетных данных пользователя. Создайте обработчик событий для события проверка подлинности для настройки, как проверяются учетные данные пользователя."
  example:
  - "The following example shows how to bind an event handler for the Authenticating event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/csharp/e-system.web.application_0_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/add/codesnippet/visualbasic/e-system.web.application_0_1.asax)]  \n  \n The following example shows an event handler for the Authenticating event in the Global.asax file. The event handler reads two authentication values from the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> property and passes them together with the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/e-system.web.application_0_2.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/e-system.web.application_0_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs> Authenticating;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  id: CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  type: Event
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Происходит, когда задается значение файла cookie проверки подлинности."
  remarks: "Событие CreatingCookie возникает в том случае, когда задается значение файла cookie проверки подлинности после проверки учетных данных пользователя. Создайте обработчик событий для события CreatingCookie для настройки файла cookie проверки подлинности."
  example:
  - "The following example shows how to bind an event handler to the CreatingCookie event in the `Application_Start` method of the Global.asax file.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/csharp/e-system.web.application_1_1.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.application_1_1.asax)]  \n  \n The following example shows an event handler for the CreatingCookie event in the Global.asax file. The event handler customizes the authentication cookie by adding the value in the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property to the <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> property. Store the <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> property in a cookie only if you know that the data in the property is not sensitive. Malicious users can access the values in the cookie.  \n  \n [!code-cs[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/csharp/e-system.web.application_1_2.asax)]\n [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/add/codesnippet/visualbasic/e-system.web.application_1_2.asax)]"
  syntax:
    content: public static event EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs> CreatingCookie;
    return:
      type: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  id: IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Определяет, является ли текущий пользователь проверку подлинности."
  remarks: "Метод IsLoggedIn проверяет ли текущий пользователь проверку подлинности, проверив <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>      Настроек [!NOTE] настроек не вызывайте метод IsLoggedIn из кода, выполняемого на веб-сервере. Метод IsLoggedIn только как часть службы WCF."
  syntax:
    content: public bool IsLoggedIn ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если пользователь прошел проверку подлинности; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  id: Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Проверяет учетные данные пользователя и создает билет проверки подлинности (файл cookie), если учетные данные являются допустимыми."
  remarks: "Метод входа проверяет учетные данные пользователя через поставщика членства. Можно использовать поставщика членства по умолчанию или указать настраиваемый поставщик членства во время выполнения. <xref:System.Web.ApplicationServices.AuthenticationService>Класса передает `userName` и `password` поставщику членства <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>метод, проходит `customCredential`.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> </xref:System.Web.ApplicationServices.AuthenticationService> Если <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>возвращает `true`, <xref:System.Web.ApplicationServices.AuthenticationService>создает билет проверки подлинности в качестве файла cookie.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Задать `isPersistent` параметр `true` для создания билет проверки подлинности, которая продолжается после завершения текущего сеанса.      Настроек [!NOTE] настроек всегда использовать службу проверки подлинности вместе с протоколом SSL (по протоколу HTTPS, SSL) для защиты конфиденциальных данных.       Вызывает метод входа <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>событий и <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>событий.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Создайте обработчик событий для <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>для настройки проверки подлинности, таких как проверка значения `customCredential` или проверка учетных данных через поставщик членства.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Значения в `customCredential` поставщиком членства по умолчанию не проверяются. Чтобы настроить файл cookie проверки подлинности, создайте обработчик событий для <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>      Настроек [!NOTE] настроек не вызывайте метод входа из кода, выполняемого на веб-сервере. При вызове метода входа только как часть службы WCF. Дополнительные сведения см. в разделе [проверки подлинности ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool Login (string username, string password, string customCredential, bool isPersistent);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для проверки."
    - id: password
      type: System.String
      description: "Пароль для указанного пользователя."
    - id: customCredential
      type: System.String
      description: "Значение или значения для проверки в дополнение к `userName` и `password`, если оно есть."
    - id: isPersistent
      type: System.Boolean
      description: "Значение, указывающее, действителен ли билет проверки подлинности между сеансами."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если учетные данные пользователя являются допустимыми; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.Login*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  id: Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Очищает билет проверки подлинности (файл cookie) в браузере."
  remarks: "Метод Logout очищает файл cookie проверки подлинности в коллекцию файлов cookie в браузере. Пользователю необходимо войти снова пройти проверку подлинности.       <xref:System.Web.ApplicationServices.AuthenticationService>Класса не хранит данные на сервере, о проверки подлинности, которые были очищены билеты.</xref:System.Web.ApplicationServices.AuthenticationService>      Настроек [!NOTE] настроек не вызывайте метод выхода из кода, выполняемого на веб-сервере. Метод выхода только как часть службы WCF. Дополнительные сведения см. в разделе [проверки подлинности ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public void Logout ();
    parameters: []
  overload: System.Web.ApplicationServices.AuthenticationService.Logout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  id: ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  langs:
  - csharp
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Подлинность учетных данных пользователей, не используя билет проверки подлинности."
  remarks: "Метод ValidateUser выполняет проверку подлинности учетных данных пользователя, но не устанавливает файл cookie проверки подлинности. Без файла cookie проверки подлинности пользователь не заносятся даже если учетные данные допустимы.       Метод ValidateUser используется в том случае, когда необходимо проверить правильность учетных данных пользователя без получения файла cookie проверки подлинности. Например это можно сделать, при файла cookie проверки подлинности уже хранится в клиентском приложении, но требуется проверить, что учетные данные пользователя действительны при запуске нового сеанса.       Вызывает метод TheValidateUser <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>событий, но не вызывает <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>событий.</xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> </xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>      Настроек [!NOTE] настроек не вызывайте метод ValidateUser из кода, выполняемого на веб-сервере. Метод ValidateUser только как часть службы WCF. Дополнительные сведения см. в разделе [проверки подлинности ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidateUser (string username, string password, string customCredential);
    parameters:
    - id: username
      type: System.String
      description: "Имя пользователя для проверки."
    - id: password
      type: System.String
      description: "Пароль для указанного пользователя."
    - id: customCredential
      type: System.String
      description: "Значение или значения для проверки в дополнение к `userName` и `password`, если оно есть."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если учетные данные пользователя являются допустимыми; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userName</code>or <code>password</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService()
  nameWithType: AuthenticationService.AuthenticationService()
  fullName: System.Web.ApplicationServices.AuthenticationService.AuthenticationService()
- uid: System.Web.ApplicationServices.AuthenticationService.Authenticating
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Authenticating
  nameWithType: AuthenticationService.Authenticating
  fullName: System.Web.ApplicationServices.AuthenticationService.Authenticating
- uid: System.EventHandler{System.Web.ApplicationServices.AuthenticatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<AuthenticatingEventArgs>
  nameWithType: EventHandler<AuthenticatingEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.AuthenticatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.AuthenticatingEventArgs
    name: AuthenticatingEventArgs
    nameWithType: AuthenticatingEventArgs
    fullName: AuthenticatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: CreatingCookie
  nameWithType: AuthenticationService.CreatingCookie
  fullName: System.Web.ApplicationServices.AuthenticationService.CreatingCookie
- uid: System.EventHandler{System.Web.ApplicationServices.CreatingCookieEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<CreatingCookieEventArgs>
  nameWithType: EventHandler<CreatingCookieEventArgs>
  fullName: System.EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.ApplicationServices.CreatingCookieEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.ApplicationServices.CreatingCookieEventArgs
    name: CreatingCookieEventArgs
    nameWithType: CreatingCookieEventArgs
    fullName: CreatingCookieEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn()
  nameWithType: AuthenticationService.IsLoggedIn()
  fullName: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login(String,String,String,Boolean)
  nameWithType: AuthenticationService.Login(String,String,String,Boolean)
  fullName: System.Web.ApplicationServices.AuthenticationService.Login(String,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticationService.Logout
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout()
  nameWithType: AuthenticationService.Logout()
  fullName: System.Web.ApplicationServices.AuthenticationService.Logout()
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser(String,String,String)
  nameWithType: AuthenticationService.ValidateUser(String,String,String)
  fullName: System.Web.ApplicationServices.AuthenticationService.ValidateUser(String,String,String)
- uid: System.Web.ApplicationServices.AuthenticationService.#ctor*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: AuthenticationService
  nameWithType: AuthenticationService.AuthenticationService
- uid: System.Web.ApplicationServices.AuthenticationService.IsLoggedIn*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: IsLoggedIn
  nameWithType: AuthenticationService.IsLoggedIn
- uid: System.Web.ApplicationServices.AuthenticationService.Login*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Login
  nameWithType: AuthenticationService.Login
- uid: System.Web.ApplicationServices.AuthenticationService.Logout*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: Logout
  nameWithType: AuthenticationService.Logout
- uid: System.Web.ApplicationServices.AuthenticationService.ValidateUser*
  parent: System.Web.ApplicationServices.AuthenticationService
  isExternal: false
  name: ValidateUser
  nameWithType: AuthenticationService.ValidateUser
