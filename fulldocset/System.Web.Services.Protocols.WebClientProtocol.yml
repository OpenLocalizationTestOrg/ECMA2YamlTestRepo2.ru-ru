### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.WebClientProtocol
  id: WebClientProtocol
  children:
  - System.Web.Services.Protocols.WebClientProtocol.#ctor
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  langs:
  - csharp
  name: WebClientProtocol
  nameWithType: WebClientProtocol
  fullName: System.Web.Services.Protocols.WebClientProtocol
  type: Class
  summary: "Определяет базовый класс для всех XML-веб-службы клиента прокси-серверов с помощью ASP.NET."
  remarks: "Свойства класса WebClientProtocol используются для управления поведением транспорта, используемого для передачи запроса и ответа. Свойства этого класса сопоставляются свойства, найденные <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> Экземпляры классов, производные от <xref:System.Net.WebRequest>, такие как <xref:System.Net.HttpWebRequest>, используются как механизм транспортировки для веб-служб XML с помощью ASP.NET.</xref:System.Net.HttpWebRequest> </xref:System.Net.WebRequest>       Взаимодействие с веб-служб XML, необходимо создать класс-посредник, косвенно производным или непосредственно из WebClientProtocol для веб-службу XML необходимо вызвать. Вместо создания прокси-класса вручную, можно использовать средства Wsdl.exe для создания прокси-класса для описания данного XML-веб-службы. Поскольку WebClientProtocol базового класса прокси, его свойства будут находиться на прокси-классы. Эти свойства полезны для управления поведением запроса, используемого транспорта. Например, использовать <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A>свойство для вызова веб-служб XML с проверкой подлинности.</xref:System.Web.Services.Protocols.WebClientProtocol.Credentials%2A> Многие свойства WebClientProtocol используются для инициализации <xref:System.Net.WebRequest>объект, который используется для создания веб-запроса.</xref:System.Net.WebRequest>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form sets proxy information and client credentials on the proxy class prior to calling the remote XML Web service method.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_0_1.aspx)]\n [!code-vb[Classic WebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_0_1.aspx)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class WebClientProtocol : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: WebClientProtocol()
  nameWithType: WebClientProtocol.WebClientProtocol()
  fullName: System.Web.Services.Protocols.WebClientProtocol.WebClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Web.Services.Protocols.WebClientProtocol&quot;> </xref> класса."
  remarks: ''
  example:
  - >-
    [!code-cs[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/csharp/m-system.web.services.pr_11_1.cs)]
     [!code-cpp[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/cpp/m-system.web.services.pr_11_1.cpp)]
     [!code-vb[System.Web.Services.Protocols.WebClientProtocol constructor#1](~/add/codesnippet/visualbasic/m-system.web.services.pr_11_1.vb)]
  syntax:
    content: protected WebClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.WebClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort
  id: Abort
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Abort()
  nameWithType: WebClientProtocol.Abort()
  fullName: System.Web.Services.Protocols.WebClientProtocol.Abort()
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Отменяет запрос к методу XML-веб-службы."
  syntax:
    content: public virtual void Abort ();
    parameters: []
  overload: System.Web.Services.Protocols.WebClientProtocol.Abort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  id: AddToCache(System.Type,System.Object)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: AddToCache(Type,Object)
  nameWithType: WebClientProtocol.AddToCache(Type,Object)
  fullName: System.Web.Services.Protocols.WebClientProtocol.AddToCache(Type,Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Добавьте экземпляр обработчика протокола клиента в кэш."
  syntax:
    content: protected static void AddToCache (Type type, object value);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Для обработчика протокола в клиент...</xref:System.Type>"
    - id: value
      type: System.Object
      description: "Обработчик протокола клиента, добавляемых в кэш."
  overload: System.Web.Services.Protocols.WebClientProtocol.AddToCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  id: ConnectionGroupName
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
  fullName: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает или задает имя группы подключения для запроса."
  remarks: "Свойство ConnectionGroupName позволяет связывать запрос на группу соединений. Дополнительные сведения см. в разделе <xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>.</xref:System.Net.HttpWebRequest.ConnectionGroupName%2A>"
  syntax:
    content: public string ConnectionGroupName { get; set; }
    return:
      type: System.String
      description: "Имя группы подключения. Значение по умолчанию — <xref:System.String>.</xref:System.String>"
  overload: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials
  id: Credentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.Credentials
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает или задает учетные данные безопасности для проверки подлинности клиента XML-веб-службы."
  remarks: "При использовании `Credentials` свойство, клиент XML-веб-службы необходимо создать класс, реализующий <xref:System.Net.ICredentials>, такие как <xref:System.Net.NetworkCredential>и установите клиент учетные данные определенного механизма проверки подлинности.</xref:System.Net.NetworkCredential> </xref:System.Net.ICredentials> <xref:System.Net.NetworkCredential>Класс может использоваться для задания учетных данных проверки подлинности с помощью basic, дайджест-механизмов проверки подлинности NTLM и Kerberos.</xref:System.Net.NetworkCredential>       Если значение свойства учетных данных <xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName>, клиент запрашивает с сервера для проверки подлинности Kerberos или NTLM в зависимости от конфигурации сервера.</xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets authentication credentials using the `Credentials` property. The user name, password and domain are passed into the constructor for the <xref:System.Net.NetworkCredential> class.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see.  \n  \n [!code-vb[Classic WebClientProtocol.Credentials Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_41_1.aspx)]\n [!code-cs[Classic WebClientProtocol.Credentials Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_41_1.aspx)]"
  syntax:
    content: public System.Net.ICredentials Credentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "<xref:System.Net.ICredentials>Для клиента XML-веб-службы.</xref:System.Net.ICredentials>"
  overload: System.Web.Services.Protocols.WebClientProtocol.Credentials*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  id: GetFromCache(System.Type)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetFromCache(Type)
  nameWithType: WebClientProtocol.GetFromCache(Type)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(Type)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает экземпляр обработчика протокола клиента из кэша."
  syntax:
    content: protected static object GetFromCache (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "<xref:System.Type>Обработчика протокола клиента должны быть возвращены из кэша.</xref:System.Type>"
    return:
      type: System.Object
      description: "Экземпляр обработчика протокола клиента из кэша."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: WebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Создает <xref:System.Net.WebRequest>экземпляра для указанного <code> uri </code>.</xref:System.Net.WebRequest> Этот защищенный метод вызывается инфраструктурой XML-веб-службы клиента для получения нового <xref:System.Net.WebRequest>объекта транспорта для передачи запроса XML-веб-службы.</xref:System.Net.WebRequest>"
  remarks: "Этот метод может быть переопределен для настройки <xref:System.Net.WebRequest>объекта перед выполнением запроса XML-веб-службы.</xref:System.Net.WebRequest> Например может добавить пользовательский заголовок к запросу."
  syntax:
    content: protected virtual System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "<xref:System.Uri>Для использования при создании <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> </xref:System.Uri>"
    return:
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>Экземпляра.</xref:System.Net.WebRequest>"
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  id: GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает ответ на синхронный запрос к методу XML-веб-службы."
  syntax:
    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>Для получения ответа от.</xref:System.Net.WebRequest>"
    return:
      type: System.Net.WebResponse
      description: "Ответ на запрос синхронного метода XML-веб-службы."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Если <xref:System.Web.Services.Protocols.WebClientProtocol.Abort*>вызывается до вызова метода GetWebResponse.</xref:System.Web.Services.Protocols.WebClientProtocol.Abort*>"
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает ответ на асинхронный запрос метода XML-веб-службы. Этот защищенный метод вызывается инфраструктурой XML-веб-службы клиента для получения ответа на асинхронный запрос XML-веб-службы."
  syntax:
    content: protected virtual System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "<xref:System.Net.WebRequest>Для получения ответа от.</xref:System.Net.WebRequest>"
    - id: result
      type: System.IAsyncResult
      description: "<xref:System.IAsyncResult>Для передачи <xref:System.Net.HttpWebRequest.EndGetResponse*>после завершения ответа.</xref:System.Net.HttpWebRequest.EndGetResponse*> </xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Ответ на выполнение асинхронного запроса для метода XML-веб-службы."
  overload: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "Если <> </> *настроек вызывается до вызова метода <> </> *настроек."
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  id: PreAuthenticate
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
  fullName: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает или задает признак включения предварительной проверки подлинности."
  remarks: "Когда клиент запрашивает ресурс без использования учетных данных, сервер опрашивает запрос и указывает, какие схемы проверки подлинности, он поддерживает. Клиент выбирает схему проверки подлинности и отправляет соответствующие `WWW-authenticate` заголовок на сервер. При PreAuthenticate `true`, `WWW-authenticate` заголовок отправляется со всеми последующими запросами.       При PreAuthenticate `false`, запросе метода XML-веб-службы без предварительной попытки проверки подлинности пользователя. Если веб-службу XML разрешает анонимный доступ, то выполняется метод XML-веб-службы. Если анонимный доступ запрещен, возвращается код 401 HTTP отправляется обратно клиенту. В результате <xref:System.Web.Services.Protocols.WebClientProtocol>класс возвращает учетные данные проверки подлинности на веб-сервер.</xref:System.Web.Services.Protocols.WebClientProtocol> Если клиент проверку подлинности и пользователь получил право доступа к веб-службу XML, метод XML-веб-службы выполняется; в противном случае клиент отказано в доступе."
  syntax:
    content: public bool PreAuthenticate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>выполнять предварительную проверку подлинности запроса; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Значение по умолчанию — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  id: RequestEncoding
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
  fullName: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "<xref:System.Text.Encoding>Используется для выполнения клиентского запроса веб-службой XML.</xref:System.Text.Encoding>"
  remarks: "RequestEncoding определяет кодировку для сообщения запроса. <xref:System.Net.WebRequest.ContentType%2A>Запроса содержит значение кодировки.</xref:System.Net.WebRequest.ContentType%2A>       Классы, производные от <xref:System.Web.Services.Protocols.WebClientProtocol>поддерживают определенный протокол, такой как <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>does SOAP, установите это свойство в соответствии с требованиями для определенного протокола.</xref:System.Web.Services.Protocols.SoapHttpClientProtocol> </xref:System.Web.Services.Protocols.WebClientProtocol> Например <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>задает кодировку UTF-8.</xref:System.Web.Services.Protocols.SoapHttpClientProtocol>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form explicitly sets RequestEncoding to UTF-8.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebClientProtocol.RequestEncoding Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_59_1.aspx)]\n [!code-cs[Classic WebClientProtocol.RequestEncoding Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_59_1.aspx)]"
  syntax:
    content: public System.Text.Encoding RequestEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Кодировка для клиентского запроса. Значение по умолчанию — <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, которая использует кодировку по умолчанию для транспорта и протокола."
  overload: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout
  id: Timeout
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
  fullName: System.Web.Services.Protocols.WebClientProtocol.Timeout
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Указывает время ожидания клиента XML-веб-службы для отклика на запрос является синхронным XML-веб-службы поступления (в миллисекундах)."
  remarks: "Задание свойства Timeout <xref:System.Threading.Timeout.Infinite?displayProperty=fullName>Указывает, что запрос время ожидания не истекает.</xref:System.Threading.Timeout.Infinite?displayProperty=fullName> Несмотря на то, что клиент XML-веб-службы можно задать свойство времени ожидания не истечет время ожидания, веб-сервер по-прежнему может вызвать запрос времени ожидания на стороне сервера."
  example:
  - "The following example sets the `Timeout` value to 15000 (15 seconds) for the synchronous call to the `Add` XML Web service method within the `Math` XML Web service.  \n  \n [!code-cs[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_35_1.cs)]\n [!code-cpp[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_35_1.cpp)]\n [!code-vb[Classic WebClientProtocol.Timeout Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_35_1.vb)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Время ожидания в миллисекундах для синхронных вызовов веб-службой XML. Значение по умолчанию — 100000 миллисекунд."
  overload: System.Web.Services.Protocols.WebClientProtocol.Timeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.Url
  id: Url
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: Url
  nameWithType: WebClientProtocol.Url
  fullName: System.Web.Services.Protocols.WebClientProtocol.Url
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает или задает базовый URL-адрес веб-службу XML клиент запрашивает."
  remarks: "Классы-посредники, созданные с помощью Wsdl.exe задаст свойство URL-адрес по умолчанию для использования клиентом. Url-адрес по умолчанию определяется расположением атрибута, обнаруженного в описании службы, из которого был создан класс прокси-сервера.       Производные классы, поддерживающие особые протоколы, такие как <xref:System.Web.Services.Protocols.HttpGetClientProtocol>и <xref:System.Web.Services.Protocols.HttpPostClientProtocol>могут добавлять дополнительные данные для URL-адреса, чтобы сделать запрос XML-веб-службы.</xref:System.Web.Services.Protocols.HttpPostClientProtocol> </xref:System.Web.Services.Protocols.HttpGetClientProtocol>       Можно изменить свойство URL-адрес для ссылки на все веб-службы XML, реализующий же описание службы, прокси-класса, созданного из."
  example:
  - "The following example changes the Url property for the `math` XML Web service to the Web server named `http:// www.contoso.com`.  \n  \n [!code-cs[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_49_1.cs)]\n [!code-vb[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_49_1.vb)]\n [!code-cpp[Classic WebClientProtocol.Url Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_49_1.cpp)]"
  syntax:
    content: public string Url { get; set; }
    return:
      type: System.String
      description: "Базовый URL-адрес веб-службу XML клиент запрашивает. Значение по умолчанию — <xref:System.String>.</xref:System.String>"
  overload: System.Web.Services.Protocols.WebClientProtocol.Url*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Возвращает или задает значение, указывающее, следует ли задать <xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*>значение из свойства &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; свойство.</xref:System.Web.Services.Protocols.WebClientProtocol.Credentials*>"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если свойство учетных данных задано значение &lt;xref:System.Net.CredentialCache.DefaultCredentials%2A?displayProperty=fullName&gt; свойство; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: WebClientProtocol()
  nameWithType: WebClientProtocol.WebClientProtocol()
  fullName: System.Web.Services.Protocols.WebClientProtocol.WebClientProtocol()
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Abort()
  nameWithType: WebClientProtocol.Abort()
  fullName: System.Web.Services.Protocols.WebClientProtocol.Abort()
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: AddToCache(Type,Object)
  nameWithType: WebClientProtocol.AddToCache(Type,Object)
  fullName: System.Web.Services.Protocols.WebClientProtocol.AddToCache(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
  fullName: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.Credentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetFromCache(Type)
  nameWithType: WebClientProtocol.GetFromCache(Type)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(Type)
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: WebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
  fullName: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
  fullName: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
  fullName: System.Web.Services.Protocols.WebClientProtocol.Timeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Services.Protocols.WebClientProtocol.Url
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Url
  nameWithType: WebClientProtocol.Url
  fullName: System.Web.Services.Protocols.WebClientProtocol.Url
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
  fullName: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
- uid: System.Web.Services.Protocols.WebClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: WebClientProtocol
  nameWithType: WebClientProtocol.WebClientProtocol
- uid: System.Web.Services.Protocols.WebClientProtocol.Abort*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Abort
  nameWithType: WebClientProtocol.Abort
- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: AddToCache
  nameWithType: WebClientProtocol.AddToCache
- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: ConnectionGroupName
  nameWithType: WebClientProtocol.ConnectionGroupName
- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Credentials
  nameWithType: WebClientProtocol.Credentials
- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetFromCache
  nameWithType: WebClientProtocol.GetFromCache
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: WebClientProtocol.GetWebRequest
- uid: System.Web.Services.Protocols.WebClientProtocol.GetWebResponse*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: GetWebResponse
  nameWithType: WebClientProtocol.GetWebResponse
- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: PreAuthenticate
  nameWithType: WebClientProtocol.PreAuthenticate
- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: RequestEncoding
  nameWithType: WebClientProtocol.RequestEncoding
- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Timeout
  nameWithType: WebClientProtocol.Timeout
- uid: System.Web.Services.Protocols.WebClientProtocol.Url*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: Url
  nameWithType: WebClientProtocol.Url
- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials*
  parent: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: WebClientProtocol.UseDefaultCredentials
