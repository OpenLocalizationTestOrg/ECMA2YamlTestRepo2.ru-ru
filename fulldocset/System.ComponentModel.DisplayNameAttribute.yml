### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.DisplayNameAttribute
  id: DisplayNameAttribute
  children:
  - System.ComponentModel.DisplayNameAttribute.#ctor
  - System.ComponentModel.DisplayNameAttribute.#ctor(System.String)
  - System.ComponentModel.DisplayNameAttribute.Default
  - System.ComponentModel.DisplayNameAttribute.DisplayName
  - System.ComponentModel.DisplayNameAttribute.DisplayNameValue
  - System.ComponentModel.DisplayNameAttribute.Equals(System.Object)
  - System.ComponentModel.DisplayNameAttribute.GetHashCode
  - System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute
  langs:
  - csharp
  name: DisplayNameAttribute
  nameWithType: DisplayNameAttribute
  fullName: System.ComponentModel.DisplayNameAttribute
  type: Class
  summary: "Указывает отображаемое имя для свойства, события или открытого метода типа void, не принимающего аргументов."
  remarks: "Значение по умолчанию — имя свойства или события. Реализация по умолчанию <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>использует отражение для поиска открытых свойств и void открытые методы, которые не принимают аргументов.</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A> <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>выполняет поиск DisplayNameAttribute на каждое свойство и метод и, если он найден, использует эту строку, а не имя свойства или метода.</xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>"
  example:
  - "The following code example demonstrates using the DisplayNameAttribute class to change the name of a property called `MisnamedProperty` to `RenamedProperty` in a <xref:System.Windows.Forms.PropertyGrid> control. For a full code listing, see [How to: Apply Attributes in Windows Forms Controls](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.ComponentModel.AttributesDemoControl#30](~/add/codesnippet/visualbasic/t-system.componentmodel._65_1.vb)]\n [!code-cs[System.ComponentModel.AttributesDemoControl#30](~/add/codesnippet/csharp/t-system.componentmodel._65_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property | System.AttributeTargets.Event)]

      public class DisplayNameAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.DisplayNameAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  name: DisplayNameAttribute()
  nameWithType: DisplayNameAttribute.DisplayNameAttribute()
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameAttribute()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.DisplayNameAttribute&quot;> </xref> класса."
  syntax:
    content: public DisplayNameAttribute ();
    parameters: []
  overload: System.ComponentModel.DisplayNameAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DisplayNameAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  name: DisplayNameAttribute(String)
  nameWithType: DisplayNameAttribute.DisplayNameAttribute(String)
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameAttribute(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.ComponentModel.DisplayNameAttribute&quot;> </xref> класса с помощью отображаемое имя."
  syntax:
    content: public DisplayNameAttribute (string displayName);
    parameters:
    - id: displayName
      type: System.String
      description: "Отображаемое имя."
  overload: System.ComponentModel.DisplayNameAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DisplayNameAttribute.Default
  id: Default
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  name: Default
  nameWithType: DisplayNameAttribute.Default
  fullName: System.ComponentModel.DisplayNameAttribute.Default
  type: Field
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Указывает значение по умолчанию для <xref href=&quot;System.ComponentModel.DisplayNameAttribute&quot;> </xref>. Это поле доступно только для чтения."
  syntax:
    content: public static readonly System.ComponentModel.DisplayNameAttribute Default;
    return:
      type: System.ComponentModel.DisplayNameAttribute
      description: "Для добавления."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DisplayNameAttribute.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  name: DisplayName
  nameWithType: DisplayNameAttribute.DisplayName
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayName
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает отображаемое имя для свойства, события или открытого метода типа void, не принимает аргументов, хранящихся в этом атрибуте."
  syntax:
    content: public virtual string DisplayName { get; }
    return:
      type: System.String
      description: "Отображаемое имя."
  overload: System.ComponentModel.DisplayNameAttribute.DisplayName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DisplayNameAttribute.DisplayNameValue
  id: DisplayNameValue
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  name: DisplayNameValue
  nameWithType: DisplayNameAttribute.DisplayNameValue
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameValue
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает или задает отображаемое имя."
  syntax:
    content: protected string DisplayNameValue { get; set; }
    return:
      type: System.String
      description: "Отображаемое имя."
  overload: System.ComponentModel.DisplayNameAttribute.DisplayNameValue*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DisplayNameAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DisplayNameAttribute.Equals(Object)
  fullName: System.ComponentModel.DisplayNameAttribute.Equals(Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет неравенство двух <xref href=&quot;System.ComponentModel.DisplayNameAttribute&quot;> </xref> они равны."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "<xref href=&quot;System.ComponentModel.DisplayNameAttribute&quot;> </xref> Для проверки на равенство."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если значение данного объекта равно значению текущего объекта; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DisplayNameAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DisplayNameAttribute.GetHashCode
  id: GetHashCode
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DisplayNameAttribute.GetHashCode()
  fullName: System.ComponentModel.DisplayNameAttribute.GetHashCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Возвращает хэш-код данного экземпляра."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для текущего <xref href=&quot;System.ComponentModel.DisplayNameAttribute&quot;> </xref>."
  overload: System.ComponentModel.DisplayNameAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute
  id: IsDefaultAttribute
  parent: System.ComponentModel.DisplayNameAttribute
  langs:
  - csharp
  name: IsDefaultAttribute()
  nameWithType: DisplayNameAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Определяет, является ли этот атрибут по умолчанию."
  syntax:
    content: public override bool IsDefaultAttribute ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если атрибут имеет значение по умолчанию для данного класса атрибутов; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.DisplayNameAttribute.#ctor
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: DisplayNameAttribute()
  nameWithType: DisplayNameAttribute.DisplayNameAttribute()
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameAttribute()
- uid: System.ComponentModel.DisplayNameAttribute.#ctor(System.String)
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: DisplayNameAttribute(String)
  nameWithType: DisplayNameAttribute.DisplayNameAttribute(String)
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.DisplayNameAttribute.Default
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: Default
  nameWithType: DisplayNameAttribute.Default
  fullName: System.ComponentModel.DisplayNameAttribute.Default
- uid: System.ComponentModel.DisplayNameAttribute
  parent: System.ComponentModel
  isExternal: false
  name: DisplayNameAttribute
  nameWithType: DisplayNameAttribute
  fullName: System.ComponentModel.DisplayNameAttribute
- uid: System.ComponentModel.DisplayNameAttribute.DisplayName
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: DisplayName
  nameWithType: DisplayNameAttribute.DisplayName
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayName
- uid: System.ComponentModel.DisplayNameAttribute.DisplayNameValue
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: DisplayNameValue
  nameWithType: DisplayNameAttribute.DisplayNameValue
  fullName: System.ComponentModel.DisplayNameAttribute.DisplayNameValue
- uid: System.ComponentModel.DisplayNameAttribute.Equals(System.Object)
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: DisplayNameAttribute.Equals(Object)
  fullName: System.ComponentModel.DisplayNameAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.DisplayNameAttribute.GetHashCode
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: DisplayNameAttribute.GetHashCode()
  fullName: System.ComponentModel.DisplayNameAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: DisplayNameAttribute.IsDefaultAttribute()
  fullName: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute()
- uid: System.ComponentModel.DisplayNameAttribute.#ctor*
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: DisplayNameAttribute
  nameWithType: DisplayNameAttribute.DisplayNameAttribute
- uid: System.ComponentModel.DisplayNameAttribute.DisplayName*
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: DisplayName
  nameWithType: DisplayNameAttribute.DisplayName
- uid: System.ComponentModel.DisplayNameAttribute.DisplayNameValue*
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: DisplayNameValue
  nameWithType: DisplayNameAttribute.DisplayNameValue
- uid: System.ComponentModel.DisplayNameAttribute.Equals*
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: Equals
  nameWithType: DisplayNameAttribute.Equals
- uid: System.ComponentModel.DisplayNameAttribute.GetHashCode*
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: DisplayNameAttribute.GetHashCode
- uid: System.ComponentModel.DisplayNameAttribute.IsDefaultAttribute*
  parent: System.ComponentModel.DisplayNameAttribute
  isExternal: false
  name: IsDefaultAttribute
  nameWithType: DisplayNameAttribute.IsDefaultAttribute
