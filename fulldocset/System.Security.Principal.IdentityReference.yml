### YamlMime:ManagedReference
items:
- uid: System.Security.Principal.IdentityReference
  id: IdentityReference
  children:
  - System.Security.Principal.IdentityReference.Equals(System.Object)
  - System.Security.Principal.IdentityReference.GetHashCode
  - System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  - System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  - System.Security.Principal.IdentityReference.ToString
  - System.Security.Principal.IdentityReference.Translate(System.Type)
  - System.Security.Principal.IdentityReference.Value
  langs:
  - csharp
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
  type: Class
  summary: "Представляет удостоверение и является базовым классом для <xref href=&quot;System.Security.Principal.NTAccount&quot;> </xref> и <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> классы. Этот класс не предоставляет открытый конструктор и не может быть унаследован."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public abstract class IdentityReference
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Возвращает значение, указывающее, равен ли указанный объект данного экземпляра <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> класса."
  syntax:
    content: public abstract bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Объект, сравниваемый с этим <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> экземпляром или пустая ссылка."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> o </code> объект с тем же базовым типом и значением, что <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> экземпляра; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.IdentityReference.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.GetHashCode
  id: GetHashCode
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Служит хэш-функцией для <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>. GetHashCode подходит для использования в алгоритмах и структурах данных хэширования как хэш-таблицы."
  syntax:
    content: public abstract int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Хэш-код для данного <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> объекта."
  overload: System.Security.Principal.IdentityReference.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  id: IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Возвращает значение, которое указывает, является ли указанный тип является типом допустимых эквивалентов для <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> класса."
  syntax:
    content: public abstract bool IsValidTargetType (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Тип запрашиваемой на допустимость в качестве преобразования из <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>. Допустимы следующие типы целевого объекта.<xref href=&quot;System.Security.Principal.NTAccount&quot;></xref><xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если <code> targetType </code> — это тип допустимого предобразования для <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> класса; в противном случае <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Principal.IdentityReference.IsValidTargetType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Сравнивает два <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> объектами, чтобы определить, равны ли они. Они считаются равными, если они имеют одинаковое представление каноническое имя, возвращаемый <xref:System.Security.Principal.IdentityReference.Value*>свойства или если оба они находятся <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Security.Principal.IdentityReference.Value*>"
  syntax:
    content: public static bool op_Equality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: "Слева <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> операнд, используемый для определения равенства. Этот параметр может иметь <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: right
      type: System.Security.Principal.IdentityReference
      description: "Право <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> операнд, используемый для определения равенства. Этот параметр может иметь <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.IdentityReference.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  id: op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  type: Operator
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Сравнивает два <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> объектами, чтобы определить, не равны ли они. Они считаются неравными, если они имеют разные каноническое имя представления, возвращенных <xref:System.Security.Principal.IdentityReference.Value*>свойство или, если один из объектов <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> и другой — нет.</xref:System.Security.Principal.IdentityReference.Value*>"
  syntax:
    content: public static bool op_Inequality (System.Security.Principal.IdentityReference left, System.Security.Principal.IdentityReference right);
    parameters:
    - id: left
      type: System.Security.Principal.IdentityReference
      description: "Слева <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> операнд, используемый для сравнения неравенства. Этот параметр может иметь <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: right
      type: System.Security.Principal.IdentityReference
      description: "Право <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> операнд, используемый для сравнения неравенства. Этот параметр может иметь <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>left</code> and <code>right</code> are not equal; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Principal.IdentityReference.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.ToString
  id: ToString
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Возвращает строковое представление идентификатора, представленного <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> объекта."
  syntax:
    content: public abstract string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Удостоверение в строковом формате."
  overload: System.Security.Principal.IdentityReference.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  id: Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Преобразует имя учетной записи, представленного <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> объекта в другой <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>-производный тип."
  syntax:
    content: public abstract System.Security.Principal.IdentityReference Translate (Type targetType);
    parameters:
    - id: targetType
      type: System.Type
      description: "Тип целевого объекта для преобразования из <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref>."
    return:
      type: System.Security.Principal.IdentityReference
      description: "Преобразованное удостоверение."
  overload: System.Security.Principal.IdentityReference.Translate*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Principal.IdentityReference.Value
  id: Value
  parent: System.Security.Principal.IdentityReference
  langs:
  - csharp
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Principal
  summary: "Возвращает строковое значение идентификатора, представленного <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> объекта."
  syntax:
    content: public abstract string Value { get; }
    return:
      type: System.String
      description: "Строковое значение, представленное удостоверения <xref href=&quot;System.Security.Principal.IdentityReference&quot;> </xref> объекта."
  overload: System.Security.Principal.IdentityReference.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Security.Principal.IdentityReference.Equals(System.Object)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals(Object)
  nameWithType: IdentityReference.Equals(Object)
  fullName: System.Security.Principal.IdentityReference.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Principal.IdentityReference.GetHashCode
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode()
  nameWithType: IdentityReference.GetHashCode()
  fullName: System.Security.Principal.IdentityReference.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.IdentityReference.IsValidTargetType(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType(Type)
  nameWithType: IdentityReference.IsValidTargetType(Type)
  fullName: System.Security.Principal.IdentityReference.IsValidTargetType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.Principal.IdentityReference.op_Equality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Equality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Equality(IdentityReference,IdentityReference)
- uid: System.Security.Principal.IdentityReference
  parent: System.Security.Principal
  isExternal: false
  name: IdentityReference
  nameWithType: IdentityReference
  fullName: System.Security.Principal.IdentityReference
- uid: System.Security.Principal.IdentityReference.op_Inequality(System.Security.Principal.IdentityReference,System.Security.Principal.IdentityReference)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality(IdentityReference,IdentityReference)
  nameWithType: IdentityReference.op_Inequality(IdentityReference,IdentityReference)
  fullName: System.Security.Principal.IdentityReference.op_Inequality(IdentityReference,IdentityReference)
- uid: System.Security.Principal.IdentityReference.ToString
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString()
  nameWithType: IdentityReference.ToString()
  fullName: System.Security.Principal.IdentityReference.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Principal.IdentityReference.Translate(System.Type)
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate(Type)
  nameWithType: IdentityReference.Translate(Type)
  fullName: System.Security.Principal.IdentityReference.Translate(Type)
- uid: System.Security.Principal.IdentityReference.Value
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
  fullName: System.Security.Principal.IdentityReference.Value
- uid: System.Security.Principal.IdentityReference.Equals*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Equals
  nameWithType: IdentityReference.Equals
- uid: System.Security.Principal.IdentityReference.GetHashCode*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: GetHashCode
  nameWithType: IdentityReference.GetHashCode
- uid: System.Security.Principal.IdentityReference.IsValidTargetType*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: IsValidTargetType
  nameWithType: IdentityReference.IsValidTargetType
- uid: System.Security.Principal.IdentityReference.op_Equality*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Equality
  nameWithType: IdentityReference.op_Equality
- uid: System.Security.Principal.IdentityReference.op_Inequality*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: op_Inequality
  nameWithType: IdentityReference.op_Inequality
- uid: System.Security.Principal.IdentityReference.ToString*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: ToString
  nameWithType: IdentityReference.ToString
- uid: System.Security.Principal.IdentityReference.Translate*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Translate
  nameWithType: IdentityReference.Translate
- uid: System.Security.Principal.IdentityReference.Value*
  parent: System.Security.Principal.IdentityReference
  isExternal: false
  name: Value
  nameWithType: IdentityReference.Value
