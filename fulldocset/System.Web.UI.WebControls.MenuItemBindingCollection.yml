### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.MenuItemBindingCollection
  id: MenuItemBindingCollection
  children:
  - System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  - System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  - System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: MenuItemBindingCollection
  nameWithType: MenuItemBindingCollection
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection
  type: Class
  summary: "Представляет коллекцию <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объектов."
  remarks: "Класс MenuItemBindingCollection используется для хранения и управления коллекцией <xref:System.Web.UI.WebControls.MenuItemBinding>объекты в <xref:System.Web.UI.WebControls.Menu>управления.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding> <xref:System.Web.UI.WebControls.Menu>Управления использует MenuItemBindingCollection класс как тип данных для его <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>свойство.</xref:System.Web.UI.WebControls.Menu.DataBindings%2A> </xref:System.Web.UI.WebControls.Menu> <xref:System.Web.UI.WebControls.Menu.DataBindings%2A>Свойство используется для хранения любого привязки пункта меню, определенные для <xref:System.Web.UI.WebControls.Menu>управления.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.Menu.DataBindings%2A>      Настроек [!NOTE] настроек порядок, в котором <xref:System.Web.UI.WebControls.MenuItemBinding>объекты отображаются в коллекции не оказывает влияния на применение этих объектов к пунктам меню в <xref:System.Web.UI.WebControls.Menu>управления.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>       Класс MenuItemBindingCollection поддерживает несколько способов доступа к элементам в коллекции:-использование <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A>индексатор для получения непосредственно <xref:System.Web.UI.WebControls.MenuItemBinding>объект с указанным индексом (с нуля).</xref:System.Web.UI.WebControls.MenuItemBinding> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Item%2A>      -Используйте <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>метод для создания перечислитель, который может использоваться для итерации по коллекции.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>      -Используйте <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>метод для копирования содержимого коллекции в массив.</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>       Объект MenuItemBindingCollection можно управлять программно, добавляя и удаляя <xref:System.Web.UI.WebControls.MenuItemBinding>объектов.</xref:System.Web.UI.WebControls.MenuItemBinding> Добавление пунктов меню в коллекцию, используйте <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A>или <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A>метод.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> Удаление узлов из коллекции, используйте <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>, <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>, или <xref:System.Web.UI.StateManagedCollection.Clear%2A>метод.</xref:System.Web.UI.StateManagedCollection.Clear%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>       Класс MenuItemBindingCollection содержит свойства и методы, которые позволяют получить сведения о самой коллекцией. Чтобы узнать количество элементов, содержащихся в коллекции, используйте <xref:System.Web.UI.StateManagedCollection.Count%2A>свойство.</xref:System.Web.UI.StateManagedCollection.Count%2A> Чтобы определить, содержит ли коллекция определенный <xref:System.Web.UI.WebControls.MenuItemBinding>, используйте <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A>метод.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Contains%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> Чтобы получить индекс <xref:System.Web.UI.WebControls.MenuItemBinding>объекта в коллекции, используйте <xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A>метод.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to populate a MenuItemBindingCollection object declaratively. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuBindings#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_1.aspx)]\n [!code-cs[MenuBindings#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_1.aspx)]  \n  \n The following code example demonstrates how to add <xref:System.Web.UI.WebControls.MenuItemBinding> objects to a MenuItemBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_217_2.aspx)]\n [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_217_2.aspx)]  \n  \n The following is sample site map data for the previous examples.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: 'public sealed class MenuItemBindingCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  id: Add(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Add(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Add(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Add(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Добавляет указанный <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объект в конец коллекции."
  remarks: "Используйте метод Add для добавления указанного <xref:System.Web.UI.WebControls.MenuItemBinding>объект в конец коллекции.</xref:System.Web.UI.WebControls.MenuItemBinding>      Настроек [!NOTE] настроек можно добавлять значения null и повторяющиеся <xref:System.Web.UI.WebControls.MenuItemBinding>объекты в коллекцию.</xref:System.Web.UI.WebControls.MenuItemBinding>       В качестве альтернативы можно вставить <xref:System.Web.UI.WebControls.MenuItemBinding>объекта в коллекции по указанному индексу с помощью <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A>метод.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>      Настроек [!NOTE] настроек порядок, в котором <xref:System.Web.UI.WebControls.MenuItemBinding>объекты отображаются в коллекции не оказывает влияния на применение этих объектов к пунктам меню в <xref:System.Web.UI.WebControls.Menu>управления.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Add method to append a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the end of the <xref:System.Web.UI.WebControls.Menu.DataBindings%2A> collection of a <xref:System.Web.UI.WebControls.Menu> control. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionAdd#1](~/add/codesnippet/csharp/455e41fd-8e8e-40dd-99e4-_1.aspx)]\n [!code-vb[MenuItemBindingCollectionAdd#1](~/add/codesnippet/visualbasic/455e41fd-8e8e-40dd-99e4-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public int Add (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> Для добавления в конец коллекции."
    return:
      type: System.Int32
      description: "Индекс, по которому <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> вставлен в коллекцию."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  id: Contains(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Contains(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Contains(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Определяет, является ли указанный <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объект находится в коллекции."
  remarks: "Метод Contains используется для определения ли <xref:System.Web.UI.WebControls.MenuItemBinding>объектов, содержащихся в коллекции.</xref:System.Web.UI.WebControls.MenuItemBinding> Этот метод обычно используется для проверки существования <xref:System.Web.UI.WebControls.MenuItemBinding>объекта перед выполнением задачи, такие как добавление или удаление привязки пункта меню из коллекции.</xref:System.Web.UI.WebControls.MenuItemBinding>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> Для поиска."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если указанный <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> содержится в коллекции; в противном случае — <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: CopyTo(MenuItemBinding[],Int32)
  nameWithType: MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Копирует все элементы из <xref href=&quot;System.Web.UI.WebControls.MenuItemBindingCollection&quot;> </xref> объект в совместимый одномерный массив <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объектов, начиная с указанного индекса в массиве назначения."
  remarks: "Используйте <xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A>метод для копирования содержимого коллекции в указанный массив, начинающийся с нуля.</xref:System.Web.UI.WebControls.MenuItemCollection.CopyTo%2A> Элементы копируются, начиная с указанного индекса целевого массива. С помощью массива, затем можно использовать синтаксис массива для доступа к элементам в <xref:System.Web.UI.WebControls.MenuItemBindingCollection>объекта.</xref:System.Web.UI.WebControls.MenuItemBindingCollection>       В качестве альтернативы можно также использовать <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>метод для создания перечислитель, который может использоваться для доступа к элементам в коллекции.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the <xref:System.Web.UI.WebControls.MenuItemBinding> objects from the collection to an array. The array is then iterated through to display the properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> objects. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/csharp/23779e9d-0868-4199-8f19-_1.aspx)]\n [!code-vb[MenuItemBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/23779e9d-0868-4199-8f19-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.MenuItemBinding[] array, int index);
    parameters:
    - id: array
      type: System.Web.UI.WebControls.MenuItemBinding[]
      description: "Отсчитываемый от нуля массив <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объектов, получающий копируемые элементы из коллекции."
    - id: index
      type: System.Int32
      description: "Позиция в массиве назначения, с которого начинается копироваться содержимое."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: MenuItemBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Для добавления."
    return:
      type: System.Object
      description: "Для добавления."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: MenuItemBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Для добавления."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  id: IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: IndexOf(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.IndexOf(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Определяет индекс указанного <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объекта в коллекции."
  remarks: "Метод IndexOf используется для определения индекса указанного <xref:System.Web.UI.WebControls.MenuItemBinding>объекта в коллекции.</xref:System.Web.UI.WebControls.MenuItemBinding>      Настроек [!NOTE] настроек порядок, в котором <xref:System.Web.UI.WebControls.MenuItemBinding>объекты отображаются в коллекции не оказывает влияния на применение этих объектов к пунктам меню в <xref:System.Web.UI.WebControls.Menu>управления.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>       Если привязка пункта меню не существует в коллекции, метод возвращает значение -1.      Настроек [!NOTE] настроек Если заданная привязка элемента меню встречается несколько раз в коллекции, возвращается индекс первого вхождения."
  example:
  - "The following code example demonstrates how to use the IndexOf method to determine the index of a <xref:System.Web.UI.WebControls.MenuItemBinding> object in the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/visualbasic/4ddc9e66-fb4e-4063-8f80-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionIndexOf#1](~/add/codesnippet/csharp/4ddc9e66-fb4e-4063-8f80-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.MenuItemBinding value);
    parameters:
    - id: value
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> Для определения индекса."
    return:
      type: System.Int32
      description: "Отсчитываемый от нуля индекс первого вхождения <code> value </code> в коллекции, если он найден; в противном случае — значение -1."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  id: Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Insert(Int32,MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Добавляет указанный <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объект в коллекцию по указанному индексу."
  remarks: "Используйте метод Insert для вставки заданной <xref:System.Web.UI.WebControls.MenuItemBinding>объекта в коллекции по указанному индексу.</xref:System.Web.UI.WebControls.MenuItemBinding>      Настроек [!NOTE] настроек можно добавлять значения null и повторяющиеся <xref:System.Web.UI.WebControls.MenuItemBinding>объекты в коллекцию.</xref:System.Web.UI.WebControls.MenuItemBinding>       Кроме того, можно просто добавить <xref:System.Web.UI.WebControls.MenuItemBinding>объект в конец коллекции с помощью <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A>метод.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.MenuItemBinding>      Настроек [!NOTE] настроек порядок, в котором <xref:System.Web.UI.WebControls.MenuItemBinding>объекты отображаются в коллекции не делает ничего о том, как эти объекты применяются к пунктам меню в <xref:System.Web.UI.WebControls.Menu>управления.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Insert method to add a <xref:System.Web.UI.WebControls.MenuItemBinding> object to the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionInsert#1](~/add/codesnippet/visualbasic/4e0eb68e-1774-4135-bfc7-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionInsert#1](~/add/codesnippet/csharp/4e0eb68e-1774-4135-bfc7-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: index
      type: System.Int32
      description: "Расположение отсчитываемый от нуля индекс, по которому нужно вставить <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref>."
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> Для вставки."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: MenuItemBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Возвращает <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объект по указанному индексу из коллекции."
  remarks: "Этот указатель используется для доступа к <xref:System.Web.UI.WebControls.MenuItemBinding>из коллекции по указанному индексу, используя нотацию массива.</xref:System.Web.UI.WebControls.MenuItemBinding> Индексатор позволяет получить доступ к, изменить или заменить <xref:System.Web.UI.WebControls.MenuItemBinding>непосредственно из коллекции.</xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to retrieve a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection using the indexer. The properties of the <xref:System.Web.UI.WebControls.MenuItemBinding> object are then updated programmatically. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_289_1.aspx)]\n [!code-vb[MenuItemBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_289_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public System.Web.UI.WebControls.MenuItemBinding this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "Отсчитываемый от нуля индекс <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> для извлечения."
    return:
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> По указанному индексу в коллекции."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: MenuItemBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "Для добавления."
    - id: value
      type: System.Object
      description: "Для добавления."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: MenuItemBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Для добавления."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  id: Remove(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: Remove(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Remove(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(MenuItemBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Удаляет указанный <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> из коллекции."
  remarks: "Используйте метод Remove для удаления из коллекции заданная привязка элемента меню. Затем все элементы, которые за этим элементом меню сдвигаются для заполнения свободные позиции. Индексы перемещаемых элементов также обновляются.      Настроек [!NOTE] настроек коллекции могут содержать значения null, а также дублирование <xref:System.Web.UI.WebControls.MenuItemBinding>объектов.</xref:System.Web.UI.WebControls.MenuItemBinding>       В качестве альтернативы можно удалить элемент меню из указанного индекса в коллекции с помощью <xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A>метод.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt%2A> Все пункты меню можно также удалить из коллекции с помощью <xref:System.Web.UI.StateManagedCollection.Clear%2A>метод.</xref:System.Web.UI.StateManagedCollection.Clear%2A>      Настроек [!NOTE] настроек порядок, в котором <xref:System.Web.UI.WebControls.MenuItemBinding>объекты отображаются в коллекции не оказывает влияния на применение этих объектов к пунктам меню в <xref:System.Web.UI.WebControls.Menu>управления.</xref:System.Web.UI.WebControls.Menu> </xref:System.Web.UI.WebControls.MenuItemBinding>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-vb[MenuItemBindingCollectionRemove#1](~/add/codesnippet/visualbasic/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]\n [!code-cs[MenuItemBindingCollectionRemove#1](~/add/codesnippet/csharp/5c2a1f0c-56d8-4214-8cb5-_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.MenuItemBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.MenuItemBinding
      description: "<xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> Для удаления из коллекции."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: MenuItemBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Удаляет <xref href=&quot;System.Web.UI.WebControls.MenuItemBinding&quot;> </xref> объекта по указанному индексу из коллекции."
  remarks: "Метод RemoveAt служит для удаления <xref:System.Web.UI.WebControls.MenuItemBinding>объекта по указанному индексу из коллекции.</xref:System.Web.UI.WebControls.MenuItemBinding> Затем все элементы, которые за этим элементом меню сдвигаются для заполнения свободные позиции. Индексы перемещаемых элементов также обновляются.      Настроек [!NOTE] настроек коллекции могут содержать значения null, а также дублирование <xref:System.Web.UI.WebControls.MenuItemBinding>объектов.</xref:System.Web.UI.WebControls.MenuItemBinding>       В качестве альтернативы можно удалить определенный <xref:System.Web.UI.WebControls.MenuItemBinding>объекта с помощью <xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A>метод.</xref:System.Web.UI.WebControls.MenuItemBindingCollection.Remove%2A> </xref:System.Web.UI.WebControls.MenuItemBinding> Все пункты меню можно также удалить из коллекции с помощью <xref:System.Web.UI.StateManagedCollection.Clear%2A>метод.</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.MenuItemBinding> object from the collection at a specific index. For this example to work correctly, you must copy the sample XML data below to a file named Map.xml.  \n  \n [!code-cs[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[MenuItemBindingCollectionRemoveAt#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_120_1.aspx)]  \n  \n The following is sample site map data for the previous example.  \n  \n `<MapHomeNode url=\"~\\Home.aspx\"`  \n  \n `title=\"Home\"`  \n  \n `description=\"Home\">`  \n  \n `<MapNode url=\"~\\Music.aspx\"`  \n  \n `title=\"Music\"`  \n  \n `description=\"Music\">`  \n  \n `<MapNode url=\"~\\Classical.aspx\"`  \n  \n `title=\"Classical\"`  \n  \n `description=\"Classical\"/>`  \n  \n `<MapNode url=\"~\\Rock.aspx\"`  \n  \n `title=\"Rock\"`  \n  \n `description=\"Rock\"/>`  \n  \n `<MapNode url=\"~\\Jazz.aspx\"`  \n  \n `title=\"Jazz\"`  \n  \n `description=\"Jazz\"/>`  \n  \n `</MapNode>`  \n  \n `<MapNode url=\"~\\Movies.aspx\"`  \n  \n `title=\"Movies\"`  \n  \n `description=\"Movies\">`  \n  \n `<MapNode url=\"~\\Action.aspx\"`  \n  \n `title=\"Action\"`  \n  \n `description=\"Action\"/>`  \n  \n `<MapNode url=\"~\\Drama.aspx\"`  \n  \n `title=\"Drama\"`  \n  \n `description=\"Drama\"/>`  \n  \n `<MapNode url=\"~\\Musical.aspx\"`  \n  \n `title=\"Musical\"`  \n  \n `description=\"Musical\"/>`  \n  \n `</MapNode>`  \n  \n `</MapHomeNode>`"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "Отсчитываемый от нуля индекс удаляемого удаляемой привязки элемента меню."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: MenuItemBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Для добавления."
  overload: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Add(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Add(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Add(MenuItemBinding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.MenuItemBinding
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Contains(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Contains(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Contains(MenuItemBinding)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(System.Web.UI.WebControls.MenuItemBinding[],System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CopyTo(MenuItemBinding[],Int32)
  nameWithType: MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo(MenuItemBinding[],Int32)
- uid: System.Web.UI.WebControls.MenuItemBinding[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: MenuItemBinding
  nameWithType: MenuItemBinding
  fullName: System.Web.UI.WebControls.MenuItemBinding[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.MenuItemBinding
    name: MenuItemBinding
    nameWithType: MenuItemBinding
    fullName: MenuItemBinding[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: MenuItemBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: MenuItemBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: IndexOf(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.IndexOf(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf(MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Insert(Int32,MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Insert(Int32,MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: MenuItemBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Item(Int32)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnClear()
  nameWithType: MenuItemBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear()
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: MenuItemBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(System.Web.UI.WebControls.MenuItemBinding)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Remove(MenuItemBinding)
  nameWithType: MenuItemBindingCollection.Remove(MenuItemBinding)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.Remove(MenuItemBinding)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: MenuItemBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: MenuItemBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Add*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Add
  nameWithType: MenuItemBindingCollection.Add
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Contains*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Contains
  nameWithType: MenuItemBindingCollection.Contains
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CopyTo*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CopyTo
  nameWithType: MenuItemBindingCollection.CopyTo
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: MenuItemBindingCollection.CreateKnownType
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: MenuItemBindingCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.IndexOf*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: IndexOf
  nameWithType: MenuItemBindingCollection.IndexOf
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Insert*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Insert
  nameWithType: MenuItemBindingCollection.Insert
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Item*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Item
  nameWithType: MenuItemBindingCollection.Item
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnClear*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnClear
  nameWithType: MenuItemBindingCollection.OnClear
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: MenuItemBindingCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.OnValidate*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: OnValidate
  nameWithType: MenuItemBindingCollection.OnValidate
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.Remove*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: Remove
  nameWithType: MenuItemBindingCollection.Remove
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.RemoveAt*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: MenuItemBindingCollection.RemoveAt
- uid: System.Web.UI.WebControls.MenuItemBindingCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.MenuItemBindingCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: MenuItemBindingCollection.SetDirtyObject
