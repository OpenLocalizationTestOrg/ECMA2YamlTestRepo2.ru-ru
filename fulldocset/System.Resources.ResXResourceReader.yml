### YamlMime:ManagedReference
items:
- uid: System.Resources.ResXResourceReader
  id: ResXResourceReader
  children:
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  - System.Resources.ResXResourceReader.#ctor(System.String)
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.BasePath
  - System.Resources.ResXResourceReader.Close
  - System.Resources.ResXResourceReader.Dispose(System.Boolean)
  - System.Resources.ResXResourceReader.Finalize
  - System.Resources.ResXResourceReader.FromFileContents(System.String)
  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  - System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  - System.Resources.ResXResourceReader.GetEnumerator
  - System.Resources.ResXResourceReader.GetMetadataEnumerator
  - System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  - System.Resources.ResXResourceReader.System#IDisposable#Dispose
  - System.Resources.ResXResourceReader.UseResXDataNodes
  langs:
  - csharp
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.ResXResourceReader
  type: Class
  summary: "Перечисляет XML-файлов ресурсов (RESX) и потоки и считывая последовательно ресурсов пары &quot;имя-значение&quot;."
  remarks: "Класс ResXResourceReader предоставляет реализацию по умолчанию <xref:System.Resources.IResourceReader>интерфейс, который считывает сведения о ресурсах в формате XML.</xref:System.Resources.IResourceReader> Чтобы считать информацию в двоичном формате ресурсов, используйте <xref:System.Resources.ResourceReader>класс.</xref:System.Resources.ResourceReader>       Вы используете класс ResXResourceReader перечислить ресурсы в RESX-файлы по мере прохождения словарный перечислитель (<xref:System.Collections.IDictionaryEnumerator>), возвращаемый <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>метод.</xref:System.Resources.ResXResourceReader.GetEnumerator%2A> </xref:System.Collections.IDictionaryEnumerator> Вызовите методы, предоставляемые классом <xref:System.Collections.IDictionaryEnumerator>для перехода по списку ресурсов и для чтения имя и значение каждого ресурса в файле .resx.</xref:System.Collections.IDictionaryEnumerator>      Настроек [!NOTE] настроек ResXResourceReader класс предоставляет два перечислителя. <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>Возвращает метод <xref:System.Collections.IDictionaryEnumerator>объекта; Корпорация Майкрософт рекомендует использовать этот метод, чтобы перечислить ресурсы.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName> <xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName>Метод является явной реализацией интерфейса, возвращающий <xref:System.Collections.IEnumerator>объекта; использовать его не рекомендуется.</xref:System.Collections.IEnumerator> </xref:System.Resources.ResXResourceReader.System%23Collections%23IEnumerable%23GetEnumerator%2A?displayProperty=fullName>       В следующем примере используется <xref:System.Resources.ResXResourceReader.GetEnumerator%2A>метод, чтобы получить <xref:System.Collections.IDictionaryEnumerator>объект, используемый для перечисления ресурсов в RESX-файл.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A> В примере содержит `CreateResourceFile` подпрограмму, которая создает файл необходимых ресурсов.       [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_1.cs)][!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_1.vb) ] Если <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>свойство `true`, значение <xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName>свойство <xref:System.Resources.ResXDataNode>объекта, а не значение ресурса.</xref:System.Resources.ResXDataNode> </xref:System.Collections.IDictionaryEnumerator.Value%2A?displayProperty=fullName> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>   Элемент ресурса комментарий становится доступным из <xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName>свойство.</xref:System.Resources.ResXDataNode.Comment%2A?displayProperty=fullName> В следующем примере задается <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>Свойства `true` и перечисляет ресурсы в RESX-файл, [!code-cs [System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/csharp/t-system.resources.resxr_1_2.cs)][!code-vb[System.Resources.ResXResourceReader.Class#2](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_2.vb) ] Если <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>— `true`, <xref:System.Resources.ResXDataNode>элементы перечисления могут быть либо:-именованные ресурсы вместе с их данными.</xref:System.Resources.ResXDataNode> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>   </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> В этом случае <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>свойство `null`.</xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>      -Именованные ресурсы вместе с именем файла, содержащего данные ресурсов. В этом случае <xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName>возвращает <xref:System.Resources.ResXFileRef>объект, предоставляющий сведения о ресурсе, включая его имя файла.</xref:System.Resources.ResXFileRef> </xref:System.Resources.ResXDataNode.FileRef%2A?displayProperty=fullName> Если используются относительные имена, следует всегда устанавливать <xref:System.Resources.ResXResourceReader.BasePath%2A>Свойства для предоставления контрольную точку для пути относительным путем к файлу.</xref:System.Resources.ResXResourceReader.BasePath%2A>       Если вы хотите получить именованные ресурсы из RESX-файла, а не перечисление его ресурсов, можно создать экземпляр <xref:System.Resources.ResXResourceSet>и вызовите его `GetString` и `GetObject` методы.</xref:System.Resources.ResXResourceSet>      Настроек [!NOTE] настроек ResXResourceReader класс содержит запрос компоновки и запрос наследования на уровне класса, который применяется ко всем элементам. Объект <xref:System.Security.SecurityException>исключение возникает, если непосредственный вызывающий объект или производного класса не имеет разрешения полного доверия.</xref:System.Security.SecurityException>"
  example:
  - "The following example demonstrates how to use a ResXResourceReader to iterate through the resources in a .resx file. First, the ResXResourceReader`rsxr` is created for the file `items.resx`. Next, the <xref:System.Resources.ResXResourceReader.GetEnumerator%2A> method is used to create an <xref:System.Collections.IDictionaryEnumerator> to iterate through the resources and display the contents to the console.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/t-system.resources.resxr_1_3.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/t-system.resources.resxr_1_3.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/t-system.resources.resxr_1_3.vb)]"
  syntax:
    content: 'public class ResXResourceReader : System.Resources.IResourceReader'
  inheritance:
  - System.Object
  implements:
  - System.Resources.IResourceReader
  inheritedMembers: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса для указанного потока."
  remarks: >-
    > [!NOTE]

    >  The <xref:System.Resources.ResXResourceReader.Dispose%2A> and <xref:System.Resources.ResXResourceReader.Close%2A> methods do not close the stream you specify in this constructor.
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Входной поток, содержащий ресурсы."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  id: '#ctor(System.IO.TextReader)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса для указанного <xref:System.IO.TextReader>.</xref:System.IO.TextReader>"
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Текстовый входной поток, содержащий ресурсы."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса для указанного ресурса файла."
  remarks: ''
  example:
  - "The following example creates a new instance of the <xref:System.Resources.ResXResourceReader> class for the specified file, iterates through the resources of the file, and displays the contents to the console.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_1_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_1_1.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_1_1.vb)]"
  syntax:
    content: public ResXResourceReader (string fileName);
    parameters:
    - id: fileName
      type: System.String
      description: "Путь к файлу ресурсов для чтения."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса, используя входной поток и службу разрешения типов."
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Входной поток, содержащий ресурсы."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Объект, который разрешает имена типов, заданные в ресурсе."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.Stream,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(Stream,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса, используя поток и массив имен сборок."
  syntax:
    content: public ResXResourceReader (System.IO.Stream stream, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Входной поток, содержащий ресурсы."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Массив <xref:System.Reflection.AssemblyName>объектами, указывающих одну или несколько сборок.</xref:System.Reflection.AssemblyName> Сборки используются для разрешения имени типа в ресурсе, в фактический тип."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса, используя средство чтения текстового потока и службу разрешения типов."
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Средство чтения текстового потока, содержащего ресурсы."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Объект, который разрешает имена типов, заданные в ресурсе."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  id: '#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(TextReader,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса с помощью <xref:System.IO.TextReader>объект и массив имен сборок.</xref:System.IO.TextReader>"
  syntax:
    content: public ResXResourceReader (System.IO.TextReader reader, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: "Объект, используемый для чтения ресурсов из потока текста."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Массив <xref:System.Reflection.AssemblyName>объектами, указывающих одну или несколько сборок.</xref:System.Reflection.AssemblyName> Сборки используются для разрешения имени типа в ресурсе, в фактический тип."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: '#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса, используя имя файла и службу разрешения типов."
  syntax:
    content: public ResXResourceReader (string fileName, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла ресурсов XML, содержащий ресурсы."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Объект, который разрешает имена типов, заданные в ресурсе."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  id: '#ctor(System.String,System.Reflection.AssemblyName[])'
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: ResXResourceReader(String,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Инициализирует новый экземпляр <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> класса с помощью имени файла ресурсов XML и массив имен сборок."
  syntax:
    content: public ResXResourceReader (string fileName, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: fileName
      type: System.String
      description: "Имя файла ресурсов XML, содержащий ресурсы."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Массив <xref:System.Reflection.AssemblyName>объектами, указывающих одну или несколько сборок.</xref:System.Reflection.AssemblyName> Сборки используются для разрешения имени типа в ресурсе, в фактический тип."
  overload: System.Resources.ResXResourceReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.BasePath
  id: BasePath
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.ResXResourceReader.BasePath
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Возвращает или задает базовый путь для файла относительный путь, указанный в <xref href=&quot;System.Resources.ResXFileRef&quot;> </xref> объекта."
  remarks: "Свойство BasePath используется для разрешения ссылок относительный путь, назначенные <xref:System.Resources.ResXFileRef.FileName%2A>свойство <xref:System.Resources.ResXFileRef>объектов.</xref:System.Resources.ResXFileRef> </xref:System.Resources.ResXFileRef.FileName%2A>  По умолчанию его значение равно <xref:System.String.Empty?displayProperty=fullName>, а относительный путь ссылки разрешаются относительно текущего каталога, возвращенных <xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName>свойство.</xref:System.Environment.CurrentDirectory%2A?displayProperty=fullName> </xref:System.String.Empty?displayProperty=fullName> Перед началом перечисления ресурсов, необходимо присвоить этому свойству."
  example:
  - "The following example creates an XML resource file that contains images of dog breeds, and also creates a string resource that specifies the application that created the resource. <xref:System.Resources.ResXFileRef> objects are used to store the path to the images rather than storing the binary images themselves in the resource file. The example sets the BasePath property so that the relative file paths in the images' file names are interpreted as subdirectories of a directory named C:\\data\\\\.  \n  \n [!code-vb[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/visualbasic/p-system.resources.resxr_1_1.vb)]\n [!code-cs[System.Resources.ResXResourceReader.BasePath#1](~/add/codesnippet/csharp/p-system.resources.resxr_1_1.cs)]  \n  \n Note that you must add a reference to System.Drawing.dll to compile the project successfully. The example also requires that the necessary images exist in a directory named C:\\data\\images\\\\."
  syntax:
    content: public string BasePath { get; set; }
    return:
      type: System.String
      description: "Путь, что при добавлении в начало относительного пути к файлу указан в <xref href=&quot;System.Resources.ResXFileRef&quot;> </xref> объекта, дает абсолютный путь к файлу ресурсов."
  overload: System.Resources.ResXResourceReader.BasePath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "В операции задания нельзя указать значение, поскольку уже был произведен доступ к XML-файл ресурсов и он используется."
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Close
  id: Close
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.ResXResourceReader.Close()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Освобождает все ресурсы, используемые <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref>."
  remarks: "Вызов закрыть включает ресурсы, используемые <xref:System.Resources.ResXResourceReader>перераспределить для других целей.</xref:System.Resources.ResXResourceReader> Дополнительные сведения о закрытии см. в разделе [очистки неуправляемых ресурсов](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example displays the resources of a file to the console, and then uses the Close method to shut down the reader and to make its resources available for other processes.  \n  \n [!code-cpp[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/cpp/m-system.resources.resxr_2_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/csharp/m-system.resources.resxr_2_1.cs)]\n [!code-vb[System.Resources.ResxresourceReader Example#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_2_1.vb)]"
  syntax:
    content: public void Close ();
    parameters: []
  overload: System.Resources.ResXResourceReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> и при необходимости освобождает также управляемые ресурсы."
  remarks: "Этот метод может вызываться либо <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>метода или <xref:System.Object.Finalize%2A?displayProperty=fullName>метод.</xref:System.Object.Finalize%2A?displayProperty=fullName> </xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> <xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A>вызывает этот метод с `disposing` равным `true`.</xref:System.Resources.ResXResourceReader.System%23IDisposable%23Dispose%2A> <xref:System.Object.Finalize%2A>вызывает этот метод с `disposing` значение `false`.</xref:System.Object.Finalize%2A>       При `disposing` параметр `true`, данный метод освобождает все ресурсы, занятые любыми управляемыми объектами, которые <xref:System.Resources.ResXResourceReader>ссылки.</xref:System.Resources.ResXResourceReader> Этот метод вызывает `Dispose` метод для каждого объекта, на который указывает ссылка."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>для освобождения управляемых и неуправляемых ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> для освобождения только неуправляемых ресурсов."
  overload: System.Resources.ResXResourceReader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.Finalize
  id: Finalize
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.ResXResourceReader.Finalize()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Этот элемент переопределяет метод <xref:System.Object.Finalize*>метод.</xref:System.Object.Finalize*>"
  syntax:
    content: ~ResXResourceReader ();
    parameters: []
  overload: System.Resources.ResXResourceReader.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)
  id: FromFileContents(System.String)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Создает новый <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> объекта и инициализирует его, чтобы выполнить чтение строки, содержимое которой представлено в виде файла ресурсов XML."
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents);
    parameters:
    - id: fileContents
      type: System.String
      description: "Строка, содержащая сведения о формате ресурса XML."
    return:
      type: System.Resources.ResXResourceReader
      description: "Объект, который считывает ресурсы из <code> fileContents </code> строка."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  id: FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Создает новый <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> объекта и инициализирует его, чтобы выполнить чтение строки, содержимое которой представлено в виде файла ресурсов XML и использовать <xref href=&quot;System.ComponentModel.Design.ITypeResolutionService&quot;> </xref> объект для разрешения имен типов, заданных в ресурсе."
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.ComponentModel.Design.ITypeResolutionService typeResolver);
    parameters:
    - id: fileContents
      type: System.String
      description: "Строка, содержащая сведения о формате ресурса XML."
    - id: typeResolver
      type: System.ComponentModel.Design.ITypeResolutionService
      description: "Объект, который разрешает имена типов, заданные в ресурсе."
    return:
      type: System.Resources.ResXResourceReader
      description: "Объект, который считывает ресурсы из <code> fileContents </code> строка."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  id: FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: FromFileContents(String,AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Создает новый <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> объекта и инициализирует его, чтобы выполнить чтение строки, содержимое которой представлено в виде файла ресурсов XML и использовать массив <xref:System.Reflection.AssemblyName>объектов для разрешения имен типов, заданных в ресурсе.</xref:System.Reflection.AssemblyName>"
  syntax:
    content: public static System.Resources.ResXResourceReader FromFileContents (string fileContents, System.Reflection.AssemblyName[] assemblyNames);
    parameters:
    - id: fileContents
      type: System.String
      description: "Строка, содержимое которой представлено в виде файла ресурсов XML."
    - id: assemblyNames
      type: System.Reflection.AssemblyName[]
      description: "Массив <xref:System.Reflection.AssemblyName>объектами, указывающих одну или несколько сборок.</xref:System.Reflection.AssemblyName> Сборки используются для разрешения имени типа в ресурсе, в фактический тип."
    return:
      type: System.Resources.ResXResourceReader
      description: "Объект, который считывает ресурсы из <code> fileContents </code> строка."
  overload: System.Resources.ResXResourceReader.FromFileContents*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.GetEnumerator
  id: GetEnumerator
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Возвращает перечислитель для текущего <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> объекта."
  remarks: "Сбой метода GetEnumerator извлекает пары &quot;имя значение&quot; в XML-поток ресурсов (RESX) или строку, связанную с текущим <xref:System.Resources.ResXResourceReader>объекта.</xref:System.Resources.ResXResourceReader> Однако если <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>свойству `true` перед вызовом метода GetEnumerator, элементы ресурса извлекается в виде <xref:System.Resources.ResXDataNode>объектов.</xref:System.Resources.ResXDataNode> </xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> В этом случае возвращаются все узлы ресурсов, независимо от типа."
  example:
  - "The following example uses the GetEnumerator method to obtain an <xref:System.Collections.IDictionaryEnumerator> object that is used to enumerate the resources in a .resx file. The example includes a `CreateResourceFile` routine that creates the necessary resource file.  \n  \n [!code-cs[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/csharp/m-system.resources.resxr_0_1.cs)]\n [!code-vb[System.Resources.ResXResourceReader.Class#1](~/add/codesnippet/visualbasic/m-system.resources.resxr_0_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Перечислитель для текущего <xref href=&quot;System.Resources.ResourceReader&quot;> </xref> объекта."
  overload: System.Resources.ResXResourceReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator
  id: GetMetadataEnumerator
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Обеспечивает словарный перечислитель, который может извлекать свойства времени проектирования из текущего файла ресурсов XML или из потока."
  remarks: "Ресурсы хранятся в виде пары имя/значение из файла ресурсов или потока. Свойства времени проектирования, которые называются метаданных, хранятся в файле ресурсов или потока вместе с ресурсами данных времени выполнения. Предоставляет метод GetMetadataEnumerator <xref:System.Collections.IDictionaryEnumerator>объекта, который может извлекать метаданные из файла ресурсов или потока, связанного с текущим <xref:System.Resources.ResXResourceReader>объекта.</xref:System.Resources.ResXResourceReader> </xref:System.Collections.IDictionaryEnumerator> Однако если <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>свойству `true` перед вызовом метода GetMetadataEnumerator, что узлы ресурсов не получены.</xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A>"
  example:
  - "The following example uses the GetMetadataEnumerator method to iterate through the metadata resources in an XML resource file. This code example is part of a larger example provided for the <xref:System.Resources.ResXResourceReader.UseResXDataNodes%2A> property.  \n  \n [!code-vb[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/visualbasic/m-system.resources.resxr_4_1.vb)]\n [!code-cpp[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/cpp/m-system.resources.resxr_4_1.cpp)]\n [!code-cs[System.Resources.ResxresourceReader Example#4](~/add/codesnippet/csharp/m-system.resources.resxr_4_1.cs)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetMetadataEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Перечислитель для метаданных в ресурсе."
  overload: System.Resources.ResXResourceReader.GetMetadataEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Возвращает перечислитель для текущего <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> объекта. Описание этого члена см. в разделе &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Resources.ResXResourceReader>экземпляр приводится к <xref:System.Collections.IEnumerable>интерфейс.</xref:System.Collections.IEnumerable> </xref:System.Resources.ResXResourceReader> Чтобы перечислить ресурсы в RESX-файл, рекомендуется вызывать <xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>метод, а затем вызовите `MoveNext` метод в возвращенном <xref:System.Collections.IDictionaryEnumerator>объекта.</xref:System.Collections.IDictionaryEnumerator> </xref:System.Resources.ResXResourceReader.GetEnumerator%2A?displayProperty=fullName>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Перечислитель, выполняющий итерацию пары &quot;имя значение&quot; в XML-поток ресурсов (RESX) или строку, связанную с текущим <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> объекта."
  overload: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  isEii: true
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: System.IDisposable.Dispose()
  nameWithType: ResXResourceReader.System.IDisposable.Dispose()
  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Освобождает неуправляемые ресурсы, используемые <xref href=&quot;System.Resources.ResXResourceReader&quot;> </xref> и при необходимости освобождает также управляемые ресурсы. Описание этого члена см. в разделе &lt;xref:System.IDisposable.Dispose%2A?displayProperty=fullName&gt; метод."
  remarks: "Этот член представляет явную реализацию члена интерфейса. Он может использоваться только если <xref:System.Resources.ResXResourceReader>экземпляр приводится к <xref:System.IDisposable>интерфейс.</xref:System.IDisposable> </xref:System.Resources.ResXResourceReader>"
  syntax:
    content: void IDisposable.Dispose ();
    parameters: []
  overload: System.Resources.ResXResourceReader.System#IDisposable#Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Resources.ResXResourceReader.UseResXDataNodes
  id: UseResXDataNodes
  parent: System.Resources.ResXResourceReader
  langs:
  - csharp
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.ResXResourceReader.UseResXDataNodes
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Resources
  summary: "Возвращает или задает значение, указывающее, является ли <xref href=&quot;System.Resources.ResXDataNode&quot;> </xref> объекты, возвращаемые при чтении текущего файла ресурсов XML или потока."
  remarks: "Можно задать свойство UseResXDataNodes, перед началом перечисления ресурсов. По умолчанию его значение — `false`."
  example:
  - "The following example enumerates and displays resource items in an XML file. Initially, UseResXDataNodes is set to `false` to show both data and metadata items as they occur in the resource file. The second enumeration has the UseResXDataNodes set to `true` so that resource data elements are returned as <xref:System.Resources.ResXDataNode>objects.  \n  \n [!code-vb[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/visualbasic/p-system.resources.resxr_0_1.vb)]\n [!code-cpp[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/cpp/p-system.resources.resxr_0_1.cpp)]\n [!code-cs[System.Resources.ResXResourceReader Example#2](~/add/codesnippet/csharp/p-system.resources.resxr_0_1.cs)]  \n  \n The resource XML file used by the example contains one data node and one metadata node. To use the XML file with the previous example, copy the following text and save it to a file named Resource1.resx.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n<root>  \n  <resheader name=\"resmimetype\">  \n    <value>text/microsoft-resx</value>  \n  </resheader>  \n  <resheader name=\"version\">  \n    <value>2.0</value>  \n  </resheader>  \n  <resheader name=\"reader\">  \n    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    </value>  \n  </resheader>  \n  <resheader name=\"writer\">  \n    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0,  \n           Culture=neutral, PublicKeyToken=b77a5c561934e089  \n    </value>  \n  </resheader>  \n  <data name=\"DataSample\" xml:space=\"preserve\">  \n    <value>Sample DATA value</value>  \n  </data>  \n  <metadata name=\"MetadataSample\">  \n    <value>Sample METADATA value</value>  \n  </metadata>  \n</root>  \n```"
  syntax:
    content: public bool UseResXDataNodes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Если извлекаются узлы данных ресурсов; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> Если узлы данных ресурсов игнорируются."
  overload: System.Resources.ResXResourceReader.UseResXDataNodes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "В операции задания перечислитель для файла ресурсов или потока уже открыт."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: true
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Resources.ResXResourceReader.#ctor(System.String)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String)
  nameWithType: ResXResourceReader.ResXResourceReader(String)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,ITypeResolutionService)
- uid: System.ComponentModel.Design.ITypeResolutionService
  parent: System.ComponentModel.Design
  isExternal: false
  name: ITypeResolutionService
  nameWithType: ITypeResolutionService
  fullName: System.ComponentModel.Design.ITypeResolutionService
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.Stream,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(Stream,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(Stream,AssemblyName[])
- uid: System.Reflection.AssemblyName[]
  parent: System.Reflection
  isExternal: true
  name: AssemblyName
  nameWithType: AssemblyName
  fullName: System.Reflection.AssemblyName[]
  spec.csharp:
  - uid: System.Reflection.AssemblyName
    name: AssemblyName
    nameWithType: AssemblyName
    fullName: AssemblyName[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.#ctor(System.IO.TextReader,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(TextReader,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(TextReader,AssemblyName[])
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.#ctor(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader(String,AssemblyName[])
  nameWithType: ResXResourceReader.ResXResourceReader(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.ResXResourceReader(String,AssemblyName[])
- uid: System.Resources.ResXResourceReader.BasePath
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
  fullName: System.Resources.ResXResourceReader.BasePath
- uid: System.Resources.ResXResourceReader.Close
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Close()
  nameWithType: ResXResourceReader.Close()
  fullName: System.Resources.ResXResourceReader.Close()
- uid: System.Resources.ResXResourceReader.Dispose(System.Boolean)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ResXResourceReader.Dispose(Boolean)
  fullName: System.Resources.ResXResourceReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Resources.ResXResourceReader.Finalize
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Finalize()
  nameWithType: ResXResourceReader.Finalize()
  fullName: System.Resources.ResXResourceReader.Finalize()
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String)
  nameWithType: ResXResourceReader.FromFileContents(String)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String)
- uid: System.Resources.ResXResourceReader
  parent: System.Resources
  isExternal: false
  name: ResXResourceReader
  nameWithType: ResXResourceReader
  fullName: System.Resources.ResXResourceReader
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.ComponentModel.Design.ITypeResolutionService)
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String,ITypeResolutionService)
  nameWithType: ResXResourceReader.FromFileContents(String,ITypeResolutionService)
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,ITypeResolutionService)
- uid: System.Resources.ResXResourceReader.FromFileContents(System.String,System.Reflection.AssemblyName[])
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents(String,AssemblyName[])
  nameWithType: ResXResourceReader.FromFileContents(String,AssemblyName[])
  fullName: System.Resources.ResXResourceReader.FromFileContents(String,AssemblyName[])
- uid: System.Resources.ResXResourceReader.GetEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: ResXResourceReader.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetMetadataEnumerator()
  nameWithType: ResXResourceReader.GetMetadataEnumerator()
  fullName: System.Resources.ResXResourceReader.GetMetadataEnumerator()
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Resources.ResXResourceReader.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.IDisposable.Dispose()
  nameWithType: ResXResourceReader.System.IDisposable.Dispose()
  fullName: System.Resources.ResXResourceReader.System.IDisposable.Dispose()
- uid: System.Resources.ResXResourceReader.UseResXDataNodes
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
  fullName: System.Resources.ResXResourceReader.UseResXDataNodes
- uid: System.Resources.ResXResourceReader.#ctor*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: ResXResourceReader
  nameWithType: ResXResourceReader.ResXResourceReader
- uid: System.Resources.ResXResourceReader.BasePath*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: BasePath
  nameWithType: ResXResourceReader.BasePath
- uid: System.Resources.ResXResourceReader.Close*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Close
  nameWithType: ResXResourceReader.Close
- uid: System.Resources.ResXResourceReader.Dispose*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Dispose
  nameWithType: ResXResourceReader.Dispose
- uid: System.Resources.ResXResourceReader.Finalize*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: Finalize
  nameWithType: ResXResourceReader.Finalize
- uid: System.Resources.ResXResourceReader.FromFileContents*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: FromFileContents
  nameWithType: ResXResourceReader.FromFileContents
- uid: System.Resources.ResXResourceReader.GetEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetEnumerator
  nameWithType: ResXResourceReader.GetEnumerator
- uid: System.Resources.ResXResourceReader.GetMetadataEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: GetMetadataEnumerator
  nameWithType: ResXResourceReader.GetMetadataEnumerator
- uid: System.Resources.ResXResourceReader.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: ResXResourceReader.System.Collections.IEnumerable.GetEnumerator
- uid: System.Resources.ResXResourceReader.System#IDisposable#Dispose*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: System.IDisposable.Dispose
  nameWithType: ResXResourceReader.System.IDisposable.Dispose
- uid: System.Resources.ResXResourceReader.UseResXDataNodes*
  parent: System.Resources.ResXResourceReader
  isExternal: false
  name: UseResXDataNodes
  nameWithType: ResXResourceReader.UseResXDataNodes
